/* Chosen v1.8.2 | (c) 2011-2017 by Harvest | MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md */

(function(){var t,e,s,i,n=function(t,e){return function(){return t.apply(e,arguments)}},r=function(t,e){function s(){this.constructor=t}for(var i in e)o.call(e,i)&&(t[i]=e[i]);return s.prototype=e.prototype,t.prototype=new s,t.__super__=e.prototype,t},o={}.hasOwnProperty;(i=function(){function t(){this.options_index=0,this.parsed=[]}return t.prototype.add_node=function(t){return"OPTGROUP"===t.nodeName.toUpperCase()?this.add_group(t):this.add_option(t)},t.prototype.add_group=function(t){var e,s,i,n,r,o;for(e=this.parsed.length,this.parsed.push({array_index:e,group:!0,label:t.label,title:t.title?t.title:void 0,children:0,disabled:t.disabled,classes:t.className}),o=[],s=0,i=(r=t.childNodes).length;s<i;s++)n=r[s],o.push(this.add_option(n,e,t.disabled));return o},t.prototype.add_option=function(t,e,s){if("OPTION"===t.nodeName.toUpperCase())return""!==t.text?(null!=e&&(this.parsed[e].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:t.value,text:t.text,html:t.innerHTML,title:t.title?t.title:void 0,selected:t.selected,disabled:!0===s?s:t.disabled,group_array_index:e,group_label:null!=e?this.parsed[e].label:null,classes:t.className,style:t.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1},t}()).select_to_array=function(t){var e,s,n,r,o;for(r=new i,s=0,n=(o=t.childNodes).length;s<n;s++)e=o[s],r.add_node(e);return r.parsed},e=function(){function t(e,s){this.form_field=e,this.options=null!=s?s:{},this.label_click_handler=n(this.label_click_handler,this),t.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers(),this.on_ready())}return t.prototype.set_default_values=function(){return this.click_test_action=function(t){return function(e){return t.test_active_click(e)}}(this),this.activate_action=function(t){return function(e){return t.activate_field(e)}}(this),this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.is_rtl=this.options.rtl||/\bchosen-rtl\b/.test(this.form_field.className),this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text&&this.options.allow_single_deselect,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null==this.options.enable_split_word_search||this.options.enable_split_word_search,this.group_search=null==this.options.group_search||this.options.group_search,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null==this.options.single_backstroke_delete||this.options.single_backstroke_delete,this.max_selected_options=this.options.max_selected_options||Infinity,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null==this.options.display_selected_options||this.options.display_selected_options,this.display_disabled_options=null==this.options.display_disabled_options||this.options.display_disabled_options,this.include_group_label_in_selected=this.options.include_group_label_in_selected||!1,this.max_shown_results=this.options.max_shown_results||Number.POSITIVE_INFINITY,this.case_sensitive_search=this.options.case_sensitive_search||!1,this.hide_results_on_select=null==this.options.hide_results_on_select||this.options.hide_results_on_select},t.prototype.set_default_text=function(){return this.form_field.getAttribute("data-placeholder")?this.default_text=this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.default_text=this.options.placeholder_text_multiple||this.options.placeholder_text||t.default_multiple_text:this.default_text=this.options.placeholder_text_single||this.options.placeholder_text||t.default_single_text,this.default_text=this.escape_html(this.default_text),this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||t.default_no_result_text},t.prototype.choice_label=function(t){return this.include_group_label_in_selected&&null!=t.group_label?"<b class='group-name'>"+t.group_label+"</b>"+t.html:t.html},t.prototype.mouse_enter=function(){return this.mouse_on_container=!0},t.prototype.mouse_leave=function(){return this.mouse_on_container=!1},t.prototype.input_focus=function(t){if(this.is_multiple){if(!this.active_field)return setTimeout(function(t){return function(){return t.container_mousedown()}}(this),50)}else if(!this.active_field)return this.activate_field()},t.prototype.input_blur=function(t){if(!this.mouse_on_container)return this.active_field=!1,setTimeout(function(t){return function(){return t.blur_test()}}(this),100)},t.prototype.label_click_handler=function(t){return this.is_multiple?this.container_mousedown(t):this.activate_field()},t.prototype.results_option_build=function(t){var e,s,i,n,r,o,h;for(e="",h=0,n=0,r=(o=this.results_data).length;n<r&&(s=o[n],i="",""!==(i=s.group?this.result_add_group(s):this.result_add_option(s))&&(h++,e+=i),(null!=t?t.first:void 0)&&(s.selected&&this.is_multiple?this.choice_build(s):s.selected&&!this.is_multiple&&this.single_set_selected_text(this.choice_label(s))),!(h>=this.max_shown_results));n++);return e},t.prototype.result_add_option=function(t){var e,s;return t.search_match&&this.include_option_in_results(t)?(e=[],t.disabled||t.selected&&this.is_multiple||e.push("active-result"),!t.disabled||t.selected&&this.is_multiple||e.push("disabled-result"),t.selected&&e.push("result-selected"),null!=t.group_array_index&&e.push("group-option"),""!==t.classes&&e.push(t.classes),s=document.createElement("li"),s.className=e.join(" "),s.style.cssText=t.style,s.setAttribute("data-option-array-index",t.array_index),s.innerHTML=t.highlighted_html||t.html,t.title&&(s.title=t.title),this.outerHTML(s)):""},t.prototype.result_add_group=function(t){var e,s;return(t.search_match||t.group_match)&&t.active_options>0?((e=[]).push("group-result"),t.classes&&e.push(t.classes),s=document.createElement("li"),s.className=e.join(" "),s.innerHTML=t.highlighted_html||this.escape_html(t.label),t.title&&(s.title=t.title),this.outerHTML(s)):""},t.prototype.results_update_field=function(){if(this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing)return this.winnow_results()},t.prototype.reset_single_select_options=function(){var t,e,s,i,n;for(n=[],t=0,e=(s=this.results_data).length;t<e;t++)(i=s[t]).selected?n.push(i.selected=!1):n.push(void 0);return n},t.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},t.prototype.results_search=function(t){return this.results_showing?this.winnow_results():this.results_show()},t.prototype.winnow_results=function(){var t,e,s,i,n,r,o,h,l,c,_,a,u,d,p;for(this.no_results_clear(),c=0,t=(o=this.get_search_text()).replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),l=this.get_search_regex(t),s=0,i=(h=this.results_data).length;s<i;s++)(n=h[s]).search_match=!1,_=null,a=null,n.highlighted_html="",this.include_option_in_results(n)&&(n.group&&(n.group_match=!1,n.active_options=0),null!=n.group_array_index&&this.results_data[n.group_array_index]&&(0===(_=this.results_data[n.group_array_index]).active_options&&_.search_match&&(c+=1),_.active_options+=1),p=n.group?n.label:n.text,n.group&&!this.group_search||(a=this.search_string_match(p,l),n.search_match=null!=a,n.search_match&&!n.group&&(c+=1),n.search_match?(o.length&&(u=a.index,r=p.slice(0,u),e=p.slice(u,u+o.length),d=p.slice(u+o.length),n.highlighted_html=this.escape_html(r)+"<em>"+this.escape_html(e)+"</em>"+this.escape_html(d)),null!=_&&(_.group_match=!0)):null!=n.group_array_index&&this.results_data[n.group_array_index].search_match&&(n.search_match=!0)));return this.result_clear_highlight(),c<1&&o.length?(this.update_results_content(""),this.no_results(o)):(this.update_results_content(this.results_option_build()),this.winnow_results_set_highlight())},t.prototype.get_search_regex=function(t){var e,s;return s=this.search_contains?t:"(^|\\s|\\b)"+t+"[^\\s]*",this.enable_split_word_search||this.search_contains||(s="^"+s),e=this.case_sensitive_search?"":"i",new RegExp(s,e)},t.prototype.search_string_match=function(t,e){var s;return s=e.exec(t),!this.search_contains&&(null!=s?s[1]:void 0)&&(s.index+=1),s},t.prototype.choices_count=function(){var t,e,s;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,t=0,e=(s=this.form_field.options).length;t<e;t++)s[t].selected&&(this.selected_option_count+=1);return this.selected_option_count},t.prototype.choices_click=function(t){if(t.preventDefault(),this.activate_field(),!this.results_showing&&!this.is_disabled)return this.results_show()},t.prototype.keydown_checker=function(t){var e,s;switch(s=null!=(e=t.which)?e:t.keyCode,this.search_field_scale(),8!==s&&this.pending_backstroke&&this.clear_backstroke(),s){case 8:this.backstroke_length=this.get_search_field_value().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(t),this.mouse_on_container=!1;break;case 13:case 27:this.results_showing&&t.preventDefault();break;case 32:this.disable_search&&t.preventDefault();break;case 38:t.preventDefault(),this.keyup_arrow();break;case 40:t.preventDefault(),this.keydown_arrow()}},t.prototype.keyup_checker=function(t){var e,s;switch(s=null!=(e=t.which)?e:t.keyCode,this.search_field_scale(),s){case 8:this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0?this.keydown_backstroke():this.pending_backstroke||(this.result_clear_highlight(),this.results_search());break;case 13:t.preventDefault(),this.results_showing&&this.result_select(t);break;case 27:this.results_showing&&this.results_hide();break;case 9:case 16:case 17:case 18:case 38:case 40:case 91:break;default:this.results_search()}},t.prototype.clipboard_event_checker=function(t){if(!this.is_disabled)return setTimeout(function(t){return function(){return t.results_search()}}(this),50)},t.prototype.container_width=function(){return null!=this.options.width?this.options.width:this.form_field.offsetWidth+"px"},t.prototype.include_option_in_results=function(t){return!(this.is_multiple&&!this.display_selected_options&&t.selected)&&(!(!this.display_disabled_options&&t.disabled)&&!t.empty)},t.prototype.search_results_touchstart=function(t){return this.touch_started=!0,this.search_results_mouseover(t)},t.prototype.search_results_touchmove=function(t){return this.touch_started=!1,this.search_results_mouseout(t)},t.prototype.search_results_touchend=function(t){if(this.touch_started)return this.search_results_mouseup(t)},t.prototype.outerHTML=function(t){var e;return t.outerHTML?t.outerHTML:((e=document.createElement("div")).appendChild(t),e.innerHTML)},t.prototype.get_single_html=function(){return'<a class="chosen-single chosen-default">\n  <span>'+this.default_text+'</span>\n  <div><b></b></div>\n</a>\n<div class="chosen-drop">\n  <div class="chosen-search">\n    <input class="chosen-search-input" aria-label="Chosen Search" type="text" autocomplete="off" />\n  </div>\n  <ul class="chosen-results"></ul>\n</div>'},t.prototype.get_multi_html=function(){return'<ul class="chosen-choices">\n  <li class="search-field">\n    <input class="chosen-search-input" type="text" autocomplete="off" value="'+this.default_text+'" />\n  </li>\n</ul>\n<div class="chosen-drop">\n  <ul class="chosen-results"></ul>\n</div>'},t.prototype.get_no_results_html=function(t){return'<li class="no-results">\n  '+this.results_none_found+" <span>"+this.escape_html(t)+"</span>\n</li>"},t.browser_is_supported=function(){return"Microsoft Internet Explorer"===window.navigator.appName?document.documentMode>=8:!(/iP(od|ad|hone)/i.test(window.navigator.userAgent)||/IEMobile/i.test(window.navigator.userAgent)||/Windows Phone/i.test(window.navigator.userAgent)||/BlackBerry/i.test(window.navigator.userAgent)||/BB10/i.test(window.navigator.userAgent)||/Android.*Mobile/i.test(window.navigator.userAgent))},t.default_multiple_text="Select Some Options",t.default_single_text="Select an Option",t.default_no_result_text="No results match",t}(),(t=jQuery).fn.extend({chosen:function(i){return e.browser_is_supported()?this.each(function(e){var n,r;r=(n=t(this)).data("chosen"),"destroy"!==i?r instanceof s||n.data("chosen",new s(this,i)):r instanceof s&&r.destroy()}):this}}),s=function(s){function n(){return n.__super__.constructor.apply(this,arguments)}return r(n,e),n.prototype.setup=function(){return this.form_field_jq=t(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex},n.prototype.set_up_html=function(){var e,s;return(e=["chosen-container"]).push("chosen-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&e.push(this.form_field.className),this.is_rtl&&e.push("chosen-rtl"),s={"class":e.join(" "),title:this.form_field.title},this.form_field.id.length&&(s.id=this.form_field.id.replace(/[^\w]/g,"_")+"_chosen"),this.container=t("<div />",s),this.container.width(this.container_width()),this.is_multiple?this.container.html(this.get_multi_html()):this.container.html(this.get_single_html()),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chosen-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chosen-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chosen-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chosen-search").first(),this.selected_item=this.container.find(".chosen-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior()},n.prototype.on_ready=function(){return this.form_field_jq.trigger("chosen:ready",{chosen:this})},n.prototype.register_observers=function(){return this.container.on("touchstart.chosen",function(t){return function(e){t.container_mousedown(e)}}(this)),this.container.on("touchend.chosen",function(t){return function(e){t.container_mouseup(e)}}(this)),this.container.on("mousedown.chosen",function(t){return function(e){t.container_mousedown(e)}}(this)),this.container.on("mouseup.chosen",function(t){return function(e){t.container_mouseup(e)}}(this)),this.container.on("mouseenter.chosen",function(t){return function(e){t.mouse_enter(e)}}(this)),this.container.on("mouseleave.chosen",function(t){return function(e){t.mouse_leave(e)}}(this)),this.search_results.on("mouseup.chosen",function(t){return function(e){t.search_results_mouseup(e)}}(this)),this.search_results.on("mouseover.chosen",function(t){return function(e){t.search_results_mouseover(e)}}(this)),this.search_results.on("mouseout.chosen",function(t){return function(e){t.search_results_mouseout(e)}}(this)),this.search_results.on("mousewheel.chosen DOMMouseScroll.chosen",function(t){return function(e){t.search_results_mousewheel(e)}}(this)),this.search_results.on("touchstart.chosen",function(t){return function(e){t.search_results_touchstart(e)}}(this)),this.search_results.on("touchmove.chosen",function(t){return function(e){t.search_results_touchmove(e)}}(this)),this.search_results.on("touchend.chosen",function(t){return function(e){t.search_results_touchend(e)}}(this)),this.form_field_jq.on("chosen:updated.chosen",function(t){return function(e){t.results_update_field(e)}}(this)),this.form_field_jq.on("chosen:activate.chosen",function(t){return function(e){t.activate_field(e)}}(this)),this.form_field_jq.on("chosen:open.chosen",function(t){return function(e){t.container_mousedown(e)}}(this)),this.form_field_jq.on("chosen:close.chosen",function(t){return function(e){t.close_field(e)}}(this)),this.search_field.on("blur.chosen",function(t){return function(e){t.input_blur(e)}}(this)),this.search_field.on("keyup.chosen",function(t){return function(e){t.keyup_checker(e)}}(this)),this.search_field.on("keydown.chosen",function(t){return function(e){t.keydown_checker(e)}}(this)),this.search_field.on("focus.chosen",function(t){return function(e){t.input_focus(e)}}(this)),this.search_field.on("cut.chosen",function(t){return function(e){t.clipboard_event_checker(e)}}(this)),this.search_field.on("paste.chosen",function(t){return function(e){t.clipboard_event_checker(e)}}(this)),this.is_multiple?this.search_choices.on("click.chosen",function(t){return function(e){t.choices_click(e)}}(this)):this.container.on("click.chosen",function(t){t.preventDefault()})},n.prototype.destroy=function(){return t(this.container[0].ownerDocument).off("click.chosen",this.click_test_action),this.form_field_label.length>0&&this.form_field_label.off("click.chosen"),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData("chosen"),this.form_field_jq.show()},n.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field.disabled||this.form_field_jq.parents("fieldset").is(":disabled"),this.container.toggleClass("chosen-disabled",this.is_disabled),this.search_field[0].disabled=this.is_disabled,this.is_multiple||this.selected_item.off("focus.chosen",this.activate_field),this.is_disabled?this.close_field():this.is_multiple?void 0:this.selected_item.on("focus.chosen",this.activate_field)},n.prototype.container_mousedown=function(e){var s;if(!this.is_disabled)return!e||"mousedown"!==(s=e.type)&&"touchstart"!==s||this.results_showing||e.preventDefault(),null!=e&&t(e.target).hasClass("search-choice-close")?void 0:(this.active_field?this.is_multiple||!e||t(e.target)[0]!==this.selected_item[0]&&!t(e.target).parents("a.chosen-single").length||(e.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),t(this.container[0].ownerDocument).on("click.chosen",this.click_test_action),this.results_show()),this.activate_field())},n.prototype.container_mouseup=function(t){if("ABBR"===t.target.nodeName&&!this.is_disabled)return this.results_reset(t)},n.prototype.search_results_mousewheel=function(t){var e;if(t.originalEvent&&(e=t.originalEvent.deltaY||-t.originalEvent.wheelDelta||t.originalEvent.detail),null!=e)return t.preventDefault(),"DOMMouseScroll"===t.type&&(e*=40),this.search_results.scrollTop(e+this.search_results.scrollTop())},n.prototype.blur_test=function(t){if(!this.active_field&&this.container.hasClass("chosen-container-active"))return this.close_field()},n.prototype.close_field=function(){return t(this.container[0].ownerDocument).off("click.chosen",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chosen-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale(),this.search_field.blur()},n.prototype.activate_field=function(){if(!this.is_disabled)return this.container.addClass("chosen-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},n.prototype.test_active_click=function(e){var s;return(s=t(e.target).closest(".chosen-container")).length&&this.container[0]===s[0]?this.active_field=!0:this.close_field()},n.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=i.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chosen-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chosen-container-single-nosearch"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},n.prototype.result_do_highlight=function(t){var e,s,i,n,r;if(t.length){if(this.result_clear_highlight(),this.result_highlight=t,this.result_highlight.addClass("highlighted"),i=parseInt(this.search_results.css("maxHeight"),10),r=this.search_results.scrollTop(),n=i+r,s=this.result_highlight.position().top+this.search_results.scrollTop(),(e=s+this.result_highlight.outerHeight())>=n)return this.search_results.scrollTop(e-i>0?e-i:0);if(s<r)return this.search_results.scrollTop(s)}},n.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},n.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.container.addClass("chosen-with-drop"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.get_search_field_value()),this.winnow_results(),this.form_field_jq.trigger("chosen:showing_dropdown",{chosen:this}))},n.prototype.update_results_content=function(t){return this.search_results.html(t)},n.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chosen-with-drop"),this.form_field_jq.trigger("chosen:hiding_dropdown",{chosen:this})),this.results_showing=!1},n.prototype.set_tab_index=function(t){var e;if(this.form_field.tabIndex)return e=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=e},n.prototype.set_label_behavior=function(){if(this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=t("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0)return this.form_field_label.on("click.chosen",this.label_click_handler)},n.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},n.prototype.search_results_mouseup=function(e){var s;if((s=t(e.target).hasClass("active-result")?t(e.target):t(e.target).parents(".active-result").first()).length)return this.result_highlight=s,this.result_select(e),this.search_field.focus()},n.prototype.search_results_mouseover=function(e){var s;if(s=t(e.target).hasClass("active-result")?t(e.target):t(e.target).parents(".active-result").first())return this.result_do_highlight(s)},n.prototype.search_results_mouseout=function(e){if(t(e.target).hasClass("active-result")||t(e.target).parents(".active-result").first())return this.result_clear_highlight()},n.prototype.choice_build=function(e){var s,i;return s=t("<li />",{"class":"search-choice"}).html("<span>"+this.choice_label(e)+"</span>"),e.disabled?s.addClass("search-choice-disabled"):((i=t("<a />",{"class":"search-choice-close","data-option-array-index":e.array_index})).on("click.chosen",function(t){return function(e){return t.choice_destroy_link_click(e)}}(this)),s.append(i)),this.search_container.before(s)},n.prototype.choice_destroy_link_click=function(e){if(e.preventDefault(),e.stopPropagation(),!this.is_disabled)return this.choice_destroy(t(e.target))},n.prototype.choice_destroy=function(t){if(this.result_deselect(t[0].getAttribute("data-option-array-index")))return this.active_field?this.search_field.focus():this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.get_search_field_value().length<1&&this.results_hide(),t.parents("li").first().remove(),this.search_field_scale()},n.prototype.results_reset=function(){if(this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.trigger_form_field_change(),this.active_field)return this.results_hide()},n.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},n.prototype.result_select=function(t){var e,s;if(this.result_highlight)return e=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.is_multiple?e.removeClass("active-result"):this.reset_single_select_options(),e.addClass("result-selected"),s=this.results_data[e[0].getAttribute("data-option-array-index")],s.selected=!0,this.form_field.options[s.options_index].selected=!0,this.selected_option_count=null,this.search_field.val(""),this.is_multiple?this.choice_build(s):this.single_set_selected_text(this.choice_label(s)),this.is_multiple&&(!this.hide_results_on_select||t.metaKey||t.ctrlKey)?this.winnow_results():(this.results_hide(),this.show_search_field_default()),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.trigger_form_field_change({selected:this.form_field.options[s.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,t.preventDefault(),this.search_field_scale())},n.prototype.single_set_selected_text=function(t){return null==t&&(t=this.default_text),t===this.default_text?this.selected_item.addClass("chosen-default"):(this.single_deselect_control_build(),this.selected_item.removeClass("chosen-default")),this.selected_item.find("span").html(t)},n.prototype.result_deselect=function(t){var e;return e=this.results_data[t],!this.form_field.options[e.options_index].disabled&&(e.selected=!1,this.form_field.options[e.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.trigger_form_field_change({deselected:this.form_field.options[e.options_index].value}),this.search_field_scale(),!0)},n.prototype.single_deselect_control_build=function(){if(this.allow_single_deselect)return this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>'),this.selected_item.addClass("chosen-single-with-deselect")},n.prototype.get_search_field_value=function(){return this.search_field.val()},n.prototype.get_search_text=function(){return t.trim(this.get_search_field_value())},n.prototype.escape_html=function(e){return t("<div/>").text(e).html()},n.prototype.winnow_results_set_highlight=function(){var t,e;if(e=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),null!=(t=e.length?e.first():this.search_results.find(".active-result").first()))return this.result_do_highlight(t)},n.prototype.no_results=function(t){var e;return e=this.get_no_results_html(t),this.search_results.append(e),this.form_field_jq.trigger("chosen:no_results",{chosen:this})},n.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},n.prototype.keydown_arrow=function(){var t;return this.results_showing&&this.result_highlight?(t=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(t):void 0:this.results_show()},n.prototype.keyup_arrow=function(){var t;return this.results_showing||this.is_multiple?this.result_highlight?(t=this.result_highlight.prevAll("li.active-result")).length?this.result_do_highlight(t.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight()):void 0:this.results_show()},n.prototype.keydown_backstroke=function(){var t;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(t=this.search_container.siblings("li.search-choice").last()).length&&!t.hasClass("search-choice-disabled")?(this.pending_backstroke=t,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0},n.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},n.prototype.search_field_scale=function(){var e,s,i,n,r,o,h;if(this.is_multiple){for(r={position:"absolute",left:"-1000px",top:"-1000px",display:"none",whiteSpace:"pre"},s=0,i=(o=["fontSize","fontStyle","fontWeight","fontFamily","lineHeight","textTransform","letterSpacing"]).length;s<i;s++)r[n=o[s]]=this.search_field.css(n);return(e=t("<div />").css(r)).text(this.get_search_field_value()),t("body").append(e),h=e.width()+25,e.remove(),this.container.is(":visible")&&(h=Math.min(this.container.outerWidth()-10,h)),this.search_field.width(h)}},n.prototype.trigger_form_field_change=function(t){return this.form_field_jq.trigger("input",t),this.form_field_jq.trigger("change",t)},n}()}).call(this);
/**
 * Owl Carousel v2.2.1
 * Copyright 2013-2017 David Deutsch
 * Licensed under  ()
 */
!function(a,b,c,d){function e(b,c){this.settings=null,this.options=a.extend({},e.Defaults,c),this.$element=a(b),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:["busy"],animating:["busy"],dragging:["interacting"]}},a.each(["onResize","onThrottledResize"],a.proxy(function(b,c){this._handlers[c]=a.proxy(this[c],this)},this)),a.each(e.Plugins,a.proxy(function(a,b){this._plugins[a.charAt(0).toLowerCase()+a.slice(1)]=new b(this)},this)),a.each(e.Workers,a.proxy(function(b,c){this._pipe.push({filter:c.filter,run:a.proxy(c.run,this)})},this)),this.setup(),this.initialize()}e.Defaults={items:3,loop:!1,center:!1,rewind:!1,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:b,fallbackEasing:"swing",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",refreshClass:"owl-refresh",loadedClass:"owl-loaded",loadingClass:"owl-loading",rtlClass:"owl-rtl",responsiveClass:"owl-responsive",dragClass:"owl-drag",itemClass:"owl-item",stageClass:"owl-stage",stageOuterClass:"owl-stage-outer",grabClass:"owl-grab"},e.Width={Default:"default",Inner:"inner",Outer:"outer"},e.Type={Event:"event",State:"state"},e.Plugins={},e.Workers=[{filter:["width","settings"],run:function(){this._width=this.$element.width()}},{filter:["width","items","settings"],run:function(a){a.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){this.$stage.children(".cloned").remove()}},{filter:["width","items","settings"],run:function(a){var b=this.settings.margin||"",c=!this.settings.autoWidth,d=this.settings.rtl,e={width:"auto","margin-left":d?b:"","margin-right":d?"":b};!c&&this.$stage.children().css(e),a.css=e}},{filter:["width","items","settings"],run:function(a){var b=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,c=null,d=this._items.length,e=!this.settings.autoWidth,f=[];for(a.items={merge:!1,width:b};d--;)c=this._mergers[d],c=this.settings.mergeFit&&Math.min(c,this.settings.items)||c,a.items.merge=c>1||a.items.merge,f[d]=e?b*c:this._items[d].width();this._widths=f}},{filter:["items","settings"],run:function(){var b=[],c=this._items,d=this.settings,e=Math.max(2*d.items,4),f=2*Math.ceil(c.length/2),g=d.loop&&c.length?d.rewind?e:Math.max(e,f):0,h="",i="";for(g/=2;g--;)b.push(this.normalize(b.length/2,!0)),h+=c[b[b.length-1]][0].outerHTML,b.push(this.normalize(c.length-1-(b.length-1)/2,!0)),i=c[b[b.length-1]][0].outerHTML+i;this._clones=b,a(h).addClass("cloned").appendTo(this.$stage),a(i).addClass("cloned").prependTo(this.$stage)}},{filter:["width","items","settings"],run:function(){for(var a=this.settings.rtl?1:-1,b=this._clones.length+this._items.length,c=-1,d=0,e=0,f=[];++c<b;)d=f[c-1]||0,e=this._widths[this.relative(c)]+this.settings.margin,f.push(d+e*a);this._coordinates=f}},{filter:["width","items","settings"],run:function(){var a=this.settings.stagePadding,b=this._coordinates,c={width:Math.ceil(Math.abs(b[b.length-1]))+2*a,"padding-left":a||"","padding-right":a||""};this.$stage.css(c)}},{filter:["width","items","settings"],run:function(a){var b=this._coordinates.length,c=!this.settings.autoWidth,d=this.$stage.children();if(c&&a.items.merge)for(;b--;)a.css.width=this._widths[this.relative(b)],d.eq(b).css(a.css);else c&&(a.css.width=a.items.width,d.css(a.css))}},{filter:["items"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr("style")}},{filter:["width","items","settings"],run:function(a){a.current=a.current?this.$stage.children().index(a.current):0,a.current=Math.max(this.minimum(),Math.min(this.maximum(),a.current)),this.reset(a.current)}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var a,b,c,d,e=this.settings.rtl?1:-1,f=2*this.settings.stagePadding,g=this.coordinates(this.current())+f,h=g+this.width()*e,i=[];for(c=0,d=this._coordinates.length;c<d;c++)a=this._coordinates[c-1]||0,b=Math.abs(this._coordinates[c])+f*e,(this.op(a,"<=",g)&&this.op(a,">",h)||this.op(b,"<",g)&&this.op(b,">",h))&&i.push(c);this.$stage.children(".active").removeClass("active"),this.$stage.children(":eq("+i.join("), :eq(")+")").addClass("active"),this.settings.center&&(this.$stage.children(".center").removeClass("center"),this.$stage.children().eq(this.current()).addClass("center"))}}],e.prototype.initialize=function(){if(this.enter("initializing"),this.trigger("initialize"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is("pre-loading")){var b,c,e;b=this.$element.find("img"),c=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:d,e=this.$element.children(c).width(),b.length&&e<=0&&this.preloadAutoWidthImages(b)}this.$element.addClass(this.options.loadingClass),this.$stage=a("<"+this.settings.stageElement+' class="'+this.settings.stageClass+'"/>').wrap('<div class="'+this.settings.stageOuterClass+'"/>'),this.$element.append(this.$stage.parent()),this.replace(this.$element.children().not(this.$stage.parent())),this.$element.is(":visible")?this.refresh():this.invalidate("width"),this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass),this.registerEventHandlers(),this.leave("initializing"),this.trigger("initialized")},e.prototype.setup=function(){var b=this.viewport(),c=this.options.responsive,d=-1,e=null;c?(a.each(c,function(a){a<=b&&a>d&&(d=Number(a))}),e=a.extend({},this.options,c[d]),"function"==typeof e.stagePadding&&(e.stagePadding=e.stagePadding()),delete e.responsive,e.responsiveClass&&this.$element.attr("class",this.$element.attr("class").replace(new RegExp("("+this.options.responsiveClass+"-)\\S+\\s","g"),"$1"+d))):e=a.extend({},this.options),this.trigger("change",{property:{name:"settings",value:e}}),this._breakpoint=d,this.settings=e,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}})},e.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},e.prototype.prepare=function(b){var c=this.trigger("prepare",{content:b});return c.data||(c.data=a("<"+this.settings.itemElement+"/>").addClass(this.options.itemClass).append(b)),this.trigger("prepared",{content:c.data}),c.data},e.prototype.update=function(){for(var b=0,c=this._pipe.length,d=a.proxy(function(a){return this[a]},this._invalidated),e={};b<c;)(this._invalidated.all||a.grep(this._pipe[b].filter,d).length>0)&&this._pipe[b].run(e),b++;this._invalidated={},!this.is("valid")&&this.enter("valid")},e.prototype.width=function(a){switch(a=a||e.Width.Default){case e.Width.Inner:case e.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},e.prototype.refresh=function(){this.enter("refreshing"),this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave("refreshing"),this.trigger("refreshed")},e.prototype.onThrottledResize=function(){b.clearTimeout(this.resizeTimer),this.resizeTimer=b.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},e.prototype.onResize=function(){return!!this._items.length&&(this._width!==this.$element.width()&&(!!this.$element.is(":visible")&&(this.enter("resizing"),this.trigger("resize").isDefaultPrevented()?(this.leave("resizing"),!1):(this.invalidate("width"),this.refresh(),this.leave("resizing"),void this.trigger("resized")))))},e.prototype.registerEventHandlers=function(){a.support.transition&&this.$stage.on(a.support.transition.end+".owl.core",a.proxy(this.onTransitionEnd,this)),this.settings.responsive!==!1&&this.on(b,"resize",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on("mousedown.owl.core",a.proxy(this.onDragStart,this)),this.$stage.on("dragstart.owl.core selectstart.owl.core",function(){return!1})),this.settings.touchDrag&&(this.$stage.on("touchstart.owl.core",a.proxy(this.onDragStart,this)),this.$stage.on("touchcancel.owl.core",a.proxy(this.onDragEnd,this)))},e.prototype.onDragStart=function(b){var d=null;3!==b.which&&(a.support.transform?(d=this.$stage.css("transform").replace(/.*\(|\)| /g,"").split(","),d={x:d[16===d.length?12:4],y:d[16===d.length?13:5]}):(d=this.$stage.position(),d={x:this.settings.rtl?d.left+this.$stage.width()-this.width()+this.settings.margin:d.left,y:d.top}),this.is("animating")&&(a.support.transform?this.animate(d.x):this.$stage.stop(),this.invalidate("position")),this.$element.toggleClass(this.options.grabClass,"mousedown"===b.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=a(b.target),this._drag.stage.start=d,this._drag.stage.current=d,this._drag.pointer=this.pointer(b),a(c).on("mouseup.owl.core touchend.owl.core",a.proxy(this.onDragEnd,this)),a(c).one("mousemove.owl.core touchmove.owl.core",a.proxy(function(b){var d=this.difference(this._drag.pointer,this.pointer(b));a(c).on("mousemove.owl.core touchmove.owl.core",a.proxy(this.onDragMove,this)),Math.abs(d.x)<Math.abs(d.y)&&this.is("valid")||(b.preventDefault(),this.enter("dragging"),this.trigger("drag"))},this)))},e.prototype.onDragMove=function(a){var b=null,c=null,d=null,e=this.difference(this._drag.pointer,this.pointer(a)),f=this.difference(this._drag.stage.start,e);this.is("dragging")&&(a.preventDefault(),this.settings.loop?(b=this.coordinates(this.minimum()),c=this.coordinates(this.maximum()+1)-b,f.x=((f.x-b)%c+c)%c+b):(b=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),c=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),d=this.settings.pullDrag?-1*e.x/5:0,f.x=Math.max(Math.min(f.x,b+d),c+d)),this._drag.stage.current=f,this.animate(f.x))},e.prototype.onDragEnd=function(b){var d=this.difference(this._drag.pointer,this.pointer(b)),e=this._drag.stage.current,f=d.x>0^this.settings.rtl?"left":"right";a(c).off(".owl.core"),this.$element.removeClass(this.options.grabClass),(0!==d.x&&this.is("dragging")||!this.is("valid"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(e.x,0!==d.x?f:this._drag.direction)),this.invalidate("position"),this.update(),this._drag.direction=f,(Math.abs(d.x)>3||(new Date).getTime()-this._drag.time>300)&&this._drag.target.one("click.owl.core",function(){return!1})),this.is("dragging")&&(this.leave("dragging"),this.trigger("dragged"))},e.prototype.closest=function(b,c){var d=-1,e=30,f=this.width(),g=this.coordinates();return this.settings.freeDrag||a.each(g,a.proxy(function(a,h){return"left"===c&&b>h-e&&b<h+e?d=a:"right"===c&&b>h-f-e&&b<h-f+e?d=a+1:this.op(b,"<",h)&&this.op(b,">",g[a+1]||h-f)&&(d="left"===c?a+1:a),d===-1},this)),this.settings.loop||(this.op(b,">",g[this.minimum()])?d=b=this.minimum():this.op(b,"<",g[this.maximum()])&&(d=b=this.maximum())),d},e.prototype.animate=function(b){var c=this.speed()>0;this.is("animating")&&this.onTransitionEnd(),c&&(this.enter("animating"),this.trigger("translate")),a.support.transform3d&&a.support.transition?this.$stage.css({transform:"translate3d("+b+"px,0px,0px)",transition:this.speed()/1e3+"s"}):c?this.$stage.animate({left:b+"px"},this.speed(),this.settings.fallbackEasing,a.proxy(this.onTransitionEnd,this)):this.$stage.css({left:b+"px"})},e.prototype.is=function(a){return this._states.current[a]&&this._states.current[a]>0},e.prototype.current=function(a){if(a===d)return this._current;if(0===this._items.length)return d;if(a=this.normalize(a),this._current!==a){var b=this.trigger("change",{property:{name:"position",value:a}});b.data!==d&&(a=this.normalize(b.data)),this._current=a,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},e.prototype.invalidate=function(b){return"string"===a.type(b)&&(this._invalidated[b]=!0,this.is("valid")&&this.leave("valid")),a.map(this._invalidated,function(a,b){return b})},e.prototype.reset=function(a){a=this.normalize(a),a!==d&&(this._speed=0,this._current=a,this.suppress(["translate","translated"]),this.animate(this.coordinates(a)),this.release(["translate","translated"]))},e.prototype.normalize=function(a,b){var c=this._items.length,e=b?0:this._clones.length;return!this.isNumeric(a)||c<1?a=d:(a<0||a>=c+e)&&(a=((a-e/2)%c+c)%c+e/2),a},e.prototype.relative=function(a){return a-=this._clones.length/2,this.normalize(a,!0)},e.prototype.maximum=function(a){var b,c,d,e=this.settings,f=this._coordinates.length;if(e.loop)f=this._clones.length/2+this._items.length-1;else if(e.autoWidth||e.merge){for(b=this._items.length,c=this._items[--b].width(),d=this.$element.width();b--&&(c+=this._items[b].width()+this.settings.margin,!(c>d)););f=b+1}else f=e.center?this._items.length-1:this._items.length-e.items;return a&&(f-=this._clones.length/2),Math.max(f,0)},e.prototype.minimum=function(a){return a?0:this._clones.length/2},e.prototype.items=function(a){return a===d?this._items.slice():(a=this.normalize(a,!0),this._items[a])},e.prototype.mergers=function(a){return a===d?this._mergers.slice():(a=this.normalize(a,!0),this._mergers[a])},e.prototype.clones=function(b){var c=this._clones.length/2,e=c+this._items.length,f=function(a){return a%2===0?e+a/2:c-(a+1)/2};return b===d?a.map(this._clones,function(a,b){return f(b)}):a.map(this._clones,function(a,c){return a===b?f(c):null})},e.prototype.speed=function(a){return a!==d&&(this._speed=a),this._speed},e.prototype.coordinates=function(b){var c,e=1,f=b-1;return b===d?a.map(this._coordinates,a.proxy(function(a,b){return this.coordinates(b)},this)):(this.settings.center?(this.settings.rtl&&(e=-1,f=b+1),c=this._coordinates[b],c+=(this.width()-c+(this._coordinates[f]||0))/2*e):c=this._coordinates[f]||0,c=Math.ceil(c))},e.prototype.duration=function(a,b,c){return 0===c?0:Math.min(Math.max(Math.abs(b-a),1),6)*Math.abs(c||this.settings.smartSpeed)},e.prototype.to=function(a,b){var c=this.current(),d=null,e=a-this.relative(c),f=(e>0)-(e<0),g=this._items.length,h=this.minimum(),i=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(e)>g/2&&(e+=f*-1*g),a=c+e,d=((a-h)%g+g)%g+h,d!==a&&d-e<=i&&d-e>0&&(c=d-e,a=d,this.reset(c))):this.settings.rewind?(i+=1,a=(a%i+i)%i):a=Math.max(h,Math.min(i,a)),this.speed(this.duration(c,a,b)),this.current(a),this.$element.is(":visible")&&this.update()},e.prototype.next=function(a){a=a||!1,this.to(this.relative(this.current())+1,a)},e.prototype.prev=function(a){a=a||!1,this.to(this.relative(this.current())-1,a)},e.prototype.onTransitionEnd=function(a){if(a!==d&&(a.stopPropagation(),(a.target||a.srcElement||a.originalTarget)!==this.$stage.get(0)))return!1;this.leave("animating"),this.trigger("translated")},e.prototype.viewport=function(){var d;return this.options.responsiveBaseElement!==b?d=a(this.options.responsiveBaseElement).width():b.innerWidth?d=b.innerWidth:c.documentElement&&c.documentElement.clientWidth?d=c.documentElement.clientWidth:console.warn("Can not detect viewport width."),d},e.prototype.replace=function(b){this.$stage.empty(),this._items=[],b&&(b=b instanceof jQuery?b:a(b)),this.settings.nestedItemSelector&&(b=b.find("."+this.settings.nestedItemSelector)),b.filter(function(){return 1===this.nodeType}).each(a.proxy(function(a,b){b=this.prepare(b),this.$stage.append(b),this._items.push(b),this._mergers.push(1*b.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)},this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},e.prototype.add=function(b,c){var e=this.relative(this._current);c=c===d?this._items.length:this.normalize(c,!0),b=b instanceof jQuery?b:a(b),this.trigger("add",{content:b,position:c}),b=this.prepare(b),0===this._items.length||c===this._items.length?(0===this._items.length&&this.$stage.append(b),0!==this._items.length&&this._items[c-1].after(b),this._items.push(b),this._mergers.push(1*b.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)):(this._items[c].before(b),this._items.splice(c,0,b),this._mergers.splice(c,0,1*b.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)),this._items[e]&&this.reset(this._items[e].index()),this.invalidate("items"),this.trigger("added",{content:b,position:c})},e.prototype.remove=function(a){a=this.normalize(a,!0),a!==d&&(this.trigger("remove",{content:this._items[a],position:a}),this._items[a].remove(),this._items.splice(a,1),this._mergers.splice(a,1),this.invalidate("items"),this.trigger("removed",{content:null,position:a}))},e.prototype.preloadAutoWidthImages=function(b){b.each(a.proxy(function(b,c){this.enter("pre-loading"),c=a(c),a(new Image).one("load",a.proxy(function(a){c.attr("src",a.target.src),c.css("opacity",1),this.leave("pre-loading"),!this.is("pre-loading")&&!this.is("initializing")&&this.refresh()},this)).attr("src",c.attr("src")||c.attr("data-src")||c.attr("data-src-retina"))},this))},e.prototype.destroy=function(){this.$element.off(".owl.core"),this.$stage.off(".owl.core"),a(c).off(".owl.core"),this.settings.responsive!==!1&&(b.clearTimeout(this.resizeTimer),this.off(b,"resize",this._handlers.onThrottledResize));for(var d in this._plugins)this._plugins[d].destroy();this.$stage.children(".cloned").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class",this.$element.attr("class").replace(new RegExp(this.options.responsiveClass+"-\\S+\\s","g"),"")).removeData("owl.carousel")},e.prototype.op=function(a,b,c){var d=this.settings.rtl;switch(b){case"<":return d?a>c:a<c;case">":return d?a<c:a>c;case">=":return d?a<=c:a>=c;case"<=":return d?a>=c:a<=c}},e.prototype.on=function(a,b,c,d){a.addEventListener?a.addEventListener(b,c,d):a.attachEvent&&a.attachEvent("on"+b,c)},e.prototype.off=function(a,b,c,d){a.removeEventListener?a.removeEventListener(b,c,d):a.detachEvent&&a.detachEvent("on"+b,c)},e.prototype.trigger=function(b,c,d,f,g){var h={item:{count:this._items.length,index:this.current()}},i=a.camelCase(a.grep(["on",b,d],function(a){return a}).join("-").toLowerCase()),j=a.Event([b,"owl",d||"carousel"].join(".").toLowerCase(),a.extend({relatedTarget:this},h,c));return this._supress[b]||(a.each(this._plugins,function(a,b){b.onTrigger&&b.onTrigger(j)}),this.register({type:e.Type.Event,name:b}),this.$element.trigger(j),this.settings&&"function"==typeof this.settings[i]&&this.settings[i].call(this,j)),j},e.prototype.enter=function(b){a.each([b].concat(this._states.tags[b]||[]),a.proxy(function(a,b){this._states.current[b]===d&&(this._states.current[b]=0),this._states.current[b]++},this))},e.prototype.leave=function(b){a.each([b].concat(this._states.tags[b]||[]),a.proxy(function(a,b){this._states.current[b]--},this))},e.prototype.register=function(b){if(b.type===e.Type.Event){if(a.event.special[b.name]||(a.event.special[b.name]={}),!a.event.special[b.name].owl){var c=a.event.special[b.name]._default;a.event.special[b.name]._default=function(a){return!c||!c.apply||a.namespace&&a.namespace.indexOf("owl")!==-1?a.namespace&&a.namespace.indexOf("owl")>-1:c.apply(this,arguments)},a.event.special[b.name].owl=!0}}else b.type===e.Type.State&&(this._states.tags[b.name]?this._states.tags[b.name]=this._states.tags[b.name].concat(b.tags):this._states.tags[b.name]=b.tags,this._states.tags[b.name]=a.grep(this._states.tags[b.name],a.proxy(function(c,d){return a.inArray(c,this._states.tags[b.name])===d},this)))},e.prototype.suppress=function(b){a.each(b,a.proxy(function(a,b){this._supress[b]=!0},this))},e.prototype.release=function(b){a.each(b,a.proxy(function(a,b){delete this._supress[b]},this))},e.prototype.pointer=function(a){var c={x:null,y:null};return a=a.originalEvent||a||b.event,a=a.touches&&a.touches.length?a.touches[0]:a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:a,a.pageX?(c.x=a.pageX,c.y=a.pageY):(c.x=a.clientX,c.y=a.clientY),c},e.prototype.isNumeric=function(a){return!isNaN(parseFloat(a))},e.prototype.difference=function(a,b){return{x:a.x-b.x,y:a.y-b.y}},a.fn.owlCarousel=function(b){var c=Array.prototype.slice.call(arguments,1);return this.each(function(){var d=a(this),f=d.data("owl.carousel");f||(f=new e(this,"object"==typeof b&&b),d.data("owl.carousel",f),a.each(["next","prev","to","destroy","refresh","replace","add","remove"],function(b,c){f.register({type:e.Type.Event,name:c}),f.$element.on(c+".owl.carousel.core",a.proxy(function(a){a.namespace&&a.relatedTarget!==this&&(this.suppress([c]),f[c].apply(this,[].slice.call(arguments,1)),this.release([c]))},f))})),"string"==typeof b&&"_"!==b.charAt(0)&&f[b].apply(f,c)})},a.fn.owlCarousel.Constructor=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._interval=null,this._visible=null,this._handlers={"initialized.owl.carousel":a.proxy(function(a){a.namespace&&this._core.settings.autoRefresh&&this.watch()},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers)};e.Defaults={autoRefresh:!0,autoRefreshInterval:500},e.prototype.watch=function(){this._interval||(this._visible=this._core.$element.is(":visible"),this._interval=b.setInterval(a.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},e.prototype.refresh=function(){this._core.$element.is(":visible")!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass("owl-hidden",!this._visible),this._visible&&this._core.invalidate("width")&&this._core.refresh())},e.prototype.destroy=function(){var a,c;b.clearInterval(this._interval);for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(c in Object.getOwnPropertyNames(this))"function"!=typeof this[c]&&(this[c]=null)},a.fn.owlCarousel.Constructor.Plugins.AutoRefresh=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel resized.owl.carousel":a.proxy(function(b){if(b.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(b.property&&"position"==b.property.name||"initialized"==b.type))for(var c=this._core.settings,e=c.center&&Math.ceil(c.items/2)||c.items,f=c.center&&e*-1||0,g=(b.property&&b.property.value!==d?b.property.value:this._core.current())+f,h=this._core.clones().length,i=a.proxy(function(a,b){this.load(b)},this);f++<e;)this.load(h/2+this._core.relative(g)),h&&a.each(this._core.clones(this._core.relative(g)),i),g++},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers)};e.Defaults={lazyLoad:!1},e.prototype.load=function(c){var d=this._core.$stage.children().eq(c),e=d&&d.find(".owl-lazy");!e||a.inArray(d.get(0),this._loaded)>-1||(e.each(a.proxy(function(c,d){var e,f=a(d),g=b.devicePixelRatio>1&&f.attr("data-src-retina")||f.attr("data-src");this._core.trigger("load",{element:f,url:g},"lazy"),f.is("img")?f.one("load.owl.lazy",a.proxy(function(){f.css("opacity",1),this._core.trigger("loaded",{element:f,url:g},"lazy")},this)).attr("src",g):(e=new Image,e.onload=a.proxy(function(){f.css({"background-image":'url("'+g+'")',opacity:"1"}),this._core.trigger("loaded",{element:f,url:g},"lazy")},this),e.src=g)},this)),this._loaded.push(d.get(0)))},e.prototype.destroy=function(){var a,b;for(a in this.handlers)this._core.$element.off(a,this.handlers[a]);for(b in Object.getOwnPropertyNames(this))"function"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.Lazy=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._handlers={"initialized.owl.carousel refreshed.owl.carousel":a.proxy(function(a){a.namespace&&this._core.settings.autoHeight&&this.update()},this),"changed.owl.carousel":a.proxy(function(a){a.namespace&&this._core.settings.autoHeight&&"position"==a.property.name&&this.update()},this),"loaded.owl.lazy":a.proxy(function(a){a.namespace&&this._core.settings.autoHeight&&a.element.closest("."+this._core.settings.itemClass).index()===this._core.current()&&this.update()},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers)};e.Defaults={autoHeight:!1,autoHeightClass:"owl-height"},e.prototype.update=function(){var b=this._core._current,c=b+this._core.settings.items,d=this._core.$stage.children().toArray().slice(b,c),e=[],f=0;a.each(d,function(b,c){e.push(a(c).height())}),f=Math.max.apply(null,e),this._core.$stage.parent().height(f).addClass(this._core.settings.autoHeightClass)},e.prototype.destroy=function(){var a,b;for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(b in Object.getOwnPropertyNames(this))"function"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.AutoHeight=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._videos={},this._playing=null,this._handlers={"initialized.owl.carousel":a.proxy(function(a){a.namespace&&this._core.register({type:"state",name:"playing",tags:["interacting"]})},this),"resize.owl.carousel":a.proxy(function(a){a.namespace&&this._core.settings.video&&this.isInFullScreen()&&a.preventDefault()},this),"refreshed.owl.carousel":a.proxy(function(a){a.namespace&&this._core.is("resizing")&&this._core.$stage.find(".cloned .owl-video-frame").remove()},this),"changed.owl.carousel":a.proxy(function(a){a.namespace&&"position"===a.property.name&&this._playing&&this.stop()},this),"prepared.owl.carousel":a.proxy(function(b){if(b.namespace){var c=a(b.content).find(".owl-video");c.length&&(c.css("display","none"),this.fetch(c,a(b.content)))}},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".owl-video-play-icon",a.proxy(function(a){this.play(a)},this))};e.Defaults={video:!1,videoHeight:!1,videoWidth:!1},e.prototype.fetch=function(a,b){var c=function(){return a.attr("data-vimeo-id")?"vimeo":a.attr("data-vzaar-id")?"vzaar":"youtube"}(),d=a.attr("data-vimeo-id")||a.attr("data-youtube-id")||a.attr("data-vzaar-id"),e=a.attr("data-width")||this._core.settings.videoWidth,f=a.attr("data-height")||this._core.settings.videoHeight,g=a.attr("href");if(!g)throw new Error("Missing video URL.");if(d=g.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/),d[3].indexOf("youtu")>-1)c="youtube";else if(d[3].indexOf("vimeo")>-1)c="vimeo";else{if(!(d[3].indexOf("vzaar")>-1))throw new Error("Video URL not supported.");c="vzaar"}d=d[6],this._videos[g]={type:c,id:d,width:e,height:f},b.attr("data-video",g),this.thumbnail(a,this._videos[g])},e.prototype.thumbnail=function(b,c){var d,e,f,g=c.width&&c.height?'style="width:'+c.width+"px;height:"+c.height+'px;"':"",h=b.find("img"),i="src",j="",k=this._core.settings,l=function(a){e='<div class="owl-video-play-icon"></div>',d=k.lazyLoad?'<div class="owl-video-tn '+j+'" '+i+'="'+a+'"></div>':'<div class="owl-video-tn" style="opacity:1;background-image:url('+a+')"></div>',b.after(d),b.after(e)};if(b.wrap('<div class="owl-video-wrapper"'+g+"></div>"),this._core.settings.lazyLoad&&(i="data-src",j="owl-lazy"),h.length)return l(h.attr(i)),h.remove(),!1;"youtube"===c.type?(f="//img.youtube.com/vi/"+c.id+"/hqdefault.jpg",l(f)):"vimeo"===c.type?a.ajax({type:"GET",url:"//vimeo.com/api/v2/video/"+c.id+".json",jsonp:"callback",dataType:"jsonp",success:function(a){f=a[0].thumbnail_large,l(f)}}):"vzaar"===c.type&&a.ajax({type:"GET",url:"//vzaar.com/api/videos/"+c.id+".json",jsonp:"callback",dataType:"jsonp",success:function(a){f=a.framegrab_url,l(f)}})},e.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".owl-video-frame").remove(),this._playing.removeClass("owl-video-playing"),this._playing=null,this._core.leave("playing"),this._core.trigger("stopped",null,"video")},e.prototype.play=function(b){var c,d=a(b.target),e=d.closest("."+this._core.settings.itemClass),f=this._videos[e.attr("data-video")],g=f.width||"100%",h=f.height||this._core.$stage.height();this._playing||(this._core.enter("playing"),this._core.trigger("play",null,"video"),e=this._core.items(this._core.relative(e.index())),this._core.reset(e.index()),"youtube"===f.type?c='<iframe width="'+g+'" height="'+h+'" src="//www.youtube.com/embed/'+f.id+"?autoplay=1&rel=0&v="+f.id+'" frameborder="0" allowfullscreen></iframe>':"vimeo"===f.type?c='<iframe src="//player.vimeo.com/video/'+f.id+'?autoplay=1" width="'+g+'" height="'+h+'" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>':"vzaar"===f.type&&(c='<iframe frameborder="0"height="'+h+'"width="'+g+'" allowfullscreen mozallowfullscreen webkitAllowFullScreen src="//view.vzaar.com/'+f.id+'/player?autoplay=true"></iframe>'),a('<div class="owl-video-frame">'+c+"</div>").insertAfter(e.find(".owl-video")),this._playing=e.addClass("owl-video-playing"))},e.prototype.isInFullScreen=function(){var b=c.fullscreenElement||c.mozFullScreenElement||c.webkitFullscreenElement;return b&&a(b).parent().hasClass("owl-video-frame")},e.prototype.destroy=function(){var a,b;this._core.$element.off("click.owl.video");for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(b in Object.getOwnPropertyNames(this))"function"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.Video=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this.core=b,this.core.options=a.extend({},e.Defaults,this.core.options),this.swapping=!0,this.previous=d,this.next=d,this.handlers={"change.owl.carousel":a.proxy(function(a){a.namespace&&"position"==a.property.name&&(this.previous=this.core.current(),this.next=a.property.value)},this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":a.proxy(function(a){a.namespace&&(this.swapping="translated"==a.type)},this),"translate.owl.carousel":a.proxy(function(a){a.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};e.Defaults={animateOut:!1,animateIn:!1},e.prototype.swap=function(){if(1===this.core.settings.items&&a.support.animation&&a.support.transition){this.core.speed(0);var b,c=a.proxy(this.clear,this),d=this.core.$stage.children().eq(this.previous),e=this.core.$stage.children().eq(this.next),f=this.core.settings.animateIn,g=this.core.settings.animateOut;this.core.current()!==this.previous&&(g&&(b=this.core.coordinates(this.previous)-this.core.coordinates(this.next),d.one(a.support.animation.end,c).css({left:b+"px"}).addClass("animated owl-animated-out").addClass(g)),f&&e.one(a.support.animation.end,c).addClass("animated owl-animated-in").addClass(f))}},e.prototype.clear=function(b){a(b.target).css({left:""}).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},e.prototype.destroy=function(){var a,b;for(a in this.handlers)this.core.$element.off(a,this.handlers[a]);for(b in Object.getOwnPropertyNames(this))"function"!=typeof this[b]&&(this[b]=null)},
    a.fn.owlCarousel.Constructor.Plugins.Animate=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._timeout=null,this._paused=!1,this._handlers={"changed.owl.carousel":a.proxy(function(a){a.namespace&&"settings"===a.property.name?this._core.settings.autoplay?this.play():this.stop():a.namespace&&"position"===a.property.name&&this._core.settings.autoplay&&this._setAutoPlayInterval()},this),"initialized.owl.carousel":a.proxy(function(a){a.namespace&&this._core.settings.autoplay&&this.play()},this),"play.owl.autoplay":a.proxy(function(a,b,c){a.namespace&&this.play(b,c)},this),"stop.owl.autoplay":a.proxy(function(a){a.namespace&&this.stop()},this),"mouseover.owl.autoplay":a.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"mouseleave.owl.autoplay":a.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.play()},this),"touchstart.owl.core":a.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"touchend.owl.core":a.proxy(function(){this._core.settings.autoplayHoverPause&&this.play()},this)},this._core.$element.on(this._handlers),this._core.options=a.extend({},e.Defaults,this._core.options)};e.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},e.prototype.play=function(a,b){this._paused=!1,this._core.is("rotating")||(this._core.enter("rotating"),this._setAutoPlayInterval())},e.prototype._getNextTimeout=function(d,e){return this._timeout&&b.clearTimeout(this._timeout),b.setTimeout(a.proxy(function(){this._paused||this._core.is("busy")||this._core.is("interacting")||c.hidden||this._core.next(e||this._core.settings.autoplaySpeed)},this),d||this._core.settings.autoplayTimeout)},e.prototype._setAutoPlayInterval=function(){this._timeout=this._getNextTimeout()},e.prototype.stop=function(){this._core.is("rotating")&&(b.clearTimeout(this._timeout),this._core.leave("rotating"))},e.prototype.pause=function(){this._core.is("rotating")&&(this._paused=!0)},e.prototype.destroy=function(){var a,b;this.stop();for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(b in Object.getOwnPropertyNames(this))"function"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.autoplay=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){"use strict";var e=function(b){this._core=b,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":a.proxy(function(b){b.namespace&&this._core.settings.dotsData&&this._templates.push('<div class="'+this._core.settings.dotClass+'">'+a(b.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot")+"</div>")},this),"added.owl.carousel":a.proxy(function(a){a.namespace&&this._core.settings.dotsData&&this._templates.splice(a.position,0,this._templates.pop())},this),"remove.owl.carousel":a.proxy(function(a){a.namespace&&this._core.settings.dotsData&&this._templates.splice(a.position,1)},this),"changed.owl.carousel":a.proxy(function(a){a.namespace&&"position"==a.property.name&&this.draw()},this),"initialized.owl.carousel":a.proxy(function(a){a.namespace&&!this._initialized&&(this._core.trigger("initialize",null,"navigation"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger("initialized",null,"navigation"))},this),"refreshed.owl.carousel":a.proxy(function(a){a.namespace&&this._initialized&&(this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation"))},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this.$element.on(this._handlers)};e.Defaults={nav:!1,navText:["prev","next"],navSpeed:!1,navElement:"div",navContainer:!1,navContainerClass:"owl-nav",navClass:["owl-prev","owl-next"],slideBy:1,dotClass:"owl-dot",dotsClass:"owl-dots",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},e.prototype.initialize=function(){var b,c=this._core.settings;this._controls.$relative=(c.navContainer?a(c.navContainer):a("<div>").addClass(c.navContainerClass).appendTo(this.$element)).addClass("disabled"),this._controls.$previous=a("<"+c.navElement+">").addClass(c.navClass[0]).html(c.navText[0]).prependTo(this._controls.$relative).on("click",a.proxy(function(a){this.prev(c.navSpeed)},this)),this._controls.$next=a("<"+c.navElement+">").addClass(c.navClass[1]).html(c.navText[1]).appendTo(this._controls.$relative).on("click",a.proxy(function(a){this.next(c.navSpeed)},this)),c.dotsData||(this._templates=[a("<div>").addClass(c.dotClass).append(a("<span>")).prop("outerHTML")]),this._controls.$absolute=(c.dotsContainer?a(c.dotsContainer):a("<div>").addClass(c.dotsClass).appendTo(this.$element)).addClass("disabled"),this._controls.$absolute.on("click","div",a.proxy(function(b){var d=a(b.target).parent().is(this._controls.$absolute)?a(b.target).index():a(b.target).parent().index();b.preventDefault(),this.to(d,c.dotsSpeed)},this));for(b in this._overrides)this._core[b]=a.proxy(this[b],this)},e.prototype.destroy=function(){var a,b,c,d;for(a in this._handlers)this.$element.off(a,this._handlers[a]);for(b in this._controls)this._controls[b].remove();for(d in this.overides)this._core[d]=this._overrides[d];for(c in Object.getOwnPropertyNames(this))"function"!=typeof this[c]&&(this[c]=null)},e.prototype.update=function(){var a,b,c,d=this._core.clones().length/2,e=d+this._core.items().length,f=this._core.maximum(!0),g=this._core.settings,h=g.center||g.autoWidth||g.dotsData?1:g.dotsEach||g.items;if("page"!==g.slideBy&&(g.slideBy=Math.min(g.slideBy,g.items)),g.dots||"page"==g.slideBy)for(this._pages=[],a=d,b=0,c=0;a<e;a++){if(b>=h||0===b){if(this._pages.push({start:Math.min(f,a-d),end:a-d+h-1}),Math.min(f,a-d)===f)break;b=0,++c}b+=this._core.mergers(this._core.relative(a))}},e.prototype.draw=function(){var b,c=this._core.settings,d=this._core.items().length<=c.items,e=this._core.relative(this._core.current()),f=c.loop||c.rewind;this._controls.$relative.toggleClass("disabled",!c.nav||d),c.nav&&(this._controls.$previous.toggleClass("disabled",!f&&e<=this._core.minimum(!0)),this._controls.$next.toggleClass("disabled",!f&&e>=this._core.maximum(!0))),this._controls.$absolute.toggleClass("disabled",!c.dots||d),c.dots&&(b=this._pages.length-this._controls.$absolute.children().length,c.dotsData&&0!==b?this._controls.$absolute.html(this._templates.join("")):b>0?this._controls.$absolute.append(new Array(b+1).join(this._templates[0])):b<0&&this._controls.$absolute.children().slice(b).remove(),this._controls.$absolute.find(".active").removeClass("active"),this._controls.$absolute.children().eq(a.inArray(this.current(),this._pages)).addClass("active"))},e.prototype.onTrigger=function(b){var c=this._core.settings;b.page={index:a.inArray(this.current(),this._pages),count:this._pages.length,size:c&&(c.center||c.autoWidth||c.dotsData?1:c.dotsEach||c.items)}},e.prototype.current=function(){var b=this._core.relative(this._core.current());return a.grep(this._pages,a.proxy(function(a,c){return a.start<=b&&a.end>=b},this)).pop()},e.prototype.getPosition=function(b){var c,d,e=this._core.settings;return"page"==e.slideBy?(c=a.inArray(this.current(),this._pages),d=this._pages.length,b?++c:--c,c=this._pages[(c%d+d)%d].start):(c=this._core.relative(this._core.current()),d=this._core.items().length,b?c+=e.slideBy:c-=e.slideBy),c},e.prototype.next=function(b){a.proxy(this._overrides.to,this._core)(this.getPosition(!0),b)},e.prototype.prev=function(b){a.proxy(this._overrides.to,this._core)(this.getPosition(!1),b)},e.prototype.to=function(b,c,d){var e;!d&&this._pages.length?(e=this._pages.length,a.proxy(this._overrides.to,this._core)(this._pages[(b%e+e)%e].start,c)):a.proxy(this._overrides.to,this._core)(b,c)},a.fn.owlCarousel.Constructor.Plugins.Navigation=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){"use strict";var e=function(c){this._core=c,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":a.proxy(function(c){c.namespace&&"URLHash"===this._core.settings.startPosition&&a(b).trigger("hashchange.owl.navigation")},this),"prepared.owl.carousel":a.proxy(function(b){if(b.namespace){var c=a(b.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");if(!c)return;this._hashes[c]=b.content}},this),"changed.owl.carousel":a.proxy(function(c){if(c.namespace&&"position"===c.property.name){var d=this._core.items(this._core.relative(this._core.current())),e=a.map(this._hashes,function(a,b){return a===d?b:null}).join();if(!e||b.location.hash.slice(1)===e)return;b.location.hash=e}},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this.$element.on(this._handlers),a(b).on("hashchange.owl.navigation",a.proxy(function(a){var c=b.location.hash.substring(1),e=this._core.$stage.children(),f=this._hashes[c]&&e.index(this._hashes[c]);f!==d&&f!==this._core.current()&&this._core.to(this._core.relative(f),!1,!0)},this))};e.Defaults={URLhashListener:!1},e.prototype.destroy=function(){var c,d;a(b).off("hashchange.owl.navigation");for(c in this._handlers)this._core.$element.off(c,this._handlers[c]);for(d in Object.getOwnPropertyNames(this))"function"!=typeof this[d]&&(this[d]=null)},a.fn.owlCarousel.Constructor.Plugins.Hash=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){function e(b,c){var e=!1,f=b.charAt(0).toUpperCase()+b.slice(1);return a.each((b+" "+h.join(f+" ")+f).split(" "),function(a,b){if(g[b]!==d)return e=!c||b,!1}),e}function f(a){return e(a,!0)}var g=a("<support>").get(0).style,h="Webkit Moz O ms".split(" "),i={transition:{end:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}},animation:{end:{WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd",animation:"animationend"}}},j={csstransforms:function(){return!!e("transform")},csstransforms3d:function(){return!!e("perspective")},csstransitions:function(){return!!e("transition")},cssanimations:function(){return!!e("animation")}};j.csstransitions()&&(a.support.transition=new String(f("transition")),a.support.transition.end=i.transition.end[a.support.transition]),j.cssanimations()&&(a.support.animation=new String(f("animation")),a.support.animation.end=i.animation.end[a.support.animation]),j.csstransforms()&&(a.support.transform=new String(f("transform")),a.support.transform3d=j.csstransforms3d())}(window.Zepto||window.jQuery,window,document);
	;(function($, window, document, undefined) {
    /**
     * Creates the Linked plugin.
     * @class The Linked Plugin
     * @param {Owl} carousel - The Owl Carousel
     */
    var Linked = function(carousel) {
        /**
         * Reference to the core.
         * @protected
         * @type {Owl}
         */
        this._core = carousel;

        /**
         * All event handlers.
         * @protected
         * @type {Object}
         */
        this._handlers = {
            'dragged.owl.carousel changed.owl.carousel': $.proxy(function(e) {
                if (e.namespace && this._core.settings.linked) {
                    this.update(e);
                }
            }, this),
            'linked.to.owl.carousel': $.proxy(function(e, index, speed, standard, propagate) {
                if (e.namespace && this._core.settings.linked) {
                    this.toSlide(index, speed, propagate);
                }
            }, this)
        };

        // register event handlers
        this._core.$element.on(this._handlers);

        // set default options
        this._core.options = $.extend({}, Linked.Defaults, this._core.options);
    };

    /**
     * Default options.
     * @public
     */
    Linked.Defaults = {
        linked: false
    };

    /**
     * Updated linked instances
     */
    Linked.prototype.update = function(e) {
        this.toSlide( e.relatedTarget.relative(e.item.index) );
    };

    /**
     * Carry out the to.owl.carousel proxy function
     * @param {int} index
     * @param {int} speed
     * @param {bool} propagate
     */
    Linked.prototype.toSlide = function(index, speed, propagate) {
        var id = this._core.$element.attr('id'),
            linked = this._core.settings.linked.split(',');

        if ( typeof propagate == 'undefined' ) {
            propagate = true;
        }

        index = index || 0;

        if ( propagate ) {
            $.each(linked, function(i, el){
                $(el).trigger('linked.to.owl.carousel', [index, 300, true, false]);
            });
        } else {
            this._core.$element.trigger('to.owl.carousel', [index, 300, true]);

            if ( this._core.settings.current ) {
                this._core._plugins.current.switchTo(index);
            }
        }
    };

    /**
     * Destroys the plugin.
     * @protected
     */
    Linked.prototype.destroy = function() {
        var handler, property;

        for (handler in this._handlers) {
            this.$element.off(handler, this._handlers[handler]);
        }
        for (property in Object.getOwnPropertyNames(this)) {
            typeof this[property] != 'function' && (this[property] = null);
        }
    };

    $.fn.owlCarousel.Constructor.Plugins.linked = Linked;

})(window.Zepto || window.jQuery, window, document);
/*! Copyright (c) 2010-2012 Pathable
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
/** @preserve 
 * Copyright (c) 2010-2012 Pathable
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
(function($) {

  // Matches trailing non-space characters.
  var chop = /(\s*\S+|\s)$/;

  // Return a truncated html string.  Delegates to $.fn.truncate.
  $.truncate = function(html, options) {
    return $('<div></div>').append(html).truncate(options).html();
  };

  // Truncate the contents of an element in place.
  $.fn.truncate = function(options) {
    if ($.isNumeric(options)) options = {length: options};
    var o = $.extend({}, $.truncate.defaults, options);

    return this.each(function() {
      var self = $(this);

      if (o.noBreaks) self.find('br').replaceWith(' ');

      var text = self.text();
      var excess = text.length - o.length;

      if (o.stripTags) self.text(text);

      // Chop off any partial words if appropriate.
      if (o.words && excess > 0) {
        excess = text.length - text.slice(0, o.length).replace(chop, '').length - 1;
      }

      if (excess < 0 || !excess && !o.truncated) return;

      // Iterate over each child node in reverse, removing excess text.
      $.each(self.contents().get().reverse(), function(i, el) {
        var $el = $(el);
        var text = $el.text();
        var length = text.length;

        // If the text is longer than the excess, remove the node and continue.
        if (length <= excess) {
          o.truncated = true;
          excess -= length;
          $el.remove();
          return;
        }

        // Remove the excess text and append the ellipsis.
        if (el.nodeType === 3) {
          $(el.splitText(length - excess - 1)).replaceWith(o.ellipsis);
          return false;
        }

        // Recursively truncate child nodes.
        $el.truncate($.extend(o, {length: length - excess}));
        return false;
      });
    });
  };

  $.truncate.defaults = {

    // Strip all html elements, leaving only plain text.
    stripTags: false,

    // Only truncate at word boundaries.
    words: false,

    // Replace instances of <br> with a single space.
    noBreaks: false,

    // The maximum length of the truncated html.
    length: Infinity,

    // The character to use as the ellipsis.  The word joiner (U+2060) can be
    // used to prevent a hanging ellipsis, but displays incorrectly in Chrome
    // on Windows 7.
    // http://code.google.com/p/chromium/issues/detail?id=68323
    ellipsis: '\u2026' // '\u2060\u2026'

  };

})(jQuery);

/*
jquery-watcher
Version 1.21 - 1/19/2016
© 2014-2016 Rick Strahl, West Wind Technologies
www.west-wind.com
Licensed under MIT License
http://en.wikipedia.org/wiki/MIT_License
*/
(function ($, undefined) {
        $.fn.watch = function (options) {
            /// <summary>
            /// Allows you to monitor changes in a specific
            /// CSS property of an element by polling the value.
            /// You can also monitor attributes (using attr_ prefix)
            /// or property changes (using prop_ prefix).
            /// when the value changes a function is called.
            /// The callback is fired in the context
            /// of the selected element (ie. this)
            ///
            /// Uses the MutationObserver API of the DOM and
            /// falls back to setInterval to poll for changes
            /// for non-compliant browsers (pre IE 11)
            /// </summary>
            /// <param name="options" type="Object">
            /// Option to set - see comments in code below.
            /// </param>
            /// <returns type="jQuery" />
            var opt = $.extend({
                // CSS styles or Attributes to monitor as comma delimited list
                // For attributes use a attr_ prefix
                // Example: "top,left,opacity,attr_class"
                properties: null,

                // interval for 'manual polling' (IE 10 and older)
                interval: 100,

                // a unique id for this watcher instance
                id: "_watcher_" + new Date().getTime(),

                // flag to determine whether child elements are watched
                watchChildren: false,

                // Callback function if not passed in callback parameter
                callback: null
            }, options);

            return this.each(function () {
                var el = this;
                var el$ = $(this);
                var fnc = function (mRec, mObs) {
                    __watcher.call(el, opt.id, mRec, mObs);
                };

                var data = {
                    id: opt.id,
                    props: opt.properties.split(','),
                    vals: [opt.properties.split(',').length],
                    func: opt.callback, // user function
                    fnc: fnc, // __watcher internal
                    origProps: opt.properties,
                    interval: opt.interval,
                    intervalId: null
                };
                // store initial props and values
                $.each(data.props, function (i) {
                    var propName = data.props[i];
                    if (data.props[i].startsWith('attr_'))
                        data.vals[i] = el$.attr(propName.replace('attr_', ''));
                    else if (propName.startsWith('prop_'))
                        data.vals[i] = el$.prop(propName.replace('props_', ''));
                    else
                        data.vals[i] = el$.css(propName);
                });

                el$.data(opt.id, data);

                hookChange(el$, opt.id, data);
            });

            function hookChange(element$, id, data) {
                element$.each(function () {
                    var el$ = $(this);

                    if (window.MutationObserver) {
                        var observer = el$.data('__watcherObserver' + opt.id);
                        if (observer == null) {
                            observer = new MutationObserver(data.fnc);
                            el$.data('__watcherObserver' + opt.id, observer);
                        }
                        observer.observe(this, {
                            attributes: true,
                            subtree: opt.watchChildren,
                            childList: opt.watchChildren,
                            characterData: true
                        });
                    } else
                        data.intervalId = setInterval(data.fnc, opt.interval);
                });
            }

            function __watcher(id, mRec, mObs) {
                var el$ = $(this);
                var w = el$.data(id);
                if (!w) return;
                var el = this;

                if (!w.func)
                    return;

                var changed = false;
                var i = 0;
                for (i; i < w.props.length; i++) {
                    var key = w.props[i];

                    var newVal = "";
                    if (key.startsWith('attr_'))
                        newVal = el$.attr(key.replace('attr_', ''));
                    else if (key.startsWith('prop_'))
                        newVal = el$.prop(key.replace('prop_', ''));
                    else
                        newVal = el$.css(key);

                    if (newVal == undefined)
                        continue;

                    if (w.vals[i] != newVal) {
                        w.vals[i] = newVal;
                        changed = true;
                        break;
                    }
                }
                if (changed) {
                    // unbind to avoid recursive events
                    el$.unwatch(id);

                    // call the user handler
                    w.func.call(el, w, i, mRec, mObs);

                    // rebind the events
                    hookChange(el$, id, w);
                }
            }
        };
        $.fn.unwatch = function (id) {
            this.each(function () {
                var el = $(this);
                var data = el.data(id);
                try {
                    if (window.MutationObserver) {
                        var observer = el.data("__watcherObserver" + id);
                        if (observer) {
                            observer.disconnect();
                            el.removeData("__watcherObserver" + id);
                        }
                    } else
                        clearInterval(data.intervalId);
                }
                    // ignore if element was already unbound
                catch (e) {
                }
            });
            return this;
        };
        String.prototype.startsWith = function (sub) {
            if (sub === null || sub === undefined) return false;
            return sub == this.substr(0, sub.length);
        }
    }
)(jQuery, undefined);

/*!
* Parsley.js
* Version 2.8.1 - built Sat, Feb 3rd 2018, 2:27 pm
* http://parsleyjs.org
* Guillaume Potier - <guillaume@wisembly.com>
* Marc-Andre Lafortune - <petroselinum@marc-andre.ca>
* MIT Licensed
*/
function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,i=Array(e.length);t<e.length;t++)i[t]=e[t];return i}return Array.from(e)}var _slice=Array.prototype.slice,_slicedToArray=function(){function e(e,t){var i=[],n=!0,r=!1,s=void 0;try{for(var a,o=e[Symbol.iterator]();!(n=(a=o.next()).done)&&(i.push(a.value),!t||i.length!==t);n=!0);}catch(l){r=!0,s=l}finally{try{!n&&o["return"]&&o["return"]()}finally{if(r)throw s}}return i}return function(t,i){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e};!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],t):e.parsley=t(e.jQuery)}(this,function(e){"use strict";function t(e,t){return e.parsleyAdaptedCallback||(e.parsleyAdaptedCallback=function(){var i=Array.prototype.slice.call(arguments,0);i.unshift(this),e.apply(t||M,i)}),e.parsleyAdaptedCallback}function i(e){return 0===e.lastIndexOf(D,0)?e.substr(D.length):e}/**
 * inputevent - Alleviate browser bugs for input events
 * https://github.com/marcandre/inputevent
 * @version v0.0.3 - (built Thu, Apr 14th 2016, 5:58 pm)
 * @author Marc-Andre Lafortune <github@marc-andre.ca>
 * @license MIT
 */
function n(){var t=this,i=window||global;_extends(this,{isNativeEvent:function(e){return e.originalEvent&&e.originalEvent.isTrusted!==!1},fakeInputEvent:function(i){t.isNativeEvent(i)&&e(i.target).trigger("input")},misbehaves:function(i){t.isNativeEvent(i)&&(t.behavesOk(i),e(document).on("change.inputevent",i.data.selector,t.fakeInputEvent),t.fakeInputEvent(i))},behavesOk:function(i){t.isNativeEvent(i)&&e(document).off("input.inputevent",i.data.selector,t.behavesOk).off("change.inputevent",i.data.selector,t.misbehaves)},install:function(){if(!i.inputEventPatched){i.inputEventPatched="0.0.3";for(var n=["select",'input[type="checkbox"]','input[type="radio"]','input[type="file"]'],r=0;r<n.length;r++){var s=n[r];e(document).on("input.inputevent",s,{selector:s},t.behavesOk).on("change.inputevent",s,{selector:s},t.misbehaves)}}},uninstall:function(){delete i.inputEventPatched,e(document).off(".inputevent")}})}var r=1,s={},a={attr:function(e,t,i){var n,r,s,a=new RegExp("^"+t,"i");if("undefined"==typeof i)i={};else for(n in i)i.hasOwnProperty(n)&&delete i[n];if(!e)return i;for(s=e.attributes,n=s.length;n--;)r=s[n],r&&r.specified&&a.test(r.name)&&(i[this.camelize(r.name.slice(t.length))]=this.deserializeValue(r.value));return i},checkAttr:function(e,t,i){return e.hasAttribute(t+i)},setAttr:function(e,t,i,n){e.setAttribute(this.dasherize(t+i),String(n))},getType:function(e){return e.getAttribute("type")||"text"},generateID:function(){return""+r++},deserializeValue:function(e){var t;try{return e?"true"==e||"false"!=e&&("null"==e?null:isNaN(t=Number(e))?/^[\[\{]/.test(e)?JSON.parse(e):e:t):e}catch(i){return e}},camelize:function(e){return e.replace(/-+(.)?/g,function(e,t){return t?t.toUpperCase():""})},dasherize:function(e){return e.replace(/::/g,"/").replace(/([A-Z]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\d])([A-Z])/g,"$1_$2").replace(/_/g,"-").toLowerCase()},warn:function(){var e;window.console&&"function"==typeof window.console.warn&&(e=window.console).warn.apply(e,arguments)},warnOnce:function(e){s[e]||(s[e]=!0,this.warn.apply(this,arguments))},_resetWarnings:function(){s={}},trimString:function(e){return e.replace(/^\s+|\s+$/g,"")},parse:{date:function S(e){var t=e.match(/^(\d{4,})-(\d\d)-(\d\d)$/);if(!t)return null;var i=t.map(function(e){return parseInt(e,10)}),n=_slicedToArray(i,4),r=(n[0],n[1]),s=n[2],a=n[3],S=new Date(r,s-1,a);return S.getFullYear()!==r||S.getMonth()+1!==s||S.getDate()!==a?null:S},string:function(e){return e},integer:function(e){return isNaN(e)?null:parseInt(e,10)},number:function(e){if(isNaN(e))throw null;return parseFloat(e)},"boolean":function(e){return!/^\s*false\s*$/i.test(e)},object:function(e){return a.deserializeValue(e)},regexp:function(e){var t="";return/^\/.*\/(?:[gimy]*)$/.test(e)?(t=e.replace(/.*\/([gimy]*)$/,"$1"),e=e.replace(new RegExp("^/(.*?)/"+t+"$"),"$1")):e="^"+e+"$",new RegExp(e,t)}},parseRequirement:function(e,t){var i=this.parse[e||"string"];if(!i)throw'Unknown requirement specification: "'+e+'"';var n=i(t);if(null===n)throw"Requirement is not a "+e+': "'+t+'"';return n},namespaceEvents:function(t,i){return t=this.trimString(t||"").split(/\s+/),t[0]?e.map(t,function(e){return e+"."+i}).join(" "):""},difference:function(t,i){var n=[];return e.each(t,function(e,t){i.indexOf(t)==-1&&n.push(t)}),n},all:function(t){return e.when.apply(e,_toConsumableArray(t).concat([42,42]))},objectCreate:Object.create||function(){var e=function(){};return function(t){if(arguments.length>1)throw Error("Second argument not supported");if("object"!=typeof t)throw TypeError("Argument must be an object");e.prototype=t;var i=new e;return e.prototype=null,i}}(),_SubmitSelector:'input[type="submit"], button:submit'},o={namespace:"data-parsley-",inputs:"input, textarea, select",excluded:"input[type=button], input[type=submit], input[type=reset], input[type=hidden]",priorityEnabled:!0,multiple:null,group:null,uiEnabled:!0,validationThreshold:3,focus:"first",trigger:!1,triggerAfterFailure:"input",errorClass:"parsley-error",successClass:"parsley-success",classHandler:function(e){},errorsContainer:function(e){},errorsWrapper:'<ul class="parsley-errors-list"></ul>',errorTemplate:"<li></li>"},l=function(){this.__id__=a.generateID()};l.prototype={asyncSupport:!0,_pipeAccordingToValidationResult:function(){var t=this,i=function(){var i=e.Deferred();return!0!==t.validationResult&&i.reject(),i.resolve().promise()};return[i,i]},actualizeOptions:function(){return a.attr(this.element,this.options.namespace,this.domOptions),this.parent&&this.parent.actualizeOptions&&this.parent.actualizeOptions(),this},_resetOptions:function(e){this.domOptions=a.objectCreate(this.parent.options),this.options=a.objectCreate(this.domOptions);for(var t in e)e.hasOwnProperty(t)&&(this.options[t]=e[t]);this.actualizeOptions()},_listeners:null,on:function(e,t){this._listeners=this._listeners||{};var i=this._listeners[e]=this._listeners[e]||[];return i.push(t),this},subscribe:function(t,i){e.listenTo(this,t.toLowerCase(),i)},off:function(e,t){var i=this._listeners&&this._listeners[e];if(i)if(t)for(var n=i.length;n--;)i[n]===t&&i.splice(n,1);else delete this._listeners[e];return this},unsubscribe:function(t,i){e.unsubscribeTo(this,t.toLowerCase())},trigger:function(e,t,i){t=t||this;var n,r=this._listeners&&this._listeners[e];if(r)for(var s=r.length;s--;)if(n=r[s].call(t,t,i),n===!1)return n;return!this.parent||this.parent.trigger(e,t,i)},asyncIsValid:function(e,t){return a.warnOnce("asyncIsValid is deprecated; please use whenValid instead"),this.whenValid({group:e,force:t})},_findRelated:function(){return this.options.multiple?e(this.parent.element.querySelectorAll("["+this.options.namespace+'multiple="'+this.options.multiple+'"]')):this.$element}};var u=function(e,t){var i=e.match(/^\s*\[(.*)\]\s*$/);if(!i)throw'Requirement is not an array: "'+e+'"';var n=i[1].split(",").map(a.trimString);if(n.length!==t)throw"Requirement has "+n.length+" values when "+t+" are needed";return n},d=function(e,t,i){var n=null,r={};for(var s in e)if(s){var o=i(s);"string"==typeof o&&(o=a.parseRequirement(e[s],o)),r[s]=o}else n=a.parseRequirement(e[s],t);return[n,r]},h=function(t){e.extend(!0,this,t)};h.prototype={validate:function(e,t){if(this.fn)return arguments.length>3&&(t=[].slice.call(arguments,1,-1)),this.fn(e,t);if(Array.isArray(e)){if(!this.validateMultiple)throw"Validator `"+this.name+"` does not handle multiple values";return this.validateMultiple.apply(this,arguments)}var i=arguments[arguments.length-1];if(this.validateDate&&i._isDateInput())return arguments[0]=a.parse.date(arguments[0]),null!==arguments[0]&&this.validateDate.apply(this,arguments);if(this.validateNumber)return!isNaN(e)&&(arguments[0]=parseFloat(arguments[0]),this.validateNumber.apply(this,arguments));if(this.validateString)return this.validateString.apply(this,arguments);throw"Validator `"+this.name+"` only handles multiple values"},parseRequirements:function(t,i){if("string"!=typeof t)return Array.isArray(t)?t:[t];var n=this.requirementType;if(Array.isArray(n)){for(var r=u(t,n.length),s=0;s<r.length;s++)r[s]=a.parseRequirement(n[s],r[s]);return r}return e.isPlainObject(n)?d(n,t,i):[a.parseRequirement(n,t)]},requirementType:"string",priority:2};var p=function(e,t){this.__class__="ValidatorRegistry",this.locale="en",this.init(e||{},t||{})},c={email:/^((([a-zA-Z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-zA-Z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/,number:/^-?(\d*\.)?\d+(e[-+]?\d+)?$/i,integer:/^-?\d+$/,digits:/^\d+$/,alphanum:/^\w+$/i,date:{test:function(e){return null!==a.parse.date(e)}},url:new RegExp("^(?:(?:https?|ftp)://)?(?:\\S+(?::\\S*)?@)?(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-zA-Z\\u00a1-\\uffff0-9]-*)*[a-zA-Z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-zA-Z\\u00a1-\\uffff0-9]-*)*[a-zA-Z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-zA-Z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:/\\S*)?$")};c.range=c.number;var f=function(e){var t=(""+e).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return t?Math.max(0,(t[1]?t[1].length:0)-(t[2]?+t[2]:0)):0},m=function(e,t){return t.map(a.parse[e])},g=function(e,t){return function(i){for(var n=arguments.length,r=Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];return r.pop(),t.apply(void 0,[i].concat(_toConsumableArray(m(e,r))))}},v=function(e){return{validateDate:g("date",e),validateNumber:g("number",e),requirementType:e.length<=2?"string":["string","string"],priority:30}};p.prototype={init:function(e,t){this.catalog=t,this.validators=_extends({},this.validators);for(var i in e)this.addValidator(i,e[i].fn,e[i].priority);window.Parsley.trigger("parsley:validator:init")},setLocale:function(e){if("undefined"==typeof this.catalog[e])throw new Error(e+" is not available in the catalog");return this.locale=e,this},addCatalog:function(e,t,i){return"object"==typeof t&&(this.catalog[e]=t),!0===i?this.setLocale(e):this},addMessage:function(e,t,i){return"undefined"==typeof this.catalog[e]&&(this.catalog[e]={}),this.catalog[e][t]=i,this},addMessages:function(e,t){for(var i in t)this.addMessage(e,i,t[i]);return this},addValidator:function(e,t,i){if(this.validators[e])a.warn('Validator "'+e+'" is already defined.');else if(o.hasOwnProperty(e))return void a.warn('"'+e+'" is a restricted keyword and is not a valid validator name.');return this._setValidator.apply(this,arguments)},hasValidator:function(e){return!!this.validators[e]},updateValidator:function(e,t,i){return this.validators[e]?this._setValidator.apply(this,arguments):(a.warn('Validator "'+e+'" is not already defined.'),this.addValidator.apply(this,arguments))},removeValidator:function(e){return this.validators[e]||a.warn('Validator "'+e+'" is not defined.'),delete this.validators[e],this},_setValidator:function(e,t,i){"object"!=typeof t&&(t={fn:t,priority:i}),t.validate||(t=new h(t)),this.validators[e]=t;for(var n in t.messages||{})this.addMessage(n,e,t.messages[n]);return this},getErrorMessage:function(e){var t;if("type"===e.name){var i=this.catalog[this.locale][e.name]||{};t=i[e.requirements]}else t=this.formatMessage(this.catalog[this.locale][e.name],e.requirements);return t||this.catalog[this.locale].defaultMessage||this.catalog.en.defaultMessage},formatMessage:function(e,t){if("object"==typeof t){for(var i in t)e=this.formatMessage(e,t[i]);return e}return"string"==typeof e?e.replace(/%s/i,t):""},validators:{notblank:{validateString:function(e){return/\S/.test(e)},priority:2},required:{validateMultiple:function(e){return e.length>0},validateString:function(e){return/\S/.test(e)},priority:512},type:{validateString:function(e,t){var i=arguments.length<=2||void 0===arguments[2]?{}:arguments[2],n=i.step,r=void 0===n?"any":n,s=i.base,a=void 0===s?0:s,o=c[t];if(!o)throw new Error("validator type `"+t+"` is not supported");if(!o.test(e))return!1;if("number"===t&&!/^any$/i.test(r||"")){var l=Number(e),u=Math.max(f(r),f(a));if(f(l)>u)return!1;var d=function(e){return Math.round(e*Math.pow(10,u))};if((d(l)-d(a))%d(r)!=0)return!1}return!0},requirementType:{"":"string",step:"string",base:"number"},priority:256},pattern:{validateString:function(e,t){return t.test(e)},requirementType:"regexp",priority:64},minlength:{validateString:function(e,t){return e.length>=t},requirementType:"integer",priority:30},maxlength:{validateString:function(e,t){return e.length<=t},requirementType:"integer",priority:30},length:{validateString:function(e,t,i){return e.length>=t&&e.length<=i},requirementType:["integer","integer"],priority:30},mincheck:{validateMultiple:function(e,t){return e.length>=t},requirementType:"integer",priority:30},maxcheck:{validateMultiple:function(e,t){return e.length<=t},requirementType:"integer",priority:30},check:{validateMultiple:function(e,t,i){return e.length>=t&&e.length<=i},requirementType:["integer","integer"],priority:30},min:v(function(e,t){return e>=t}),max:v(function(e,t){return e<=t}),range:v(function(e,t,i){return e>=t&&e<=i}),equalto:{validateString:function(t,i){var n=e(i);return n.length?t===n.val():t===i},priority:256}}};var y={},_=function k(e,t,i){for(var n=[],r=[],s=0;s<e.length;s++){for(var a=!1,o=0;o<t.length;o++)if(e[s].assert.name===t[o].assert.name){a=!0;break}a?r.push(e[s]):n.push(e[s])}return{kept:r,added:n,removed:i?[]:k(t,e,!0).added}};y.Form={_actualizeTriggers:function(){var e=this;this.$element.on("submit.Parsley",function(t){e.onSubmitValidate(t)}),this.$element.on("click.Parsley",a._SubmitSelector,function(t){e.onSubmitButton(t)}),!1!==this.options.uiEnabled&&this.element.setAttribute("novalidate","")},focus:function(){if(this._focusedField=null,!0===this.validationResult||"none"===this.options.focus)return null;for(var e=0;e<this.fields.length;e++){var t=this.fields[e];if(!0!==t.validationResult&&t.validationResult.length>0&&"undefined"==typeof t.options.noFocus&&(this._focusedField=t.$element,"first"===this.options.focus))break}return null===this._focusedField?null:this._focusedField.focus()},_destroyUI:function(){this.$element.off(".Parsley")}},y.Field={_reflowUI:function(){if(this._buildUI(),this._ui){var e=_(this.validationResult,this._ui.lastValidationResult);this._ui.lastValidationResult=this.validationResult,this._manageStatusClass(),this._manageErrorsMessages(e),this._actualizeTriggers(),!e.kept.length&&!e.added.length||this._failedOnce||(this._failedOnce=!0,this._actualizeTriggers())}},getErrorsMessages:function(){if(!0===this.validationResult)return[];for(var e=[],t=0;t<this.validationResult.length;t++)e.push(this.validationResult[t].errorMessage||this._getErrorMessage(this.validationResult[t].assert));return e},addError:function(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=t.message,n=t.assert,r=t.updateClass,s=void 0===r||r;this._buildUI(),this._addError(e,{message:i,assert:n}),s&&this._errorClass()},updateError:function(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=t.message,n=t.assert,r=t.updateClass,s=void 0===r||r;this._buildUI(),this._updateError(e,{message:i,assert:n}),s&&this._errorClass()},removeError:function(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=t.updateClass,n=void 0===i||i;this._buildUI(),this._removeError(e),n&&this._manageStatusClass()},_manageStatusClass:function(){this.hasConstraints()&&this.needsValidation()&&!0===this.validationResult?this._successClass():this.validationResult.length>0?this._errorClass():this._resetClass()},_manageErrorsMessages:function(t){if("undefined"==typeof this.options.errorsMessagesDisabled){if("undefined"!=typeof this.options.errorMessage)return t.added.length||t.kept.length?(this._insertErrorWrapper(),0===this._ui.$errorsWrapper.find(".parsley-custom-error-message").length&&this._ui.$errorsWrapper.append(e(this.options.errorTemplate).addClass("parsley-custom-error-message")),this._ui.$errorsWrapper.addClass("filled").find(".parsley-custom-error-message").html(this.options.errorMessage)):this._ui.$errorsWrapper.removeClass("filled").find(".parsley-custom-error-message").remove();for(var i=0;i<t.removed.length;i++)this._removeError(t.removed[i].assert.name);for(i=0;i<t.added.length;i++)this._addError(t.added[i].assert.name,{message:t.added[i].errorMessage,assert:t.added[i].assert});for(i=0;i<t.kept.length;i++)this._updateError(t.kept[i].assert.name,{message:t.kept[i].errorMessage,assert:t.kept[i].assert})}},_addError:function(t,i){var n=i.message,r=i.assert;this._insertErrorWrapper(),this._ui.$errorClassHandler.attr("aria-describedby",this._ui.errorsWrapperId),this._ui.$errorsWrapper.addClass("filled").append(e(this.options.errorTemplate).addClass("parsley-"+t).html(n||this._getErrorMessage(r)))},_updateError:function(e,t){var i=t.message,n=t.assert;this._ui.$errorsWrapper.addClass("filled").find(".parsley-"+e).html(i||this._getErrorMessage(n))},_removeError:function(e){this._ui.$errorClassHandler.removeAttr("aria-describedby"),this._ui.$errorsWrapper.removeClass("filled").find(".parsley-"+e).remove()},_getErrorMessage:function(e){var t=e.name+"Message";return"undefined"!=typeof this.options[t]?window.Parsley.formatMessage(this.options[t],e.requirements):window.Parsley.getErrorMessage(e)},_buildUI:function(){if(!this._ui&&!1!==this.options.uiEnabled){var t={};this.element.setAttribute(this.options.namespace+"id",this.__id__),t.$errorClassHandler=this._manageClassHandler(),t.errorsWrapperId="parsley-id-"+(this.options.multiple?"multiple-"+this.options.multiple:this.__id__),t.$errorsWrapper=e(this.options.errorsWrapper).attr("id",t.errorsWrapperId),t.lastValidationResult=[],t.validationInformationVisible=!1,this._ui=t}},_manageClassHandler:function(){if("string"==typeof this.options.classHandler&&e(this.options.classHandler).length)return e(this.options.classHandler);var t=this.options.classHandler;if("string"==typeof this.options.classHandler&&"function"==typeof window[this.options.classHandler]&&(t=window[this.options.classHandler]),"function"==typeof t){var i=t.call(this,this);if("undefined"!=typeof i&&i.length)return i}else{if("object"==typeof t&&t instanceof jQuery&&t.length)return t;t&&a.warn("The class handler `"+t+"` does not exist in DOM nor as a global JS function")}return this._inputHolder()},_inputHolder:function(){return this.options.multiple&&"SELECT"!==this.element.nodeName?this.$element.parent():this.$element},_insertErrorWrapper:function(){var t=this.options.errorsContainer;if(0!==this._ui.$errorsWrapper.parent().length)return this._ui.$errorsWrapper.parent();if("string"==typeof t){if(e(t).length)return e(t).append(this._ui.$errorsWrapper);"function"==typeof window[t]?t=window[t]:a.warn("The errors container `"+t+"` does not exist in DOM nor as a global JS function")}return"function"==typeof t&&(t=t.call(this,this)),"object"==typeof t&&t.length?t.append(this._ui.$errorsWrapper):this._inputHolder().after(this._ui.$errorsWrapper)},_actualizeTriggers:function(){var e,t=this,i=this._findRelated();i.off(".Parsley"),this._failedOnce?i.on(a.namespaceEvents(this.options.triggerAfterFailure,"Parsley"),function(){t._validateIfNeeded()}):(e=a.namespaceEvents(this.options.trigger,"Parsley"))&&i.on(e,function(e){t._validateIfNeeded(e)})},_validateIfNeeded:function(e){var t=this;e&&/key|input/.test(e.type)&&(!this._ui||!this._ui.validationInformationVisible)&&this.getValue().length<=this.options.validationThreshold||(this.options.debounce?(window.clearTimeout(this._debounced),this._debounced=window.setTimeout(function(){return t.validate()},this.options.debounce)):this.validate())},_resetUI:function(){this._failedOnce=!1,this._actualizeTriggers(),"undefined"!=typeof this._ui&&(this._ui.$errorsWrapper.removeClass("filled").children().remove(),this._resetClass(),this._ui.lastValidationResult=[],this._ui.validationInformationVisible=!1)},_destroyUI:function(){this._resetUI(),"undefined"!=typeof this._ui&&this._ui.$errorsWrapper.remove(),delete this._ui},_successClass:function(){this._ui.validationInformationVisible=!0,this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass)},_errorClass:function(){this._ui.validationInformationVisible=!0,this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass)},_resetClass:function(){this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass)}};var w=function(t,i,n){this.__class__="Form",this.element=t,this.$element=e(t),this.domOptions=i,this.options=n,this.parent=window.Parsley,this.fields=[],this.validationResult=null},b={pending:null,resolved:!0,rejected:!1};w.prototype={onSubmitValidate:function(e){var t=this;if(!0!==e.parsley){var i=this._submitSource||this.$element.find(a._SubmitSelector)[0];if(this._submitSource=null,this.$element.find(".parsley-synthetic-submit-button").prop("disabled",!0),!i||null===i.getAttribute("formnovalidate")){window.Parsley._remoteCache={};var n=this.whenValidate({event:e});"resolved"===n.state()&&!1!==this._trigger("submit")||(e.stopImmediatePropagation(),e.preventDefault(),"pending"===n.state()&&n.done(function(){t._submit(i)}))}}},onSubmitButton:function(e){this._submitSource=e.currentTarget},_submit:function(t){if(!1!==this._trigger("submit")){if(t){var i=this.$element.find(".parsley-synthetic-submit-button").prop("disabled",!1);0===i.length&&(i=e('<input class="parsley-synthetic-submit-button" type="hidden">').appendTo(this.$element)),i.attr({name:t.getAttribute("name"),value:t.getAttribute("value")})}this.$element.trigger(_extends(e.Event("submit"),{parsley:!0}))}},validate:function(t){if(arguments.length>=1&&!e.isPlainObject(t)){a.warnOnce("Calling validate on a parsley form without passing arguments as an object is deprecated.");var i=_slice.call(arguments),n=i[0],r=i[1],s=i[2];t={group:n,force:r,event:s}}return b[this.whenValidate(t).state()]},whenValidate:function(){var t,i=this,n=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],r=n.group,s=n.force,o=n.event;this.submitEvent=o,o&&(this.submitEvent=_extends({},o,{preventDefault:function(){a.warnOnce("Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`"),i.validationResult=!1}})),this.validationResult=!0,this._trigger("validate"),this._refreshFields();var l=this._withoutReactualizingFormOptions(function(){return e.map(i.fields,function(e){return e.whenValidate({force:s,group:r})})});return(t=a.all(l).done(function(){i._trigger("success")}).fail(function(){i.validationResult=!1,i.focus(),i._trigger("error")}).always(function(){i._trigger("validated")})).pipe.apply(t,_toConsumableArray(this._pipeAccordingToValidationResult()))},isValid:function(t){if(arguments.length>=1&&!e.isPlainObject(t)){a.warnOnce("Calling isValid on a parsley form without passing arguments as an object is deprecated.");var i=_slice.call(arguments),n=i[0],r=i[1];t={group:n,force:r}}return b[this.whenValid(t).state()]},whenValid:function(){var t=this,i=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=i.group,r=i.force;this._refreshFields();var s=this._withoutReactualizingFormOptions(function(){return e.map(t.fields,function(e){return e.whenValid({group:n,force:r})})});return a.all(s)},refresh:function(){return this._refreshFields(),this},reset:function(){for(var e=0;e<this.fields.length;e++)this.fields[e].reset();this._trigger("reset")},destroy:function(){this._destroyUI();for(var e=0;e<this.fields.length;e++)this.fields[e].destroy();this.$element.removeData("Parsley"),this._trigger("destroy")},_refreshFields:function(){return this.actualizeOptions()._bindFields()},_bindFields:function(){var t=this,i=this.fields;return this.fields=[],this.fieldsMappedById={},this._withoutReactualizingFormOptions(function(){t.$element.find(t.options.inputs).not(t.options.excluded).each(function(e,i){var n=new window.Parsley.Factory(i,{},t);if(("Field"===n.__class__||"FieldMultiple"===n.__class__)&&!0!==n.options.excluded){var r=n.__class__+"-"+n.__id__;"undefined"==typeof t.fieldsMappedById[r]&&(t.fieldsMappedById[r]=n,t.fields.push(n))}}),e.each(a.difference(i,t.fields),function(e,t){t.reset()})}),this},_withoutReactualizingFormOptions:function(e){var t=this.actualizeOptions;this.actualizeOptions=function(){return this};var i=e();return this.actualizeOptions=t,i},_trigger:function(e){return this.trigger("form:"+e)}};var F=function(e,t,i,n,r){var s=window.Parsley._validatorRegistry.validators[t],a=new h(s);n=n||e.options[t+"Priority"]||a.priority,r=!0===r,_extends(this,{validator:a,name:t,requirements:i,priority:n,isDomConstraint:r}),this._parseRequirements(e.options)},C=function(e){var t=e[0].toUpperCase();return t+e.slice(1)};F.prototype={validate:function(e,t){var i;return(i=this.validator).validate.apply(i,[e].concat(_toConsumableArray(this.requirementList),[t]))},_parseRequirements:function(e){var t=this;this.requirementList=this.validator.parseRequirements(this.requirements,function(i){return e[t.name+C(i)]})}};var A=function(t,i,n,r){this.__class__="Field",this.element=t,this.$element=e(t),"undefined"!=typeof r&&(this.parent=r),this.options=n,this.domOptions=i,this.constraints=[],this.constraintsByName={},this.validationResult=!0,this._bindConstraints()},E={pending:null,resolved:!0,rejected:!1};A.prototype={validate:function(t){arguments.length>=1&&!e.isPlainObject(t)&&(a.warnOnce("Calling validate on a parsley field without passing arguments as an object is deprecated."),t={options:t});var i=this.whenValidate(t);if(!i)return!0;switch(i.state()){case"pending":return null;case"resolved":return!0;case"rejected":return this.validationResult}},whenValidate:function(){var e,t=this,i=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=i.force,r=i.group;if(this.refresh(),!r||this._isInGroup(r))return this.value=this.getValue(),this._trigger("validate"),(e=this.whenValid({force:n,value:this.value,_refreshed:!0}).always(function(){t._reflowUI()}).done(function(){t._trigger("success")}).fail(function(){t._trigger("error")}).always(function(){t._trigger("validated")})).pipe.apply(e,_toConsumableArray(this._pipeAccordingToValidationResult()))},hasConstraints:function(){return 0!==this.constraints.length},needsValidation:function(e){return"undefined"==typeof e&&(e=this.getValue()),!(!e.length&&!this._isRequired()&&"undefined"==typeof this.options.validateIfEmpty)},_isInGroup:function(t){return Array.isArray(this.options.group)?-1!==e.inArray(t,this.options.group):this.options.group===t},isValid:function(t){if(arguments.length>=1&&!e.isPlainObject(t)){a.warnOnce("Calling isValid on a parsley field without passing arguments as an object is deprecated.");var i=_slice.call(arguments),n=i[0],r=i[1];t={force:n,value:r}}var s=this.whenValid(t);return!s||E[s.state()]},whenValid:function(){var t=this,i=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=i.force,r=void 0!==n&&n,s=i.value,o=i.group,l=i._refreshed;if(l||this.refresh(),!o||this._isInGroup(o)){if(this.validationResult=!0,!this.hasConstraints())return e.when();if("undefined"!=typeof s&&null!==s||(s=this.getValue()),!this.needsValidation(s)&&!0!==r)return e.when();var u=this._getGroupedConstraints(),d=[];return e.each(u,function(i,n){var r=a.all(e.map(n,function(e){return t._validateConstraint(s,e)}));if(d.push(r),"rejected"===r.state())return!1}),a.all(d)}},_validateConstraint:function(t,i){var n=this,r=i.validate(t,this);return!1===r&&(r=e.Deferred().reject()),a.all([r]).fail(function(e){n.validationResult instanceof Array||(n.validationResult=[]),n.validationResult.push({assert:i,errorMessage:"string"==typeof e&&e})})},getValue:function(){var e;return e="function"==typeof this.options.value?this.options.value(this):"undefined"!=typeof this.options.value?this.options.value:this.$element.val(),"undefined"==typeof e||null===e?"":this._handleWhitespace(e)},reset:function(){return this._resetUI(),this._trigger("reset")},destroy:function(){this._destroyUI(),this.$element.removeData("Parsley"),this.$element.removeData("FieldMultiple"),this._trigger("destroy")},refresh:function(){return this._refreshConstraints(),this},_refreshConstraints:function(){return this.actualizeOptions()._bindConstraints()},refreshConstraints:function(){return a.warnOnce("Parsley's refreshConstraints is deprecated. Please use refresh"),this.refresh()},addConstraint:function(e,t,i,n){if(window.Parsley._validatorRegistry.validators[e]){var r=new F(this,e,t,i,n);"undefined"!==this.constraintsByName[r.name]&&this.removeConstraint(r.name),this.constraints.push(r),this.constraintsByName[r.name]=r}return this},removeConstraint:function(e){for(var t=0;t<this.constraints.length;t++)if(e===this.constraints[t].name){this.constraints.splice(t,1);break}return delete this.constraintsByName[e],this},updateConstraint:function(e,t,i){return this.removeConstraint(e).addConstraint(e,t,i)},_bindConstraints:function(){for(var e=[],t={},i=0;i<this.constraints.length;i++)!1===this.constraints[i].isDomConstraint&&(e.push(this.constraints[i]),t[this.constraints[i].name]=this.constraints[i]);this.constraints=e,this.constraintsByName=t;for(var n in this.options)this.addConstraint(n,this.options[n],void 0,!0);return this._bindHtml5Constraints()},_bindHtml5Constraints:function(){null!==this.element.getAttribute("required")&&this.addConstraint("required",!0,void 0,!0),null!==this.element.getAttribute("pattern")&&this.addConstraint("pattern",this.element.getAttribute("pattern"),void 0,!0);var e=this.element.getAttribute("min"),t=this.element.getAttribute("max");null!==e&&null!==t?this.addConstraint("range",[e,t],void 0,!0):null!==e?this.addConstraint("min",e,void 0,!0):null!==t&&this.addConstraint("max",t,void 0,!0),null!==this.element.getAttribute("minlength")&&null!==this.element.getAttribute("maxlength")?this.addConstraint("length",[this.element.getAttribute("minlength"),this.element.getAttribute("maxlength")],void 0,!0):null!==this.element.getAttribute("minlength")?this.addConstraint("minlength",this.element.getAttribute("minlength"),void 0,!0):null!==this.element.getAttribute("maxlength")&&this.addConstraint("maxlength",this.element.getAttribute("maxlength"),void 0,!0);var i=a.getType(this.element);return"number"===i?this.addConstraint("type",["number",{step:this.element.getAttribute("step")||"1",base:e||this.element.getAttribute("value")}],void 0,!0):/^(email|url|range|date)$/i.test(i)?this.addConstraint("type",i,void 0,!0):this},_isRequired:function(){return"undefined"!=typeof this.constraintsByName.required&&!1!==this.constraintsByName.required.requirements},_trigger:function(e){return this.trigger("field:"+e)},_handleWhitespace:function(e){return!0===this.options.trimValue&&a.warnOnce('data-parsley-trim-value="true" is deprecated, please use data-parsley-whitespace="trim"'),"squish"===this.options.whitespace&&(e=e.replace(/\s{2,}/g," ")),"trim"!==this.options.whitespace&&"squish"!==this.options.whitespace&&!0!==this.options.trimValue||(e=a.trimString(e)),e},_isDateInput:function(){var e=this.constraintsByName.type;return e&&"date"===e.requirements},_getGroupedConstraints:function(){if(!1===this.options.priorityEnabled)return[this.constraints];for(var e=[],t={},i=0;i<this.constraints.length;i++){var n=this.constraints[i].priority;t[n]||e.push(t[n]=[]),t[n].push(this.constraints[i])}return e.sort(function(e,t){return t[0].priority-e[0].priority}),e}};var x=A,$=function(){this.__class__="FieldMultiple"};$.prototype={addElement:function(e){return this.$elements.push(e),this},_refreshConstraints:function(){var t;if(this.constraints=[],"SELECT"===this.element.nodeName)return this.actualizeOptions()._bindConstraints(),this;for(var i=0;i<this.$elements.length;i++)if(e("html").has(this.$elements[i]).length){t=this.$elements[i].data("FieldMultiple")._refreshConstraints().constraints;for(var n=0;n<t.length;n++)this.addConstraint(t[n].name,t[n].requirements,t[n].priority,t[n].isDomConstraint)}else this.$elements.splice(i,1);return this},getValue:function(){if("function"==typeof this.options.value)return this.options.value(this);if("undefined"!=typeof this.options.value)return this.options.value;if("INPUT"===this.element.nodeName){var t=a.getType(this.element);if("radio"===t)return this._findRelated().filter(":checked").val()||"";if("checkbox"===t){
    var i=[];return this._findRelated().filter(":checked").each(function(){i.push(e(this).val())}),i}}return"SELECT"===this.element.nodeName&&null===this.$element.val()?[]:this.$element.val()},_init:function(){return this.$elements=[this.$element],this}};var P=function(t,i,n){this.element=t,this.$element=e(t);var r=this.$element.data("Parsley");if(r)return"undefined"!=typeof n&&r.parent===window.Parsley&&(r.parent=n,r._resetOptions(r.options)),"object"==typeof i&&_extends(r.options,i),r;if(!this.$element.length)throw new Error("You must bind Parsley on an existing element.");if("undefined"!=typeof n&&"Form"!==n.__class__)throw new Error("Parent instance must be a Form instance");return this.parent=n||window.Parsley,this.init(i)};P.prototype={init:function(e){return this.__class__="Parsley",this.__version__="2.8.1",this.__id__=a.generateID(),this._resetOptions(e),"FORM"===this.element.nodeName||a.checkAttr(this.element,this.options.namespace,"validate")&&!this.$element.is(this.options.inputs)?this.bind("parsleyForm"):this.isMultiple()?this.handleMultiple():this.bind("parsleyField")},isMultiple:function(){var e=a.getType(this.element);return"radio"===e||"checkbox"===e||"SELECT"===this.element.nodeName&&null!==this.element.getAttribute("multiple")},handleMultiple:function(){var t,i,n=this;if(this.options.multiple=this.options.multiple||(t=this.element.getAttribute("name"))||this.element.getAttribute("id"),"SELECT"===this.element.nodeName&&null!==this.element.getAttribute("multiple"))return this.options.multiple=this.options.multiple||this.__id__,this.bind("parsleyFieldMultiple");if(!this.options.multiple)return a.warn("To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.",this.$element),this;this.options.multiple=this.options.multiple.replace(/(:|\.|\[|\]|\{|\}|\$)/g,""),t&&e('input[name="'+t+'"]').each(function(e,t){var i=a.getType(t);"radio"!==i&&"checkbox"!==i||t.setAttribute(n.options.namespace+"multiple",n.options.multiple)});for(var r=this._findRelated(),s=0;s<r.length;s++)if(i=e(r.get(s)).data("Parsley"),"undefined"!=typeof i){this.$element.data("FieldMultiple")||i.addElement(this.$element);break}return this.bind("parsleyField",!0),i||this.bind("parsleyFieldMultiple")},bind:function(t,i){var n;switch(t){case"parsleyForm":n=e.extend(new w(this.element,this.domOptions,this.options),new l,window.ParsleyExtend)._bindFields();break;case"parsleyField":n=e.extend(new x(this.element,this.domOptions,this.options,this.parent),new l,window.ParsleyExtend);break;case"parsleyFieldMultiple":n=e.extend(new x(this.element,this.domOptions,this.options,this.parent),new $,new l,window.ParsleyExtend)._init();break;default:throw new Error(t+"is not a supported Parsley type")}return this.options.multiple&&a.setAttr(this.element,this.options.namespace,"multiple",this.options.multiple),"undefined"!=typeof i?(this.$element.data("FieldMultiple",n),n):(this.$element.data("Parsley",n),n._actualizeTriggers(),n._trigger("init"),n)}};var V=e.fn.jquery.split(".");if(parseInt(V[0])<=1&&parseInt(V[1])<8)throw"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.";V.forEach||a.warn("Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim");var T=_extends(new l,{element:document,$element:e(document),actualizeOptions:null,_resetOptions:null,Factory:P,version:"2.8.1"});_extends(x.prototype,y.Field,l.prototype),_extends(w.prototype,y.Form,l.prototype),_extends(P.prototype,l.prototype),e.fn.parsley=e.fn.psly=function(t){if(this.length>1){var i=[];return this.each(function(){i.push(e(this).parsley(t))}),i}if(0!=this.length)return new P(this[0],t)},"undefined"==typeof window.ParsleyExtend&&(window.ParsleyExtend={}),T.options=_extends(a.objectCreate(o),window.ParsleyConfig),window.ParsleyConfig=T.options,window.Parsley=window.psly=T,T.Utils=a,window.ParsleyUtils={},e.each(a,function(e,t){"function"==typeof t&&(window.ParsleyUtils[e]=function(){return a.warnOnce("Accessing `window.ParsleyUtils` is deprecated. Use `window.Parsley.Utils` instead."),a[e].apply(a,arguments)})});var O=window.Parsley._validatorRegistry=new p(window.ParsleyConfig.validators,window.ParsleyConfig.i18n);window.ParsleyValidator={},e.each("setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator hasValidator".split(" "),function(e,t){window.Parsley[t]=function(){return O[t].apply(O,arguments)},window.ParsleyValidator[t]=function(){var e;return a.warnOnce("Accessing the method '"+t+"' through Validator is deprecated. Simply call 'window.Parsley."+t+"(...)'"),(e=window.Parsley)[t].apply(e,arguments)}}),window.Parsley.UI=y,window.ParsleyUI={removeError:function(e,t,i){var n=!0!==i;return a.warnOnce("Accessing UI is deprecated. Call 'removeError' on the instance directly. Please comment in issue 1073 as to your need to call this method."),e.removeError(t,{updateClass:n})},getErrorsMessages:function(e){return a.warnOnce("Accessing UI is deprecated. Call 'getErrorsMessages' on the instance directly."),e.getErrorsMessages()}},e.each("addError updateError".split(" "),function(e,t){window.ParsleyUI[t]=function(e,i,n,r,s){var o=!0!==s;return a.warnOnce("Accessing UI is deprecated. Call '"+t+"' on the instance directly. Please comment in issue 1073 as to your need to call this method."),e[t](i,{message:n,assert:r,updateClass:o})}}),!1!==window.ParsleyConfig.autoBind&&e(function(){e("[data-parsley-validate]").length&&e("[data-parsley-validate]").parsley()});var M=e({}),R=function(){a.warnOnce("Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley")},D="parsley:";e.listen=function(e,n){var r;if(R(),"object"==typeof arguments[1]&&"function"==typeof arguments[2]&&(r=arguments[1],n=arguments[2]),"function"!=typeof n)throw new Error("Wrong parameters");window.Parsley.on(i(e),t(n,r))},e.listenTo=function(e,n,r){if(R(),!(e instanceof x||e instanceof w))throw new Error("Must give Parsley instance");if("string"!=typeof n||"function"!=typeof r)throw new Error("Wrong parameters");e.on(i(n),t(r))},e.unsubscribe=function(e,t){if(R(),"string"!=typeof e||"function"!=typeof t)throw new Error("Wrong arguments");window.Parsley.off(i(e),t.parsleyAdaptedCallback)},e.unsubscribeTo=function(e,t){if(R(),!(e instanceof x||e instanceof w))throw new Error("Must give Parsley instance");e.off(i(t))},e.unsubscribeAll=function(t){R(),window.Parsley.off(i(t)),e("form,input,textarea,select").each(function(){var n=e(this).data("Parsley");n&&n.off(i(t))})},e.emit=function(e,t){var n;R();var r=t instanceof x||t instanceof w,s=Array.prototype.slice.call(arguments,r?2:1);s.unshift(i(e)),r||(t=window.Parsley),(n=t).trigger.apply(n,_toConsumableArray(s))};e.extend(!0,T,{asyncValidators:{"default":{fn:function(e){return e.status>=200&&e.status<300},url:!1},reverse:{fn:function(e){return e.status<200||e.status>=300},url:!1}},addAsyncValidator:function(e,t,i,n){return T.asyncValidators[e]={fn:t,url:i||!1,options:n||{}},this}}),T.addValidator("remote",{requirementType:{"":"string",validator:"string",reverse:"boolean",options:"object"},validateString:function(t,i,n,r){var s,a,o={},l=n.validator||(!0===n.reverse?"reverse":"default");if("undefined"==typeof T.asyncValidators[l])throw new Error("Calling an undefined async validator: `"+l+"`");i=T.asyncValidators[l].url||i,i.indexOf("{value}")>-1?i=i.replace("{value}",encodeURIComponent(t)):o[r.element.getAttribute("name")||r.element.getAttribute("id")]=t;var u=e.extend(!0,n.options||{},T.asyncValidators[l].options);s=e.extend(!0,{},{url:i,data:o,type:"GET"},u),r.trigger("field:ajaxoptions",r,s),a=e.param(s),"undefined"==typeof T._remoteCache&&(T._remoteCache={});var d=T._remoteCache[a]=T._remoteCache[a]||e.ajax(s),h=function(){var t=T.asyncValidators[l].fn.call(r,d,i,n);return t||(t=e.Deferred().reject()),e.when(t)};return d.then(h,h)},priority:-1}),T.on("form:submit",function(){T._remoteCache={}}),l.prototype.addAsyncValidator=function(){return a.warnOnce("Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`"),T.addAsyncValidator.apply(T,arguments)},T.addMessages("en",{defaultMessage:"This value seems to be invalid.",type:{email:"This value should be a valid email.",url:"This value should be a valid url.",number:"This value should be a valid number.",integer:"This value should be a valid integer.",digits:"This value should be digits.",alphanum:"This value should be alphanumeric."},notblank:"This value should not be blank.",required:"This value is required.",pattern:"This value seems to be invalid.",min:"This value should be greater than or equal to %s.",max:"This value should be lower than or equal to %s.",range:"This value should be between %s and %s.",minlength:"This value is too short. It should have %s characters or more.",maxlength:"This value is too long. It should have %s characters or fewer.",length:"This value length is invalid. It should be between %s and %s characters long.",mincheck:"You must select at least %s choices.",maxcheck:"You must select %s choices or fewer.",check:"You must select between %s and %s choices.",equalto:"This value should be the same."}),T.setLocale("en");var I=new n;I.install();var q=T;return q});
//# sourceMappingURL=parsley.min.js.map
/*
 * Copyright (c) 2014 Mike King (@micjamking)
 *
 * jQuery Succinct plugin
 * Version 1.1.0 (October 2014)
 *
 * Licensed under the MIT License
 */
/*global jQuery*/
!function(a){"use strict";a.fn.succinct=function(b){var c=a.extend({size:240,omission:"...",ignore:!0},b);return this.each(function(){var b,d,e=a(this),f=/[!-\/:-@\[-`{-~]$/,g=function(){e.each(function(){b=a(this).html(),b.length>c.size&&(d=a.trim(b).substring(0,c.size).split(" ").slice(0,-1).join(" "),c.ignore&&(d=d.replace(f,"")),a(this).html(d+c.omission))})};g()})}}(jQuery);
/*!
 * JavaScript Cookie v2.2.0
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
;(function (factory) {
	var registeredInModuleLoader;
	if (typeof define === 'function' && define.amd) {
		define(factory);
		registeredInModuleLoader = true;
	}
	if (typeof exports === 'object') {
		module.exports = factory();
		registeredInModuleLoader = true;
	}
	if (!registeredInModuleLoader) {
		var OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = OldCookies;
			return api;
		};
	}
}(function () {
	function extend () {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[ i ];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function init (converter) {
		function api (key, value, attributes) {
			if (typeof document === 'undefined') {
				return;
			}

			// Write

			if (arguments.length > 1) {
				attributes = extend({
					path: '/'
				}, api.defaults, attributes);

				if (typeof attributes.expires === 'number') {
					attributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);
				}

				// We're using "expires" because "max-age" is not supported by IE
				attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

				try {
					var result = JSON.stringify(value);
					if (/^[\{\[]/.test(result)) {
						value = result;
					}
				} catch (e) {}

				value = converter.write ?
					converter.write(value, key) :
					encodeURIComponent(String(value))
						.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);

				key = encodeURIComponent(String(key))
					.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)
					.replace(/[\(\)]/g, escape);

				var stringifiedAttributes = '';
				for (var attributeName in attributes) {
					if (!attributes[attributeName]) {
						continue;
					}
					stringifiedAttributes += '; ' + attributeName;
					if (attributes[attributeName] === true) {
						continue;
					}

					// Considers RFC 6265 section 5.2:
					// ...
					// 3.  If the remaining unparsed-attributes contains a %x3B (";")
					//     character:
					// Consume the characters of the unparsed-attributes up to,
					// not including, the first %x3B (";") character.
					// ...
					stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
				}

				return (document.cookie = key + '=' + value + stringifiedAttributes);
			}

			// Read

			var jar = {};
			var decode = function (s) {
				return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
			};
			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all.
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var cookie = parts.slice(1).join('=');

				if (!this.json && cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					var name = decode(parts[0]);
					cookie = (converter.read || converter)(cookie, name) ||
						decode(cookie);

					if (this.json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) {}
					}

					jar[name] = cookie;

					if (key === name) {
						break;
					}
				} catch (e) {}
			}

			return key ? jar[key] : jar;
		}

		api.set = api;
		api.get = function (key) {
			return api.call(api, key);
		};
		api.getJSON = function () {
			return api.apply({
				json: true
			}, arguments);
		};
		api.remove = function (key, attributes) {
			api(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.defaults = {};

		api.withConverter = init;

		return api;
	}

	return init(function () {});
}));
/**
 * Debounce and throttle function's decorator plugin 1.0.5
 *
 * Copyright (c) 2009 Filatov Dmitry (alpha@zforms.ru)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */

(function($) {

$.extend({

	debounce : function(fn, timeout, invokeAsap, ctx) {

		if(arguments.length == 3 && typeof invokeAsap != 'boolean') {
			ctx = invokeAsap;
			invokeAsap = false;
		}

		var timer;

		return function() {

			var args = arguments;
            ctx = ctx || this;

			invokeAsap && !timer && fn.apply(ctx, args);

			clearTimeout(timer);

			timer = setTimeout(function() {
				!invokeAsap && fn.apply(ctx, args);
				timer = null;
			}, timeout);

		};

	},

	throttle : function(fn, timeout, ctx) {

		var timer, args, needInvoke;

		return function() {

			args = arguments;
			needInvoke = true;
			ctx = ctx || this;

			if(!timer) {
				(function() {
					if(needInvoke) {
						fn.apply(ctx, args);
						needInvoke = false;
						timer = setTimeout(arguments.callee, timeout);
					}
					else {
						timer = null;
					}
				})();
			}

		};

	}

});

})(jQuery);
!function(n,r){var t,e;"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define("underscore",r):(t=n._,e=r(),(n._=e).noConflict=function(){return n._=t,e})}(this,function(){
//     Underscore.js 1.10.2
//     https://underscorejs.org
//     (c) 2009-2020 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
var n="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||Function("return this")()||{},e=Array.prototype,i=Object.prototype,p="undefined"!=typeof Symbol?Symbol.prototype:null,u=e.push,f=e.slice,s=i.toString,o=i.hasOwnProperty,r=Array.isArray,a=Object.keys,t=Object.create,c=n.isNaN,l=n.isFinite,v=function(){};function h(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)}var g=h.VERSION="1.10.2";function y(u,o,n){if(void 0===o)return u;switch(null==n?3:n){case 1:return function(n){return u.call(o,n)};case 3:return function(n,r,t){return u.call(o,n,r,t)};case 4:return function(n,r,t,e){return u.call(o,n,r,t,e)}}return function(){return u.apply(o,arguments)}}function d(n,r,t){return null==n?ur:Cn(n)?y(n,r,t):Ln(n)&&!Kn(n)?ir(n):or(n)}function m(n,r){return d(n,r,1/0)}function b(n,r,t){return h.iteratee!==m?h.iteratee(n,r):d(n,r,t)}function j(u,o){return o=null==o?u.length-1:+o,function(){for(var n=Math.max(arguments.length-o,0),r=Array(n),t=0;t<n;t++)r[t]=arguments[t+o];switch(o){case 0:return u.call(this,r);case 1:return u.call(this,arguments[0],r);case 2:return u.call(this,arguments[0],arguments[1],r)}var e=Array(o+1);for(t=0;t<o;t++)e[t]=arguments[t];return e[o]=r,u.apply(this,e)}}function _(n){if(!Ln(n))return{};if(t)return t(n);v.prototype=n;var r=new v;return v.prototype=null,r}function w(r){return function(n){return null==n?void 0:n[r]}}function x(n,r){return null!=n&&o.call(n,r)}function S(n,r){for(var t=r.length,e=0;e<t;e++){if(null==n)return;n=n[r[e]]}return t?n:void 0}h.iteratee=m;var A=Math.pow(2,53)-1,O=w("length");function M(n){var r=O(n);return"number"==typeof r&&0<=r&&r<=A}function E(n,r,t){var e,u;if(r=y(r,t),M(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var o=Sn(n);for(e=0,u=o.length;e<u;e++)r(n[o[e]],o[e],n)}return n}function N(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=Array(u),i=0;i<u;i++){var a=e?e[i]:i;o[i]=r(n[a],a,n)}return o}function k(f){return function(n,r,t,e){var u=3<=arguments.length;return function(n,r,t,e){var u=!M(n)&&Sn(n),o=(u||n).length,i=0<f?0:o-1;for(e||(t=n[u?u[i]:i],i+=f);0<=i&&i<o;i+=f){var a=u?u[i]:i;t=r(t,n[a],a,n)}return t}(n,y(r,e,4),t,u)}}var I=k(1),T=k(-1);function B(n,r,t){var e=(M(n)?on:Tn)(n,r,t);if(void 0!==e&&-1!==e)return n[e]}function R(n,e,r){var u=[];return e=b(e,r),E(n,function(n,r,t){e(n,r,t)&&u.push(n)}),u}function F(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(!r(n[i],i,n))return!1}return!0}function q(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(r(n[i],i,n))return!0}return!1}function D(n,r,t,e){return M(n)||(n=On(n)),("number"!=typeof t||e)&&(t=0),0<=ln(n,r,t)}var W=j(function(n,t,e){var u,o;return Cn(t)?o=t:Kn(t)&&(u=t.slice(0,-1),t=t[t.length-1]),N(n,function(n){var r=o;if(!r){if(u&&u.length&&(n=S(n,u)),null==n)return;r=n[t]}return null==r?r:r.apply(n,e)})});function z(n,r){return N(n,or(r))}function P(n,e,r){var t,u,o=-1/0,i=-1/0;if(null==e||"number"==typeof e&&"object"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&o<t&&(o=t);else e=b(e,r),E(n,function(n,r,t){u=e(n,r,t),(i<u||u===-1/0&&o===-1/0)&&(o=n,i=u)});return o}function K(n,r,t){if(null==r||t)return M(n)||(n=On(n)),n[ar(n.length-1)];var e=M(n)?Dn(n):On(n),u=O(e);r=Math.max(Math.min(r,u),0);for(var o=u-1,i=0;i<r;i++){var a=ar(i,o),f=e[i];e[i]=e[a],e[a]=f}return e.slice(0,r)}function L(i,r){return function(e,u,n){var o=r?[[],[]]:{};return u=b(u,n),E(e,function(n,r){var t=u(n,r,e);i(o,n,t)}),o}}var V=L(function(n,r,t){x(n,t)?n[t].push(r):n[t]=[r]}),C=L(function(n,r,t){n[t]=r}),J=L(function(n,r,t){x(n,t)?n[t]++:n[t]=1}),U=/[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;var $=L(function(n,r,t){n[t?0:1].push(r)},!0);function G(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[0]:H(n,n.length-r)}function H(n,r,t){return f.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))}function Q(n,r,t){return f.call(n,null==r||t?1:r)}function X(n,r,t,e){for(var u=(e=e||[]).length,o=0,i=O(n);o<i;o++){var a=n[o];if(M(a)&&(Kn(a)||Vn(a)))if(r)for(var f=0,c=a.length;f<c;)e[u++]=a[f++];else X(a,r,t,e),u=e.length;else t||(e[u++]=a)}return e}var Y=j(function(n,r){return rn(n,r)});function Z(n,r,t,e){er(r)||(e=t,t=r,r=!1),null!=t&&(t=b(t,e));for(var u=[],o=[],i=0,a=O(n);i<a;i++){var f=n[i],c=t?t(f,i,n):f;r&&!t?(i&&o===c||u.push(f),o=c):t?D(o,c)||(o.push(c),u.push(f)):D(u,f)||u.push(f)}return u}var nn=j(function(n){return Z(X(n,!0,!0))});var rn=j(function(n,r){return r=X(r,!0,!0),R(n,function(n){return!D(r,n)})});function tn(n){for(var r=n&&P(n,O).length||0,t=Array(r),e=0;e<r;e++)t[e]=z(n,e);return t}var en=j(tn);function un(o){return function(n,r,t){r=b(r,t);for(var e=O(n),u=0<o?0:e-1;0<=u&&u<e;u+=o)if(r(n[u],u,n))return u;return-1}}var on=un(1),an=un(-1);function fn(n,r,t,e){for(var u=(t=b(t,e,1))(r),o=0,i=O(n);o<i;){var a=Math.floor((o+i)/2);t(n[a])<u?o=a+1:i=a}return o}function cn(o,i,a){return function(n,r,t){var e=0,u=O(n);if("number"==typeof t)0<o?e=0<=t?t:Math.max(t+u,e):u=0<=t?Math.min(t+1,u):t+u+1;else if(a&&t&&u)return n[t=a(n,r)]===r?t:-1;if(r!=r)return 0<=(t=i(f.call(n,e,u),tr))?t+e:-1;for(t=0<o?e:u-1;0<=t&&t<u;t+=o)if(n[t]===r)return t;return-1}}var ln=cn(1,on,fn),pn=cn(-1,an);function sn(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var o=_(n.prototype),i=n.apply(o,u);return Ln(i)?i:o}var vn=j(function(r,t,e){if(!Cn(r))throw new TypeError("Bind must be called on a function");var u=j(function(n){return sn(r,u,t,this,e.concat(n))});return u}),hn=j(function(u,o){var i=hn.placeholder,a=function(){for(var n=0,r=o.length,t=Array(r),e=0;e<r;e++)t[e]=o[e]===i?arguments[n++]:o[e];for(;n<arguments.length;)t.push(arguments[n++]);return sn(u,a,this,this,t)};return a});hn.placeholder=h;var gn=j(function(n,r){var t=(r=X(r,!1,!1)).length;if(t<1)throw new Error("bindAll must be passed function names");for(;t--;){var e=r[t];n[e]=vn(n[e],n)}});var yn=j(function(n,r,t){return setTimeout(function(){return n.apply(null,t)},r)}),dn=hn(yn,h,1);function mn(n){return function(){return!n.apply(this,arguments)}}function bn(n,r){var t;return function(){return 0<--n&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}}var jn=hn(bn,2),_n=!{toString:null}.propertyIsEnumerable("toString"),wn=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];function xn(n,r){var t=wn.length,e=n.constructor,u=Cn(e)&&e.prototype||i,o="constructor";for(x(n,o)&&!D(r,o)&&r.push(o);t--;)(o=wn[t])in n&&n[o]!==u[o]&&!D(r,o)&&r.push(o)}function Sn(n){if(!Ln(n))return[];if(a)return a(n);var r=[];for(var t in n)x(n,t)&&r.push(t);return _n&&xn(n,r),r}function An(n){if(!Ln(n))return[];var r=[];for(var t in n)r.push(t);return _n&&xn(n,r),r}function On(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e}function Mn(n){for(var r={},t=Sn(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r}function En(n){var r=[];for(var t in n)Cn(n[t])&&r.push(t);return r.sort()}function Nn(f,c){return function(n){var r=arguments.length;if(c&&(n=Object(n)),r<2||null==n)return n;for(var t=1;t<r;t++)for(var e=arguments[t],u=f(e),o=u.length,i=0;i<o;i++){var a=u[i];c&&void 0!==n[a]||(n[a]=e[a])}return n}}var kn=Nn(An),In=Nn(Sn);function Tn(n,r,t){r=b(r,t);for(var e,u=Sn(n),o=0,i=u.length;o<i;o++)if(r(n[e=u[o]],e,n))return e}function Bn(n,r,t){return r in t}var Rn=j(function(n,r){var t={},e=r[0];if(null==n)return t;Cn(e)?(1<r.length&&(e=y(e,r[1])),r=An(n)):(e=Bn,r=X(r,!1,!1),n=Object(n));for(var u=0,o=r.length;u<o;u++){var i=r[u],a=n[i];e(a,i,n)&&(t[i]=a)}return t}),Fn=j(function(n,t){var r,e=t[0];return Cn(e)?(e=mn(e),1<t.length&&(r=t[1])):(t=N(X(t,!1,!1),String),e=function(n,r){return!D(t,r)}),Rn(n,e,r)}),qn=Nn(An,!0);function Dn(n){return Ln(n)?Kn(n)?n.slice():kn({},n):n}function Wn(n,r){var t=Sn(r),e=t.length;if(null==n)return!e;for(var u=Object(n),o=0;o<e;o++){var i=t[o];if(r[i]!==u[i]||!(i in u))return!1}return!0}function zn(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return!1;if(n!=n)return r!=r;var u=typeof n;return("function"===u||"object"===u||"object"==typeof r)&&function(n,r,t,e){n instanceof h&&(n=n._wrapped);r instanceof h&&(r=r._wrapped);var u=s.call(n);if(u!==s.call(r))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+r;case"[object Number]":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case"[object Date]":case"[object Boolean]":return+n==+r;case"[object Symbol]":return p.valueOf.call(n)===p.valueOf.call(r)}var o="[object Array]"===u;if(!o){if("object"!=typeof n||"object"!=typeof r)return!1;var i=n.constructor,a=r.constructor;if(i!==a&&!(Cn(i)&&i instanceof i&&Cn(a)&&a instanceof a)&&"constructor"in n&&"constructor"in r)return!1}e=e||[];var f=(t=t||[]).length;for(;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),o){if((f=n.length)!==r.length)return!1;for(;f--;)if(!zn(n[f],r[f],t,e))return!1}else{var c,l=Sn(n);if(f=l.length,Sn(r).length!==f)return!1;for(;f--;)if(c=l[f],!x(r,c)||!zn(n[c],r[c],t,e))return!1}return t.pop(),e.pop(),!0}(n,r,t,e)}function Pn(r){return function(n){return s.call(n)==="[object "+r+"]"}}var Kn=r||Pn("Array");function Ln(n){var r=typeof n;return"function"===r||"object"===r&&!!n}var Vn=Pn("Arguments"),Cn=Pn("Function"),Jn=Pn("String"),Un=Pn("Number"),$n=Pn("Date"),Gn=Pn("RegExp"),Hn=Pn("Error"),Qn=Pn("Symbol"),Xn=Pn("Map"),Yn=Pn("WeakMap"),Zn=Pn("Set"),nr=Pn("WeakSet");!function(){Vn(arguments)||(Vn=function(n){return x(n,"callee")})}();var rr=n.document&&n.document.childNodes;function tr(n){return Un(n)&&c(n)}function er(n){return!0===n||!1===n||"[object Boolean]"===s.call(n)}function ur(n){return n}function or(r){return Kn(r)?function(n){return S(n,r)}:w(r)}function ir(r){return r=In({},r),function(n){return Wn(n,r)}}function ar(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))}"function"!=typeof/./&&"object"!=typeof Int8Array&&"function"!=typeof rr&&(Cn=function(n){return"function"==typeof n||!1});var fr=Date.now||function(){return(new Date).getTime()},cr={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},lr=Mn(cr);function pr(r){var t=function(n){return r[n]},n="(?:"+Sn(r).join("|")+")",e=RegExp(n),u=RegExp(n,"g");return function(n){return n=null==n?"":""+n,e.test(n)?n.replace(u,t):n}}var sr=pr(cr),vr=pr(lr);var hr=0;var gr=h.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g},yr=/(.)^/,dr={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},mr=/\\|'|\r|\n|\u2028|\u2029/g,br=function(n){return"\\"+dr[n]};function jr(n,r){return n._chain?h(r).chain():r}function _r(t){return E(En(t),function(n){var r=h[n]=t[n];h.prototype[n]=function(){var n=[this._wrapped];return u.apply(n,arguments),jr(this,r.apply(h,n))}}),h}E(["pop","push","reverse","shift","sort","splice","unshift"],function(r){var t=e[r];h.prototype[r]=function(){var n=this._wrapped;return t.apply(n,arguments),"shift"!==r&&"splice"!==r||0!==n.length||delete n[0],jr(this,n)}}),E(["concat","join","slice"],function(n){var r=e[n];h.prototype[n]=function(){return jr(this,r.apply(this._wrapped,arguments))}}),h.prototype.valueOf=h.prototype.toJSON=h.prototype.value=function(){return this._wrapped},h.prototype.toString=function(){return String(this._wrapped)};var wr=_r({default:h,VERSION:g,iteratee:m,restArguments:j,each:E,forEach:E,map:N,collect:N,reduce:I,foldl:I,inject:I,reduceRight:T,foldr:T,find:B,detect:B,filter:R,select:R,reject:function(n,r,t){return R(n,mn(b(r)),t)},every:F,all:F,some:q,any:q,contains:D,includes:D,include:D,invoke:W,pluck:z,where:function(n,r){return R(n,ir(r))},findWhere:function(n,r){return B(n,ir(r))},max:P,min:function(n,e,r){var t,u,o=1/0,i=1/0;if(null==e||"number"==typeof e&&"object"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&t<o&&(o=t);else e=b(e,r),E(n,function(n,r,t){((u=e(n,r,t))<i||u===1/0&&o===1/0)&&(o=n,i=u)});return o},shuffle:function(n){return K(n,1/0)},sample:K,sortBy:function(n,e,r){var u=0;return e=b(e,r),z(N(n,function(n,r,t){return{value:n,index:u++,criteria:e(n,r,t)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(e<t||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),"value")},groupBy:V,indexBy:C,countBy:J,toArray:function(n){return n?Kn(n)?f.call(n):Jn(n)?n.match(U):M(n)?N(n,ur):On(n):[]},size:function(n){return null==n?0:M(n)?n.length:Sn(n).length},partition:$,first:G,head:G,take:G,initial:H,last:function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[n.length-1]:Q(n,Math.max(0,n.length-r))},rest:Q,tail:Q,drop:Q,compact:function(n){return R(n,Boolean)},flatten:function(n,r){return X(n,r,!1)},without:Y,uniq:Z,unique:Z,union:nn,intersection:function(n){for(var r=[],t=arguments.length,e=0,u=O(n);e<u;e++){var o=n[e];if(!D(r,o)){var i;for(i=1;i<t&&D(arguments[i],o);i++);i===t&&r.push(o)}}return r},difference:rn,unzip:tn,zip:en,object:function(n,r){for(var t={},e=0,u=O(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t},findIndex:on,findLastIndex:an,sortedIndex:fn,indexOf:ln,lastIndexOf:pn,range:function(n,r,t){null==r&&(r=n||0,n=0),t||(t=r<n?-1:1);for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),o=0;o<e;o++,n+=t)u[o]=n;return u},chunk:function(n,r){if(null==r||r<1)return[];for(var t=[],e=0,u=n.length;e<u;)t.push(f.call(n,e,e+=r));return t},bind:vn,partial:hn,bindAll:gn,memoize:function(e,u){var o=function(n){var r=o.cache,t=""+(u?u.apply(this,arguments):n);return x(r,t)||(r[t]=e.apply(this,arguments)),r[t]};return o.cache={},o},delay:yn,defer:dn,throttle:function(t,e,u){var o,i,a,f,c=0;u||(u={});var l=function(){c=!1===u.leading?0:fr(),o=null,f=t.apply(i,a),o||(i=a=null)},n=function(){var n=fr();c||!1!==u.leading||(c=n);var r=e-(n-c);return i=this,a=arguments,r<=0||e<r?(o&&(clearTimeout(o),o=null),c=n,f=t.apply(i,a),o||(i=a=null)):o||!1===u.trailing||(o=setTimeout(l,r)),f};return n.cancel=function(){clearTimeout(o),c=0,o=i=a=null},n},debounce:function(t,e,u){var o,i,a=function(n,r){o=null,r&&(i=t.apply(n,r))},n=j(function(n){if(o&&clearTimeout(o),u){var r=!o;o=setTimeout(a,e),r&&(i=t.apply(this,n))}else o=yn(a,e,this,n);return i});return n.cancel=function(){clearTimeout(o),o=null},n},wrap:function(n,r){return hn(r,n)},negate:mn,compose:function(){var t=arguments,e=t.length-1;return function(){for(var n=e,r=t[e].apply(this,arguments);n--;)r=t[n].call(this,r);return r}},after:function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},before:bn,once:jn,keys:Sn,allKeys:An,values:On,mapObject:function(n,r,t){r=b(r,t);for(var e=Sn(n),u=e.length,o={},i=0;i<u;i++){var a=e[i];o[a]=r(n[a],a,n)}return o},pairs:function(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},invert:Mn,functions:En,methods:En,extend:kn,extendOwn:In,assign:In,findKey:Tn,pick:Rn,omit:Fn,defaults:qn,create:function(n,r){var t=_(n);return r&&In(t,r),t},clone:Dn,tap:function(n,r){return r(n),n},isMatch:Wn,isEqual:function(n,r){return zn(n,r)},isEmpty:function(n){return null==n||(M(n)&&(Kn(n)||Jn(n)||Vn(n))?0===n.length:0===Sn(n).length)},isElement:function(n){return!(!n||1!==n.nodeType)},isArray:Kn,isObject:Ln,isArguments:Vn,isFunction:Cn,isString:Jn,isNumber:Un,isDate:$n,isRegExp:Gn,isError:Hn,isSymbol:Qn,isMap:Xn,isWeakMap:Yn,isSet:Zn,isWeakSet:nr,isFinite:function(n){return!Qn(n)&&l(n)&&!c(parseFloat(n))},isNaN:tr,isBoolean:er,isNull:function(n){return null===n},isUndefined:function(n){return void 0===n},has:function(n,r){if(!Kn(r))return x(n,r);for(var t=r.length,e=0;e<t;e++){var u=r[e];if(null==n||!o.call(n,u))return!1;n=n[u]}return!!t},identity:ur,constant:function(n){return function(){return n}},noop:function(){},property:or,propertyOf:function(r){return null==r?function(){}:function(n){return Kn(n)?S(r,n):r[n]}},matcher:ir,matches:ir,times:function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},random:ar,now:fr,escape:sr,unescape:vr,result:function(n,r,t){Kn(r)||(r=[r]);var e=r.length;if(!e)return Cn(t)?t.call(n):t;for(var u=0;u<e;u++){var o=null==n?void 0:n[r[u]];void 0===o&&(o=t,u=e),n=Cn(o)?o.call(n):o}return n},uniqueId:function(n){var r=++hr+"";return n?n+r:r},templateSettings:gr,template:function(o,n,r){!n&&r&&(n=r),n=qn({},n,h.templateSettings);var t,e=RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join("|")+"|$","g"),i=0,a="__p+='";o.replace(e,function(n,r,t,e,u){return a+=o.slice(i,u).replace(mr,br),i=u+n.length,r?a+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":t?a+="'+\n((__t=("+t+"))==null?'':__t)+\n'":e&&(a+="';\n"+e+"\n__p+='"),n}),a+="';\n",n.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{t=new Function(n.variable||"obj","_",a)}catch(n){throw n.source=a,n}var u=function(n){return t.call(this,n,h)},f=n.variable||"obj";return u.source="function("+f+"){\n"+a+"}",u},chain:function(n){var r=h(n);return r._chain=!0,r},mixin:_r});return wr._=wr});
/*!
 * Knockout JavaScript library v3.5.0
 * (c) The Knockout.js team - http://knockoutjs.com/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

(function() {(function(p){var z=this||(0,eval)("this"),w=z.document,R=z.navigator,v=z.jQuery,H=z.JSON;v||"undefined"===typeof jQuery||(v=jQuery);(function(p){"function"===typeof define&&define.amd?define(["exports","require"],p):"object"===typeof exports&&"object"===typeof module?p(module.exports||exports):p(z.ko={})})(function(S,T){function K(a,c){return null===a||typeof a in W?a===c:!1}function X(b,c){var d;return function(){d||(d=a.a.setTimeout(function(){d=p;b()},c))}}function Y(b,c){var d;return function(){clearTimeout(d);
d=a.a.setTimeout(b,c)}}function Z(a,c){c&&"change"!==c?"beforeChange"===c?this.oc(a):this.bb(a,c):this.pc(a)}function aa(a,c){null!==c&&c.s&&c.s()}function ba(a,c){var d=this.pd,e=d[t];e.qa||(this.Pb&&this.kb[c]?(d.tc(c,a,this.kb[c]),this.kb[c]=null,--this.Pb):e.F[c]||d.tc(c,a,e.G?{da:a}:d.Zc(a)),a.Ka&&a.fd())}var a="undefined"!==typeof S?S:{};a.b=function(b,c){for(var d=b.split("."),e=a,f=0;f<d.length-1;f++)e=e[d[f]];e[d[d.length-1]]=c};a.J=function(a,c,d){a[c]=d};a.version="3.5.0";a.b("version",
a.version);a.options={deferUpdates:!1,useOnlyNativeEvents:!1,foreachHidesDestroyed:!1};a.a=function(){function b(a,b){for(var c in a)f.call(a,c)&&b(c,a[c])}function c(a,b){if(b)for(var c in b)f.call(b,c)&&(a[c]=b[c]);return a}function d(a,b){a.__proto__=b;return a}function e(b,c,d,e){var k=b[c].match(n)||[];a.a.C(d.match(n),function(b){a.a.Oa(k,b,e)});b[c]=k.join(" ")}var f=Object.prototype.hasOwnProperty,g={__proto__:[]}instanceof Array,h="function"===typeof Symbol,m={},l={};m[R&&/Firefox\/2/i.test(R.userAgent)?
"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"];m.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" ");b(m,function(a,b){if(b.length)for(var c=0,d=b.length;c<d;c++)l[b[c]]=a});var k={propertychange:!0},q=w&&function(){for(var a=3,b=w.createElement("div"),c=b.getElementsByTagName("i");b.innerHTML="\x3c!--[if gt IE "+ ++a+"]><i></i><![endif]--\x3e",c[0];);return 4<a?a:p}(),n=/\S+/g,r;return{Ic:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],
C:function(a,b,c){for(var d=0,e=a.length;d<e;d++)b.call(c,a[d],d,a)},A:"function"==typeof Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b)}:function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},Lb:function(a,b,c){for(var d=0,e=a.length;d<e;d++)if(b.call(c,a[d],d,a))return a[d];return p},hb:function(b,c){var d=a.a.A(b,c);0<d?b.splice(d,1):0===d&&b.shift()},vc:function(b){var c=[];b&&a.a.C(b,function(b){0>a.a.A(c,b)&&c.push(b)});return c},Mb:function(a,
b,c){var d=[];if(a)for(var e=0,k=a.length;e<k;e++)d.push(b.call(c,a[e],e));return d},fb:function(a,b,c){var d=[];if(a)for(var e=0,k=a.length;e<k;e++)b.call(c,a[e],e)&&d.push(a[e]);return d},gb:function(a,b){if(b instanceof Array)a.push.apply(a,b);else for(var c=0,d=b.length;c<d;c++)a.push(b[c]);return a},Oa:function(b,c,d){var e=a.a.A(a.a.$b(b),c);0>e?d&&b.push(c):d||b.splice(e,1)},Ba:g,extend:c,setPrototypeOf:d,zb:g?d:c,O:b,Ha:function(a,b,c){if(!a)return a;var d={},e;for(e in a)f.call(a,e)&&(d[e]=
b.call(c,a[e],e,a));return d},Sb:function(b){for(;b.firstChild;)a.removeNode(b.firstChild)},Xb:function(b){b=a.a.la(b);for(var c=(b[0]&&b[0].ownerDocument||w).createElement("div"),d=0,e=b.length;d<e;d++)c.appendChild(a.na(b[d]));return c},Ca:function(b,c){for(var d=0,e=b.length,k=[];d<e;d++){var f=b[d].cloneNode(!0);k.push(c?a.na(f):f)}return k},ua:function(b,c){a.a.Sb(b);if(c)for(var d=0,e=c.length;d<e;d++)b.appendChild(c[d])},Wc:function(b,c){var d=b.nodeType?[b]:b;if(0<d.length){for(var e=d[0],
k=e.parentNode,f=0,l=c.length;f<l;f++)k.insertBefore(c[f],e);f=0;for(l=d.length;f<l;f++)a.removeNode(d[f])}},Ua:function(a,b){if(a.length){for(b=8===b.nodeType&&b.parentNode||b;a.length&&a[0].parentNode!==b;)a.splice(0,1);for(;1<a.length&&a[a.length-1].parentNode!==b;)a.length--;if(1<a.length){var c=a[0],d=a[a.length-1];for(a.length=0;c!==d;)a.push(c),c=c.nextSibling;a.push(d)}}return a},Yc:function(a,b){7>q?a.setAttribute("selected",b):a.selected=b},Cb:function(a){return null===a||a===p?"":a.trim?
a.trim():a.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},Td:function(a,b){a=a||"";return b.length>a.length?!1:a.substring(0,b.length)===b},ud:function(a,b){if(a===b)return!0;if(11===a.nodeType)return!1;if(b.contains)return b.contains(1!==a.nodeType?a.parentNode:a);if(b.compareDocumentPosition)return 16==(b.compareDocumentPosition(a)&16);for(;a&&a!=b;)a=a.parentNode;return!!a},Rb:function(b){return a.a.ud(b,b.ownerDocument.documentElement)},jd:function(b){return!!a.a.Lb(b,a.a.Rb)},P:function(a){return a&&
a.tagName&&a.tagName.toLowerCase()},zc:function(b){return a.onError?function(){try{return b.apply(this,arguments)}catch(c){throw a.onError&&a.onError(c),c;}}:b},setTimeout:function(b,c){return setTimeout(a.a.zc(b),c)},Fc:function(b){setTimeout(function(){a.onError&&a.onError(b);throw b;},0)},H:function(b,c,d){var e=a.a.zc(d);d=k[c];if(a.options.useOnlyNativeEvents||d||!v)if(d||"function"!=typeof b.addEventListener)if("undefined"!=typeof b.attachEvent){var f=function(a){e.call(b,a)},l="on"+c;b.attachEvent(l,
f);a.a.I.za(b,function(){b.detachEvent(l,f)})}else throw Error("Browser doesn't support addEventListener or attachEvent");else b.addEventListener(c,e,!1);else r||(r="function"==typeof v(b).on?"on":"bind"),v(b)[r](c,e)},Fb:function(b,c){if(!b||!b.nodeType)throw Error("element must be a DOM node when calling triggerEvent");var d;"input"===a.a.P(b)&&b.type&&"click"==c.toLowerCase()?(d=b.type,d="checkbox"==d||"radio"==d):d=!1;if(a.options.useOnlyNativeEvents||!v||d)if("function"==typeof w.createEvent)if("function"==
typeof b.dispatchEvent)d=w.createEvent(l[c]||"HTMLEvents"),d.initEvent(c,!0,!0,z,0,0,0,0,0,!1,!1,!1,!1,0,b),b.dispatchEvent(d);else throw Error("The supplied element doesn't support dispatchEvent");else if(d&&b.click)b.click();else if("undefined"!=typeof b.fireEvent)b.fireEvent("on"+c);else throw Error("Browser doesn't support triggering events");else v(b).trigger(c)},c:function(b){return a.N(b)?b():b},$b:function(b){return a.N(b)?b.w():b},Eb:function(b,c,d){var k;c&&("object"===typeof b.classList?
(k=b.classList[d?"add":"remove"],a.a.C(c.match(n),function(a){k.call(b.classList,a)})):"string"===typeof b.className.baseVal?e(b.className,"baseVal",c,d):e(b,"className",c,d))},Ab:function(b,c){var d=a.a.c(c);if(null===d||d===p)d="";var e=a.h.firstChild(b);!e||3!=e.nodeType||a.h.nextSibling(e)?a.h.ua(b,[b.ownerDocument.createTextNode(d)]):e.data=d;a.a.zd(b)},Xc:function(a,b){a.name=b;if(7>=q)try{var c=a.name.replace(/[&<>'"]/g,function(a){return"&#"+a.charCodeAt(0)+";"});a.mergeAttributes(w.createElement("<input name='"+
c+"'/>"),!1)}catch(d){}},zd:function(a){9<=q&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},vd:function(a){if(q){var b=a.style.width;a.style.width=0;a.style.width=b}},Od:function(b,c){b=a.a.c(b);c=a.a.c(c);for(var d=[],e=b;e<=c;e++)d.push(e);return d},la:function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b},Da:function(a){return h?Symbol(a):a},Xd:6===q,Yd:7===q,W:q,Kc:function(b,c){for(var d=a.a.la(b.getElementsByTagName("input")).concat(a.a.la(b.getElementsByTagName("textarea"))),
e="string"==typeof c?function(a){return a.name===c}:function(a){return c.test(a.name)},k=[],f=d.length-1;0<=f;f--)e(d[f])&&k.push(d[f]);return k},Md:function(b){return"string"==typeof b&&(b=a.a.Cb(b))?H&&H.parse?H.parse(b):(new Function("return "+b))():null},fc:function(b,c,d){if(!H||!H.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");
return H.stringify(a.a.c(b),c,d)},Nd:function(c,d,e){e=e||{};var k=e.params||{},f=e.includeFields||this.Ic,l=c;if("object"==typeof c&&"form"===a.a.P(c))for(var l=c.action,h=f.length-1;0<=h;h--)for(var g=a.a.Kc(c,f[h]),m=g.length-1;0<=m;m--)k[g[m].name]=g[m].value;d=a.a.c(d);var n=w.createElement("form");n.style.display="none";n.action=l;n.method="post";for(var q in d)c=w.createElement("input"),c.type="hidden",c.name=q,c.value=a.a.fc(a.a.c(d[q])),n.appendChild(c);b(k,function(a,b){var c=w.createElement("input");
c.type="hidden";c.name=a;c.value=b;n.appendChild(c)});w.body.appendChild(n);e.submitter?e.submitter(n):n.submit();setTimeout(function(){n.parentNode.removeChild(n)},0)}}}();a.b("utils",a.a);a.b("utils.arrayForEach",a.a.C);a.b("utils.arrayFirst",a.a.Lb);a.b("utils.arrayFilter",a.a.fb);a.b("utils.arrayGetDistinctValues",a.a.vc);a.b("utils.arrayIndexOf",a.a.A);a.b("utils.arrayMap",a.a.Mb);a.b("utils.arrayPushAll",a.a.gb);a.b("utils.arrayRemoveItem",a.a.hb);a.b("utils.cloneNodes",a.a.Ca);a.b("utils.createSymbolOrString",
a.a.Da);a.b("utils.extend",a.a.extend);a.b("utils.fieldsIncludedWithJsonPost",a.a.Ic);a.b("utils.getFormFields",a.a.Kc);a.b("utils.objectMap",a.a.Ha);a.b("utils.peekObservable",a.a.$b);a.b("utils.postJson",a.a.Nd);a.b("utils.parseJson",a.a.Md);a.b("utils.registerEventHandler",a.a.H);a.b("utils.stringifyJson",a.a.fc);a.b("utils.range",a.a.Od);a.b("utils.toggleDomNodeCssClass",a.a.Eb);a.b("utils.triggerEvent",a.a.Fb);a.b("utils.unwrapObservable",a.a.c);a.b("utils.objectForEach",a.a.O);a.b("utils.addOrRemoveItem",
a.a.Oa);a.b("utils.setTextContent",a.a.Ab);a.b("unwrap",a.a.c);Function.prototype.bind||(Function.prototype.bind=function(a){var c=this;if(1===arguments.length)return function(){return c.apply(a,arguments)};var d=Array.prototype.slice.call(arguments,1);return function(){var e=d.slice(0);e.push.apply(e,arguments);return c.apply(a,e)}});a.a.g=new function(){var b=0,c="__ko__"+(new Date).getTime(),d={},e,f;a.a.W?(e=function(a,e){var f=a[c];if(!f||"null"===f||!d[f]){if(!e)return p;f=a[c]="ko"+b++;d[f]=
{}}return d[f]},f=function(a){var b=a[c];return b?(delete d[b],a[c]=null,!0):!1}):(e=function(a,b){var d=a[c];!d&&b&&(d=a[c]={});return d},f=function(a){return a[c]?(delete a[c],!0):!1});return{get:function(a,b){var c=e(a,!1);return c&&c[b]},set:function(a,b,c){(a=e(a,c!==p))&&(a[b]=c)},Tb:function(a,b,c){a=e(a,!0);return a[b]||(a[b]=c)},clear:f,Z:function(){return b++ +c}}};a.b("utils.domData",a.a.g);a.b("utils.domData.clear",a.a.g.clear);a.a.I=new function(){function b(b,c){var d=a.a.g.get(b,e);
d===p&&c&&(d=[],a.a.g.set(b,e,d));return d}function c(c){var e=b(c,!1);if(e)for(var e=e.slice(0),f=0;f<e.length;f++)e[f](c);a.a.g.clear(c);a.a.I.cleanExternalData(c);g[c.nodeType]&&d(c.childNodes,!0)}function d(b,d){for(var e=[],k,f=0;f<b.length;f++)if(!d||8===b[f].nodeType)if(c(e[e.length]=k=b[f]),b[f]!==k)for(;f--&&-1==a.a.A(e,b[f]););}var e=a.a.g.Z(),f={1:!0,8:!0,9:!0},g={1:!0,9:!0};return{za:function(a,c){if("function"!=typeof c)throw Error("Callback must be a function");b(a,!0).push(c)},xb:function(c,
d){var f=b(c,!1);f&&(a.a.hb(f,d),0==f.length&&a.a.g.set(c,e,p))},na:function(a){f[a.nodeType]&&(c(a),g[a.nodeType]&&d(a.getElementsByTagName("*")));return a},removeNode:function(b){a.na(b);b.parentNode&&b.parentNode.removeChild(b)},cleanExternalData:function(a){v&&"function"==typeof v.cleanData&&v.cleanData([a])}}};a.na=a.a.I.na;a.removeNode=a.a.I.removeNode;a.b("cleanNode",a.na);a.b("removeNode",a.removeNode);a.b("utils.domNodeDisposal",a.a.I);a.b("utils.domNodeDisposal.addDisposeCallback",a.a.I.za);
a.b("utils.domNodeDisposal.removeDisposeCallback",a.a.I.xb);(function(){var b=[0,"",""],c=[1,"<table>","</table>"],d=[3,"<table><tbody><tr>","</tr></tbody></table>"],e=[1,"<select multiple='multiple'>","</select>"],f={thead:c,tbody:c,tfoot:c,tr:[2,"<table><tbody>","</tbody></table>"],td:d,th:d,option:e,optgroup:e},g=8>=a.a.W;a.a.ta=function(c,d){var e;if(v)if(v.parseHTML)e=v.parseHTML(c,d)||[];else{if((e=v.clean([c],d))&&e[0]){for(var k=e[0];k.parentNode&&11!==k.parentNode.nodeType;)k=k.parentNode;
k.parentNode&&k.parentNode.removeChild(k)}}else{(e=d)||(e=w);var k=e.parentWindow||e.defaultView||z,q=a.a.Cb(c).toLowerCase(),n=e.createElement("div"),r;r=(q=q.match(/^(?:\x3c!--.*?--\x3e\s*?)*?<([a-z]+)[\s>]/))&&f[q[1]]||b;q=r[0];r="ignored<div>"+r[1]+c+r[2]+"</div>";"function"==typeof k.innerShiv?n.appendChild(k.innerShiv(r)):(g&&e.body.appendChild(n),n.innerHTML=r,g&&n.parentNode.removeChild(n));for(;q--;)n=n.lastChild;e=a.a.la(n.lastChild.childNodes)}return e};a.a.Ld=function(b,c){var d=a.a.ta(b,
c);return d.length&&d[0].parentElement||a.a.Xb(d)};a.a.dc=function(b,c){a.a.Sb(b);c=a.a.c(c);if(null!==c&&c!==p)if("string"!=typeof c&&(c=c.toString()),v)v(b).html(c);else for(var d=a.a.ta(c,b.ownerDocument),e=0;e<d.length;e++)b.appendChild(d[e])}})();a.b("utils.parseHtmlFragment",a.a.ta);a.b("utils.setHtml",a.a.dc);a.aa=function(){function b(c,e){if(c)if(8==c.nodeType){var f=a.aa.Tc(c.nodeValue);null!=f&&e.push({sd:c,Jd:f})}else if(1==c.nodeType)for(var f=0,g=c.childNodes,h=g.length;f<h;f++)b(g[f],
e)}var c={};return{Wb:function(a){if("function"!=typeof a)throw Error("You can only pass a function to ko.memoization.memoize()");var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);c[b]=a;return"\x3c!--[ko_memo:"+b+"]--\x3e"},ad:function(a,b){var f=c[a];if(f===p)throw Error("Couldn't find any memo with ID "+a+". Perhaps it's already been unmemoized.");try{return f.apply(null,b||[]),!0}finally{delete c[a]}},bd:function(c,e){var f=
[];b(c,f);for(var g=0,h=f.length;g<h;g++){var m=f[g].sd,l=[m];e&&a.a.gb(l,e);a.aa.ad(f[g].Jd,l);m.nodeValue="";m.parentNode&&m.parentNode.removeChild(m)}},Tc:function(a){return(a=a.match(/^\[ko_memo\:(.*?)\]$/))?a[1]:null}}}();a.b("memoization",a.aa);a.b("memoization.memoize",a.aa.Wb);a.b("memoization.unmemoize",a.aa.ad);a.b("memoization.parseMemoText",a.aa.Tc);a.b("memoization.unmemoizeDomNodeAndDescendants",a.aa.bd);a.ma=function(){function b(){if(f)for(var b=f,c=0,d;h<f;)if(d=e[h++]){if(h>b){if(5E3<=
++c){h=f;a.a.Fc(Error("'Too much recursion' after processing "+c+" task groups."));break}b=f}try{d()}catch(g){a.a.Fc(g)}}}function c(){b();h=f=e.length=0}var d,e=[],f=0,g=1,h=0;z.MutationObserver?d=function(a){var b=w.createElement("div");(new MutationObserver(a)).observe(b,{attributes:!0});return function(){b.classList.toggle("foo")}}(c):d=w&&"onreadystatechange"in w.createElement("script")?function(a){var b=w.createElement("script");b.onreadystatechange=function(){b.onreadystatechange=null;w.documentElement.removeChild(b);
b=null;a()};w.documentElement.appendChild(b)}:function(a){setTimeout(a,0)};return{scheduler:d,yb:function(b){f||a.ma.scheduler(c);e[f++]=b;return g++},cancel:function(a){a=a-(g-f);a>=h&&a<f&&(e[a]=null)},resetForTesting:function(){var a=f-h;h=f=e.length=0;return a},Rd:b}}();a.b("tasks",a.ma);a.b("tasks.schedule",a.ma.yb);a.b("tasks.runEarly",a.ma.Rd);a.Ta={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.$({read:b,write:function(e){clearTimeout(d);d=a.a.setTimeout(function(){b(e)},
c)}})},rateLimit:function(a,c){var d,e,f;"number"==typeof c?d=c:(d=c.timeout,e=c.method);a.Hb=!1;f="function"==typeof e?e:"notifyWhenChangesStop"==e?Y:X;a.tb(function(a){return f(a,d,c)})},deferred:function(b,c){if(!0!==c)throw Error("The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled.");b.Hb||(b.Hb=!0,b.tb(function(c){var e,f=!1;return function(){if(!f){a.ma.cancel(e);e=a.ma.yb(c);try{f=!0,b.notifySubscribers(p,"dirty")}finally{f=
!1}}}}))},notify:function(a,c){a.equalityComparer="always"==c?null:K}};var W={undefined:1,"boolean":1,number:1,string:1};a.b("extenders",a.Ta);a.gc=function(b,c,d){this.da=b;this.kc=c;this.lc=d;this.Ib=!1;this.ab=this.Jb=null;a.J(this,"dispose",this.s);a.J(this,"disposeWhenNodeIsRemoved",this.l)};a.gc.prototype.s=function(){this.Ib||(this.ab&&a.a.I.xb(this.Jb,this.ab),this.Ib=!0,this.lc(),this.da=this.kc=this.lc=this.Jb=this.ab=null)};a.gc.prototype.l=function(b){this.Jb=b;a.a.I.za(b,this.ab=this.s.bind(this))};
a.R=function(){a.a.zb(this,D);D.ob(this)};var D={ob:function(a){a.S={change:[]};a.rc=1},subscribe:function(b,c,d){var e=this;d=d||"change";var f=new a.gc(e,c?b.bind(c):b,function(){a.a.hb(e.S[d],f);e.cb&&e.cb(d)});e.Qa&&e.Qa(d);e.S[d]||(e.S[d]=[]);e.S[d].push(f);return f},notifySubscribers:function(b,c){c=c||"change";"change"===c&&this.Gb();if(this.Wa(c)){var d="change"===c&&this.dd||this.S[c].slice(0);try{a.v.wc();for(var e=0,f;f=d[e];++e)f.Ib||f.kc(b)}finally{a.v.end()}}},mb:function(){return this.rc},
Cd:function(a){return this.mb()!==a},Gb:function(){++this.rc},tb:function(b){var c=this,d=a.N(c),e,f,g,h,m;c.bb||(c.bb=c.notifySubscribers,c.notifySubscribers=Z);var l=b(function(){c.Ka=!1;d&&h===c&&(h=c.mc?c.mc():c());var a=f||m&&c.qb(g,h);m=f=e=!1;a&&c.bb(g=h)});c.pc=function(a,b){b&&c.Ka||(m=!b);c.dd=c.S.change.slice(0);c.Ka=e=!0;h=a;l()};c.oc=function(a){e||(g=a,c.bb(a,"beforeChange"))};c.qc=function(){m=!0};c.fd=function(){c.qb(g,c.w(!0))&&(f=!0)}},Wa:function(a){return this.S[a]&&this.S[a].length},
Ad:function(b){if(b)return this.S[b]&&this.S[b].length||0;var c=0;a.a.O(this.S,function(a,b){"dirty"!==a&&(c+=b.length)});return c},qb:function(a,c){return!this.equalityComparer||!this.equalityComparer(a,c)},toString:function(){return"[object Object]"},extend:function(b){var c=this;b&&a.a.O(b,function(b,e){var f=a.Ta[b];"function"==typeof f&&(c=f(c,e)||c)});return c}};a.J(D,"init",D.ob);a.J(D,"subscribe",D.subscribe);a.J(D,"extend",D.extend);a.J(D,"getSubscriptionsCount",D.Ad);a.a.Ba&&a.a.setPrototypeOf(D,
Function.prototype);a.R.fn=D;a.Pc=function(a){return null!=a&&"function"==typeof a.subscribe&&"function"==typeof a.notifySubscribers};a.b("subscribable",a.R);a.b("isSubscribable",a.Pc);a.U=a.v=function(){function b(a){d.push(e);e=a}function c(){e=d.pop()}var d=[],e,f=0;return{wc:b,end:c,ac:function(b){if(e){if(!a.Pc(b))throw Error("Only subscribable things can act as dependencies");e.nd.call(e.od,b,b.ed||(b.ed=++f))}},K:function(a,d,e){try{return b(),a.apply(d,e||[])}finally{c()}},pa:function(){if(e)return e.o.pa()},
Va:function(){if(e)return e.o.Va()},rb:function(){if(e)return e.rb},o:function(){if(e)return e.o}}}();a.b("computedContext",a.U);a.b("computedContext.getDependenciesCount",a.U.pa);a.b("computedContext.getDependencies",a.U.Va);a.b("computedContext.isInitial",a.U.rb);a.b("computedContext.registerDependency",a.U.ac);a.b("ignoreDependencies",a.Wd=a.v.K);var I=a.a.Da("_latestValue");a.sa=function(b){function c(){if(0<arguments.length)return c.qb(c[I],arguments[0])&&(c.xa(),c[I]=arguments[0],c.wa()),this;
a.v.ac(c);return c[I]}c[I]=b;a.a.Ba||a.a.extend(c,a.R.fn);a.R.fn.ob(c);a.a.zb(c,F);a.options.deferUpdates&&a.Ta.deferred(c,!0);return c};var F={equalityComparer:K,w:function(){return this[I]},wa:function(){this.notifySubscribers(this[I],"spectate");this.notifySubscribers(this[I])},xa:function(){this.notifySubscribers(this[I],"beforeChange")}};a.a.Ba&&a.a.setPrototypeOf(F,a.R.fn);var G=a.sa.Na="__ko_proto__";F[G]=a.sa;a.N=function(b){if((b="function"==typeof b&&b[G])&&b!==F[G]&&b!==a.o.fn[G])throw Error("Invalid object that looks like an observable; possibly from another Knockout instance");
return!!b};a.Ya=function(b){return"function"==typeof b&&(b[G]===F[G]||b[G]===a.o.fn[G]&&b.Mc)};a.b("observable",a.sa);a.b("isObservable",a.N);a.b("isWriteableObservable",a.Ya);a.b("isWritableObservable",a.Ya);a.b("observable.fn",F);a.J(F,"peek",F.w);a.J(F,"valueHasMutated",F.wa);a.J(F,"valueWillMutate",F.xa);a.Ia=function(b){b=b||[];if("object"!=typeof b||!("length"in b))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");b=a.sa(b);a.a.zb(b,
a.Ia.fn);return b.extend({trackArrayChanges:!0})};a.Ia.fn={remove:function(b){for(var c=this.w(),d=[],e="function"!=typeof b||a.N(b)?function(a){return a===b}:b,f=0;f<c.length;f++){var g=c[f];if(e(g)){0===d.length&&this.xa();if(c[f]!==g)throw Error("Array modified during remove; cannot remove item");d.push(g);c.splice(f,1);f--}}d.length&&this.wa();return d},removeAll:function(b){if(b===p){var c=this.w(),d=c.slice(0);this.xa();c.splice(0,c.length);this.wa();return d}return b?this.remove(function(c){return 0<=
a.a.A(b,c)}):[]},destroy:function(b){var c=this.w(),d="function"!=typeof b||a.N(b)?function(a){return a===b}:b;this.xa();for(var e=c.length-1;0<=e;e--){var f=c[e];d(f)&&(f._destroy=!0)}this.wa()},destroyAll:function(b){return b===p?this.destroy(function(){return!0}):b?this.destroy(function(c){return 0<=a.a.A(b,c)}):[]},indexOf:function(b){var c=this();return a.a.A(c,b)},replace:function(a,c){var d=this.indexOf(a);0<=d&&(this.xa(),this.w()[d]=c,this.wa())},sorted:function(a){var c=this().slice(0);
return a?c.sort(a):c.sort()},reversed:function(){return this().slice(0).reverse()}};a.a.Ba&&a.a.setPrototypeOf(a.Ia.fn,a.sa.fn);a.a.C("pop push reverse shift sort splice unshift".split(" "),function(b){a.Ia.fn[b]=function(){var a=this.w();this.xa();this.yc(a,b,arguments);var d=a[b].apply(a,arguments);this.wa();return d===a?this:d}});a.a.C(["slice"],function(b){a.Ia.fn[b]=function(){var a=this();return a[b].apply(a,arguments)}});a.Oc=function(b){return a.N(b)&&"function"==typeof b.remove&&"function"==
typeof b.push};a.b("observableArray",a.Ia);a.b("isObservableArray",a.Oc);a.Ta.trackArrayChanges=function(b,c){function d(){function c(){if(h){var d=[].concat(b.w()||[]);if(b.Wa("arrayChange")){var e;if(!f||1<h)f=a.a.Ob(m,d,b.Nb);e=f}m=d;f=null;h=0;e&&e.length&&b.notifySubscribers(e,"arrayChange")}}e?c():(e=!0,l=b.notifySubscribers,b.notifySubscribers=function(a,b){b&&"change"!==b||++h;return l.apply(this,arguments)},m=[].concat(b.w()||[]),f=null,g=b.subscribe(c))}b.Nb={};c&&"object"==typeof c&&a.a.extend(b.Nb,
c);b.Nb.sparse=!0;if(!b.yc){var e=!1,f=null,g,h=0,m,l,k=b.Qa,q=b.cb;b.Qa=function(a){k&&k.call(b,a);"arrayChange"===a&&d()};b.cb=function(a){q&&q.call(b,a);"arrayChange"!==a||b.Wa("arrayChange")||(l&&(b.notifySubscribers=l,l=p),g&&g.s(),g=null,e=!1,m=p)};b.yc=function(b,c,d){function k(a,b,c){return l[l.length]={status:a,value:b,index:c}}if(e&&!h){var l=[],g=b.length,q=d.length,m=0;switch(c){case "push":m=g;case "unshift":for(c=0;c<q;c++)k("added",d[c],m+c);break;case "pop":m=g-1;case "shift":g&&
k("deleted",b[m],m);break;case "splice":c=Math.min(Math.max(0,0>d[0]?g+d[0]:d[0]),g);for(var g=1===q?g:Math.min(c+(d[1]||0),g),q=c+q-2,m=Math.max(g,q),U=[],L=[],p=2;c<m;++c,++p)c<g&&L.push(k("deleted",b[c],c)),c<q&&U.push(k("added",d[p],c));a.a.Jc(L,U);break;default:return}f=l}}}};var t=a.a.Da("_state");a.o=a.$=function(b,c,d){function e(){if(0<arguments.length){if("function"===typeof f)f.apply(g.lb,arguments);else throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");
return this}g.qa||a.v.ac(e);(g.ka||g.G&&e.Xa())&&e.ha();return g.X}"object"===typeof b?d=b:(d=d||{},b&&(d.read=b));if("function"!=typeof d.read)throw Error("Pass a function that returns the value of the ko.computed");var f=d.write,g={X:p,ra:!0,ka:!0,pb:!1,hc:!1,qa:!1,vb:!1,G:!1,Vc:d.read,lb:c||d.owner,l:d.disposeWhenNodeIsRemoved||d.l||null,Sa:d.disposeWhen||d.Sa,Qb:null,F:{},V:0,Hc:null};e[t]=g;e.Mc="function"===typeof f;a.a.Ba||a.a.extend(e,a.R.fn);a.R.fn.ob(e);a.a.zb(e,C);d.pure?(g.vb=!0,g.G=!0,
a.a.extend(e,da)):d.deferEvaluation&&a.a.extend(e,ea);a.options.deferUpdates&&a.Ta.deferred(e,!0);g.l&&(g.hc=!0,g.l.nodeType||(g.l=null));g.G||d.deferEvaluation||e.ha();g.l&&e.ja()&&a.a.I.za(g.l,g.Qb=function(){e.s()});return e};var C={equalityComparer:K,pa:function(){return this[t].V},Va:function(){var b=[];a.a.O(this[t].F,function(a,d){b[d.La]=d.da});return b},Ub:function(b){if(!this[t].V)return!1;var c=this.Va();return-1!==a.a.A(c,b)?!0:!!a.a.Lb(c,function(a){return a.Ub&&a.Ub(b)})},tc:function(a,
c,d){if(this[t].vb&&c===this)throw Error("A 'pure' computed must not be called recursively");this[t].F[a]=d;d.La=this[t].V++;d.Ma=c.mb()},Xa:function(){var a,c,d=this[t].F;for(a in d)if(Object.prototype.hasOwnProperty.call(d,a)&&(c=d[a],this.Ja&&c.da.Ka||c.da.Cd(c.Ma)))return!0},Id:function(){this.Ja&&!this[t].pb&&this.Ja(!1)},ja:function(){var a=this[t];return a.ka||0<a.V},Qd:function(){this.Ka?this[t].ka&&(this[t].ra=!0):this.Gc()},Zc:function(a){if(a.Hb){var c=a.subscribe(this.Id,this,"dirty"),
d=a.subscribe(this.Qd,this);return{da:a,s:function(){c.s();d.s()}}}return a.subscribe(this.Gc,this)},Gc:function(){var b=this,c=b.throttleEvaluation;c&&0<=c?(clearTimeout(this[t].Hc),this[t].Hc=a.a.setTimeout(function(){b.ha(!0)},c)):b.Ja?b.Ja(!0):b.ha(!0)},ha:function(b){var c=this[t],d=c.Sa,e=!1;if(!c.pb&&!c.qa){if(c.l&&!a.a.Rb(c.l)||d&&d()){if(!c.hc){this.s();return}}else c.hc=!1;c.pb=!0;try{e=this.yd(b)}finally{c.pb=!1}return e}},yd:function(b){var c=this[t],d=!1,e=c.vb?p:!c.V,d={pd:this,kb:c.F,
Pb:c.V};a.v.wc({od:d,nd:ba,o:this,rb:e});c.F={};c.V=0;var f=this.xd(c,d);c.V?d=this.qb(c.X,f):(this.s(),d=!0);d&&(c.G?this.Gb():this.notifySubscribers(c.X,"beforeChange"),c.X=f,this.notifySubscribers(c.X,"spectate"),!c.G&&b&&this.notifySubscribers(c.X),this.qc&&this.qc());e&&this.notifySubscribers(c.X,"awake");return d},xd:function(b,c){try{var d=b.Vc;return b.lb?d.call(b.lb):d()}finally{a.v.end(),c.Pb&&!b.G&&a.a.O(c.kb,aa),b.ra=b.ka=!1}},w:function(a){var c=this[t];(c.ka&&(a||!c.V)||c.G&&this.Xa())&&
this.ha();return c.X},tb:function(b){a.R.fn.tb.call(this,b);this.mc=function(){this[t].G||(this[t].ra?this.ha():this[t].ka=!1);return this[t].X};this.Ja=function(a){this.oc(this[t].X);this[t].ka=!0;a&&(this[t].ra=!0);this.pc(this,!a)}},s:function(){var b=this[t];!b.G&&b.F&&a.a.O(b.F,function(a,b){b.s&&b.s()});b.l&&b.Qb&&a.a.I.xb(b.l,b.Qb);b.F=p;b.V=0;b.qa=!0;b.ra=!1;b.ka=!1;b.G=!1;b.l=p;b.Sa=p;b.Vc=p;this.Mc||(b.lb=p)}},da={Qa:function(b){var c=this,d=c[t];if(!d.qa&&d.G&&"change"==b){d.G=!1;if(d.ra||
c.Xa())d.F=null,d.V=0,c.ha()&&c.Gb();else{var e=[];a.a.O(d.F,function(a,b){e[b.La]=a});a.a.C(e,function(a,b){var e=d.F[a],m=c.Zc(e.da);m.La=b;m.Ma=e.Ma;d.F[a]=m});c.Xa()&&c.ha()&&c.Gb()}d.qa||c.notifySubscribers(d.X,"awake")}},cb:function(b){var c=this[t];c.qa||"change"!=b||this.Wa("change")||(a.a.O(c.F,function(a,b){b.s&&(c.F[a]={da:b.da,La:b.La,Ma:b.Ma},b.s())}),c.G=!0,this.notifySubscribers(p,"asleep"))},mb:function(){var b=this[t];b.G&&(b.ra||this.Xa())&&this.ha();return a.R.fn.mb.call(this)}},
ea={Qa:function(a){"change"!=a&&"beforeChange"!=a||this.w()}};a.a.Ba&&a.a.setPrototypeOf(C,a.R.fn);var N=a.sa.Na;C[N]=a.o;a.Nc=function(a){return"function"==typeof a&&a[N]===C[N]};a.Ed=function(b){return a.Nc(b)&&b[t]&&b[t].vb};a.b("computed",a.o);a.b("dependentObservable",a.o);a.b("isComputed",a.Nc);a.b("isPureComputed",a.Ed);a.b("computed.fn",C);a.J(C,"peek",C.w);a.J(C,"dispose",C.s);a.J(C,"isActive",C.ja);a.J(C,"getDependenciesCount",C.pa);a.J(C,"getDependencies",C.Va);a.wb=function(b,c){if("function"===
typeof b)return a.o(b,c,{pure:!0});b=a.a.extend({},b);b.pure=!0;return a.o(b,c)};a.b("pureComputed",a.wb);(function(){function b(a,f,g){g=g||new d;a=f(a);if("object"!=typeof a||null===a||a===p||a instanceof RegExp||a instanceof Date||a instanceof String||a instanceof Number||a instanceof Boolean)return a;var h=a instanceof Array?[]:{};g.save(a,h);c(a,function(c){var d=f(a[c]);switch(typeof d){case "boolean":case "number":case "string":case "function":h[c]=d;break;case "object":case "undefined":var k=
g.get(d);h[c]=k!==p?k:b(d,f,g)}});return h}function c(a,b){if(a instanceof Array){for(var c=0;c<a.length;c++)b(c);"function"==typeof a.toJSON&&b("toJSON")}else for(c in a)b(c)}function d(){this.keys=[];this.values=[]}a.$c=function(c){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");return b(c,function(b){for(var c=0;a.N(b)&&10>c;c++)b=b();return b})};a.toJSON=function(b,c,d){b=a.$c(b);return a.a.fc(b,c,d)};d.prototype={constructor:d,save:function(b,
c){var d=a.a.A(this.keys,b);0<=d?this.values[d]=c:(this.keys.push(b),this.values.push(c))},get:function(b){b=a.a.A(this.keys,b);return 0<=b?this.values[b]:p}}})();a.b("toJS",a.$c);a.b("toJSON",a.toJSON);a.Vd=function(b,c,d){function e(c){var e=a.wb(b,d).extend({Ga:"always"}),h=e.subscribe(function(a){a&&(h.s(),c(a))});e.notifySubscribers(e.w());return h}return"function"!==typeof Promise||c?e(c.bind(d)):new Promise(e)};a.b("when",a.Vd);(function(){a.u={L:function(b){switch(a.a.P(b)){case "option":return!0===
b.__ko__hasDomDataOptionValue__?a.a.g.get(b,a.f.options.Yb):7>=a.a.W?b.getAttributeNode("value")&&b.getAttributeNode("value").specified?b.value:b.text:b.value;case "select":return 0<=b.selectedIndex?a.u.L(b.options[b.selectedIndex]):p;default:return b.value}},ya:function(b,c,d){switch(a.a.P(b)){case "option":"string"===typeof c?(a.a.g.set(b,a.f.options.Yb,p),"__ko__hasDomDataOptionValue__"in b&&delete b.__ko__hasDomDataOptionValue__,b.value=c):(a.a.g.set(b,a.f.options.Yb,c),b.__ko__hasDomDataOptionValue__=
!0,b.value="number"===typeof c?c:"");break;case "select":if(""===c||null===c)c=p;for(var e=-1,f=0,g=b.options.length,h;f<g;++f)if(h=a.u.L(b.options[f]),h==c||""===h&&c===p){e=f;break}if(d||0<=e||c===p&&1<b.size)b.selectedIndex=e,6===a.a.W&&a.a.setTimeout(function(){b.selectedIndex=e},0);break;default:if(null===c||c===p)c="";b.value=c}}}})();a.b("selectExtensions",a.u);a.b("selectExtensions.readValue",a.u.L);a.b("selectExtensions.writeValue",a.u.ya);a.m=function(){function b(b){b=a.a.Cb(b);123===b.charCodeAt(0)&&
(b=b.slice(1,-1));b+="\n,";var c=[],d=b.match(e),q,n=[],h=0;if(1<d.length){for(var y=0,A;A=d[y];++y){var u=A.charCodeAt(0);if(44===u){if(0>=h){c.push(q&&n.length?{key:q,value:n.join("")}:{unknown:q||n.join("")});q=h=0;n=[];continue}}else if(58===u){if(!h&&!q&&1===n.length){q=n.pop();continue}}else if(47===u&&1<A.length&&(47===A.charCodeAt(1)||42===A.charCodeAt(1)))continue;else 47===u&&y&&1<A.length?(u=d[y-1].match(f))&&!g[u[0]]&&(b=b.substr(b.indexOf(A)+1),d=b.match(e),y=-1,A="/"):40===u||123===
u||91===u?++h:41===u||125===u||93===u?--h:q||n.length||34!==u&&39!==u||(A=A.slice(1,-1));n.push(A)}if(0<h)throw Error("Unbalanced parentheses, braces, or brackets");}return c}var c=["true","false","null","undefined"],d=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,e=RegExp("\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|`(?:\\\\.|[^`])*`|/\\*(?:[^*]|\\*+[^*/])*\\*+/|//.*\n|/(?:\\\\.|[^/])+/w*|[^\\s:,/][^,\"'`{}()/:[\\]]*[^\\s,\"'`{}()/:[\\]]|[^\\s]","g"),f=/[\])"'A-Za-z0-9_$]+$/,g={"in":1,"return":1,
"typeof":1},h={};return{Ra:[],va:h,Zb:b,ub:function(e,f){function k(b,e){var f;if(!y){var l=a.getBindingHandler(b);if(l&&l.preprocess&&!(e=l.preprocess(e,b,k)))return;if(l=h[b])f=e,0<=a.a.A(c,f)?f=!1:(l=f.match(d),f=null===l?!1:l[1]?"Object("+l[1]+")"+l[2]:f),l=f;l&&n.push("'"+("string"==typeof h[b]?h[b]:b)+"':function(_z){"+f+"=_z}")}g&&(e="function(){return "+e+" }");q.push("'"+b+"':"+e)}f=f||{};var q=[],n=[],g=f.valueAccessors,y=f.bindingParams,A="string"===typeof e?b(e):e;a.a.C(A,function(a){k(a.key||
a.unknown,a.value)});n.length&&k("_ko_property_writers","{"+n.join(",")+" }");return q.join(",")},Hd:function(a,b){for(var c=0;c<a.length;c++)if(a[c].key==b)return!0;return!1},$a:function(b,c,d,e,f){if(b&&a.N(b))!a.Ya(b)||f&&b.w()===e||b(e);else if((b=c.get("_ko_property_writers"))&&b[d])b[d](e)}}}();a.b("expressionRewriting",a.m);a.b("expressionRewriting.bindingRewriteValidators",a.m.Ra);a.b("expressionRewriting.parseObjectLiteral",a.m.Zb);a.b("expressionRewriting.preProcessBindings",a.m.ub);a.b("expressionRewriting._twoWayBindings",
a.m.va);a.b("jsonExpressionRewriting",a.m);a.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",a.m.ub);(function(){function b(a){return 8==a.nodeType&&g.test(f?a.text:a.nodeValue)}function c(a){return 8==a.nodeType&&h.test(f?a.text:a.nodeValue)}function d(d,e){for(var f=d,g=1,h=[];f=f.nextSibling;){if(c(f)&&(a.a.g.set(f,l,!0),g--,0===g))return h;h.push(f);b(f)&&g++}if(!e)throw Error("Cannot find closing comment tag to match: "+d.nodeValue);return null}function e(a,b){var c=d(a,b);return c?
0<c.length?c[c.length-1].nextSibling:a.nextSibling:null}var f=w&&"\x3c!--test--\x3e"===w.createComment("test").text,g=f?/^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/:/^\s*ko(?:\s+([\s\S]+))?\s*$/,h=f?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,m={ul:!0,ol:!0},l="__ko_matchedEndComment__";a.h={ea:{},childNodes:function(a){return b(a)?d(a):a.childNodes},Ea:function(c){if(b(c)){c=a.h.childNodes(c);for(var d=0,e=c.length;d<e;d++)a.removeNode(c[d])}else a.a.Sb(c)},ua:function(c,d){if(b(c)){a.h.Ea(c);for(var e=
c.nextSibling,f=0,l=d.length;f<l;f++)e.parentNode.insertBefore(d[f],e)}else a.a.ua(c,d)},Uc:function(a,c){b(a)?a.parentNode.insertBefore(c,a.nextSibling):a.firstChild?a.insertBefore(c,a.firstChild):a.appendChild(c)},Vb:function(c,d,e){e?b(c)?c.parentNode.insertBefore(d,e.nextSibling):e.nextSibling?c.insertBefore(d,e.nextSibling):c.appendChild(d):a.h.Uc(c,d)},firstChild:function(a){if(b(a))return!a.nextSibling||c(a.nextSibling)?null:a.nextSibling;if(a.firstChild&&c(a.firstChild))throw Error("Found invalid end comment, as the first child of "+
a);return a.firstChild},nextSibling:function(d){b(d)&&(d=e(d));if(d.nextSibling&&c(d.nextSibling)){var f=d.nextSibling;if(c(f)&&!a.a.g.get(f,l))throw Error("Found end comment without a matching opening comment, as child of "+d);return null}return d.nextSibling},Bd:b,Ud:function(a){return(a=(f?a.text:a.nodeValue).match(g))?a[1]:null},Rc:function(d){if(m[a.a.P(d)]){var f=d.firstChild;if(f){do if(1===f.nodeType){var l;l=f.firstChild;var g=null;if(l){do if(g)g.push(l);else if(b(l)){var h=e(l,!0);h?l=
h:g=[l]}else c(l)&&(g=[l]);while(l=l.nextSibling)}if(l=g)for(g=f.nextSibling,h=0;h<l.length;h++)g?d.insertBefore(l[h],g):d.appendChild(l[h])}while(f=f.nextSibling)}}}}})();a.b("virtualElements",a.h);a.b("virtualElements.allowedBindings",a.h.ea);a.b("virtualElements.emptyNode",a.h.Ea);a.b("virtualElements.insertAfter",a.h.Vb);a.b("virtualElements.prepend",a.h.Uc);a.b("virtualElements.setDomNodeChildren",a.h.ua);(function(){a.ga=function(){this.md={}};a.a.extend(a.ga.prototype,{nodeHasBindings:function(b){switch(b.nodeType){case 1:return null!=
b.getAttribute("data-bind")||a.i.getComponentNameForNode(b);case 8:return a.h.Bd(b);default:return!1}},getBindings:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b):null;return a.i.sc(d,b,c,!1)},getBindingAccessors:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b,{valueAccessors:!0}):null;return a.i.sc(d,b,c,!0)},getBindingsString:function(b){switch(b.nodeType){case 1:return b.getAttribute("data-bind");case 8:return a.h.Ud(b);default:return null}},
parseBindingsString:function(b,c,d,e){try{var f=this.md,g=b+(e&&e.valueAccessors||""),h;if(!(h=f[g])){var m,l="with($context){with($data||{}){return{"+a.m.ub(b,e)+"}}}";m=new Function("$context","$element",l);h=f[g]=m}return h(c,d)}catch(k){throw k.message="Unable to parse bindings.\nBindings value: "+b+"\nMessage: "+k.message,k;}}});a.ga.instance=new a.ga})();a.b("bindingProvider",a.ga);(function(){function b(b){var c=(b=a.a.g.get(b,B))&&b.M;c&&(b.M=null,c.Sc())}function c(c,d,e){this.node=c;this.xc=
d;this.ib=[];this.T=!1;d.M||a.a.I.za(c,b);e&&e.M&&(e.M.ib.push(c),this.Kb=e)}function d(a){return function(){return a}}function e(a){return a()}function f(b){return a.a.Ha(a.v.K(b),function(a,c){return function(){return b()[c]}})}function g(b,c,e){return"function"===typeof b?f(b.bind(null,c,e)):a.a.Ha(b,d)}function h(a,b){return f(this.getBindings.bind(this,a,b))}function m(b,c){var d=a.h.firstChild(c);if(d){var e,f=a.ga.instance,k=f.preprocessNode;if(k){for(;e=d;)d=a.h.nextSibling(e),k.call(f,e);
d=a.h.firstChild(c)}for(;e=d;)d=a.h.nextSibling(e),l(b,e)}a.j.Ga(c,a.j.T)}function l(b,c){var d=b,e=1===c.nodeType;e&&a.h.Rc(c);if(e||a.ga.instance.nodeHasBindings(c))d=q(c,null,b).bindingContextForDescendants;d&&!u[a.a.P(c)]&&m(d,c)}function k(b){var c=[],d={},e=[];a.a.O(b,function ca(f){if(!d[f]){var l=a.getBindingHandler(f);l&&(l.after&&(e.push(f),a.a.C(l.after,function(c){if(b[c]){if(-1!==a.a.A(e,c))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+e.join(", "));
ca(c)}}),e.length--),c.push({key:f,Lc:l}));d[f]=!0}});return c}function q(b,c,d){var f=a.a.g.Tb(b,B,{}),l=f.gd;if(!c){if(l)throw Error("You cannot apply bindings multiple times to the same element.");f.gd=!0}l||(f.context=d);var g;if(c&&"function"!==typeof c)g=c;else{var q=a.ga.instance,n=q.getBindingAccessors||h,m=a.$(function(){if(g=c?c(d,b):n.call(q,b,d)){if(d[r])d[r]();if(d[A])d[A]()}return g},null,{l:b});g&&m.ja()||(m=null)}var y=d,u;if(g){var J=function(){return a.a.Ha(m?m():g,e)},t=m?function(a){return function(){return e(m()[a])}}:
function(a){return g[a]};J.get=function(a){return g[a]&&e(t(a))};J.has=function(a){return a in g};a.j.T in g&&a.j.subscribe(b,a.j.T,function(){var c=(0,g[a.j.T])();if(c){var d=a.h.childNodes(b);d.length&&c(d,a.Dc(d[0]))}});a.j.oa in g&&(y=a.j.Bb(b,d),a.j.subscribe(b,a.j.oa,function(){var c=(0,g[a.j.oa])();c&&a.h.firstChild(b)&&c(b)}));f=k(g);a.a.C(f,function(c){var d=c.Lc.init,e=c.Lc.update,f=c.key;if(8===b.nodeType&&!a.h.ea[f])throw Error("The binding '"+f+"' cannot be used with virtual elements");
try{"function"==typeof d&&a.v.K(function(){var a=d(b,t(f),J,y.$data,y);if(a&&a.controlsDescendantBindings){if(u!==p)throw Error("Multiple bindings ("+u+" and "+f+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");u=f}}),"function"==typeof e&&a.$(function(){e(b,t(f),J,y.$data,y)},null,{l:b})}catch(l){throw l.message='Unable to process binding "'+f+": "+g[f]+'"\nMessage: '+l.message,l;}})}f=u===p;return{shouldBindDescendants:f,
bindingContextForDescendants:f&&y}}function n(b,c){return b&&b instanceof a.fa?b:new a.fa(b,p,p,c)}var r=a.a.Da("_subscribable"),y=a.a.Da("_ancestorBindingInfo"),A=a.a.Da("_dataDependency");a.f={};var u={script:!0,textarea:!0,template:!0};a.getBindingHandler=function(b){return a.f[b]};var J={};a.fa=function(b,c,d,e,f){function l(){var b=q?h():h,f=a.a.c(b);c?(a.a.extend(k,c),y in c&&(k[y]=c[y])):(k.$parents=[],k.$root=f,k.ko=a);k[r]=n;g?f=k.$data:(k.$rawData=b,k.$data=f);d&&(k[d]=f);e&&e(k,c,f);if(c&&
c[r]&&!a.U.o().Ub(c[r]))c[r]();m&&(k[A]=m);return k.$data}var k=this,g=b===J,h=g?p:b,q="function"==typeof h&&!a.N(h),n,m=f&&f.dataDependency;f&&f.exportDependencies?l():(n=a.wb(l),n.w(),n.ja()?n.equalityComparer=null:k[r]=p)};a.fa.prototype.createChildContext=function(b,c,d,e){!e&&c&&"object"==typeof c&&(e=c,c=e.as,d=e.extend);if(c&&e&&e.noChildContext){var f="function"==typeof b&&!a.N(b);return new a.fa(J,this,null,function(a){d&&d(a);a[c]=f?b():b},e)}return new a.fa(b,this,c,function(a,b){a.$parentContext=
b;a.$parent=b.$data;a.$parents=(b.$parents||[]).slice(0);a.$parents.unshift(a.$parent);d&&d(a)},e)};a.fa.prototype.extend=function(b,c){return new a.fa(J,this,null,function(c){a.a.extend(c,"function"==typeof b?b(c):b)},c)};var B=a.a.g.Z();c.prototype.Sc=function(){this.Kb&&this.Kb.M&&this.Kb.M.rd(this.node)};c.prototype.rd=function(b){a.a.hb(this.ib,b);!this.ib.length&&this.T&&this.Bc()};c.prototype.Bc=function(){this.T=!0;this.xc.M&&!this.ib.length&&(this.xc.M=null,a.a.I.xb(this.node,b),a.j.Ga(this.node,
a.j.oa),this.Sc())};a.j={T:"childrenComplete",oa:"descendantsComplete",subscribe:function(b,c,d,e){b=a.a.g.Tb(b,B,{});b.Fa||(b.Fa=new a.R);return b.Fa.subscribe(d,e,c)},Ga:function(b,c){var d=a.a.g.get(b,B);if(d&&(d.Fa&&d.Fa.notifySubscribers(b,c),c==a.j.T))if(d.M)d.M.Bc();else if(d.M===p&&d.Fa&&d.Fa.Wa(a.j.oa))throw Error("descendantsComplete event not supported for bindings on this node");},Bb:function(b,d){var e=a.a.g.Tb(b,B,{});e.M||(e.M=new c(b,e,d[y]));return d[y]==e?d:d.extend(function(a){a[y]=
e})}};a.Sd=function(b){return(b=a.a.g.get(b,B))&&b.context};a.eb=function(b,c,d){1===b.nodeType&&a.h.Rc(b);return q(b,c,n(d))};a.kd=function(b,c,d){d=n(d);return a.eb(b,g(c,d,b),d)};a.Pa=function(a,b){1!==b.nodeType&&8!==b.nodeType||m(n(a),b)};a.uc=function(a,b,c){!v&&z.jQuery&&(v=z.jQuery);if(2>arguments.length){if(b=w.body,!b)throw Error("ko.applyBindings: could not find document.body; has the document been loaded?");}else if(!b||1!==b.nodeType&&8!==b.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");
l(n(a,c),b)};a.Cc=function(b){return!b||1!==b.nodeType&&8!==b.nodeType?p:a.Sd(b)};a.Dc=function(b){return(b=a.Cc(b))?b.$data:p};a.b("bindingHandlers",a.f);a.b("bindingEvent",a.j);a.b("bindingEvent.subscribe",a.j.subscribe);a.b("bindingEvent.startPossiblyAsyncContentBinding",a.j.Bb);a.b("applyBindings",a.uc);a.b("applyBindingsToDescendants",a.Pa);a.b("applyBindingAccessorsToNode",a.eb);a.b("applyBindingsToNode",a.kd);a.b("contextFor",a.Cc);a.b("dataFor",a.Dc)})();(function(b){function c(c,e){var l=
Object.prototype.hasOwnProperty.call(f,c)?f[c]:b,k;l?l.subscribe(e):(l=f[c]=new a.R,l.subscribe(e),d(c,function(b,d){var e=!(!d||!d.synchronous);g[c]={definition:b,Fd:e};delete f[c];k||e?l.notifySubscribers(b):a.ma.yb(function(){l.notifySubscribers(b)})}),k=!0)}function d(a,b){e("getConfig",[a],function(c){c?e("loadComponent",[a,c],function(a){b(a,c)}):b(null,null)})}function e(c,d,f,k){k||(k=a.i.loaders.slice(0));var g=k.shift();if(g){var n=g[c];if(n){var r=!1;if(n.apply(g,d.concat(function(a){r?
f(null):null!==a?f(a):e(c,d,f,k)}))!==b&&(r=!0,!g.suppressLoaderExceptions))throw Error("Component loaders must supply values by invoking the callback, not by returning values synchronously.");}else e(c,d,f,k)}else f(null)}var f={},g={};a.i={get:function(d,e){var f=Object.prototype.hasOwnProperty.call(g,d)?g[d]:b;f?f.Fd?a.v.K(function(){e(f.definition)}):a.ma.yb(function(){e(f.definition)}):c(d,e)},Ac:function(a){delete g[a]},nc:e};a.i.loaders=[];a.b("components",a.i);a.b("components.get",a.i.get);
a.b("components.clearCachedDefinition",a.i.Ac)})();(function(){function b(b,c,d,e){function g(){0===--A&&e(h)}var h={},A=2,u=d.template;d=d.viewModel;u?f(c,u,function(c){a.i.nc("loadTemplate",[b,c],function(a){h.template=a;g()})}):g();d?f(c,d,function(c){a.i.nc("loadViewModel",[b,c],function(a){h[m]=a;g()})}):g()}function c(a,b,d){if("function"===typeof b)d(function(a){return new b(a)});else if("function"===typeof b[m])d(b[m]);else if("instance"in b){var e=b.instance;d(function(){return e})}else"viewModel"in
b?c(a,b.viewModel,d):a("Unknown viewModel value: "+b)}function d(b){switch(a.a.P(b)){case "script":return a.a.ta(b.text);case "textarea":return a.a.ta(b.value);case "template":if(e(b.content))return a.a.Ca(b.content.childNodes)}return a.a.Ca(b.childNodes)}function e(a){return z.DocumentFragment?a instanceof DocumentFragment:a&&11===a.nodeType}function f(a,b,c){"string"===typeof b.require?T||z.require?(T||z.require)([b.require],c):a("Uses require, but no AMD loader is present"):c(b)}function g(a){return function(b){throw Error("Component '"+
a+"': "+b);}}var h={};a.i.register=function(b,c){if(!c)throw Error("Invalid configuration for "+b);if(a.i.sb(b))throw Error("Component "+b+" is already registered");h[b]=c};a.i.sb=function(a){return Object.prototype.hasOwnProperty.call(h,a)};a.i.unregister=function(b){delete h[b];a.i.Ac(b)};a.i.Ec={getConfig:function(b,c){c(a.i.sb(b)?h[b]:null)},loadComponent:function(a,c,d){var e=g(a);f(e,c,function(c){b(a,e,c,d)})},loadTemplate:function(b,c,f){b=g(b);if("string"===typeof c)f(a.a.ta(c));else if(c instanceof
Array)f(c);else if(e(c))f(a.a.la(c.childNodes));else if(c.element)if(c=c.element,z.HTMLElement?c instanceof HTMLElement:c&&c.tagName&&1===c.nodeType)f(d(c));else if("string"===typeof c){var h=w.getElementById(c);h?f(d(h)):b("Cannot find element with ID "+c)}else b("Unknown element type: "+c);else b("Unknown template value: "+c)},loadViewModel:function(a,b,d){c(g(a),b,d)}};var m="createViewModel";a.b("components.register",a.i.register);a.b("components.isRegistered",a.i.sb);a.b("components.unregister",
a.i.unregister);a.b("components.defaultLoader",a.i.Ec);a.i.loaders.push(a.i.Ec);a.i.cd=h})();(function(){function b(b,e){var f=b.getAttribute("params");if(f){var f=c.parseBindingsString(f,e,b,{valueAccessors:!0,bindingParams:!0}),f=a.a.Ha(f,function(c){return a.o(c,null,{l:b})}),g=a.a.Ha(f,function(c){var e=c.w();return c.ja()?a.o({read:function(){return a.a.c(c())},write:a.Ya(e)&&function(a){c()(a)},l:b}):e});Object.prototype.hasOwnProperty.call(g,"$raw")||(g.$raw=f);return g}return{$raw:{}}}a.i.getComponentNameForNode=
function(b){var c=a.a.P(b);if(a.i.sb(c)&&(-1!=c.indexOf("-")||"[object HTMLUnknownElement]"==""+b||8>=a.a.W&&b.tagName===c))return c};a.i.sc=function(c,e,f,g){if(1===e.nodeType){var h=a.i.getComponentNameForNode(e);if(h){c=c||{};if(c.component)throw Error('Cannot use the "component" binding on a custom element matching a component');var m={name:h,params:b(e,f)};c.component=g?function(){return m}:m}}return c};var c=new a.ga;9>a.a.W&&(a.i.register=function(a){return function(b){return a.apply(this,
arguments)}}(a.i.register),w.createDocumentFragment=function(b){return function(){var c=b(),f=a.i.cd,g;for(g in f);return c}}(w.createDocumentFragment))})();(function(){function b(b,c,d){c=c.template;if(!c)throw Error("Component '"+b+"' has no template");b=a.a.Ca(c);a.h.ua(d,b)}function c(a,b,c){var d=a.createViewModel;return d?d.call(a,b,c):b}var d=0;a.f.component={init:function(e,f,g,h,m){function l(){var a=k&&k.dispose;"function"===typeof a&&a.call(k);n&&n.s();q=k=n=null}var k,q,n,r=a.a.la(a.h.childNodes(e));
a.h.Ea(e);a.a.I.za(e,l);a.o(function(){var g=a.a.c(f()),h,u;"string"===typeof g?h=g:(h=a.a.c(g.name),u=a.a.c(g.params));if(!h)throw Error("No component name specified");var p=a.j.Bb(e,m),B=q=++d;a.i.get(h,function(d){if(q===B){l();if(!d)throw Error("Unknown component '"+h+"'");b(h,d,e);var f=c(d,u,{element:e,templateNodes:r});d=p.createChildContext(f,{extend:function(a){a.$component=f;a.$componentTemplateNodes=r}});f&&f.koDescendantsComplete&&(n=a.j.subscribe(e,a.j.oa,f.koDescendantsComplete,f));
k=f;a.Pa(d,e)}})},null,{l:e});return{controlsDescendantBindings:!0}}};a.h.ea.component=!0})();var V={"class":"className","for":"htmlFor"};a.f.attr={update:function(b,c){var d=a.a.c(c())||{};a.a.O(d,function(c,d){d=a.a.c(d);var g=c.indexOf(":"),g="lookupNamespaceURI"in b&&0<g&&b.lookupNamespaceURI(c.substr(0,g)),h=!1===d||null===d||d===p;h?g?b.removeAttributeNS(g,c):b.removeAttribute(c):d=d.toString();8>=a.a.W&&c in V?(c=V[c],h?b.removeAttribute(c):b[c]=d):h||(g?b.setAttributeNS(g,c,d):b.setAttribute(c,
d));"name"===c&&a.a.Xc(b,h?"":d)})}};(function(){a.f.checked={after:["value","attr"],init:function(b,c,d){function e(){var e=b.checked,f=g();if(!a.U.rb()&&(e||!m&&!a.U.pa())){var l=a.v.K(c);if(k){var n=q?l.w():l,B=r;r=f;B!==f?e&&(a.a.Oa(n,f,!0),a.a.Oa(n,B,!1)):a.a.Oa(n,f,e);q&&a.Ya(l)&&l(n)}else h&&(f===p?f=e:e||(f=p)),a.m.$a(l,d,"checked",f,!0)}}function f(){var d=a.a.c(c()),e=g();k?(b.checked=0<=a.a.A(d,e),r=e):b.checked=h&&e===p?!!d:g()===d}var g=a.wb(function(){if(d.has("checkedValue"))return a.a.c(d.get("checkedValue"));
if(n)return d.has("value")?a.a.c(d.get("value")):b.value}),h="checkbox"==b.type,m="radio"==b.type;if(h||m){var l=c(),k=h&&a.a.c(l)instanceof Array,q=!(k&&l.push&&l.splice),n=m||k,r=k?g():p;m&&!b.name&&a.f.uniqueName.init(b,function(){return!0});a.o(e,null,{l:b});a.a.H(b,"click",e);a.o(f,null,{l:b});l=p}}};a.m.va.checked=!0;a.f.checkedValue={update:function(b,c){b.value=a.a.c(c())}}})();a.f["class"]={update:function(b,c){var d=a.a.Cb(a.a.c(c()));a.a.Eb(b,b.__ko__cssValue,!1);b.__ko__cssValue=d;a.a.Eb(b,
d,!0)}};a.f.css={update:function(b,c){var d=a.a.c(c());null!==d&&"object"==typeof d?a.a.O(d,function(c,d){d=a.a.c(d);a.a.Eb(b,c,d)}):a.f["class"].update(b,c)}};a.f.enable={update:function(b,c){var d=a.a.c(c());d&&b.disabled?b.removeAttribute("disabled"):d||b.disabled||(b.disabled=!0)}};a.f.disable={update:function(b,c){a.f.enable.update(b,function(){return!a.a.c(c())})}};a.f.event={init:function(b,c,d,e,f){var g=c()||{};a.a.O(g,function(g){"string"==typeof g&&a.a.H(b,g,function(b){var l,k=c()[g];
if(k){try{var q=a.a.la(arguments);e=f.$data;q.unshift(e);l=k.apply(e,q)}finally{!0!==l&&(b.preventDefault?b.preventDefault():b.returnValue=!1)}!1===d.get(g+"Bubble")&&(b.cancelBubble=!0,b.stopPropagation&&b.stopPropagation())}})})}};a.f.foreach={Qc:function(b){return function(){var c=b(),d=a.a.$b(c);if(!d||"number"==typeof d.length)return{foreach:c,templateEngine:a.ba.Na};a.a.c(c);return{foreach:d.data,as:d.as,noChildContext:d.noChildContext,includeDestroyed:d.includeDestroyed,afterAdd:d.afterAdd,
beforeRemove:d.beforeRemove,afterRender:d.afterRender,beforeMove:d.beforeMove,afterMove:d.afterMove,templateEngine:a.ba.Na}}},init:function(b,c){return a.f.template.init(b,a.f.foreach.Qc(c))},update:function(b,c,d,e,f){return a.f.template.update(b,a.f.foreach.Qc(c),d,e,f)}};a.m.Ra.foreach=!1;a.h.ea.foreach=!0;a.f.hasfocus={init:function(b,c,d){function e(e){b.__ko_hasfocusUpdating=!0;var f=b.ownerDocument;if("activeElement"in f){var g;try{g=f.activeElement}catch(k){g=f.body}e=g===b}f=c();a.m.$a(f,
d,"hasfocus",e,!0);b.__ko_hasfocusLastValue=e;b.__ko_hasfocusUpdating=!1}var f=e.bind(null,!0),g=e.bind(null,!1);a.a.H(b,"focus",f);a.a.H(b,"focusin",f);a.a.H(b,"blur",g);a.a.H(b,"focusout",g);b.__ko_hasfocusLastValue=!1},update:function(b,c){var d=!!a.a.c(c());b.__ko_hasfocusUpdating||b.__ko_hasfocusLastValue===d||(d?b.focus():b.blur(),!d&&b.__ko_hasfocusLastValue&&b.ownerDocument.body.focus(),a.v.K(a.a.Fb,null,[b,d?"focusin":"focusout"]))}};a.m.va.hasfocus=!0;a.f.hasFocus=a.f.hasfocus;a.m.va.hasFocus=
"hasfocus";a.f.html={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.dc(b,c())}};(function(){function b(b,d,e){a.f[b]={init:function(b,c,h,m,l){var k,q,n={},r,p,A;if(d){m=h.get("as");var u=h.get("noChildContext");A=!(m&&u);n={as:m,noChildContext:u,exportDependencies:A}}p=(r="render"==h.get("completeOn"))||h.has(a.j.oa);a.o(function(){var h=a.a.c(c()),m=!e!==!h,u=!q,t;if(A||m!==k){p&&(l=a.j.Bb(b,l));if(m){if(!d||A)n.dataDependency=a.U.o();t=d?l.createChildContext("function"==
typeof h?h:c,n):a.U.pa()?l.extend(null,n):l}u&&a.U.pa()&&(q=a.a.Ca(a.h.childNodes(b),!0));m?(u||a.h.ua(b,a.a.Ca(q)),a.Pa(t,b)):(a.h.Ea(b),r||a.j.Ga(b,a.j.T));k=m}},null,{l:b});return{controlsDescendantBindings:!0}}};a.m.Ra[b]=!1;a.h.ea[b]=!0}b("if");b("ifnot",!1,!0);b("with",!0)})();a.f.let={init:function(b,c,d,e,f){c=f.extend(c);a.Pa(c,b);return{controlsDescendantBindings:!0}}};a.h.ea.let=!0;var Q={};a.f.options={init:function(b){if("select"!==a.a.P(b))throw Error("options binding applies only to SELECT elements");
for(;0<b.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,c,d){function e(){return a.a.fb(b.options,function(a){return a.selected})}function f(a,b,c){var d=typeof b;return"function"==d?b(a):"string"==d?a[b]:c}function g(c,e){if(y&&k)a.u.ya(b,a.a.c(d.get("value")),!0);else if(r.length){var f=0<=a.a.A(r,a.u.L(e[0]));a.a.Yc(e[0],f);y&&!f&&a.v.K(a.a.Fb,null,[b,"change"])}}var h=b.multiple,m=0!=b.length&&h?b.scrollTop:null,l=a.a.c(c()),k=d.get("valueAllowUnset")&&d.has("value"),
q=d.get("optionsIncludeDestroyed");c={};var n,r=[];k||(h?r=a.a.Mb(e(),a.u.L):0<=b.selectedIndex&&r.push(a.u.L(b.options[b.selectedIndex])));l&&("undefined"==typeof l.length&&(l=[l]),n=a.a.fb(l,function(b){return q||b===p||null===b||!a.a.c(b._destroy)}),d.has("optionsCaption")&&(l=a.a.c(d.get("optionsCaption")),null!==l&&l!==p&&n.unshift(Q)));var y=!1;c.beforeRemove=function(a){b.removeChild(a)};l=g;d.has("optionsAfterRender")&&"function"==typeof d.get("optionsAfterRender")&&(l=function(b,c){g(0,c);
a.v.K(d.get("optionsAfterRender"),null,[c[0],b!==Q?b:p])});a.a.cc(b,n,function(c,e,g){g.length&&(r=!k&&g[0].selected?[a.u.L(g[0])]:[],y=!0);e=b.ownerDocument.createElement("option");c===Q?(a.a.Ab(e,d.get("optionsCaption")),a.u.ya(e,p)):(g=f(c,d.get("optionsValue"),c),a.u.ya(e,a.a.c(g)),c=f(c,d.get("optionsText"),g),a.a.Ab(e,c));return[e]},c,l);a.v.K(function(){if(k)a.u.ya(b,a.a.c(d.get("value")),!0);else{var c;h?c=r.length&&e().length<r.length:c=r.length&&0<=b.selectedIndex?a.u.L(b.options[b.selectedIndex])!==
r[0]:r.length||0<=b.selectedIndex;c&&a.a.Fb(b,"change")}});a.a.vd(b);m&&20<Math.abs(m-b.scrollTop)&&(b.scrollTop=m)}};a.f.options.Yb=a.a.g.Z();a.f.selectedOptions={after:["options","foreach"],init:function(b,c,d){a.a.H(b,"change",function(){var e=c(),f=[];a.a.C(b.getElementsByTagName("option"),function(b){b.selected&&f.push(a.u.L(b))});a.m.$a(e,d,"selectedOptions",f)})},update:function(b,c){if("select"!=a.a.P(b))throw Error("values binding applies only to SELECT elements");var d=a.a.c(c()),e=b.scrollTop;
d&&"number"==typeof d.length&&a.a.C(b.getElementsByTagName("option"),function(b){var c=0<=a.a.A(d,a.u.L(b));b.selected!=c&&a.a.Yc(b,c)});b.scrollTop=e}};a.m.va.selectedOptions=!0;a.f.style={update:function(b,c){var d=a.a.c(c()||{});a.a.O(d,function(c,d){d=a.a.c(d);if(null===d||d===p||!1===d)d="";if(v)v(b).css(c,d);else if(/^--/.test(c))b.style.setProperty(c,d);else{c=c.replace(/-(\w)/g,function(a,b){return b.toUpperCase()});var g=b.style[c];b.style[c]=d;d===g||b.style[c]!=g||isNaN(d)||(b.style[c]=
d+"px")}})}};a.f.submit={init:function(b,c,d,e,f){if("function"!=typeof c())throw Error("The value for a submit binding must be a function");a.a.H(b,"submit",function(a){var d,e=c();try{d=e.call(f.$data,b)}finally{!0!==d&&(a.preventDefault?a.preventDefault():a.returnValue=!1)}})}};a.f.text={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Ab(b,c())}};a.h.ea.text=!0;(function(){if(z&&z.navigator){var b=function(a){if(a)return parseFloat(a[1])},c=z.navigator.userAgent,
d,e,f,g,h;(d=z.opera&&z.opera.version&&parseInt(z.opera.version()))||(h=b(c.match(/Edge\/([^ ]+)$/)))||b(c.match(/Chrome\/([^ ]+)/))||(e=b(c.match(/Version\/([^ ]+) Safari/)))||(f=b(c.match(/Firefox\/([^ ]+)/)))||(g=a.a.W||b(c.match(/MSIE ([^ ]+)/)))||(g=b(c.match(/rv:([^ )]+)/)))}if(8<=g&&10>g)var m=a.a.g.Z(),l=a.a.g.Z(),k=function(b){var c=this.activeElement;(c=c&&a.a.g.get(c,l))&&c(b)},q=function(b,c){var d=b.ownerDocument;a.a.g.get(d,m)||(a.a.g.set(d,m,!0),a.a.H(d,"selectionchange",k));a.a.g.set(b,
l,c)};a.f.textInput={init:function(b,c,l){function k(c,d){a.a.H(b,c,d)}function m(){var d=a.a.c(c());if(null===d||d===p)d="";L!==p&&d===L?a.a.setTimeout(m,4):b.value!==d&&(x=!0,b.value=d,x=!1,v=b.value)}function t(){w||(L=b.value,w=a.a.setTimeout(B,4))}function B(){clearTimeout(w);L=w=p;var d=b.value;v!==d&&(v=d,a.m.$a(c(),l,"textInput",d))}var v=b.value,w,L,z=9==a.a.W?t:B,x=!1;g&&k("keypress",B);11>g&&k("propertychange",function(a){x||"value"!==a.propertyName||z(a)});8==g&&(k("keyup",B),k("keydown",
B));q&&(q(b,z),k("dragend",t));(!g||9<=g)&&k("input",z);5>e&&"textarea"===a.a.P(b)?(k("keydown",t),k("paste",t),k("cut",t)):11>d?k("keydown",t):4>f?(k("DOMAutoComplete",B),k("dragdrop",B),k("drop",B)):h&&"number"===b.type&&k("keydown",t);k("change",B);k("blur",B);a.o(m,null,{l:b})}};a.m.va.textInput=!0;a.f.textinput={preprocess:function(a,b,c){c("textInput",a)}}})();a.f.uniqueName={init:function(b,c){if(c()){var d="ko_unique_"+ ++a.f.uniqueName.qd;a.a.Xc(b,d)}}};a.f.uniqueName.qd=0;a.f.using={init:function(b,
c,d,e,f){var g;d.has("as")&&(g={as:d.get("as"),noChildContext:d.get("noChildContext")});c=f.createChildContext(c,g);a.Pa(c,b);return{controlsDescendantBindings:!0}}};a.h.ea.using=!0;a.f.value={after:["options","foreach"],init:function(b,c,d){var e=a.a.P(b),f="input"==e;if(!f||"checkbox"!=b.type&&"radio"!=b.type){var g=["change"],h=d.get("valueUpdate"),m=!1,l=null;h&&("string"==typeof h&&(h=[h]),a.a.gb(g,h),g=a.a.vc(g));var k=function(){l=null;m=!1;var e=c(),f=a.u.L(b);a.m.$a(e,d,"value",f)};!a.a.W||
!f||"text"!=b.type||"off"==b.autocomplete||b.form&&"off"==b.form.autocomplete||-1!=a.a.A(g,"propertychange")||(a.a.H(b,"propertychange",function(){m=!0}),a.a.H(b,"focus",function(){m=!1}),a.a.H(b,"blur",function(){m&&k()}));a.a.C(g,function(c){var d=k;a.a.Td(c,"after")&&(d=function(){l=a.u.L(b);a.a.setTimeout(k,0)},c=c.substring(5));a.a.H(b,c,d)});var q;q=f&&"file"==b.type?function(){var d=a.a.c(c());null===d||d===p||""===d?b.value="":a.v.K(k)}:function(){var f=a.a.c(c()),g=a.u.L(b);if(null!==l&&
f===l)a.a.setTimeout(q,0);else if(f!==g||g===p)"select"===e?(g=d.get("valueAllowUnset"),a.u.ya(b,f,g),g||f===a.u.L(b)||a.v.K(k)):a.u.ya(b,f)};a.o(q,null,{l:b})}else a.eb(b,{checkedValue:c})},update:function(){}};a.m.va.value=!0;a.f.visible={update:function(b,c){var d=a.a.c(c()),e="none"!=b.style.display;d&&!e?b.style.display="":!d&&e&&(b.style.display="none")}};a.f.hidden={update:function(b,c){a.f.visible.update(b,function(){return!a.a.c(c())})}};(function(b){a.f[b]={init:function(c,d,e,f,g){return a.f.event.init.call(this,
c,function(){var a={};a[b]=d();return a},e,f,g)}}})("click");a.ca=function(){};a.ca.prototype.renderTemplateSource=function(){throw Error("Override renderTemplateSource");};a.ca.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock");};a.ca.prototype.makeTemplateSource=function(b,c){if("string"==typeof b){c=c||w;var d=c.getElementById(b);if(!d)throw Error("Cannot find template with ID "+b);return new a.B.D(d)}if(1==b.nodeType||8==b.nodeType)return new a.B.ia(b);
throw Error("Unknown template type: "+b);};a.ca.prototype.renderTemplate=function(a,c,d,e){a=this.makeTemplateSource(a,e);return this.renderTemplateSource(a,c,d,e)};a.ca.prototype.isTemplateRewritten=function(a,c){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(a,c).data("isRewritten")};a.ca.prototype.rewriteTemplate=function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data("isRewritten",!0)};a.b("templateEngine",a.ca);a.ic=function(){function b(b,c,d,h){b=a.m.Zb(b);
for(var m=a.m.Ra,l=0;l<b.length;l++){var k=b[l].key;if(Object.prototype.hasOwnProperty.call(m,k)){var q=m[k];if("function"===typeof q){if(k=q(b[l].value))throw Error(k);}else if(!q)throw Error("This template engine does not support the '"+k+"' binding within its templates");}}d="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+a.m.ub(b,{valueAccessors:!0})+" } })()},'"+d.toLowerCase()+"')";return h.createJavaScriptEvaluatorBlock(d)+c}var c=/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'|[^>]*))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,
d=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;return{wd:function(b,c,d){c.isTemplateRewritten(b,d)||c.rewriteTemplate(b,function(b){return a.ic.Kd(b,c)},d)},Kd:function(a,f){return a.replace(c,function(a,c,d,e,k){return b(k,c,d,f)}).replace(d,function(a,c){return b(c,"\x3c!-- ko --\x3e","#comment",f)})},ld:function(b,c){return a.aa.Wb(function(d,h){var m=d.nextSibling;m&&m.nodeName.toLowerCase()===c&&a.eb(m,b,h)})}}}();a.b("__tr_ambtns",a.ic.ld);(function(){a.B={};a.B.D=function(b){if(this.D=b){var c=
a.a.P(b);this.Db="script"===c?1:"textarea"===c?2:"template"==c&&b.content&&11===b.content.nodeType?3:4}};a.B.D.prototype.text=function(){var b=1===this.Db?"text":2===this.Db?"value":"innerHTML";if(0==arguments.length)return this.D[b];var c=arguments[0];"innerHTML"===b?a.a.dc(this.D,c):this.D[b]=c};var b=a.a.g.Z()+"_";a.B.D.prototype.data=function(c){if(1===arguments.length)return a.a.g.get(this.D,b+c);a.a.g.set(this.D,b+c,arguments[1])};var c=a.a.g.Z();a.B.D.prototype.nodes=function(){var b=this.D;
if(0==arguments.length){var e=a.a.g.get(b,c)||{},f=e.jb||(3===this.Db?b.content:4===this.Db?b:p);if(!f||e.hd)if(e=this.text())f=a.a.Ld(e,b.ownerDocument),this.text(""),a.a.g.set(b,c,{jb:f,hd:!0});return f}a.a.g.set(b,c,{jb:arguments[0]})};a.B.ia=function(a){this.D=a};a.B.ia.prototype=new a.B.D;a.B.ia.prototype.constructor=a.B.ia;a.B.ia.prototype.text=function(){if(0==arguments.length){var b=a.a.g.get(this.D,c)||{};b.jc===p&&b.jb&&(b.jc=b.jb.innerHTML);return b.jc}a.a.g.set(this.D,c,{jc:arguments[0]})};
a.b("templateSources",a.B);a.b("templateSources.domElement",a.B.D);a.b("templateSources.anonymousTemplate",a.B.ia)})();(function(){function b(b,c,d){var e;for(c=a.h.nextSibling(c);b&&(e=b)!==c;)b=a.h.nextSibling(e),d(e,b)}function c(c,d){if(c.length){var e=c[0],f=c[c.length-1],g=e.parentNode,h=a.ga.instance,m=h.preprocessNode;if(m){b(e,f,function(a,b){var c=a.previousSibling,d=m.call(h,a);d&&(a===e&&(e=d[0]||b),a===f&&(f=d[d.length-1]||c))});c.length=0;if(!e)return;e===f?c.push(e):(c.push(e,f),a.a.Ua(c,
g))}b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.uc(d,b)});b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.aa.bd(b,[d])});a.a.Ua(c,g)}}function d(a){return a.nodeType?a:0<a.length?a[0]:null}function e(b,e,f,h,m){m=m||{};var p=(b&&d(b)||f||{}).ownerDocument,A=m.templateEngine||g;a.ic.wd(f,A,p);f=A.renderTemplate(f,h,m,p);if("number"!=typeof f.length||0<f.length&&"number"!=typeof f[0].nodeType)throw Error("Template engine must return an array of DOM nodes");p=!1;switch(e){case "replaceChildren":a.h.ua(b,
f);p=!0;break;case "replaceNode":a.a.Wc(b,f);p=!0;break;case "ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+e);}p&&(c(f,h),m.afterRender&&a.v.K(m.afterRender,null,[f,h[m.as||"$data"]]),"replaceChildren"==e&&a.j.Ga(b,a.j.T));return f}function f(b,c,d){return a.N(b)?b():"function"===typeof b?b(c,d):b}var g;a.ec=function(b){if(b!=p&&!(b instanceof a.ca))throw Error("templateEngine must inherit from ko.templateEngine");g=b};a.bc=function(b,c,h,m,r){h=h||{};if((h.templateEngine||g)==
p)throw Error("Set a template engine before calling renderTemplate");r=r||"replaceChildren";if(m){var y=d(m);return a.$(function(){var g=c&&c instanceof a.fa?c:new a.fa(c,null,null,null,{exportDependencies:!0}),p=f(b,g.$data,g),g=e(m,r,p,g,h);"replaceNode"==r&&(m=g,y=d(m))},null,{Sa:function(){return!y||!a.a.Rb(y)},l:y&&"replaceNode"==r?y.parentNode:y})}return a.aa.Wb(function(d){a.bc(b,c,h,d,"replaceNode")})};a.Pd=function(b,d,g,h,m){function y(b,c){a.v.K(a.a.cc,null,[h,b,u,g,t,c]);a.j.Ga(h,a.j.T)}
function t(a,b){c(b,v);g.afterRender&&g.afterRender(b,a);v=null}function u(a,c){v=m.createChildContext(a,{as:B,noChildContext:g.noChildContext,extend:function(a){a.$index=c;B&&(a[B+"Index"]=c)}});var d=f(b,a,v);return e(h,"ignoreTargetNode",d,v,g)}var v,B=g.as,w=!1===g.includeDestroyed||a.options.foreachHidesDestroyed&&!g.includeDestroyed;if(w||g.beforeRemove||!a.Oc(d))return a.$(function(){var b=a.a.c(d)||[];"undefined"==typeof b.length&&(b=[b]);w&&(b=a.a.fb(b,function(b){return b===p||null===b||
!a.a.c(b._destroy)}));y(b)},null,{l:h});y(d.w());var z=d.subscribe(function(a){y(d(),a)},null,"arrayChange");z.l(h);return z};var h=a.a.g.Z(),m=a.a.g.Z();a.f.template={init:function(b,c){var d=a.a.c(c());if("string"==typeof d||d.name)a.h.Ea(b);else if("nodes"in d){d=d.nodes||[];if(a.N(d))throw Error('The "nodes" option must be a plain, non-observable array.');var e=d[0]&&d[0].parentNode;e&&a.a.g.get(e,m)||(e=a.a.Xb(d),a.a.g.set(e,m,!0));(new a.B.ia(b)).nodes(e)}else if(d=a.h.childNodes(b),0<d.length)e=
a.a.Xb(d),(new a.B.ia(b)).nodes(e);else throw Error("Anonymous template defined, but no template content was provided");return{controlsDescendantBindings:!0}},update:function(b,c,d,e,f){var g=c();c=a.a.c(g);d=!0;e=null;"string"==typeof c?c={}:(g=c.name,"if"in c&&(d=a.a.c(c["if"])),d&&"ifnot"in c&&(d=!a.a.c(c.ifnot)));"foreach"in c?e=a.Pd(g||b,d&&c.foreach||[],c,b,f):d?(d=f,"data"in c&&(d=f.createChildContext(c.data,{as:c.as,noChildContext:c.noChildContext,exportDependencies:!0})),e=a.bc(g||b,d,c,
b)):a.h.Ea(b);f=e;(c=a.a.g.get(b,h))&&"function"==typeof c.s&&c.s();a.a.g.set(b,h,!f||f.ja&&!f.ja()?p:f)}};a.m.Ra.template=function(b){b=a.m.Zb(b);return 1==b.length&&b[0].unknown||a.m.Hd(b,"name")?null:"This template engine does not support anonymous templates nested within its templates"};a.h.ea.template=!0})();a.b("setTemplateEngine",a.ec);a.b("renderTemplate",a.bc);a.a.Jc=function(a,c,d){if(a.length&&c.length){var e,f,g,h,m;for(e=f=0;(!d||e<d)&&(h=a[f]);++f){for(g=0;m=c[g];++g)if(h.value===m.value){h.moved=
m.index;m.moved=h.index;c.splice(g,1);e=g=0;break}e+=g}}};a.a.Ob=function(){function b(b,d,e,f,g){var h=Math.min,m=Math.max,l=[],k,p=b.length,n,r=d.length,t=r-p||1,A=p+r+1,u,v,w;for(k=0;k<=p;k++)for(v=u,l.push(u=[]),w=h(r,k+t),n=m(0,k-1);n<=w;n++)u[n]=n?k?b[k-1]===d[n-1]?v[n-1]:h(v[n]||A,u[n-1]||A)+1:n+1:k+1;h=[];m=[];t=[];k=p;for(n=r;k||n;)r=l[k][n]-1,n&&r===l[k][n-1]?m.push(h[h.length]={status:e,value:d[--n],index:n}):k&&r===l[k-1][n]?t.push(h[h.length]={status:f,value:b[--k],index:k}):(--n,--k,
g.sparse||h.push({status:"retained",value:d[n]}));a.a.Jc(t,m,!g.dontLimitMoves&&10*p);return h.reverse()}return function(a,d,e){e="boolean"===typeof e?{dontLimitMoves:e}:e||{};a=a||[];d=d||[];return a.length<d.length?b(a,d,"added","deleted",e):b(d,a,"deleted","added",e)}}();a.b("utils.compareArrays",a.a.Ob);(function(){function b(b,c,d,h,m){var l=[],k=a.$(function(){var k=c(d,m,a.a.Ua(l,b))||[];0<l.length&&(a.a.Wc(l,k),h&&a.v.K(h,null,[d,k,m]));l.length=0;a.a.gb(l,k)},null,{l:b,Sa:function(){return!a.a.jd(l)}});
return{Y:l,$:k.ja()?k:p}}var c=a.a.g.Z(),d=a.a.g.Z();a.a.cc=function(e,f,g,h,m,l){function k(b){x={Aa:b,nb:a.sa(w++)};v.push(x);t||F.push(x)}function q(b){x=r[b];w!==x.nb.w()&&D.push(x);x.nb(w++);a.a.Ua(x.Y,e);v.push(x)}function n(b,c){if(b)for(var d=0,e=c.length;d<e;d++)a.a.C(c[d].Y,function(a){b(a,d,c[d].Aa)})}f=f||[];"undefined"==typeof f.length&&(f=[f]);h=h||{};var r=a.a.g.get(e,c),t=!r,v=[],u=0,w=0,B=[],z=[],C=[],D=[],F=[],x,I=0;if(t)a.a.C(f,k);else{if(!l||r&&r._countWaitingForRemove){var E=
a.a.Mb(r,function(a){return a.Aa});l=a.a.Ob(E,f,{dontLimitMoves:h.dontLimitMoves,sparse:!0})}for(var E=0,G,H,K;G=l[E];E++)switch(H=G.moved,K=G.index,G.status){case "deleted":for(;u<K;)q(u++);H===p&&(x=r[u],x.$&&(x.$.s(),x.$=p),a.a.Ua(x.Y,e).length&&(h.beforeRemove&&(v.push(x),I++,x.Aa===d?x=null:C.push(x)),x&&B.push.apply(B,x.Y)));u++;break;case "added":for(;w<K;)q(u++);H!==p?(z.push(v.length),q(H)):k(G.value)}for(;w<f.length;)q(u++);v._countWaitingForRemove=I}a.a.g.set(e,c,v);n(h.beforeMove,D);a.a.C(B,
h.beforeRemove?a.na:a.removeNode);var M,O,P;try{P=e.ownerDocument.activeElement}catch(N){}if(z.length)for(;(E=z.shift())!=p;){x=v[E];for(M=p;E;)if((O=v[--E].Y)&&O.length){M=O[O.length-1];break}for(f=0;u=x.Y[f];M=u,f++)a.h.Vb(e,u,M)}E=0;for(z=a.h.firstChild(e);x=v[E];E++){x.Y||a.a.extend(x,b(e,g,x.Aa,m,x.nb));for(f=0;u=x.Y[f];z=u.nextSibling,M=u,f++)u!==z&&a.h.Vb(e,u,M);!x.Dd&&m&&(m(x.Aa,x.Y,x.nb),x.Dd=!0,M=x.Y[x.Y.length-1])}P&&e.ownerDocument.activeElement!=P&&P.focus();n(h.beforeRemove,C);for(E=
0;E<C.length;++E)C[E].Aa=d;n(h.afterMove,D);n(h.afterAdd,F)}})();a.b("utils.setDomNodeChildrenFromArrayMapping",a.a.cc);a.ba=function(){this.allowTemplateRewriting=!1};a.ba.prototype=new a.ca;a.ba.prototype.constructor=a.ba;a.ba.prototype.renderTemplateSource=function(b,c,d,e){if(c=(9>a.a.W?0:b.nodes)?b.nodes():null)return a.a.la(c.cloneNode(!0).childNodes);b=b.text();return a.a.ta(b,e)};a.ba.Na=new a.ba;a.ec(a.ba.Na);a.b("nativeTemplateEngine",a.ba);(function(){a.Za=function(){var a=this.Gd=function(){if(!v||
!v.tmpl)return 0;try{if(0<=v.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(a){}return 1}();this.renderTemplateSource=function(b,e,f,g){g=g||w;f=f||{};if(2>a)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var h=b.data("precompiled");h||(h=b.text()||"",h=v.template(null,"{{ko_with $item.koBindingContext}}"+h+"{{/ko_with}}"),b.data("precompiled",h));b=[e.$data];e=v.extend({koBindingContext:e},f.templateOptions);e=v.tmpl(h,b,e);e.appendTo(g.createElement("div"));
v.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return"{{ko_code ((function() { return "+a+" })()) }}"};this.addTemplate=function(a,b){w.write("<script type='text/html' id='"+a+"'>"+b+"\x3c/script>")};0<a&&(v.tmpl.tag.ko_code={open:"__.push($1 || '');"},v.tmpl.tag.ko_with={open:"with($1) {",close:"} "})};a.Za.prototype=new a.ca;a.Za.prototype.constructor=a.Za;var b=new a.Za;0<b.Gd&&a.ec(b);a.b("jqueryTmplTemplateEngine",a.Za)})()})})();})();
/*
* jquery-match-height 0.7.2 by @liabru
* http://brm.io/jquery-match-height/
* License MIT
*/
!function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof module&&module.exports?module.exports=t(require("jquery")):t(jQuery)}(function(t){var e=-1,o=-1,n=function(t){return parseFloat(t)||0},a=function(e){var o=1,a=t(e),i=null,r=[];return a.each(function(){var e=t(this),a=e.offset().top-n(e.css("margin-top")),s=r.length>0?r[r.length-1]:null;null===s?r.push(e):Math.floor(Math.abs(i-a))<=o?r[r.length-1]=s.add(e):r.push(e),i=a}),r},i=function(e){var o={
    byRow:!0,property:"height",target:null,remove:!1};return"object"==typeof e?t.extend(o,e):("boolean"==typeof e?o.byRow=e:"remove"===e&&(o.remove=!0),o)},r=t.fn.matchHeight=function(e){var o=i(e);if(o.remove){var n=this;return this.css(o.property,""),t.each(r._groups,function(t,e){e.elements=e.elements.not(n)}),this}return this.length<=1&&!o.target?this:(r._groups.push({elements:this,options:o}),r._apply(this,o),this)};r.version="0.7.2",r._groups=[],r._throttle=80,r._maintainScroll=!1,r._beforeUpdate=null,
    r._afterUpdate=null,r._rows=a,r._parse=n,r._parseOptions=i,r._apply=function(e,o){var s=i(o),h=t(e),l=[h],c=t(window).scrollTop(),p=t("html").outerHeight(!0),u=h.parents().filter(":hidden");return u.each(function(){var e=t(this);e.data("style-cache",e.attr("style"))}),u.css("display","block"),s.byRow&&!s.target&&(h.each(function(){var e=t(this),o=e.css("display");"inline-block"!==o&&"flex"!==o&&"inline-flex"!==o&&(o="block"),e.data("style-cache",e.attr("style")),e.css({display:o,"padding-top":"0",
    "padding-bottom":"0","margin-top":"0","margin-bottom":"0","border-top-width":"0","border-bottom-width":"0",height:"100px",overflow:"hidden"})}),l=a(h),h.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||"")})),t.each(l,function(e,o){var a=t(o),i=0;if(s.target)i=s.target.outerHeight(!1);else{if(s.byRow&&a.length<=1)return void a.css(s.property,"");a.each(function(){var e=t(this),o=e.attr("style"),n=e.css("display");"inline-block"!==n&&"flex"!==n&&"inline-flex"!==n&&(n="block");var a={
    display:n};a[s.property]="",e.css(a),e.outerHeight(!1)>i&&(i=e.outerHeight(!1)),o?e.attr("style",o):e.css("display","")})}a.each(function(){var e=t(this),o=0;s.target&&e.is(s.target)||("border-box"!==e.css("box-sizing")&&(o+=n(e.css("border-top-width"))+n(e.css("border-bottom-width")),o+=n(e.css("padding-top"))+n(e.css("padding-bottom"))),e.css(s.property,i-o+"px"))})}),u.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||null)}),r._maintainScroll&&t(window).scrollTop(c/p*t("html").outerHeight(!0)),
    this},r._applyDataApi=function(){var e={};t("[data-match-height], [data-mh]").each(function(){var o=t(this),n=o.attr("data-mh")||o.attr("data-match-height");n in e?e[n]=e[n].add(o):e[n]=o}),t.each(e,function(){this.matchHeight(!0)})};var s=function(e){r._beforeUpdate&&r._beforeUpdate(e,r._groups),t.each(r._groups,function(){r._apply(this.elements,this.options)}),r._afterUpdate&&r._afterUpdate(e,r._groups)};r._update=function(n,a){if(a&&"resize"===a.type){var i=t(window).width();if(i===e)return;e=i;
}n?o===-1&&(o=setTimeout(function(){s(a),o=-1},r._throttle)):s(a)},t(r._applyDataApi);var h=t.fn.on?"on":"bind";t(window)[h]("load",function(t){r._update(!1,t)}),t(window)[h]("resize orientationchange",function(t){r._update(!0,t)})});
/**
* simplePagination.js v1.6
* A simple jQuery pagination plugin.
* http://flaviusmatis.github.com/simplePagination.js/
*
* Copyright 2012, Flavius Matis
* Released under the MIT license.
* http://flaviusmatis.github.com/license.html
*/

(function($){

	var methods = {
		init: function(options) {
			var o = $.extend({
				items: 1,
				itemsOnPage: 1,
				pages: 0,
				displayedPages: 5,
				edges: 2,
				currentPage: 0,
				useAnchors: true,
				hrefTextPrefix: '#page-',
				hrefTextSuffix: '',
				prevText: 'Prev',
				nextText: 'Next',
				ellipseText: '&hellip;',
				ellipsePageSet: true,
				cssStyle: 'light-theme',
				listStyle: '',
				labelMap: [],
				selectOnClick: true,
				nextAtFront: false,
				invertPageOrder: false,
				useStartEdge : true,
				useEndEdge : true,
				onPageClick: function(pageNumber, event) {
					// Callback triggered when a page is clicked
					// Page number is given as an optional parameter
				},
				onInit: function() {
					// Callback triggered immediately after initialization
				}
			}, options || {});

			var self = this;

			o.pages = o.pages ? o.pages : Math.ceil(o.items / o.itemsOnPage) ? Math.ceil(o.items / o.itemsOnPage) : 1;
			if (o.currentPage)
				o.currentPage = o.currentPage - 1;
			else
				o.currentPage = !o.invertPageOrder ? 0 : o.pages - 1;
			o.halfDisplayed = o.displayedPages / 2;

			this.each(function() {
				self.addClass(o.cssStyle + ' simple-pagination').data('pagination', o);
				methods._draw.call(self);
			});

			o.onInit();

			return this;
		},

		selectPage: function(page) {
			methods._selectPage.call(this, page - 1);
			return this;
		},

		prevPage: function() {
			var o = this.data('pagination');
			if (!o.invertPageOrder) {
				if (o.currentPage > 0) {
					methods._selectPage.call(this, o.currentPage - 1);
				}
			} else {
				if (o.currentPage < o.pages - 1) {
					methods._selectPage.call(this, o.currentPage + 1);
				}
			}
			return this;
		},

		nextPage: function() {
			var o = this.data('pagination');
			if (!o.invertPageOrder) {
				if (o.currentPage < o.pages - 1) {
					methods._selectPage.call(this, o.currentPage + 1);
				}
			} else {
				if (o.currentPage > 0) {
					methods._selectPage.call(this, o.currentPage - 1);
				}
			}
			return this;
		},

		getPagesCount: function() {
			return this.data('pagination').pages;
		},

		setPagesCount: function(count) {
			this.data('pagination').pages = count;
		},

		getCurrentPage: function () {
			return this.data('pagination').currentPage + 1;
		},

		destroy: function(){
			this.empty();
			return this;
		},

		drawPage: function (page) {
			var o = this.data('pagination');
			o.currentPage = page - 1;
			this.data('pagination', o);
			methods._draw.call(this);
			return this;
		},

		redraw: function(){
			methods._draw.call(this);
			return this;
		},

		disable: function(){
			var o = this.data('pagination');
			o.disabled = true;
			this.data('pagination', o);
			methods._draw.call(this);
			return this;
		},

		enable: function(){
			var o = this.data('pagination');
			o.disabled = false;
			this.data('pagination', o);
			methods._draw.call(this);
			return this;
		},

		updateItems: function (newItems) {
			var o = this.data('pagination');
			o.items = newItems;
			o.pages = methods._getPages(o);
			this.data('pagination', o);
			methods._draw.call(this);
		},

		updateItemsOnPage: function (itemsOnPage) {
			var o = this.data('pagination');
			o.itemsOnPage = itemsOnPage;
			o.pages = methods._getPages(o);
			this.data('pagination', o);
			methods._selectPage.call(this, 0);
			return this;
		},

		getItemsOnPage: function() {
			return this.data('pagination').itemsOnPage;
		},

		_draw: function() {
			var	o = this.data('pagination'),
				interval = methods._getInterval(o),
				i,
				tagName;

			methods.destroy.call(this);

			tagName = (typeof this.prop === 'function') ? this.prop('tagName') : this.attr('tagName');

			var $panel = tagName === 'UL' ? this : $('<ul' + (o.listStyle ? ' class="' + o.listStyle + '"' : '') + '></ul>').appendTo(this);

			// Generate Prev link
			if (o.prevText) {
				methods._appendItem.call(this, !o.invertPageOrder ? o.currentPage - 1 : o.currentPage + 1, {text: o.prevText, classes: 'prev'});
			}

			// Generate Next link (if option set for at front)
			if (o.nextText && o.nextAtFront) {
				methods._appendItem.call(this, !o.invertPageOrder ? o.currentPage + 1 : o.currentPage - 1, {text: o.nextText, classes: 'next'});
			}

			// Generate start edges
			if (!o.invertPageOrder) {
				if (interval.start > 0 && o.edges > 0) {
					if(o.useStartEdge) {
						var end = Math.min(o.edges, interval.start);
						for (i = 0; i < end; i++) {
							methods._appendItem.call(this, i);
						}
					}
					if (o.edges < interval.start && (interval.start - o.edges != 1)) {
						$panel.append('<li class="disabled"><span class="ellipse">' + o.ellipseText + '</span></li>');
					} else if (interval.start - o.edges == 1) {
						methods._appendItem.call(this, o.edges);
					}
				}
			} else {
				if (interval.end < o.pages && o.edges > 0) {
					if(o.useStartEdge) {
						var begin = Math.max(o.pages - o.edges, interval.end);
						for (i = o.pages - 1; i >= begin; i--) {
							methods._appendItem.call(this, i);
						}
					}

					if (o.pages - o.edges > interval.end && (o.pages - o.edges - interval.end != 1)) {
						$panel.append('<li class="disabled"><span class="ellipse">' + o.ellipseText + '</span></li>');
					} else if (o.pages - o.edges - interval.end == 1) {
						methods._appendItem.call(this, interval.end);
					}
				}
			}

			// Generate interval links
			if (!o.invertPageOrder) {
				for (i = interval.start; i < interval.end; i++) {
					methods._appendItem.call(this, i);
				}
			} else {
				for (i = interval.end - 1; i >= interval.start; i--) {
					methods._appendItem.call(this, i);
				}
			}

			// Generate end edges
			if (!o.invertPageOrder) {
				if (interval.end < o.pages && o.edges > 0) {
					if (o.pages - o.edges > interval.end && (o.pages - o.edges - interval.end != 1)) {
						$panel.append('<li class="disabled"><span class="ellipse">' + o.ellipseText + '</span></li>');
					} else if (o.pages - o.edges - interval.end == 1) {
						methods._appendItem.call(this, interval.end);
					}
					if(o.useEndEdge) {
						var begin = Math.max(o.pages - o.edges, interval.end);
						for (i = begin; i < o.pages; i++) {
							methods._appendItem.call(this, i);
						}
					}
				}
			} else {
				if (interval.start > 0 && o.edges > 0) {
					if (o.edges < interval.start && (interval.start - o.edges != 1)) {
						$panel.append('<li class="disabled"><span class="ellipse">' + o.ellipseText + '</span></li>');
					} else if (interval.start - o.edges == 1) {
						methods._appendItem.call(this, o.edges);
					}

					if(o.useEndEdge) {
						var end = Math.min(o.edges, interval.start);
						for (i = end - 1; i >= 0; i--) {
							methods._appendItem.call(this, i);
						}
					}
				}
			}

			// Generate Next link (unless option is set for at front)
			if (o.nextText && !o.nextAtFront) {
				methods._appendItem.call(this, !o.invertPageOrder ? o.currentPage + 1 : o.currentPage - 1, {text: o.nextText, classes: 'next'});
			}

			if (o.ellipsePageSet && !o.disabled) {
				methods._ellipseClick.call(this, $panel);
			}

		},

		_getPages: function(o) {
			var pages = Math.ceil(o.items / o.itemsOnPage);
			return pages || 1;
		},

		_getInterval: function(o) {
			return {
				start: Math.ceil(o.currentPage > o.halfDisplayed ? Math.max(Math.min(o.currentPage - o.halfDisplayed, (o.pages - o.displayedPages)), 0) : 0),
				end: Math.ceil(o.currentPage > o.halfDisplayed ? Math.min(o.currentPage + o.halfDisplayed, o.pages) : Math.min(o.displayedPages, o.pages))
			};
		},

		_appendItem: function(pageIndex, opts) {
			var self = this, options, $link, o = self.data('pagination'), $linkWrapper = $('<li></li>'), $ul = self.find('ul');

			pageIndex = pageIndex < 0 ? 0 : (pageIndex < o.pages ? pageIndex : o.pages - 1);

			options = {
				text: pageIndex + 1,
				classes: ''
			};

			if (o.labelMap.length && o.labelMap[pageIndex]) {
				options.text = o.labelMap[pageIndex];
			}

			options = $.extend(options, opts || {});

			if (pageIndex == o.currentPage || o.disabled) {
				if (o.disabled || options.classes === 'prev' || options.classes === 'next') {
					$linkWrapper.addClass('disabled');
				} else {
					$linkWrapper.addClass('active');
				}
				$link = $('<span class="current">' + (options.text) + '</span>');
			} else {
				if (o.useAnchors) {
					$link = $('<a class="page-link">' + (options.text) + '</a>');
				} else {
					$link = $('<span >' + (options.text) + '</span>');
				}
				$link.click(function(event){
					return methods._selectPage.call(self, pageIndex, event);
				});
			}

			if (options.classes) {
				$link.addClass(options.classes);
			}

			$linkWrapper.append($link);

			if ($ul.length) {
				$ul.append($linkWrapper);
			} else {
				self.append($linkWrapper);
			}
		},

		_selectPage: function(pageIndex, event) {
			var o = this.data('pagination');
			o.currentPage = pageIndex;
			if (o.selectOnClick) {
				methods._draw.call(this);
			}
			return o.onPageClick(pageIndex + 1, event);
		},


		_ellipseClick: function($panel) {
			var self = this,
				o = this.data('pagination'),
				$ellip = $panel.find('.ellipse');
			$ellip.addClass('clickable').parent().removeClass('disabled');
			$ellip.click(function(event) {
				if (!o.disable) {
					var $this = $(this),
						val = (parseInt($this.parent().prev().text(), 10) || 0) + 1;
					$this
						.html('<input type="number" min="1" max="' + o.pages + '" step="1" value="' + val + '">')
						.find('input')
						.focus()
						.click(function(event) {
							// prevent input number arrows from bubbling a click event on $ellip
							event.stopPropagation();
						})
						.keyup(function(event) {
							var val = $(this).val();
							if (event.which === 13 && val !== '') {
								// enter to accept
								if ((val>0)&&(val<=o.pages))
								methods._selectPage.call(self, val - 1);
							} else if (event.which === 27) {
								// escape to cancel
								$ellip.empty().html(o.ellipseText);
							}
						})
						.bind('blur', function(event) {
							var val = $(this).val();
							if (val !== '') {
								methods._selectPage.call(self, val - 1);
							}
							$ellip.empty().html(o.ellipseText);
							return false;
						});
				}
				return false;
			});
		}

	};

	$.fn.pagination = function(method) {

		// Method calling logic
		if (methods[method] && method.charAt(0) != '_') {
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if (typeof method === 'object' || !method) {
			return methods.init.apply(this, arguments);
		} else {
			$.error('Method ' +  method + ' does not exist on jQuery.pagination');
		}

	};

})(jQuery);

!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(jQuery||require("jquery")):e(jQuery)}(function(be){be.fn.jScrollPane=function(o){function s(w,e){var y,b,k,T,C,S,x,D,B,H,P,z,A,W,Y,M,X,L,R,t,E,I,F,V,q,O,G,N,K,Q,U,$,J,Z,_=this,r=!0,a=!0,l=!1,c=!1,o=w.clone(!1,!1).empty(),ee=!1,te=be.fn.mwheelIntent?"mwheelIntent.jsp":"mousewheel.jsp",oe=function(){0<y.resizeSensorDelay?setTimeout(function(){se(y)},y.resizeSensorDelay):se(y)};function se(e){var t,o,s,i,n,r,a,l,c,p,u,d,f,h,g,j,v=!1,m=!1;if(y=e,void 0===b)n=w.scrollTop(),r=w.scrollLeft(),w.css({overflow:"hidden",padding:0}),k=w.innerWidth()+J,T=w.innerHeight(),w.width(k),b=be('<div class="jspPane" />').css("padding",$).append(w.children()),C=be('<div class="jspContainer" />').css({width:k+"px",height:T+"px"}).append(b).appendTo(w);else{if(w.css("width",""),C.css({width:"auto",height:"auto"}),b.css("position","static"),a=w.innerWidth()+J,l=w.innerHeight(),b.css("position","absolute"),v=y.stickToBottom&&(20<(p=x-T)&&p-we()<10),m=y.stickToRight&&(20<(c=S-k)&&c-me()<10),i=a!==k||l!==T,k=a,T=l,C.css({width:k,height:T}),!i&&Z==S&&b.outerHeight()==x)return void w.width(k);Z=S,b.css("width",""),w.width(k),C.find(">.jspVerticalBar,>.jspHorizontalBar").remove().end()}b.css("overflow","auto"),S=e.contentWidth?e.contentWidth:b[0].scrollWidth,x=b[0].scrollHeight,b.css("overflow",""),D=S/k,H=1<(B=x/T)||y.alwaysShowVScroll,(P=1<D||y.alwaysShowHScroll)||H?(w.addClass("jspScrollable"),(t=y.maintainPosition&&(W||X))&&(o=me(),s=we()),H&&(C.append(be('<div class="jspVerticalBar" />').append(be('<div class="jspCap jspCapTop" />'),be('<div class="jspTrack" />').append(be('<div class="jspDrag" />').append(be('<div class="jspDragTop" />'),be('<div class="jspDragBottom" />'))),be('<div class="jspCap jspCapBottom" />'))),L=C.find(">.jspVerticalBar"),R=L.find(">.jspTrack"),z=R.find(">.jspDrag"),y.showArrows&&(F=be('<a class="jspArrow jspArrowUp" />').on("mousedown.jsp",le(0,-1)).on("click.jsp",ye),V=be('<a class="jspArrow jspArrowDown" />').on("mousedown.jsp",le(0,1)).on("click.jsp",ye),y.arrowScrollOnHover&&(F.on("mouseover.jsp",le(0,-1,F)),V.on("mouseover.jsp",le(0,1,V))),ae(R,y.verticalArrowPositions,F,V)),E=T,C.find(">.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow").each(function(){E-=be(this).outerHeight()}),z.on("mouseenter",function(){z.addClass("jspHover")}).on("mouseleave",function(){z.removeClass("jspHover")}).on("mousedown.jsp",function(e){be("html").on("dragstart.jsp selectstart.jsp",ye),z.addClass("jspActive");var t=e.pageY-z.position().top;return be("html").on("mousemove.jsp",function(e){ue(e.pageY-t,!1)}).on("mouseup.jsp mouseleave.jsp",pe),!1}),ne()),P&&(C.append(be('<div class="jspHorizontalBar" />').append(be('<div class="jspCap jspCapLeft" />'),be('<div class="jspTrack" />').append(be('<div class="jspDrag" />').append(be('<div class="jspDragLeft" />'),be('<div class="jspDragRight" />'))),be('<div class="jspCap jspCapRight" />'))),q=C.find(">.jspHorizontalBar"),O=q.find(">.jspTrack"),Y=O.find(">.jspDrag"),y.showArrows&&(K=be('<a class="jspArrow jspArrowLeft" />').on("mousedown.jsp",le(-1,0)).on("click.jsp",ye),Q=be('<a class="jspArrow jspArrowRight" />').on("mousedown.jsp",le(1,0)).on("click.jsp",ye),y.arrowScrollOnHover&&(K.on("mouseover.jsp",le(-1,0,K)),Q.on("mouseover.jsp",le(1,0,Q))),ae(O,y.horizontalArrowPositions,K,Q)),Y.on("mouseenter",function(){Y.addClass("jspHover")}).on("mouseleave",function(){Y.removeClass("jspHover")}).on("mousedown.jsp",function(e){be("html").on("dragstart.jsp selectstart.jsp",ye),Y.addClass("jspActive");var t=e.pageX-Y.position().left;return be("html").on("mousemove.jsp",function(e){fe(e.pageX-t,!1)}).on("mouseup.jsp mouseleave.jsp",pe),!1}),G=C.innerWidth(),re()),function(){if(P&&H){var e=O.outerHeight(),t=R.outerWidth();E-=e,be(q).find(">.jspCap:visible,>.jspArrow").each(function(){G+=be(this).outerWidth()}),G-=t,T-=t,k-=e,O.parent().append(be('<div class="jspCorner" />').css("width",e+"px")),ne(),re()}P&&b.width(C.outerWidth()-J+"px");x=b.outerHeight(),B=x/T,P&&((N=Math.ceil(1/D*G))>y.horizontalDragMaxWidth?N=y.horizontalDragMaxWidth:N<y.horizontalDragMinWidth&&(N=y.horizontalDragMinWidth),Y.css("width",N+"px"),M=G-N,he(X));H&&((I=Math.ceil(1/B*E))>y.verticalDragMaxHeight?I=y.verticalDragMaxHeight:I<y.verticalDragMinHeight&&(I=y.verticalDragMinHeight),z.css("height",I+"px"),A=E-I,de(W))}(),t&&(je(m?S-k:o,!1),ge(v?x-T:s,!1)),b.find(":input,a").off("focus.jsp").on("focus.jsp",function(e){ve(e.target,!1)}),C.off(te).on(te,function(e,t,o,s){X||(X=0),W||(W=0);var i=X,n=W,r=e.deltaFactor||y.mouseWheelSpeed;return _.scrollBy(o*r,-s*r,!1),i==X&&n==W}),j=!1,C.off("touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick").on("touchstart.jsp",function(e){var t=e.originalEvent.touches[0];u=me(),d=we(),f=t.pageX,h=t.pageY,j=!(g=!1)}).on("touchmove.jsp",function(e){if(j){var t=e.originalEvent.touches[0],o=X,s=W;return _.scrollTo(u+f-t.pageX,d+h-t.pageY),g=g||5<Math.abs(f-t.pageX)||5<Math.abs(h-t.pageY),o==X&&s==W}}).on("touchend.jsp",function(e){j=!1}).on("click.jsp-touchclick",function(e){if(g)return g=!1}),y.enableKeyboardNavigation&&function(){var s,i,n=[];P&&n.push(q[0]);H&&n.push(L[0]);b.on("focus.jsp",function(){w.focus()}),w.attr("tabindex",0).off("keydown.jsp keypress.jsp").on("keydown.jsp",function(e){if(e.target===this||n.length&&be(e.target).closest(n).length){var t=X,o=W;switch(e.keyCode){case 40:case 38:case 34:case 32:case 33:case 39:case 37:s=e.keyCode,r();break;case 35:ge(x-T),s=null;break;case 36:ge(0),s=null}return!(i=e.keyCode==s&&t!=X||o!=W)}}).on("keypress.jsp",function(e){if(e.keyCode==s&&r(),e.target===this||n.length&&be(e.target).closest(n).length)return!i}),y.hideFocus?(w.css("outline","none"),"hideFocus"in C[0]&&w.attr("hideFocus",!0)):(w.css("outline",""),"hideFocus"in C[0]&&w.attr("hideFocus",!1));function r(){var e=X,t=W;switch(s){case 40:_.scrollByY(y.keyboardSpeed,!1);break;case 38:_.scrollByY(-y.keyboardSpeed,!1);break;case 34:case 32:_.scrollByY(T*y.scrollPagePercent,!1);break;case 33:_.scrollByY(-T*y.scrollPagePercent,!1);break;case 39:_.scrollByX(y.keyboardSpeed,!1);break;case 37:_.scrollByX(-y.keyboardSpeed,!1)}return i=e!=X||t!=W}}(),y.clickOnTrack&&function(){ce(),H&&R.on("mousedown.jsp",function(i){if(void 0===i.originalTarget||i.originalTarget==i.currentTarget){var n,r=be(this),e=r.offset(),a=i.pageY-e.top-W,l=!0,c=function(){var e=r.offset(),t=i.pageY-e.top-I/2,o=T*y.scrollPagePercent,s=A*o/(x-T);if(a<0)t<W-s?_.scrollByY(-o):ue(t);else{if(!(0<a))return void p();W+s<t?_.scrollByY(o):ue(t)}n=setTimeout(c,l?y.initialDelay:y.trackClickRepeatFreq),l=!1},p=function(){n&&clearTimeout(n),n=null,be(document).off("mouseup.jsp",p)};return c(),be(document).on("mouseup.jsp",p),!1}});P&&O.on("mousedown.jsp",function(i){if(void 0===i.originalTarget||i.originalTarget==i.currentTarget){var n,r=be(this),e=r.offset(),a=i.pageX-e.left-X,l=!0,c=function(){var e=r.offset(),t=i.pageX-e.left-N/2,o=k*y.scrollPagePercent,s=M*o/(S-k);if(a<0)t<X-s?_.scrollByX(-o):fe(t);else{if(!(0<a))return void p();X+s<t?_.scrollByX(o):fe(t)}n=setTimeout(c,l?y.initialDelay:y.trackClickRepeatFreq),l=!1},p=function(){n&&clearTimeout(n),n=null,be(document).off("mouseup.jsp",p)};return c(),be(document).on("mouseup.jsp",p),!1}})}(),function(){if(location.hash&&1<location.hash.length){var e,t,o=escape(location.hash.substr(1));try{e=be("#"+o+', a[name="'+o+'"]')}catch(e){return}e.length&&b.find(o)&&(0===C.scrollTop()?t=setInterval(function(){0<C.scrollTop()&&(ve(e,!0),be(document).scrollTop(C.position().top),clearInterval(t))},50):(ve(e,!0),be(document).scrollTop(C.position().top)))}}(),y.hijackInternalLinks&&function(){if(be(document.body).data("jspHijack"))return;be(document.body).data("jspHijack",!0),be(document.body).delegate('a[href*="#"]',"click",function(e){var t,o,s,i,n,r=this.href.substr(0,this.href.indexOf("#")),a=location.href;if(-1!==location.href.indexOf("#")&&(a=location.href.substr(0,location.href.indexOf("#"))),r===a){t=escape(this.href.substr(this.href.indexOf("#")+1));try{o=be("#"+t+', a[name="'+t+'"]')}catch(e){return}o.length&&(s=o.closest(".jspScrollable"),s.data("jsp").scrollToElement(o,!0),s[0].scrollIntoView&&(i=be(window).scrollTop(),((n=o.offset().top)<i||n>i+be(window).height())&&s[0].scrollIntoView()),e.preventDefault())}})}()):(w.removeClass("jspScrollable"),b.css({top:0,left:0,width:C.width()-J}),C.off(te),b.find(":input,a").off("focus.jsp"),w.attr("tabindex","-1").removeAttr("tabindex").off("keydown.jsp keypress.jsp"),b.off(".jsp"),ce()),y.resizeSensor||!y.autoReinitialise||U?y.resizeSensor||y.autoReinitialise||!U||clearInterval(U):U=setInterval(function(){se(y)},y.autoReinitialiseDelay),y.resizeSensor&&!ee&&(ie(b,oe),ie(w,oe),ie(w.parent(),oe),window.addEventListener("resize",oe),ee=!0),n&&w.scrollTop(0)&&ge(n,!1),r&&w.scrollLeft(0)&&je(r,!1),w.trigger("jsp-initialised",[P||H])}function ie(e,t){var o,s,i=document.createElement("div"),n=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),l=document.createElement("div");i.style.cssText="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;",n.style.cssText="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;",a.style.cssText="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;",r.style.cssText="position: absolute; left: 0; top: 0;",l.style.cssText="position: absolute; left: 0; top: 0; width: 200%; height: 200%;";var c=function(){r.style.width=n.offsetWidth+10+"px",r.style.height=n.offsetHeight+10+"px",n.scrollLeft=n.scrollWidth,n.scrollTop=n.scrollHeight,a.scrollLeft=a.scrollWidth,a.scrollTop=a.scrollHeight,o=e.width(),s=e.height()};n.addEventListener("scroll",function(){(e.width()>o||e.height()>s)&&t.apply(this,[]),c()}.bind(this)),a.addEventListener("scroll",function(){(e.width()<o||e.height()<s)&&t.apply(this,[]),c()}.bind(this)),n.appendChild(r),a.appendChild(l),i.appendChild(n),i.appendChild(a),e.append(i),"static"===window.getComputedStyle(e[0],null).getPropertyValue("position")&&(e[0].style.position="relative"),c()}function ne(){R.height(E+"px"),W=0,t=y.verticalGutter+R.outerWidth(),b.width(k-t-J);try{0===L.position().left&&b.css("margin-left",t+"px")}catch(e){}}function re(){C.find(">.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow").each(function(){G-=be(this).outerWidth()}),O.width(G+"px"),X=0}function ae(e,t,o,s){var i,n="before",r="after";"os"==t&&(t=/Mac/.test(navigator.platform)?"after":"split"),t==n?r=t:t==r&&(n=t,i=o,o=s,s=i),e[n](o)[r](s)}function le(e,t,o){return function(){return function(e,t,o,s){o=be(o).addClass("jspActive");var i,n,r=!0,a=function(){0!==e&&_.scrollByX(e*y.arrowButtonSpeed),0!==t&&_.scrollByY(t*y.arrowButtonSpeed),n=setTimeout(a,r?y.initialDelay:y.arrowRepeatFreq),r=!1};a(),i=s?"mouseout.jsp":"mouseup.jsp",(s=s||be("html")).on(i,function(){o.removeClass("jspActive"),n&&clearTimeout(n),n=null,s.off(i)})}(e,t,this,o),this.blur(),!1}}function ce(){O&&O.off("mousedown.jsp"),R&&R.off("mousedown.jsp")}function pe(){be("html").off("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp"),z&&z.removeClass("jspActive"),Y&&Y.removeClass("jspActive")}function ue(e,t){if(H){e<0?e=0:A<e&&(e=A);var o=new be.Event("jsp-will-scroll-y");if(w.trigger(o,[e]),!o.isDefaultPrevented()){var s=e||0,i=0===s,n=s==A,r=-(e/A)*(x-T);void 0===t&&(t=y.animateScroll),t?_.animate(z,"top",e,de,function(){w.trigger("jsp-user-scroll-y",[-r,i,n])}):(z.css("top",e),de(e),w.trigger("jsp-user-scroll-y",[-r,i,n]))}}}function de(e){void 0===e&&(e=z.position().top),C.scrollTop(0);var t,o,s=0===(W=e||0),i=W==A,n=-(e/A)*(x-T);r==s&&l==i||(r=s,l=i,w.trigger("jsp-arrow-change",[r,l,a,c])),t=s,o=i,y.showArrows&&(F[t?"addClass":"removeClass"]("jspDisabled"),V[o?"addClass":"removeClass"]("jspDisabled")),b.css("top",n),w.trigger("jsp-scroll-y",[-n,s,i]).trigger("scroll")}function fe(e,t){if(P){e<0?e=0:M<e&&(e=M);var o=new be.Event("jsp-will-scroll-x");if(w.trigger(o,[e]),!o.isDefaultPrevented()){var s=e||0,i=0===s,n=s==M,r=-(e/M)*(S-k);void 0===t&&(t=y.animateScroll),t?_.animate(Y,"left",e,he,function(){w.trigger("jsp-user-scroll-x",[-r,i,n])}):(Y.css("left",e),he(e),w.trigger("jsp-user-scroll-x",[-r,i,n]))}}}function he(e){void 0===e&&(e=Y.position().left),C.scrollTop(0);var t,o,s=0===(X=e||0),i=X==M,n=-(e/M)*(S-k);a==s&&c==i||(a=s,c=i,w.trigger("jsp-arrow-change",[r,l,a,c])),t=s,o=i,y.showArrows&&(K[t?"addClass":"removeClass"]("jspDisabled"),Q[o?"addClass":"removeClass"]("jspDisabled")),b.css("left",n),w.trigger("jsp-scroll-x",[-n,s,i]).trigger("scroll")}function ge(e,t){ue(e/(x-T)*A,t)}function je(e,t){fe(e/(S-k)*M,t)}function ve(e,t,o){var s,i,n,r,a,l,c,p,u,d=0,f=0;try{s=be(e)}catch(e){return}for(i=s.outerHeight(),n=s.outerWidth(),C.scrollTop(0),C.scrollLeft(0);!s.is(".jspPane");)if(d+=s.position().top,f+=s.position().left,s=s.offsetParent(),/^body|html$/i.test(s[0].nodeName))return;l=(r=we())+T,d<r||t?p=d-y.horizontalGutter:l<d+i&&(p=d-T+i+y.horizontalGutter),isNaN(p)||ge(p,o),c=(a=me())+k,f<a||t?u=f-y.horizontalGutter:c<f+n&&(u=f-k+n+y.horizontalGutter),isNaN(u)||je(u,o)}function me(){return-b.position().left}function we(){return-b.position().top}function ye(){return!1}"border-box"===w.css("box-sizing")?J=$=0:($=w.css("paddingTop")+" "+w.css("paddingRight")+" "+w.css("paddingBottom")+" "+w.css("paddingLeft"),J=(parseInt(w.css("paddingLeft"),10)||0)+(parseInt(w.css("paddingRight"),10)||0)),be.extend(_,{reinitialise:function(e){se(e=be.extend({},y,e))},scrollToElement:function(e,t,o){ve(e,t,o)},scrollTo:function(e,t,o){je(e,o),ge(t,o)},scrollToX:function(e,t){je(e,t)},scrollToY:function(e,t){ge(e,t)},scrollToPercentX:function(e,t){je(e*(S-k),t)},scrollToPercentY:function(e,t){ge(e*(x-T),t)},scrollBy:function(e,t,o){_.scrollByX(e,o),_.scrollByY(t,o)},scrollByX:function(e,t){fe((me()+Math[e<0?"floor":"ceil"](e))/(S-k)*M,t)},scrollByY:function(e,t){ue((we()+Math[e<0?"floor":"ceil"](e))/(x-T)*A,t)},positionDragX:function(e,t){fe(e,t)},positionDragY:function(e,t){ue(e,t)},animate:function(e,t,o,s,i){var n={};n[t]=o,e.animate(n,{duration:y.animateDuration,easing:y.animateEase,queue:!1,step:s,complete:i})},getContentPositionX:function(){return me()},getContentPositionY:function(){return we()},getContentWidth:function(){return S},getContentHeight:function(){return x},getPercentScrolledX:function(){return me()/(S-k)},getPercentScrolledY:function(){return we()/(x-T)},getIsScrollableH:function(){return P},getIsScrollableV:function(){return H},getContentPane:function(){return b},scrollToBottom:function(e){ue(A,e)},hijackInternalLinks:be.noop,destroy:function(){var e,t;e=we(),t=me(),w.removeClass("jspScrollable").off(".jsp"),b.off(".jsp"),w.replaceWith(o.append(b.children())),o.scrollTop(e),o.scrollLeft(t),U&&clearInterval(U)}}),se(e)}return o=be.extend({},be.fn.jScrollPane.defaults,o),be.each(["arrowButtonSpeed","trackClickSpeed","keyboardSpeed"],function(){o[this]=o[this]||o.speed}),this.each(function(){var e=be(this),t=e.data("jsp");t?t.reinitialise(o):(be("script",e).filter('[type="text/javascript"],:not([type])').remove(),t=new s(e,o),e.data("jsp",t))})},be.fn.jScrollPane.defaults={showArrows:!1,maintainPosition:!0,stickToBottom:!1,stickToRight:!1,clickOnTrack:!0,autoReinitialise:!1,autoReinitialiseDelay:500,verticalDragMinHeight:0,verticalDragMaxHeight:99999,horizontalDragMinWidth:0,horizontalDragMaxWidth:99999,contentWidth:void 0,animateScroll:!1,animateDuration:300,animateEase:"linear",hijackInternalLinks:!1,verticalGutter:4,horizontalGutter:4,mouseWheelSpeed:3,arrowButtonSpeed:0,arrowRepeatFreq:50,arrowScrollOnHover:!1,trackClickSpeed:0,trackClickRepeatFreq:70,verticalArrowPositions:"split",horizontalArrowPositions:"split",enableKeyboardNavigation:!0,hideFocus:!1,keyboardSpeed:0,initialDelay:300,speed:30,scrollPagePercent:.8,alwaysShowVScroll:!1,alwaysShowHScroll:!1,resizeSensor:!1,resizeSensorDelay:0}});
/*!
 * jQuery Mousewheel 3.1.12
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

(function (factory) {
    if ( typeof define === 'function' && define.amd ) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS style for Browserify
        module.exports = factory;
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?
            ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice  = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ( $.event.fixHooks ) {
        for ( var i = toFix.length; i; ) {
            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.12',

        setup: function() {
            if ( this.addEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.addEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function() {
            if ( this.removeEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.removeEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = null;
            }
            // Clean up the data we added to the element
            $.removeData(this, 'mousewheel-line-height');
            $.removeData(this, 'mousewheel-page-height');
        },

        getLineHeight: function(elem) {
            var $elem = $(elem),
                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();
            if (!$parent.length) {
                $parent = $('body');
            }
            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;
        },

        getPageHeight: function(elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below
            normalizeOffset: true  // calls getBoundingClientRect for each event
        }
    };

    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function(fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent   = event || window.event,
            args       = slice.call(arguments, 1),
            delta      = 0,
            deltaX     = 0,
            deltaY     = 0,
            absDelta   = 0,
            offsetX    = 0,
            offsetY    = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }
        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }
        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }
        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ( 'deltaY' in orgEvent ) {
            deltaY = orgEvent.deltaY * -1;
            delta  = deltaY;
        }
        if ( 'deltaX' in orgEvent ) {
            deltaX = orgEvent.deltaX;
            if ( deltaY === 0 ) { delta  = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if ( deltaY === 0 && deltaX === 0 ) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if ( orgEvent.deltaMode === 1 ) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta  *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if ( orgEvent.deltaMode === 2 ) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta  *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );

        if ( !lowestDelta || absDelta < lowestDelta ) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
            // Divide all the things by 40!
            delta  /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);
        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);
        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);

        // Normalise offsetX and offsetY properties
        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {
            var boundingRect = this.getBoundingClientRect();
            offsetX = event.clientX - boundingRect.left;
            offsetY = event.clientY - boundingRect.top;
        }

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        event.offsetX = offsetX;
        event.offsetY = offsetY;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));
/*!
 * jQuery BBQ: Back Button & Query Library - v1.3pre - 8/26/2010
 * http://benalman.com/projects/jquery-bbq-plugin/
 *
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

// Script: jQuery BBQ: Back Button & Query Library
//
// *Version: 1.3pre, Last updated: 8/26/2010*
//
// Project Home - http://benalman.com/projects/jquery-bbq-plugin/
// GitHub       - http://github.com/cowboy/jquery-bbq/
// Source       - http://github.com/cowboy/jquery-bbq/raw/master/jquery.ba-bbq.js
// (Minified)   - http://github.com/cowboy/jquery-bbq/raw/master/jquery.ba-bbq.min.js (2.2kb gzipped)
//
// About: License
//
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
//
// About: Examples
//
// These working examples, complete with fully commented code, illustrate a few
// ways in which this plugin can be used.
//
// Basic AJAX     - http://benalman.com/code/projects/jquery-bbq/examples/fragment-basic/
// Advanced AJAX  - http://benalman.com/code/projects/jquery-bbq/examples/fragment-advanced/
// jQuery UI Tabs - http://benalman.com/code/projects/jquery-bbq/examples/fragment-jquery-ui-tabs/
// Deparam        - http://benalman.com/code/projects/jquery-bbq/examples/deparam/
//
// About: Support and Testing
//
// Information about what version or versions of jQuery this plugin has been
// tested with, what browsers it has been tested in, and where the unit tests
// reside (so you can test it yourself).
//
// jQuery Versions - 1.2.6, 1.3.2, 1.4.1, 1.4.2
// Browsers Tested - Internet Explorer 6-8, Firefox 2-4, Chrome 5-6, Safari 3.2-5,
//                   Opera 9.6-10.60, iPhone 3.1, Android 1.6-2.2, BlackBerry 4.6-5.
// Unit Tests      - http://benalman.com/code/projects/jquery-bbq/unit/
//
// About: Release History
//
// 1.3pre - (8/26/2010) Integrated <jQuery hashchange event> v1.3, which adds
//         document.title and document.domain support in IE6/7, BlackBerry
//         support, better Iframe hiding for accessibility reasons, and the new
//         <jQuery.fn.hashchange> "shortcut" method. Added the
//         <jQuery.param.sorted> method which reduces the possibility of
//         extraneous hashchange event triggering. Added the
//         <jQuery.param.fragment.ajaxCrawlable> method which can be used to
//         enable Google "AJAX Crawlable mode."
// 1.2.1 - (2/17/2010) Actually fixed the stale window.location Safari bug from
//         <jQuery hashchange event> in BBQ, which was the main reason for the
//         previous release!
// 1.2   - (2/16/2010) Integrated <jQuery hashchange event> v1.2, which fixes a
//         Safari bug, the event can now be bound before DOM ready, and IE6/7
//         page should no longer scroll when the event is first bound. Also
//         added the <jQuery.param.fragment.noEscape> method, and reworked the
//         <hashchange event (BBQ)> internal "add" method to be compatible with
//         changes made to the jQuery 1.4.2 special events API.
// 1.1.1 - (1/22/2010) Integrated <jQuery hashchange event> v1.1, which fixes an
//         obscure IE8 EmulateIE7 meta tag compatibility mode bug.
// 1.1   - (1/9/2010) Broke out the jQuery BBQ event.special <hashchange event>
//         functionality into a separate plugin for users who want just the
//         basic event & back button support, without all the extra awesomeness
//         that BBQ provides. This plugin will be included as part of jQuery BBQ,
//         but also be available separately. See <jQuery hashchange event>
//         plugin for more information. Also added the <jQuery.bbq.removeState>
//         method and added additional <jQuery.deparam> examples.
// 1.0.3 - (12/2/2009) Fixed an issue in IE 6 where location.search and
//         location.hash would report incorrectly if the hash contained the ?
//         character. Also <jQuery.param.querystring> and <jQuery.param.fragment>
//         will no longer parse params out of a URL that doesn't contain ? or #,
//         respectively.
// 1.0.2 - (10/10/2009) Fixed an issue in IE 6/7 where the hidden IFRAME caused
//         a "This page contains both secure and nonsecure items." warning when
//         used on an https:// page.
// 1.0.1 - (10/7/2009) Fixed an issue in IE 8. Since both "IE7" and "IE8
//         Compatibility View" modes erroneously report that the browser
//         supports the native window.onhashchange event, a slightly more
//         robust test needed to be added.
// 1.0   - (10/2/2009) Initial release

(function($,window){
  '$:nomunge'; // Used by YUI compressor.

  // Some convenient shortcuts.
  var undefined,
    aps = Array.prototype.slice,
    decode = decodeURIComponent,

    // Method / object references.
    jq_param = $.param,
    jq_param_sorted,
    jq_param_fragment,
    jq_deparam,
    jq_deparam_fragment,
    jq_bbq = $.bbq = $.bbq || {},
    jq_bbq_pushState,
    jq_bbq_getState,
    jq_elemUrlAttr,
    special = $.event.special,

    // Reused strings.
    str_hashchange = 'hashchange',
    str_querystring = 'querystring',
    str_fragment = 'fragment',
    str_elemUrlAttr = 'elemUrlAttr',
    str_href = 'href',
    str_src = 'src',

    // Reused RegExp.
    re_params_querystring = /^.*\?|#.*$/g,
    re_params_fragment,
    re_fragment,
    re_no_escape,

    ajax_crawlable,
    fragment_prefix,

    // Used by jQuery.elemUrlAttr.
    elemUrlAttr_cache = {};

  // A few commonly used bits, broken out to help reduce minified file size.

  function is_string( arg ) {
    return typeof arg === 'string';
  };

  // Why write the same function twice? Let's curry! Mmmm, curry..

  function curry( func ) {
    var args = aps.call( arguments, 1 );

    return function() {
      return func.apply( this, args.concat( aps.call( arguments ) ) );
    };
  };

  // Get location.hash (or what you'd expect location.hash to be) sans any
  // leading #. Thanks for making this necessary, Firefox!
  function get_fragment( url ) {
    return url.replace( re_fragment, '$2' );
  };

  // Get location.search (or what you'd expect location.search to be) sans any
  // leading #. Thanks for making this necessary, IE6!
  function get_querystring( url ) {
    return url.replace( /(?:^[^?#]*\?([^#]*).*$)?.*/, '$1' );
  };

  // Section: Param (to string)
  //
  // Method: jQuery.param.querystring
  //
  // Retrieve the query string from a URL or if no arguments are passed, the
  // current window.location.href.
  //
  // Usage:
  //
  // > jQuery.param.querystring( [ url ] );
  //
  // Arguments:
  //
  //  url - (String) A URL containing query string params to be parsed. If url
  //    is not passed, the current window.location.href is used.
  //
  // Returns:
  //
  //  (String) The parsed query string, with any leading "?" removed.
  //

  // Method: jQuery.param.querystring (build url)
  //
  // Merge a URL, with or without pre-existing query string params, plus any
  // object, params string or URL containing query string params into a new URL.
  //
  // Usage:
  //
  // > jQuery.param.querystring( url, params [, merge_mode ] );
  //
  // Arguments:
  //
  //  url - (String) A valid URL for params to be merged into. This URL may
  //    contain a query string and/or fragment (hash).
  //  params - (String) A params string or URL containing query string params to
  //    be merged into url.
  //  params - (Object) A params object to be merged into url.
  //  merge_mode - (Number) Merge behavior defaults to 0 if merge_mode is not
  //    specified, and is as-follows:
  //
  //    * 0: params in the params argument will override any query string
  //         params in url.
  //    * 1: any query string params in url will override params in the params
  //         argument.
  //    * 2: params argument will completely replace any query string in url.
  //
  // Returns:
  //
  //  (String) A URL with a urlencoded query string in the format '?a=b&c=d&e=f'.

  // Method: jQuery.param.fragment
  //
  // Retrieve the fragment (hash) from a URL or if no arguments are passed, the
  // current window.location.href.
  //
  // Usage:
  //
  // > jQuery.param.fragment( [ url ] );
  //
  // Arguments:
  //
  //  url - (String) A URL containing fragment (hash) params to be parsed. If
  //    url is not passed, the current window.location.href is used.
  //
  // Returns:
  //
  //  (String) The parsed fragment (hash) string, with any leading "#" removed.

  // Method: jQuery.param.fragment (build url)
  //
  // Merge a URL, with or without pre-existing fragment (hash) params, plus any
  // object, params string or URL containing fragment (hash) params into a new
  // URL.
  //
  // Usage:
  //
  // > jQuery.param.fragment( url, params [, merge_mode ] );
  //
  // Arguments:
  //
  //  url - (String) A valid URL for params to be merged into. This URL may
  //    contain a query string and/or fragment (hash).
  //  params - (String) A params string or URL containing fragment (hash) params
  //    to be merged into url.
  //  params - (Object) A params object to be merged into url.
  //  merge_mode - (Number) Merge behavior defaults to 0 if merge_mode is not
  //    specified, and is as-follows:
  //
  //    * 0: params in the params argument will override any fragment (hash)
  //         params in url.
  //    * 1: any fragment (hash) params in url will override params in the
  //         params argument.
  //    * 2: params argument will completely replace any query string in url.
  //
  // Returns:
  //
  //  (String) A URL with a urlencoded fragment (hash) in the format '#a=b&c=d&e=f'.

  function jq_param_sub( is_fragment, get_func, url, params, merge_mode ) {
    var result,
      qs,
      matches,
      url_params,
      hash;

    if ( params !== undefined ) {
      // Build URL by merging params into url string.

      // matches[1] = url part that precedes params, not including trailing ?/#
      // matches[2] = params, not including leading ?/#
      // matches[3] = if in 'querystring' mode, hash including leading #, otherwise ''
      matches = url.match( is_fragment ? re_fragment : /^([^#?]*)\??([^#]*)(#?.*)/ );

      // Get the hash if in 'querystring' mode, and it exists.
      hash = matches[3] || '';

      if ( merge_mode === 2 && is_string( params ) ) {
        // If merge_mode is 2 and params is a string, merge the fragment / query
        // string into the URL wholesale, without converting it into an object.
        qs = params.replace( is_fragment ? re_params_fragment : re_params_querystring, '' );

      } else {
        // Convert relevant params in url to object.
        url_params = jq_deparam( matches[2] );

        params = is_string( params )

          // Convert passed params string into object.
          ? jq_deparam[ is_fragment ? str_fragment : str_querystring ]( params )

          // Passed params object.
          : params;

        qs = merge_mode === 2 ? params                              // passed params replace url params
          : merge_mode === 1  ? $.extend( {}, params, url_params )  // url params override passed params
          : $.extend( {}, url_params, params );                     // passed params override url params

        // Convert params object into a sorted params string.
        qs = jq_param_sorted( qs );

        // Unescape characters specified via $.param.noEscape. Since only hash-
        // history users have requested this feature, it's only enabled for
        // fragment-related params strings.
        if ( is_fragment ) {
          qs = qs.replace( re_no_escape, decode );
        }
      }

      // Build URL from the base url, querystring and hash. In 'querystring'
      // mode, ? is only added if a query string exists. In 'fragment' mode, #
      // is always added.
      result = matches[1] + ( is_fragment ? fragment_prefix : qs || !matches[1] ? '?' : '' ) + qs + hash;

    } else {
      // If URL was passed in, parse params from URL string, otherwise parse
      // params from window.location.href.
      result = get_func( url !== undefined ? url : location.href );
    }

    return result;
  };

  jq_param[ str_querystring ]                  = curry( jq_param_sub, 0, get_querystring );
  jq_param[ str_fragment ] = jq_param_fragment = curry( jq_param_sub, 1, get_fragment );

  // Method: jQuery.param.sorted
  //
  // Returns a params string equivalent to that returned by the internal
  // jQuery.param method, but sorted, which makes it suitable for use as a
  // cache key.
  //
  // For example, in most browsers jQuery.param({z:1,a:2}) returns "z=1&a=2"
  // and jQuery.param({a:2,z:1}) returns "a=2&z=1". Even though both the
  // objects being serialized and the resulting params strings are equivalent,
  // if these params strings were set into the location.hash fragment
  // sequentially, the hashchange event would be triggered unnecessarily, since
  // the strings are different (even though the data described by them is the
  // same). By sorting the params string, unecessary hashchange event triggering
  // can be avoided.
  //
  // Usage:
  //
  // > jQuery.param.sorted( obj [, traditional ] );
  //
  // Arguments:
  //
  //  obj - (Object) An object to be serialized.
  //  traditional - (Boolean) Params deep/shallow serialization mode. See the
  //    documentation at http://api.jquery.com/jQuery.param/ for more detail.
  //
  // Returns:
  //
  //  (String) A sorted params string.

  jq_param.sorted = jq_param_sorted = function( a, traditional ) {
    var arr = [],
      obj = {};

    $.each( jq_param( a, traditional ).split( '&' ), function(i,v){
      var key = v.replace( /(?:%5B|=).*$/, '' ),
        key_obj = obj[ key ];

      if ( !key_obj ) {
        key_obj = obj[ key ] = [];
        arr.push( key );
      }

      key_obj.push( v );
    });

    return $.map( arr.sort(), function(v){
      return obj[ v ];
    }).join( '&' );
  };

  // Method: jQuery.param.fragment.noEscape
  //
  // Specify characters that will be left unescaped when fragments are created
  // or merged using <jQuery.param.fragment>, or when the fragment is modified
  // using <jQuery.bbq.pushState>. This option only applies to serialized data
  // object fragments, and not set-as-string fragments. Does not affect the
  // query string. Defaults to ",/" (comma, forward slash).
  //
  // Note that this is considered a purely aesthetic option, and will help to
  // create URLs that "look pretty" in the address bar or bookmarks, without
  // affecting functionality in any way. That being said, be careful to not
  // unescape characters that are used as delimiters or serve a special
  // purpose, such as the "#?&=+" (octothorpe, question mark, ampersand,
  // equals, plus) characters.
  //
  // Usage:
  //
  // > jQuery.param.fragment.noEscape( [ chars ] );
  //
  // Arguments:
  //
  //  chars - (String) The characters to not escape in the fragment. If
  //    unspecified, defaults to empty string (escape all characters).
  //
  // Returns:
  //
  //  Nothing.

  jq_param_fragment.noEscape = function( chars ) {
    chars = chars || '';
    var arr = $.map( chars.split(''), encodeURIComponent );
    re_no_escape = new RegExp( arr.join('|'), 'g' );
  };

  // A sensible default. These are the characters people seem to complain about
  // "uglifying up the URL" the most.
  jq_param_fragment.noEscape( ',/' );

  // Method: jQuery.param.fragment.ajaxCrawlable
  //
  // TODO: DESCRIBE
  //
  // Usage:
  //
  // > jQuery.param.fragment.ajaxCrawlable( [ state ] );
  //
  // Arguments:
  //
  //  state - (Boolean) TODO: DESCRIBE
  //
  // Returns:
  //
  //  (Boolean) The current ajaxCrawlable state.

  jq_param_fragment.ajaxCrawlable = function( state ) {
    if ( state !== undefined ) {
      if ( state ) {
        re_params_fragment = /^.*(?:#!|#)/;
        re_fragment = /^([^#]*)(?:#!|#)?(.*)$/;
        fragment_prefix = '#!';
      } else {
        re_params_fragment = /^.*#/;
        re_fragment = /^([^#]*)#?(.*)$/;
        fragment_prefix = '#';
      }
      ajax_crawlable = !!state;
    }

    return ajax_crawlable;
  };

  jq_param_fragment.ajaxCrawlable( 0 );

  // Section: Deparam (from string)
  //
  // Method: jQuery.deparam
  //
  // Deserialize a params string into an object, optionally coercing numbers,
  // booleans, null and undefined values; this method is the counterpart to the
  // internal jQuery.param method.
  //
  // Usage:
  //
  // > jQuery.deparam( params [, coerce ] );
  //
  // Arguments:
  //
  //  params - (String) A params string to be parsed.
  //  coerce - (Boolean) If true, coerces any numbers or true, false, null, and
  //    undefined to their actual value. Defaults to false if omitted.
  //
  // Returns:
  //
  //  (Object) An object representing the deserialized params string.

  $.deparam = jq_deparam = function( params, coerce ) {
    var obj = {},
      coerce_types = { 'true': !0, 'false': !1, 'null': null };

    // Iterate over all name=value pairs.
    $.each( params.replace( /\+/g, ' ' ).split( '&' ), function(j,v){
      var param = v.split( '=' ),
        key = decode( param[0] ),
        val,
        cur = obj,
        i = 0,

        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it
        // into its component parts.
        keys = key.split( '][' ),
        keys_last = keys.length - 1;

      // If the first keys part contains [ and the last ends with ], then []
      // are correctly balanced.
      if ( /\[/.test( keys[0] ) && /\]$/.test( keys[ keys_last ] ) ) {
        // Remove the trailing ] from the last keys part.
        keys[ keys_last ] = keys[ keys_last ].replace( /\]$/, '' );

        // Split first keys part into two parts on the [ and add them back onto
        // the beginning of the keys array.
        keys = keys.shift().split('[').concat( keys );

        keys_last = keys.length - 1;
      } else {
        // Basic 'foo' style key.
        keys_last = 0;
      }

      // Are we dealing with a name=value pair, or just a name?
      if ( param.length === 2 ) {
        val = decode( param[1] );

        // Coerce values.
        if ( coerce ) {
          val = val && !isNaN(val)            ? +val              // number
            : val === 'undefined'             ? undefined         // undefined
            : coerce_types[val] !== undefined ? coerce_types[val] // true, false, null
            : val;                                                // string
        }

        if ( keys_last ) {
          // Complex key, build deep object structure based on a few rules:
          // * The 'cur' pointer starts at the object top-level.
          // * [] = array push (n is set to array length), [n] = array if n is
          //   numeric, otherwise object.
          // * If at the last keys part, set the value.
          // * For each keys part, if the current level is undefined create an
          //   object or array based on the type of the next keys part.
          // * Move the 'cur' pointer to the next level.
          // * Rinse & repeat.
          for ( ; i <= keys_last; i++ ) {
            key = keys[i] === '' ? cur.length : keys[i];
            cur = cur[key] = i < keys_last
              ? cur[key] || ( keys[i+1] && isNaN( keys[i+1] ) ? {} : [] )
              : val;
          }

        } else {
          // Simple key, even simpler rules, since only scalars and shallow
          // arrays are allowed.

          if ( $.isArray( obj[key] ) ) {
            // val is already an array, so push on the next value.
            obj[key].push( val );

          } else if ( obj[key] !== undefined ) {
            // val isn't an array, but since a second value has been specified,
            // convert val into an array.
            obj[key] = [ obj[key], val ];

          } else {
            // val is a scalar.
            obj[key] = val;
          }
        }

      } else if ( key ) {
        // No value was defined, so set something meaningful.
        obj[key] = coerce
          ? undefined
          : '';
      }
    });

    return obj;
  };

  // Method: jQuery.deparam.querystring
  //
  // Parse the query string from a URL or the current window.location.href,
  // deserializing it into an object, optionally coercing numbers, booleans,
  // null and undefined values.
  //
  // Usage:
  //
  // > jQuery.deparam.querystring( [ url ] [, coerce ] );
  //
  // Arguments:
  //
  //  url - (String) An optional params string or URL containing query string
  //    params to be parsed. If url is omitted, the current
  //    window.location.href is used.
  //  coerce - (Boolean) If true, coerces any numbers or true, false, null, and
  //    undefined to their actual value. Defaults to false if omitted.
  //
  // Returns:
  //
  //  (Object) An object representing the deserialized params string.

  // Method: jQuery.deparam.fragment
  //
  // Parse the fragment (hash) from a URL or the current window.location.href,
  // deserializing it into an object, optionally coercing numbers, booleans,
  // null and undefined values.
  //
  // Usage:
  //
  // > jQuery.deparam.fragment( [ url ] [, coerce ] );
  //
  // Arguments:
  //
  //  url - (String) An optional params string or URL containing fragment (hash)
  //    params to be parsed. If url is omitted, the current window.location.href
  //    is used.
  //  coerce - (Boolean) If true, coerces any numbers or true, false, null, and
  //    undefined to their actual value. Defaults to false if omitted.
  //
  // Returns:
  //
  //  (Object) An object representing the deserialized params string.

  function jq_deparam_sub( is_fragment, url_or_params, coerce ) {
    if ( url_or_params === undefined || typeof url_or_params === 'boolean' ) {
      // url_or_params not specified.
      coerce = url_or_params;
      url_or_params = jq_param[ is_fragment ? str_fragment : str_querystring ]();
    } else {
      url_or_params = is_string( url_or_params )
        ? url_or_params.replace( is_fragment ? re_params_fragment : re_params_querystring, '' )
        : url_or_params;
    }

    return jq_deparam( url_or_params, coerce );
  };

  jq_deparam[ str_querystring ]                    = curry( jq_deparam_sub, 0 );
  jq_deparam[ str_fragment ] = jq_deparam_fragment = curry( jq_deparam_sub, 1 );

  // Section: Element manipulation
  //
  // Method: jQuery.elemUrlAttr
  //
  // Get the internal "Default URL attribute per tag" list, or augment the list
  // with additional tag-attribute pairs, in case the defaults are insufficient.
  //
  // In the <jQuery.fn.querystring> and <jQuery.fn.fragment> methods, this list
  // is used to determine which attribute contains the URL to be modified, if
  // an "attr" param is not specified.
  //
  // Default Tag-Attribute List:
  //
  //  a      - href
  //  base   - href
  //  iframe - src
  //  img    - src
  //  input  - src
  //  form   - action
  //  link   - href
  //  script - src
  //
  // Usage:
  //
  // > jQuery.elemUrlAttr( [ tag_attr ] );
  //
  // Arguments:
  //
  //  tag_attr - (Object) An object containing a list of tag names and their
  //    associated default attribute names in the format { tag: 'attr', ... } to
  //    be merged into the internal tag-attribute list.
  //
  // Returns:
  //
  //  (Object) An object containing all stored tag-attribute values.

  // Only define function and set defaults if function doesn't already exist, as
  // the urlInternal plugin will provide this method as well.
  $[ str_elemUrlAttr ] || ($[ str_elemUrlAttr ] = function( obj ) {
    return $.extend( elemUrlAttr_cache, obj );
  })({
    a: str_href,
    base: str_href,
    iframe: str_src,
    img: str_src,
    input: str_src,
    form: 'action',
    link: str_href,
    script: str_src
  });

  jq_elemUrlAttr = $[ str_elemUrlAttr ];

  // Method: jQuery.fn.querystring
  //
  // Update URL attribute in one or more elements, merging the current URL (with
  // or without pre-existing query string params) plus any params object or
  // string into a new URL, which is then set into that attribute. Like
  // <jQuery.param.querystring (build url)>, but for all elements in a jQuery
  // collection.
  //
  // Usage:
  //
  // > jQuery('selector').querystring( [ attr, ] params [, merge_mode ] );
  //
  // Arguments:
  //
  //  attr - (String) Optional name of an attribute that will contain a URL to
  //    merge params or url into. See <jQuery.elemUrlAttr> for a list of default
  //    attributes.
  //  params - (Object) A params object to be merged into the URL attribute.
  //  params - (String) A URL containing query string params, or params string
  //    to be merged into the URL attribute.
  //  merge_mode - (Number) Merge behavior defaults to 0 if merge_mode is not
  //    specified, and is as-follows:
  //
  //    * 0: params in the params argument will override any params in attr URL.
  //    * 1: any params in attr URL will override params in the params argument.
  //    * 2: params argument will completely replace any query string in attr
  //         URL.
  //
  // Returns:
  //
  //  (jQuery) The initial jQuery collection of elements, but with modified URL
  //  attribute values.

  // Method: jQuery.fn.fragment
  //
  // Update URL attribute in one or more elements, merging the current URL (with
  // or without pre-existing fragment/hash params) plus any params object or
  // string into a new URL, which is then set into that attribute. Like
  // <jQuery.param.fragment (build url)>, but for all elements in a jQuery
  // collection.
  //
  // Usage:
  //
  // > jQuery('selector').fragment( [ attr, ] params [, merge_mode ] );
  //
  // Arguments:
  //
  //  attr - (String) Optional name of an attribute that will contain a URL to
  //    merge params into. See <jQuery.elemUrlAttr> for a list of default
  //    attributes.
  //  params - (Object) A params object to be merged into the URL attribute.
  //  params - (String) A URL containing fragment (hash) params, or params
  //    string to be merged into the URL attribute.
  //  merge_mode - (Number) Merge behavior defaults to 0 if merge_mode is not
  //    specified, and is as-follows:
  //
  //    * 0: params in the params argument will override any params in attr URL.
  //    * 1: any params in attr URL will override params in the params argument.
  //    * 2: params argument will completely replace any fragment (hash) in attr
  //         URL.
  //
  // Returns:
  //
  //  (jQuery) The initial jQuery collection of elements, but with modified URL
  //  attribute values.

  function jq_fn_sub( mode, force_attr, params, merge_mode ) {
    if ( !is_string( params ) && typeof params !== 'object' ) {
      // force_attr not specified.
      merge_mode = params;
      params = force_attr;
      force_attr = undefined;
    }

    return this.each(function(){
      var that = $(this),

        // Get attribute specified, or default specified via $.elemUrlAttr.
        attr = force_attr || jq_elemUrlAttr()[ ( this.nodeName || '' ).toLowerCase() ] || '',

        // Get URL value.
        url = attr && that.attr( attr ) || '';

      // Update attribute with new URL.
      that.attr( attr, jq_param[ mode ]( url, params, merge_mode ) );
    });

  };

  $.fn[ str_querystring ] = curry( jq_fn_sub, str_querystring );
  $.fn[ str_fragment ]    = curry( jq_fn_sub, str_fragment );

  // Section: History, hashchange event
  //
  // Method: jQuery.bbq.pushState
  //
  // Adds a 'state' into the browser history at the current position, setting
  // location.hash and triggering any bound <hashchange event> callbacks
  // (provided the new state is different than the previous state).
  //
  // If no arguments are passed, an empty state is created, which is just a
  // shortcut for jQuery.bbq.pushState( {}, 2 ).
  //
  // Usage:
  //
  // > jQuery.bbq.pushState( [ params [, merge_mode ] ] );
  //
  // Arguments:
  //
  //  params - (String) A serialized params string or a hash string beginning
  //    with # to merge into location.hash.
  //  params - (Object) A params object to merge into location.hash.
  //  merge_mode - (Number) Merge behavior defaults to 0 if merge_mode is not
  //    specified (unless a hash string beginning with # is specified, in which
  //    case merge behavior defaults to 2), and is as-follows:
  //
  //    * 0: params in the params argument will override any params in the
  //         current state.
  //    * 1: any params in the current state will override params in the params
  //         argument.
  //    * 2: params argument will completely replace current state.
  //
  // Returns:
  //
  //  Nothing.
  //
  // Additional Notes:
  //
  //  * Setting an empty state may cause the browser to scroll.
  //  * Unlike the fragment and querystring methods, if a hash string beginning
  //    with # is specified as the params agrument, merge_mode defaults to 2.

  jq_bbq.pushState = jq_bbq_pushState = function( params, merge_mode ) {
    if ( is_string( params ) && /^#/.test( params ) && merge_mode === undefined ) {
      // Params string begins with # and merge_mode not specified, so completely
      // overwrite window.location.hash.
      merge_mode = 2;
    }

    var has_args = params !== undefined,
      // Merge params into window.location using $.param.fragment.
      url = jq_param_fragment( location.href,
        has_args ? params : {}, has_args ? merge_mode : 2 );

    // Set new window.location.href. Note that Safari 3 & Chrome barf on
    // location.hash = '#' so the entire URL is set.
    location.href = url;
  };

  // Method: jQuery.bbq.getState
  //
  // Retrieves the current 'state' from the browser history, parsing
  // location.hash for a specific key or returning an object containing the
  // entire state, optionally coercing numbers, booleans, null and undefined
  // values.
  //
  // Usage:
  //
  // > jQuery.bbq.getState( [ key ] [, coerce ] );
  //
  // Arguments:
  //
  //  key - (String) An optional state key for which to return a value.
  //  coerce - (Boolean) If true, coerces any numbers or true, false, null, and
  //    undefined to their actual value. Defaults to false.
  //
  // Returns:
  //
  //  (Anything) If key is passed, returns the value corresponding with that key
  //    in the location.hash 'state', or undefined. If not, an object
  //    representing the entire 'state' is returned.

  jq_bbq.getState = jq_bbq_getState = function( key, coerce ) {
    return key === undefined || typeof key === 'boolean'
      ? jq_deparam_fragment( key ) // 'key' really means 'coerce' here
      : jq_deparam_fragment( coerce )[ key ];
  };

  // Method: jQuery.bbq.removeState
  //
  // Remove one or more keys from the current browser history 'state', creating
  // a new state, setting location.hash and triggering any bound
  // <hashchange event> callbacks (provided the new state is different than
  // the previous state).
  //
  // If no arguments are passed, an empty state is created, which is just a
  // shortcut for jQuery.bbq.pushState( {}, 2 ).
  //
  // Usage:
  //
  // > jQuery.bbq.removeState( [ key [, key ... ] ] );
  //
  // Arguments:
  //
  //  key - (String) One or more key values to remove from the current state,
  //    passed as individual arguments.
  //  key - (Array) A single array argument that contains a list of key values
  //    to remove from the current state.
  //
  // Returns:
  //
  //  Nothing.
  //
  // Additional Notes:
  //
  //  * Setting an empty state may cause the browser to scroll.

  jq_bbq.removeState = function( arr ) {
    var state = {};

    // If one or more arguments is passed..
    if ( arr !== undefined ) {

      // Get the current state.
      state = jq_bbq_getState();

      // For each passed key, delete the corresponding property from the current
      // state.
      $.each( $.isArray( arr ) ? arr : arguments, function(i,v){
        delete state[ v ];
      });
    }

    // Set the state, completely overriding any existing state.
    jq_bbq_pushState( state, 2 );
  };

  // Event: hashchange event (BBQ)
  //
  // Usage in jQuery 1.4 and newer:
  //
  // In jQuery 1.4 and newer, the event object passed into any hashchange event
  // callback is augmented with a copy of the location.hash fragment at the time
  // the event was triggered as its event.fragment property. In addition, the
  // event.getState method operates on this property (instead of location.hash)
  // which allows this fragment-as-a-state to be referenced later, even after
  // window.location may have changed.
  //
  // Note that event.fragment and event.getState are not defined according to
  // W3C (or any other) specification, but will still be available whether or
  // not the hashchange event exists natively in the browser, because of the
  // utility they provide.
  //
  // The event.fragment property contains the output of <jQuery.param.fragment>
  // and the event.getState method is equivalent to the <jQuery.bbq.getState>
  // method.
  //
  // > $(window).bind( 'hashchange', function( event ) {
  // >   var hash_str = event.fragment,
  // >     param_obj = event.getState(),
  // >     param_val = event.getState( 'param_name' ),
  // >     param_val_coerced = event.getState( 'param_name', true );
  // >   ...
  // > });
  //
  // Usage in jQuery 1.3.2:
  //
  // In jQuery 1.3.2, the event object cannot to be augmented as in jQuery 1.4+,
  // so the fragment state isn't bound to the event object and must instead be
  // parsed using the <jQuery.param.fragment> and <jQuery.bbq.getState> methods.
  //
  // > $(window).bind( 'hashchange', function( event ) {
  // >   var hash_str = $.param.fragment(),
  // >     param_obj = $.bbq.getState(),
  // >     param_val = $.bbq.getState( 'param_name' ),
  // >     param_val_coerced = $.bbq.getState( 'param_name', true );
  // >   ...
  // > });
  //
  // Additional Notes:
  //
  // * Due to changes in the special events API, jQuery BBQ v1.2 or newer is
  //   required to enable the augmented event object in jQuery 1.4.2 and newer.
  // * See <jQuery hashchange event> for more detailed information.

  special[ str_hashchange ] = $.extend( special[ str_hashchange ], {

    // Augmenting the event object with the .fragment property and .getState
    // method requires jQuery 1.4 or newer. Note: with 1.3.2, everything will
    // work, but the event won't be augmented)
    add: function( handleObj ) {
      var old_handler;

      function new_handler(e) {
        // e.fragment is set to the value of location.hash (with any leading #
        // removed) at the time the event is triggered.
        var hash = e[ str_fragment ] = jq_param_fragment();

        // e.getState() works just like $.bbq.getState(), but uses the
        // e.fragment property stored on the event object.
        e.getState = function( key, coerce ) {
          return key === undefined || typeof key === 'boolean'
            ? jq_deparam( hash, key ) // 'key' really means 'coerce' here
            : jq_deparam( hash, coerce )[ key ];
        };

        old_handler.apply( this, arguments );
      };

      // This may seem a little complicated, but it normalizes the special event
      // .add method between jQuery 1.4/1.4.1 and 1.4.2+
      if ( $.isFunction( handleObj ) ) {
        // 1.4, 1.4.1
        old_handler = handleObj;
        return new_handler;
      } else {
        // 1.4.2+
        old_handler = handleObj.handler;
        handleObj.handler = new_handler;
      }
    }

  });

})(jQuery,this);

/*!
 * jQuery hashchange event - v1.3 - 7/21/2010
 * http://benalman.com/projects/jquery-hashchange-plugin/
 *
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

// Script: jQuery hashchange event
//
// *Version: 1.3, Last updated: 7/21/2010*
//
// Project Home - http://benalman.com/projects/jquery-hashchange-plugin/
// GitHub       - http://github.com/cowboy/jquery-hashchange/
// Source       - http://github.com/cowboy/jquery-hashchange/raw/master/jquery.ba-hashchange.js
// (Minified)   - http://github.com/cowboy/jquery-hashchange/raw/master/jquery.ba-hashchange.min.js (0.8kb gzipped)
//
// About: License
//
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
//
// About: Examples
//
// These working examples, complete with fully commented code, illustrate a few
// ways in which this plugin can be used.
//
// hashchange event - http://benalman.com/code/projects/jquery-hashchange/examples/hashchange/
// document.domain - http://benalman.com/code/projects/jquery-hashchange/examples/document_domain/
//
// About: Support and Testing
//
// Information about what version or versions of jQuery this plugin has been
// tested with, what browsers it has been tested in, and where the unit tests
// reside (so you can test it yourself).
//
// jQuery Versions - 1.2.6, 1.3.2, 1.4.1, 1.4.2
// Browsers Tested - Internet Explorer 6-8, Firefox 2-4, Chrome 5-6, Safari 3.2-5,
//                   Opera 9.6-10.60, iPhone 3.1, Android 1.6-2.2, BlackBerry 4.6-5.
// Unit Tests      - http://benalman.com/code/projects/jquery-hashchange/unit/
//
// About: Known issues
//
// While this jQuery hashchange event implementation is quite stable and
// robust, there are a few unfortunate browser bugs surrounding expected
// hashchange event-based behaviors, independent of any JavaScript
// window.onhashchange abstraction. See the following examples for more
// information:
//
// Chrome: Back Button - http://benalman.com/code/projects/jquery-hashchange/examples/bug-chrome-back-button/
// Firefox: Remote XMLHttpRequest - http://benalman.com/code/projects/jquery-hashchange/examples/bug-firefox-remote-xhr/
// WebKit: Back Button in an Iframe - http://benalman.com/code/projects/jquery-hashchange/examples/bug-webkit-hash-iframe/
// Safari: Back Button from a different domain - http://benalman.com/code/projects/jquery-hashchange/examples/bug-safari-back-from-diff-domain/
//
// Also note that should a browser natively support the window.onhashchange
// event, but not report that it does, the fallback polling loop will be used.
//
// About: Release History
//
// 1.3   - (7/21/2010) Reorganized IE6/7 Iframe code to make it more
//         "removable" for mobile-only development. Added IE6/7 document.title
//         support. Attempted to make Iframe as hidden as possible by using
//         techniques from http://www.paciellogroup.com/blog/?p=604. Added
//         support for the "shortcut" format $(window).hashchange( fn ) and
//         $(window).hashchange() like jQuery provides for built-in events.
//         Renamed jQuery.hashchangeDelay to <jQuery.fn.hashchange.delay> and
//         lowered its default value to 50. Added <jQuery.fn.hashchange.domain>
//         and <jQuery.fn.hashchange.src> properties plus document-domain.html
//         file to address access denied issues when setting document.domain in
//         IE6/7.
// 1.2   - (2/11/2010) Fixed a bug where coming back to a page using this plugin
//         from a page on another domain would cause an error in Safari 4. Also,
//         IE6/7 Iframe is now inserted after the body (this actually works),
//         which prevents the page from scrolling when the event is first bound.
//         Event can also now be bound before DOM ready, but it won't be usable
//         before then in IE6/7.
// 1.1   - (1/21/2010) Incorporated document.documentMode test to fix IE8 bug
//         where browser version is incorrectly reported as 8.0, despite
//         inclusion of the X-UA-Compatible IE=EmulateIE7 meta tag.
// 1.0   - (1/9/2010) Initial Release. Broke out the jQuery BBQ event.special
//         window.onhashchange functionality into a separate plugin for users
//         who want just the basic event & back button support, without all the
//         extra awesomeness that BBQ provides. This plugin will be included as
//         part of jQuery BBQ, but also be available separately.

(function($,window,undefined){
  '$:nomunge'; // Used by YUI compressor.

  // Reused string.
  var str_hashchange = 'hashchange',

    // Method / object references.
    doc = document,
    fake_onhashchange,
    special = $.event.special,

    // Does the browser support window.onhashchange? Note that IE8 running in
    // IE7 compatibility mode reports true for 'onhashchange' in window, even
    // though the event isn't supported, so also test document.documentMode.
    doc_mode = doc.documentMode,
    supports_onhashchange = 'on' + str_hashchange in window && ( doc_mode === undefined || doc_mode > 7 );

  // Get location.hash (or what you'd expect location.hash to be) sans any
  // leading #. Thanks for making this necessary, Firefox!
  function get_fragment( url ) {
    url = url || location.href;
    return '#' + url.replace( /^[^#]*#?(.*)$/, '$1' );
  };

  // Method: jQuery.fn.hashchange
  //
  // Bind a handler to the window.onhashchange event or trigger all bound
  // window.onhashchange event handlers. This behavior is consistent with
  // jQuery's built-in event handlers.
  //
  // Usage:
  //
  // > jQuery(window).hashchange( [ handler ] );
  //
  // Arguments:
  //
  //  handler - (Function) Optional handler to be bound to the hashchange
  //    event. This is a "shortcut" for the more verbose form:
  //    jQuery(window).bind( 'hashchange', handler ). If handler is omitted,
  //    all bound window.onhashchange event handlers will be triggered. This
  //    is a shortcut for the more verbose
  //    jQuery(window).trigger( 'hashchange' ). These forms are described in
  //    the <hashchange event> section.
  //
  // Returns:
  //
  //  (jQuery) The initial jQuery collection of elements.

  // Allow the "shortcut" format $(elem).hashchange( fn ) for binding and
  // $(elem).hashchange() for triggering, like jQuery does for built-in events.
  $.fn[ str_hashchange ] = function( fn ) {
    return fn ? this.bind( str_hashchange, fn ) : this.trigger( str_hashchange );
  };

  // Property: jQuery.fn.hashchange.delay
  //
  // The numeric interval (in milliseconds) at which the <hashchange event>
  // polling loop executes. Defaults to 50.

  // Property: jQuery.fn.hashchange.domain
  //
  // If you're setting document.domain in your JavaScript, and you want hash
  // history to work in IE6/7, not only must this property be set, but you must
  // also set document.domain BEFORE jQuery is loaded into the page. This
  // property is only applicable if you are supporting IE6/7 (or IE8 operating
  // in "IE7 compatibility" mode).
  //
  // In addition, the <jQuery.fn.hashchange.src> property must be set to the
  // path of the included "document-domain.html" file, which can be renamed or
  // modified if necessary (note that the document.domain specified must be the
  // same in both your main JavaScript as well as in this file).
  //
  // Usage:
  //
  // jQuery.fn.hashchange.domain = document.domain;

  // Property: jQuery.fn.hashchange.src
  //
  // If, for some reason, you need to specify an Iframe src file (for example,
  // when setting document.domain as in <jQuery.fn.hashchange.domain>), you can
  // do so using this property. Note that when using this property, history
  // won't be recorded in IE6/7 until the Iframe src file loads. This property
  // is only applicable if you are supporting IE6/7 (or IE8 operating in "IE7
  // compatibility" mode).
  //
  // Usage:
  //
  // jQuery.fn.hashchange.src = 'path/to/file.html';

  $.fn[ str_hashchange ].delay = 50;
  /*
  $.fn[ str_hashchange ].domain = null;
  $.fn[ str_hashchange ].src = null;
  */

  // Event: hashchange event
  //
  // Fired when location.hash changes. In browsers that support it, the native
  // HTML5 window.onhashchange event is used, otherwise a polling loop is
  // initialized, running every <jQuery.fn.hashchange.delay> milliseconds to
  // see if the hash has changed. In IE6/7 (and IE8 operating in "IE7
  // compatibility" mode), a hidden Iframe is created to allow the back button
  // and hash-based history to work.
  //
  // Usage as described in <jQuery.fn.hashchange>:
  //
  // > // Bind an event handler.
  // > jQuery(window).hashchange( function(e) {
  // >   var hash = location.hash;
  // >   ...
  // > });
  // >
  // > // Manually trigger the event handler.
  // > jQuery(window).hashchange();
  //
  // A more verbose usage that allows for event namespacing:
  //
  // > // Bind an event handler.
  // > jQuery(window).bind( 'hashchange', function(e) {
  // >   var hash = location.hash;
  // >   ...
  // > });
  // >
  // > // Manually trigger the event handler.
  // > jQuery(window).trigger( 'hashchange' );
  //
  // Additional Notes:
  //
  // * The polling loop and Iframe are not created until at least one handler
  //   is actually bound to the 'hashchange' event.
  // * If you need the bound handler(s) to execute immediately, in cases where
  //   a location.hash exists on page load, via bookmark or page refresh for
  //   example, use jQuery(window).hashchange() or the more verbose
  //   jQuery(window).trigger( 'hashchange' ).
  // * The event can be bound before DOM ready, but since it won't be usable
  //   before then in IE6/7 (due to the necessary Iframe), recommended usage is
  //   to bind it inside a DOM ready handler.

  // Override existing $.event.special.hashchange methods (allowing this plugin
  // to be defined after jQuery BBQ in BBQ's source code).
  special[ str_hashchange ] = $.extend( special[ str_hashchange ], {

    // Called only when the first 'hashchange' event is bound to window.
    setup: function() {
      // If window.onhashchange is supported natively, there's nothing to do..
      if ( supports_onhashchange ) { return false; }

      // Otherwise, we need to create our own. And we don't want to call this
      // until the user binds to the event, just in case they never do, since it
      // will create a polling loop and possibly even a hidden Iframe.
      $( fake_onhashchange.start );
    },

    // Called only when the last 'hashchange' event is unbound from window.
    teardown: function() {
      // If window.onhashchange is supported natively, there's nothing to do..
      if ( supports_onhashchange ) { return false; }

      // Otherwise, we need to stop ours (if possible).
      $( fake_onhashchange.stop );
    }

  });

  // fake_onhashchange does all the work of triggering the window.onhashchange
  // event for browsers that don't natively support it, including creating a
  // polling loop to watch for hash changes and in IE 6/7 creating a hidden
  // Iframe to enable back and forward.
  fake_onhashchange = (function(){
    var self = {},
      timeout_id,

      // Remember the initial hash so it doesn't get triggered immediately.
      last_hash = get_fragment(),

      fn_retval = function(val){ return val; },
      history_set = fn_retval,
      history_get = fn_retval;

    // Start the polling loop.
    self.start = function() {
      timeout_id || poll();
    };

    // Stop the polling loop.
    self.stop = function() {
      timeout_id && clearTimeout( timeout_id );
      timeout_id = undefined;
    };

    // This polling loop checks every $.fn.hashchange.delay milliseconds to see
    // if location.hash has changed, and triggers the 'hashchange' event on
    // window when necessary.
    function poll() {
      var hash = get_fragment(),
        history_hash = history_get( last_hash );

      if ( hash !== last_hash ) {
        history_set( last_hash = hash, history_hash );

        $(window).trigger( str_hashchange );

      } else if ( history_hash !== last_hash ) {
        location.href = location.href.replace( /#.*/, '' ) + history_hash;
      }

      timeout_id = setTimeout( poll, $.fn[ str_hashchange ].delay );
    };

    return self;
  })();

})(jQuery,this);
/*!
 * Datepicker for Bootstrap v1.8.0 (https://github.com/uxsolutions/bootstrap-datepicker)
 *
 * Licensed under the Apache License v2.0 (http://www.apache.org/licenses/LICENSE-2.0)
 */

!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):a("object"==typeof exports?require("jquery"):jQuery)}(function(a,b){function c(){return new Date(Date.UTC.apply(Date,arguments))}function d(){var a=new Date;return c(a.getFullYear(),a.getMonth(),a.getDate())}function e(a,b){return a.getUTCFullYear()===b.getUTCFullYear()&&a.getUTCMonth()===b.getUTCMonth()&&a.getUTCDate()===b.getUTCDate()}function f(c,d){return function(){return d!==b&&a.fn.datepicker.deprecated(d),this[c].apply(this,arguments)}}function g(a){return a&&!isNaN(a.getTime())}function h(b,c){function d(a,b){return b.toLowerCase()}var e,f=a(b).data(),g={},h=new RegExp("^"+c.toLowerCase()+"([A-Z])");c=new RegExp("^"+c.toLowerCase());for(var i in f)c.test(i)&&(e=i.replace(h,d),g[e]=f[i]);return g}function i(b){var c={};if(q[b]||(b=b.split("-")[0],q[b])){var d=q[b];return a.each(p,function(a,b){b in d&&(c[b]=d[b])}),c}}var j=function(){var b={get:function(a){return this.slice(a)[0]},contains:function(a){for(var b=a&&a.valueOf(),c=0,d=this.length;c<d;c++)if(0<=this[c].valueOf()-b&&this[c].valueOf()-b<864e5)return c;return-1},remove:function(a){this.splice(a,1)},replace:function(b){b&&(a.isArray(b)||(b=[b]),this.clear(),this.push.apply(this,b))},clear:function(){this.length=0},copy:function(){var a=new j;return a.replace(this),a}};return function(){var c=[];return c.push.apply(c,arguments),a.extend(c,b),c}}(),k=function(b,c){a.data(b,"datepicker",this),this._process_options(c),this.dates=new j,this.viewDate=this.o.defaultViewDate,this.focusDate=null,this.element=a(b),this.isInput=this.element.is("input"),this.inputField=this.isInput?this.element:this.element.find("input"),this.component=!!this.element.hasClass("date")&&this.element.find(".add-on, .input-group-addon, .btn"),this.component&&0===this.component.length&&(this.component=!1),this.isInline=!this.component&&this.element.is("div"),this.picker=a(r.template),this._check_template(this.o.templates.leftArrow)&&this.picker.find(".prev").html(this.o.templates.leftArrow),this._check_template(this.o.templates.rightArrow)&&this.picker.find(".next").html(this.o.templates.rightArrow),this._buildEvents(),this._attachEvents(),this.isInline?this.picker.addClass("datepicker-inline").appendTo(this.element):this.picker.addClass("datepicker-dropdown dropdown-menu"),this.o.rtl&&this.picker.addClass("datepicker-rtl"),this.o.calendarWeeks&&this.picker.find(".datepicker-days .datepicker-switch, thead .datepicker-title, tfoot .today, tfoot .clear").attr("colspan",function(a,b){return Number(b)+1}),this._process_options({startDate:this._o.startDate,endDate:this._o.endDate,daysOfWeekDisabled:this.o.daysOfWeekDisabled,daysOfWeekHighlighted:this.o.daysOfWeekHighlighted,datesDisabled:this.o.datesDisabled}),this._allow_update=!1,this.setViewMode(this.o.startView),this._allow_update=!0,this.fillDow(),this.fillMonths(),this.update(),this.isInline&&this.show()};k.prototype={constructor:k,_resolveViewName:function(b){return a.each(r.viewModes,function(c,d){if(b===c||a.inArray(b,d.names)!==-1)return b=c,!1}),b},_resolveDaysOfWeek:function(b){return a.isArray(b)||(b=b.split(/[,\s]*/)),a.map(b,Number)},_check_template:function(c){try{if(c===b||""===c)return!1;if((c.match(/[<>]/g)||[]).length<=0)return!0;var d=a(c);return d.length>0}catch(a){return!1}},_process_options:function(b){this._o=a.extend({},this._o,b);var e=this.o=a.extend({},this._o),f=e.language;q[f]||(f=f.split("-")[0],q[f]||(f=o.language)),e.language=f,e.startView=this._resolveViewName(e.startView),e.minViewMode=this._resolveViewName(e.minViewMode),e.maxViewMode=this._resolveViewName(e.maxViewMode),e.startView=Math.max(this.o.minViewMode,Math.min(this.o.maxViewMode,e.startView)),e.multidate!==!0&&(e.multidate=Number(e.multidate)||!1,e.multidate!==!1&&(e.multidate=Math.max(0,e.multidate))),e.multidateSeparator=String(e.multidateSeparator),e.weekStart%=7,e.weekEnd=(e.weekStart+6)%7;var g=r.parseFormat(e.format);e.startDate!==-(1/0)&&(e.startDate?e.startDate instanceof Date?e.startDate=this._local_to_utc(this._zero_time(e.startDate)):e.startDate=r.parseDate(e.startDate,g,e.language,e.assumeNearbyYear):e.startDate=-(1/0)),e.endDate!==1/0&&(e.endDate?e.endDate instanceof Date?e.endDate=this._local_to_utc(this._zero_time(e.endDate)):e.endDate=r.parseDate(e.endDate,g,e.language,e.assumeNearbyYear):e.endDate=1/0),e.daysOfWeekDisabled=this._resolveDaysOfWeek(e.daysOfWeekDisabled||[]),e.daysOfWeekHighlighted=this._resolveDaysOfWeek(e.daysOfWeekHighlighted||[]),e.datesDisabled=e.datesDisabled||[],a.isArray(e.datesDisabled)||(e.datesDisabled=e.datesDisabled.split(",")),e.datesDisabled=a.map(e.datesDisabled,function(a){return r.parseDate(a,g,e.language,e.assumeNearbyYear)});var h=String(e.orientation).toLowerCase().split(/\s+/g),i=e.orientation.toLowerCase();if(h=a.grep(h,function(a){return/^auto|left|right|top|bottom$/.test(a)}),e.orientation={x:"auto",y:"auto"},i&&"auto"!==i)if(1===h.length)switch(h[0]){case"top":case"bottom":e.orientation.y=h[0];break;case"left":case"right":e.orientation.x=h[0]}else i=a.grep(h,function(a){return/^left|right$/.test(a)}),e.orientation.x=i[0]||"auto",i=a.grep(h,function(a){return/^top|bottom$/.test(a)}),e.orientation.y=i[0]||"auto";else;if(e.defaultViewDate instanceof Date||"string"==typeof e.defaultViewDate)e.defaultViewDate=r.parseDate(e.defaultViewDate,g,e.language,e.assumeNearbyYear);else if(e.defaultViewDate){var j=e.defaultViewDate.year||(new Date).getFullYear(),k=e.defaultViewDate.month||0,l=e.defaultViewDate.day||1;e.defaultViewDate=c(j,k,l)}else e.defaultViewDate=d()},_events:[],_secondaryEvents:[],_applyEvents:function(a){for(var c,d,e,f=0;f<a.length;f++)c=a[f][0],2===a[f].length?(d=b,e=a[f][1]):3===a[f].length&&(d=a[f][1],e=a[f][2]),c.on(e,d)},_unapplyEvents:function(a){for(var c,d,e,f=0;f<a.length;f++)c=a[f][0],2===a[f].length?(e=b,d=a[f][1]):3===a[f].length&&(e=a[f][1],d=a[f][2]),c.off(d,e)},_buildEvents:function(){var b={keyup:a.proxy(function(b){a.inArray(b.keyCode,[27,37,39,38,40,32,13,9])===-1&&this.update()},this),keydown:a.proxy(this.keydown,this),paste:a.proxy(this.paste,this)};this.o.showOnFocus===!0&&(b.focus=a.proxy(this.show,this)),this.isInput?this._events=[[this.element,b]]:this.component&&this.inputField.length?this._events=[[this.inputField,b],[this.component,{click:a.proxy(this.show,this)}]]:this._events=[[this.element,{click:a.proxy(this.show,this),keydown:a.proxy(this.keydown,this)}]],this._events.push([this.element,"*",{blur:a.proxy(function(a){this._focused_from=a.target},this)}],[this.element,{blur:a.proxy(function(a){this._focused_from=a.target},this)}]),this.o.immediateUpdates&&this._events.push([this.element,{"changeYear changeMonth":a.proxy(function(a){this.update(a.date)},this)}]),this._secondaryEvents=[[this.picker,{click:a.proxy(this.click,this)}],[this.picker,".prev, .next",{click:a.proxy(this.navArrowsClick,this)}],[this.picker,".day:not(.disabled)",{click:a.proxy(this.dayCellClick,this)}],[a(window),{resize:a.proxy(this.place,this)}],[a(document),{"mousedown touchstart":a.proxy(function(a){this.element.is(a.target)||this.element.find(a.target).length||this.picker.is(a.target)||this.picker.find(a.target).length||this.isInline||this.hide()},this)}]]},_attachEvents:function(){this._detachEvents(),this._applyEvents(this._events)},_detachEvents:function(){this._unapplyEvents(this._events)},_attachSecondaryEvents:function(){this._detachSecondaryEvents(),this._applyEvents(this._secondaryEvents)},_detachSecondaryEvents:function(){this._unapplyEvents(this._secondaryEvents)},_trigger:function(b,c){var d=c||this.dates.get(-1),e=this._utc_to_local(d);this.element.trigger({type:b,date:e,viewMode:this.viewMode,dates:a.map(this.dates,this._utc_to_local),format:a.proxy(function(a,b){0===arguments.length?(a=this.dates.length-1,b=this.o.format):"string"==typeof a&&(b=a,a=this.dates.length-1),b=b||this.o.format;var c=this.dates.get(a);return r.formatDate(c,b,this.o.language)},this)})},show:function(){if(!(this.inputField.prop("disabled")||this.inputField.prop("readonly")&&this.o.enableOnReadonly===!1))return this.isInline||this.picker.appendTo(this.o.container),this.place(),this.picker.show(),this._attachSecondaryEvents(),this._trigger("show"),(window.navigator.msMaxTouchPoints||"ontouchstart"in document)&&this.o.disableTouchKeyboard&&a(this.element).blur(),this},hide:function(){return this.isInline||!this.picker.is(":visible")?this:(this.focusDate=null,this.picker.hide().detach(),this._detachSecondaryEvents(),this.setViewMode(this.o.startView),this.o.forceParse&&this.inputField.val()&&this.setValue(),this._trigger("hide"),this)},destroy:function(){return this.hide(),this._detachEvents(),this._detachSecondaryEvents(),this.picker.remove(),delete this.element.data().datepicker,this.isInput||delete this.element.data().date,this},paste:function(b){var c;if(b.originalEvent.clipboardData&&b.originalEvent.clipboardData.types&&a.inArray("text/plain",b.originalEvent.clipboardData.types)!==-1)c=b.originalEvent.clipboardData.getData("text/plain");else{if(!window.clipboardData)return;c=window.clipboardData.getData("Text")}this.setDate(c),this.update(),b.preventDefault()},_utc_to_local:function(a){if(!a)return a;var b=new Date(a.getTime()+6e4*a.getTimezoneOffset());return b.getTimezoneOffset()!==a.getTimezoneOffset()&&(b=new Date(a.getTime()+6e4*b.getTimezoneOffset())),b},_local_to_utc:function(a){return a&&new Date(a.getTime()-6e4*a.getTimezoneOffset())},_zero_time:function(a){return a&&new Date(a.getFullYear(),a.getMonth(),a.getDate())},_zero_utc_time:function(a){return a&&c(a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate())},getDates:function(){return a.map(this.dates,this._utc_to_local)},getUTCDates:function(){return a.map(this.dates,function(a){return new Date(a)})},getDate:function(){return this._utc_to_local(this.getUTCDate())},getUTCDate:function(){var a=this.dates.get(-1);return a!==b?new Date(a):null},clearDates:function(){this.inputField.val(""),this.update(),this._trigger("changeDate"),this.o.autoclose&&this.hide()},setDates:function(){var b=a.isArray(arguments[0])?arguments[0]:arguments;return this.update.apply(this,b),this._trigger("changeDate"),this.setValue(),this},setUTCDates:function(){var b=a.isArray(arguments[0])?arguments[0]:arguments;return this.setDates.apply(this,a.map(b,this._utc_to_local)),this},setDate:f("setDates"),setUTCDate:f("setUTCDates"),remove:f("destroy","Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead"),setValue:function(){var a=this.getFormattedDate();return this.inputField.val(a),this},getFormattedDate:function(c){c===b&&(c=this.o.format);var d=this.o.language;return a.map(this.dates,function(a){return r.formatDate(a,c,d)}).join(this.o.multidateSeparator)},getStartDate:function(){return this.o.startDate},setStartDate:function(a){return this._process_options({startDate:a}),this.update(),this.updateNavArrows(),this},getEndDate:function(){return this.o.endDate},setEndDate:function(a){return this._process_options({endDate:a}),this.update(),this.updateNavArrows(),this},setDaysOfWeekDisabled:function(a){return this._process_options({daysOfWeekDisabled:a}),this.update(),this},setDaysOfWeekHighlighted:function(a){return this._process_options({daysOfWeekHighlighted:a}),this.update(),this},setDatesDisabled:function(a){return this._process_options({datesDisabled:a}),this.update(),this},place:function(){if(this.isInline)return this;var b=this.picker.outerWidth(),c=this.picker.outerHeight(),d=10,e=a(this.o.container),f=e.width(),g="body"===this.o.container?a(document).scrollTop():e.scrollTop(),h=e.offset(),i=[0];this.element.parents().each(function(){var b=a(this).css("z-index");"auto"!==b&&0!==Number(b)&&i.push(Number(b))});var j=Math.max.apply(Math,i)+this.o.zIndexOffset,k=this.component?this.component.parent().offset():this.element.offset(),l=this.component?this.component.outerHeight(!0):this.element.outerHeight(!1),m=this.component?this.component.outerWidth(!0):this.element.outerWidth(!1),n=k.left-h.left,o=k.top-h.top;"body"!==this.o.container&&(o+=g),this.picker.removeClass("datepicker-orient-top datepicker-orient-bottom datepicker-orient-right datepicker-orient-left"),"auto"!==this.o.orientation.x?(this.picker.addClass("datepicker-orient-"+this.o.orientation.x),"right"===this.o.orientation.x&&(n-=b-m)):k.left<0?(this.picker.addClass("datepicker-orient-left"),n-=k.left-d):n+b>f?(this.picker.addClass("datepicker-orient-right"),n+=m-b):this.o.rtl?this.picker.addClass("datepicker-orient-right"):this.picker.addClass("datepicker-orient-left");var p,q=this.o.orientation.y;if("auto"===q&&(p=-g+o-c,q=p<0?"bottom":"top"),this.picker.addClass("datepicker-orient-"+q),"top"===q?o-=c+parseInt(this.picker.css("padding-top")):o+=l,this.o.rtl){var r=f-(n+m);this.picker.css({top:o,right:r,zIndex:j})}else this.picker.css({top:o,left:n,zIndex:j});return this},_allow_update:!0,update:function(){if(!this._allow_update)return this;var b=this.dates.copy(),c=[],d=!1;return arguments.length?(a.each(arguments,a.proxy(function(a,b){b instanceof Date&&(b=this._local_to_utc(b)),c.push(b)},this)),d=!0):(c=this.isInput?this.element.val():this.element.data("date")||this.inputField.val(),c=c&&this.o.multidate?c.split(this.o.multidateSeparator):[c],delete this.element.data().date),c=a.map(c,a.proxy(function(a){return r.parseDate(a,this.o.format,this.o.language,this.o.assumeNearbyYear)},this)),c=a.grep(c,a.proxy(function(a){return!this.dateWithinRange(a)||!a},this),!0),this.dates.replace(c),this.o.updateViewDate&&(this.dates.length?this.viewDate=new Date(this.dates.get(-1)):this.viewDate<this.o.startDate?this.viewDate=new Date(this.o.startDate):this.viewDate>this.o.endDate?this.viewDate=new Date(this.o.endDate):this.viewDate=this.o.defaultViewDate),d?(this.setValue(),this.element.change()):this.dates.length&&String(b)!==String(this.dates)&&d&&(this._trigger("changeDate"),this.element.change()),!this.dates.length&&b.length&&(this._trigger("clearDate"),this.element.change()),this.fill(),this},fillDow:function(){if(this.o.showWeekDays){var b=this.o.weekStart,c="<tr>";for(this.o.calendarWeeks&&(c+='<th class="cw">&#160;</th>');b<this.o.weekStart+7;)c+='<th class="dow',a.inArray(b,this.o.daysOfWeekDisabled)!==-1&&(c+=" disabled"),c+='">'+q[this.o.language].daysMin[b++%7]+"</th>";c+="</tr>",this.picker.find(".datepicker-days thead").append(c)}},fillMonths:function(){for(var a,b=this._utc_to_local(this.viewDate),c="",d=0;d<12;d++)a=b&&b.getMonth()===d?" focused":"",c+='<span class="month'+a+'">'+q[this.o.language].monthsShort[d]+"</span>";this.picker.find(".datepicker-months td").html(c)},setRange:function(b){b&&b.length?this.range=a.map(b,function(a){return a.valueOf()}):delete this.range,this.fill()},getClassNames:function(b){var c=[],f=this.viewDate.getUTCFullYear(),g=this.viewDate.getUTCMonth(),h=d();return b.getUTCFullYear()<f||b.getUTCFullYear()===f&&b.getUTCMonth()<g?c.push("old"):(b.getUTCFullYear()>f||b.getUTCFullYear()===f&&b.getUTCMonth()>g)&&c.push("new"),this.focusDate&&b.valueOf()===this.focusDate.valueOf()&&c.push("focused"),this.o.todayHighlight&&e(b,h)&&c.push("today"),this.dates.contains(b)!==-1&&c.push("active"),this.dateWithinRange(b)||c.push("disabled"),this.dateIsDisabled(b)&&c.push("disabled","disabled-date"),a.inArray(b.getUTCDay(),this.o.daysOfWeekHighlighted)!==-1&&c.push("highlighted"),this.range&&(b>this.range[0]&&b<this.range[this.range.length-1]&&c.push("range"),a.inArray(b.valueOf(),this.range)!==-1&&c.push("selected"),b.valueOf()===this.range[0]&&c.push("range-start"),b.valueOf()===this.range[this.range.length-1]&&c.push("range-end")),c},_fill_yearsView:function(c,d,e,f,g,h,i){for(var j,k,l,m="",n=e/10,o=this.picker.find(c),p=Math.floor(f/e)*e,q=p+9*n,r=Math.floor(this.viewDate.getFullYear()/n)*n,s=a.map(this.dates,function(a){return Math.floor(a.getUTCFullYear()/n)*n}),t=p-n;t<=q+n;t+=n)j=[d],k=null,t===p-n?j.push("old"):t===q+n&&j.push("new"),a.inArray(t,s)!==-1&&j.push("active"),(t<g||t>h)&&j.push("disabled"),t===r&&j.push("focused"),i!==a.noop&&(l=i(new Date(t,0,1)),l===b?l={}:"boolean"==typeof l?l={enabled:l}:"string"==typeof l&&(l={classes:l}),l.enabled===!1&&j.push("disabled"),l.classes&&(j=j.concat(l.classes.split(/\s+/))),l.tooltip&&(k=l.tooltip)),m+='<span class="'+j.join(" ")+'"'+(k?' title="'+k+'"':"")+">"+t+"</span>";o.find(".datepicker-switch").text(p+"-"+q),o.find("td").html(m)},fill:function(){var d,e,f=new Date(this.viewDate),g=f.getUTCFullYear(),h=f.getUTCMonth(),i=this.o.startDate!==-(1/0)?this.o.startDate.getUTCFullYear():-(1/0),j=this.o.startDate!==-(1/0)?this.o.startDate.getUTCMonth():-(1/0),k=this.o.endDate!==1/0?this.o.endDate.getUTCFullYear():1/0,l=this.o.endDate!==1/0?this.o.endDate.getUTCMonth():1/0,m=q[this.o.language].today||q.en.today||"",n=q[this.o.language].clear||q.en.clear||"",o=q[this.o.language].titleFormat||q.en.titleFormat;if(!isNaN(g)&&!isNaN(h)){this.picker.find(".datepicker-days .datepicker-switch").text(r.formatDate(f,o,this.o.language)),this.picker.find("tfoot .today").text(m).css("display",this.o.todayBtn===!0||"linked"===this.o.todayBtn?"table-cell":"none"),this.picker.find("tfoot .clear").text(n).css("display",this.o.clearBtn===!0?"table-cell":"none"),this.picker.find("thead .datepicker-title").text(this.o.title).css("display","string"==typeof this.o.title&&""!==this.o.title?"table-cell":"none"),this.updateNavArrows(),this.fillMonths();var p=c(g,h,0),s=p.getUTCDate();p.setUTCDate(s-(p.getUTCDay()-this.o.weekStart+7)%7);var t=new Date(p);p.getUTCFullYear()<100&&t.setUTCFullYear(p.getUTCFullYear()),t.setUTCDate(t.getUTCDate()+42),t=t.valueOf();for(var u,v,w=[];p.valueOf()<t;){if(u=p.getUTCDay(),u===this.o.weekStart&&(w.push("<tr>"),this.o.calendarWeeks)){var x=new Date(+p+(this.o.weekStart-u-7)%7*864e5),y=new Date(Number(x)+(11-x.getUTCDay())%7*864e5),z=new Date(Number(z=c(y.getUTCFullYear(),0,1))+(11-z.getUTCDay())%7*864e5),A=(y-z)/864e5/7+1;w.push('<td class="cw">'+A+"</td>")}v=this.getClassNames(p),v.push("day");var B=p.getUTCDate();this.o.beforeShowDay!==a.noop&&(e=this.o.beforeShowDay(this._utc_to_local(p)),e===b?e={}:"boolean"==typeof e?e={enabled:e}:"string"==typeof e&&(e={classes:e}),e.enabled===!1&&v.push("disabled"),e.classes&&(v=v.concat(e.classes.split(/\s+/))),e.tooltip&&(d=e.tooltip),e.content&&(B=e.content)),v=a.isFunction(a.uniqueSort)?a.uniqueSort(v):a.unique(v),w.push('<td class="'+v.join(" ")+'"'+(d?' title="'+d+'"':"")+' data-date="'+p.getTime().toString()+'">'+B+"</td>"),d=null,u===this.o.weekEnd&&w.push("</tr>"),p.setUTCDate(p.getUTCDate()+1)}this.picker.find(".datepicker-days tbody").html(w.join(""));var C=q[this.o.language].monthsTitle||q.en.monthsTitle||"Months",D=this.picker.find(".datepicker-months").find(".datepicker-switch").text(this.o.maxViewMode<2?C:g).end().find("tbody span").removeClass("active");if(a.each(this.dates,function(a,b){b.getUTCFullYear()===g&&D.eq(b.getUTCMonth()).addClass("active")}),(g<i||g>k)&&D.addClass("disabled"),g===i&&D.slice(0,j).addClass("disabled"),g===k&&D.slice(l+1).addClass("disabled"),this.o.beforeShowMonth!==a.noop){var E=this;a.each(D,function(c,d){var e=new Date(g,c,1),f=E.o.beforeShowMonth(e);f===b?f={}:"boolean"==typeof f?f={enabled:f}:"string"==typeof f&&(f={classes:f}),f.enabled!==!1||a(d).hasClass("disabled")||a(d).addClass("disabled"),f.classes&&a(d).addClass(f.classes),f.tooltip&&a(d).prop("title",f.tooltip)})}this._fill_yearsView(".datepicker-years","year",10,g,i,k,this.o.beforeShowYear),this._fill_yearsView(".datepicker-decades","decade",100,g,i,k,this.o.beforeShowDecade),this._fill_yearsView(".datepicker-centuries","century",1e3,g,i,k,this.o.beforeShowCentury)}},updateNavArrows:function(){if(this._allow_update){var a,b,c=new Date(this.viewDate),d=c.getUTCFullYear(),e=c.getUTCMonth(),f=this.o.startDate!==-(1/0)?this.o.startDate.getUTCFullYear():-(1/0),g=this.o.startDate!==-(1/0)?this.o.startDate.getUTCMonth():-(1/0),h=this.o.endDate!==1/0?this.o.endDate.getUTCFullYear():1/0,i=this.o.endDate!==1/0?this.o.endDate.getUTCMonth():1/0,j=1;switch(this.viewMode){case 4:j*=10;case 3:j*=10;case 2:j*=10;case 1:a=Math.floor(d/j)*j<f,b=Math.floor(d/j)*j+j>h;break;case 0:a=d<=f&&e<g,b=d>=h&&e>i}this.picker.find(".prev").toggleClass("disabled",a),this.picker.find(".next").toggleClass("disabled",b)}},click:function(b){b.preventDefault(),b.stopPropagation();var e,f,g,h;e=a(b.target),e.hasClass("datepicker-switch")&&this.viewMode!==this.o.maxViewMode&&this.setViewMode(this.viewMode+1),e.hasClass("today")&&!e.hasClass("day")&&(this.setViewMode(0),this._setDate(d(),"linked"===this.o.todayBtn?null:"view")),e.hasClass("clear")&&this.clearDates(),e.hasClass("disabled")||(e.hasClass("month")||e.hasClass("year")||e.hasClass("decade")||e.hasClass("century"))&&(this.viewDate.setUTCDate(1),f=1,1===this.viewMode?(h=e.parent().find("span").index(e),g=this.viewDate.getUTCFullYear(),this.viewDate.setUTCMonth(h)):(h=0,g=Number(e.text()),this.viewDate.setUTCFullYear(g)),this._trigger(r.viewModes[this.viewMode-1].e,this.viewDate),this.viewMode===this.o.minViewMode?this._setDate(c(g,h,f)):(this.setViewMode(this.viewMode-1),this.fill())),this.picker.is(":visible")&&this._focused_from&&this._focused_from.focus(),delete this._focused_from},dayCellClick:function(b){var c=a(b.currentTarget),d=c.data("date"),e=new Date(d);this.o.updateViewDate&&(e.getUTCFullYear()!==this.viewDate.getUTCFullYear()&&this._trigger("changeYear",this.viewDate),e.getUTCMonth()!==this.viewDate.getUTCMonth()&&this._trigger("changeMonth",this.viewDate)),this._setDate(e)},navArrowsClick:function(b){var c=a(b.currentTarget),d=c.hasClass("prev")?-1:1;0!==this.viewMode&&(d*=12*r.viewModes[this.viewMode].navStep),this.viewDate=this.moveMonth(this.viewDate,d),this._trigger(r.viewModes[this.viewMode].e,this.viewDate),this.fill()},_toggle_multidate:function(a){var b=this.dates.contains(a);if(a||this.dates.clear(),b!==-1?(this.o.multidate===!0||this.o.multidate>1||this.o.toggleActive)&&this.dates.remove(b):this.o.multidate===!1?(this.dates.clear(),this.dates.push(a)):this.dates.push(a),"number"==typeof this.o.multidate)for(;this.dates.length>this.o.multidate;)this.dates.remove(0)},_setDate:function(a,b){b&&"date"!==b||this._toggle_multidate(a&&new Date(a)),(!b&&this.o.updateViewDate||"view"===b)&&(this.viewDate=a&&new Date(a)),this.fill(),this.setValue(),b&&"view"===b||this._trigger("changeDate"),this.inputField.trigger("change"),!this.o.autoclose||b&&"date"!==b||this.hide()},moveDay:function(a,b){var c=new Date(a);return c.setUTCDate(a.getUTCDate()+b),c},moveWeek:function(a,b){return this.moveDay(a,7*b)},moveMonth:function(a,b){if(!g(a))return this.o.defaultViewDate;if(!b)return a;var c,d,e=new Date(a.valueOf()),f=e.getUTCDate(),h=e.getUTCMonth(),i=Math.abs(b);if(b=b>0?1:-1,1===i)d=b===-1?function(){return e.getUTCMonth()===h}:function(){return e.getUTCMonth()!==c},c=h+b,e.setUTCMonth(c),c=(c+12)%12;else{for(var j=0;j<i;j++)e=this.moveMonth(e,b);c=e.getUTCMonth(),e.setUTCDate(f),d=function(){return c!==e.getUTCMonth()}}for(;d();)e.setUTCDate(--f),e.setUTCMonth(c);return e},moveYear:function(a,b){return this.moveMonth(a,12*b)},moveAvailableDate:function(a,b,c){do{if(a=this[c](a,b),!this.dateWithinRange(a))return!1;c="moveDay"}while(this.dateIsDisabled(a));return a},weekOfDateIsDisabled:function(b){return a.inArray(b.getUTCDay(),this.o.daysOfWeekDisabled)!==-1},dateIsDisabled:function(b){return this.weekOfDateIsDisabled(b)||a.grep(this.o.datesDisabled,function(a){return e(b,a)}).length>0},dateWithinRange:function(a){return a>=this.o.startDate&&a<=this.o.endDate},keydown:function(a){if(!this.picker.is(":visible"))return void(40!==a.keyCode&&27!==a.keyCode||(this.show(),a.stopPropagation()));var b,c,d=!1,e=this.focusDate||this.viewDate;switch(a.keyCode){case 27:this.focusDate?(this.focusDate=null,this.viewDate=this.dates.get(-1)||this.viewDate,this.fill()):this.hide(),a.preventDefault(),a.stopPropagation();break;case 37:case 38:case 39:case 40:if(!this.o.keyboardNavigation||7===this.o.daysOfWeekDisabled.length)break;b=37===a.keyCode||38===a.keyCode?-1:1,0===this.viewMode?a.ctrlKey?(c=this.moveAvailableDate(e,b,"moveYear"),c&&this._trigger("changeYear",this.viewDate)):a.shiftKey?(c=this.moveAvailableDate(e,b,"moveMonth"),c&&this._trigger("changeMonth",this.viewDate)):37===a.keyCode||39===a.keyCode?c=this.moveAvailableDate(e,b,"moveDay"):this.weekOfDateIsDisabled(e)||(c=this.moveAvailableDate(e,b,"moveWeek")):1===this.viewMode?(38!==a.keyCode&&40!==a.keyCode||(b*=4),c=this.moveAvailableDate(e,b,"moveMonth")):2===this.viewMode&&(38!==a.keyCode&&40!==a.keyCode||(b*=4),c=this.moveAvailableDate(e,b,"moveYear")),c&&(this.focusDate=this.viewDate=c,this.setValue(),this.fill(),a.preventDefault());break;case 13:if(!this.o.forceParse)break;e=this.focusDate||this.dates.get(-1)||this.viewDate,this.o.keyboardNavigation&&(this._toggle_multidate(e),d=!0),this.focusDate=null,this.viewDate=this.dates.get(-1)||this.viewDate,this.setValue(),this.fill(),this.picker.is(":visible")&&(a.preventDefault(),a.stopPropagation(),this.o.autoclose&&this.hide());break;case 9:this.focusDate=null,this.viewDate=this.dates.get(-1)||this.viewDate,this.fill(),this.hide()}d&&(this.dates.length?this._trigger("changeDate"):this._trigger("clearDate"),this.inputField.trigger("change"))},setViewMode:function(a){this.viewMode=a,this.picker.children("div").hide().filter(".datepicker-"+r.viewModes[this.viewMode].clsName).show(),this.updateNavArrows(),this._trigger("changeViewMode",new Date(this.viewDate))}};var l=function(b,c){a.data(b,"datepicker",this),this.element=a(b),this.inputs=a.map(c.inputs,function(a){return a.jquery?a[0]:a}),delete c.inputs,this.keepEmptyValues=c.keepEmptyValues,delete c.keepEmptyValues,n.call(a(this.inputs),c).on("changeDate",a.proxy(this.dateUpdated,this)),this.pickers=a.map(this.inputs,function(b){return a.data(b,"datepicker")}),this.updateDates()};l.prototype={updateDates:function(){this.dates=a.map(this.pickers,function(a){return a.getUTCDate()}),this.updateRanges()},updateRanges:function(){var b=a.map(this.dates,function(a){return a.valueOf()});a.each(this.pickers,function(a,c){c.setRange(b)})},clearDates:function(){a.each(this.pickers,function(a,b){b.clearDates()})},dateUpdated:function(c){if(!this.updating){this.updating=!0;var d=a.data(c.target,"datepicker");if(d!==b){var e=d.getUTCDate(),f=this.keepEmptyValues,g=a.inArray(c.target,this.inputs),h=g-1,i=g+1,j=this.inputs.length;if(g!==-1){if(a.each(this.pickers,function(a,b){b.getUTCDate()||b!==d&&f||b.setUTCDate(e)}),e<this.dates[h])for(;h>=0&&e<this.dates[h];)this.pickers[h--].setUTCDate(e);else if(e>this.dates[i])for(;i<j&&e>this.dates[i];)this.pickers[i++].setUTCDate(e);this.updateDates(),delete this.updating}}}},destroy:function(){a.map(this.pickers,function(a){a.destroy()}),a(this.inputs).off("changeDate",this.dateUpdated),delete this.element.data().datepicker},remove:f("destroy","Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead")};var m=a.fn.datepicker,n=function(c){var d=Array.apply(null,arguments);d.shift();var e;if(this.each(function(){var b=a(this),f=b.data("datepicker"),g="object"==typeof c&&c;if(!f){var j=h(this,"date"),m=a.extend({},o,j,g),n=i(m.language),p=a.extend({},o,n,j,g);b.hasClass("input-daterange")||p.inputs?(a.extend(p,{inputs:p.inputs||b.find("input").toArray()}),f=new l(this,p)):f=new k(this,p),b.data("datepicker",f)}"string"==typeof c&&"function"==typeof f[c]&&(e=f[c].apply(f,d))}),e===b||e instanceof k||e instanceof l)return this;if(this.length>1)throw new Error("Using only allowed for the collection of a single element ("+c+" function)");return e};a.fn.datepicker=n;var o=a.fn.datepicker.defaults={assumeNearbyYear:!1,autoclose:!1,beforeShowDay:a.noop,beforeShowMonth:a.noop,beforeShowYear:a.noop,beforeShowDecade:a.noop,beforeShowCentury:a.noop,calendarWeeks:!1,clearBtn:!1,toggleActive:!1,daysOfWeekDisabled:[],daysOfWeekHighlighted:[],datesDisabled:[],endDate:1/0,forceParse:!0,format:"mm/dd/yyyy",keepEmptyValues:!1,keyboardNavigation:!0,language:"en",minViewMode:0,maxViewMode:4,multidate:!1,multidateSeparator:",",orientation:"auto",rtl:!1,startDate:-(1/0),startView:0,todayBtn:!1,todayHighlight:!1,updateViewDate:!0,weekStart:0,disableTouchKeyboard:!1,enableOnReadonly:!0,showOnFocus:!0,zIndexOffset:10,container:"body",immediateUpdates:!1,title:"",templates:{leftArrow:"&#x00AB;",rightArrow:"&#x00BB;"},showWeekDays:!0},p=a.fn.datepicker.locale_opts=["format","rtl","weekStart"];a.fn.datepicker.Constructor=k;var q=a.fn.datepicker.dates={en:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],daysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],today:"Today",clear:"Clear",titleFormat:"MM yyyy"}},r={viewModes:[{names:["days","month"],clsName:"days",e:"changeMonth"},{names:["months","year"],clsName:"months",e:"changeYear",navStep:1},{names:["years","decade"],clsName:"years",e:"changeDecade",navStep:10},{names:["decades","century"],clsName:"decades",e:"changeCentury",navStep:100},{names:["centuries","millennium"],clsName:"centuries",e:"changeMillennium",navStep:1e3}],validParts:/dd?|DD?|mm?|MM?|yy(?:yy)?/g,nonpunctuation:/[^ -\/:-@\u5e74\u6708\u65e5\[-`{-~\t\n\r]+/g,parseFormat:function(a){if("function"==typeof a.toValue&&"function"==typeof a.toDisplay)return a;var b=a.replace(this.validParts,"\0").split("\0"),c=a.match(this.validParts);if(!b||!b.length||!c||0===c.length)throw new Error("Invalid date format.");return{separators:b,parts:c}},parseDate:function(c,e,f,g){function h(a,b){return b===!0&&(b=10),a<100&&(a+=2e3,a>(new Date).getFullYear()+b&&(a-=100)),a}function i(){var a=this.slice(0,j[n].length),b=j[n].slice(0,a.length);return a.toLowerCase()===b.toLowerCase()}if(!c)return b;if(c instanceof Date)return c;if("string"==typeof e&&(e=r.parseFormat(e)),e.toValue)return e.toValue(c,e,f);var j,l,m,n,o,p={d:"moveDay",m:"moveMonth",w:"moveWeek",y:"moveYear"},s={yesterday:"-1d",today:"+0d",tomorrow:"+1d"};if(c in s&&(c=s[c]),/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/i.test(c)){for(j=c.match(/([\-+]\d+)([dmwy])/gi),c=new Date,n=0;n<j.length;n++)l=j[n].match(/([\-+]\d+)([dmwy])/i),m=Number(l[1]),o=p[l[2].toLowerCase()],c=k.prototype[o](c,m);return k.prototype._zero_utc_time(c)}j=c&&c.match(this.nonpunctuation)||[];var t,u,v={},w=["yyyy","yy","M","MM","m","mm","d","dd"],x={yyyy:function(a,b){return a.setUTCFullYear(g?h(b,g):b)},m:function(a,b){if(isNaN(a))return a;for(b-=1;b<0;)b+=12;for(b%=12,a.setUTCMonth(b);a.getUTCMonth()!==b;)a.setUTCDate(a.getUTCDate()-1);return a},d:function(a,b){return a.setUTCDate(b)}};x.yy=x.yyyy,x.M=x.MM=x.mm=x.m,x.dd=x.d,c=d();var y=e.parts.slice();if(j.length!==y.length&&(y=a(y).filter(function(b,c){return a.inArray(c,w)!==-1}).toArray()),j.length===y.length){var z;for(n=0,z=y.length;n<z;n++){if(t=parseInt(j[n],10),l=y[n],isNaN(t))switch(l){case"MM":u=a(q[f].months).filter(i),t=a.inArray(u[0],q[f].months)+1;break;case"M":u=a(q[f].monthsShort).filter(i),t=a.inArray(u[0],q[f].monthsShort)+1}v[l]=t}var A,B;for(n=0;n<w.length;n++)B=w[n],B in v&&!isNaN(v[B])&&(A=new Date(c),x[B](A,v[B]),isNaN(A)||(c=A))}return c},formatDate:function(b,c,d){if(!b)return"";if("string"==typeof c&&(c=r.parseFormat(c)),c.toDisplay)return c.toDisplay(b,c,d);var e={d:b.getUTCDate(),D:q[d].daysShort[b.getUTCDay()],DD:q[d].days[b.getUTCDay()],m:b.getUTCMonth()+1,M:q[d].monthsShort[b.getUTCMonth()],MM:q[d].months[b.getUTCMonth()],yy:b.getUTCFullYear().toString().substring(2),yyyy:b.getUTCFullYear()};e.dd=(e.d<10?"0":"")+e.d,e.mm=(e.m<10?"0":"")+e.m,b=[];for(var f=a.extend([],c.separators),g=0,h=c.parts.length;g<=h;g++)f.length&&b.push(f.shift()),b.push(e[c.parts[g]]);return b.join("")},headTemplate:'<thead><tr><th colspan="7" class="datepicker-title"></th></tr><tr><th class="prev">'+o.templates.leftArrow+'</th><th colspan="5" class="datepicker-switch"></th><th class="next">'+o.templates.rightArrow+"</th></tr></thead>",
    contTemplate:'<tbody><tr><td colspan="7"></td></tr></tbody>',footTemplate:'<tfoot><tr><th colspan="7" class="today"></th></tr><tr><th colspan="7" class="clear"></th></tr></tfoot>'};r.template='<div class="datepicker"><div class="datepicker-days"><table class="table-condensed">'+r.headTemplate+"<tbody></tbody>"+r.footTemplate+'</table></div><div class="datepicker-months"><table class="table-condensed">'+r.headTemplate+r.contTemplate+r.footTemplate+'</table></div><div class="datepicker-years"><table class="table-condensed">'+r.headTemplate+r.contTemplate+r.footTemplate+'</table></div><div class="datepicker-decades"><table class="table-condensed">'+r.headTemplate+r.contTemplate+r.footTemplate+'</table></div><div class="datepicker-centuries"><table class="table-condensed">'+r.headTemplate+r.contTemplate+r.footTemplate+"</table></div></div>",a.fn.datepicker.DPGlobal=r,a.fn.datepicker.noConflict=function(){return a.fn.datepicker=m,this},a.fn.datepicker.version="1.8.0",a.fn.datepicker.deprecated=function(a){var b=window.console;b&&b.warn&&b.warn("DEPRECATED: "+a)},a(document).on("focus.datepicker.data-api click.datepicker.data-api",'[data-provide="datepicker"]',function(b){var c=a(this);c.data("datepicker")||(b.preventDefault(),n.call(c,"show"))}),a(function(){n.call(a('[data-provide="datepicker-inline"]'))})});
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.moment=t()}(this,function(){"use strict";var e,t;function n(){return e.apply(null,arguments)}function s(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function i(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function r(e){return void 0===e}function a(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function o(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function u(e,t){var n,s=[];for(n=0;n<e.length;++n)s.push(t(e[n],n));return s}function l(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function d(e,t){for(var n in t)l(t,n)&&(e[n]=t[n]);return l(t,"toString")&&(e.toString=t.toString),l(t,"valueOf")&&(e.valueOf=t.valueOf),e}function h(e,t,n,s){return Ot(e,t,n,s,!0).utc()}function c(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function f(e){if(null==e._isValid){var n=c(e),s=t.call(n.parsedDateParts,function(e){return null!=e}),i=!isNaN(e._d.getTime())&&n.overflow<0&&!n.empty&&!n.invalidMonth&&!n.invalidWeekday&&!n.weekdayMismatch&&!n.nullInput&&!n.invalidFormat&&!n.userInvalidated&&(!n.meridiem||n.meridiem&&s);if(e._strict&&(i=i&&0===n.charsLeftOver&&0===n.unusedTokens.length&&void 0===n.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return i;e._isValid=i}return e._isValid}function m(e){var t=h(NaN);return null!=e?d(c(t),e):c(t).userInvalidated=!0,t}t=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,s=0;s<n;s++)if(s in t&&e.call(this,t[s],s,t))return!0;return!1};var _=n.momentProperties=[];function y(e,t){var n,s,i;if(r(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),r(t._i)||(e._i=t._i),r(t._f)||(e._f=t._f),r(t._l)||(e._l=t._l),r(t._strict)||(e._strict=t._strict),r(t._tzm)||(e._tzm=t._tzm),r(t._isUTC)||(e._isUTC=t._isUTC),r(t._offset)||(e._offset=t._offset),r(t._pf)||(e._pf=c(t)),r(t._locale)||(e._locale=t._locale),_.length>0)for(n=0;n<_.length;n++)r(i=t[s=_[n]])||(e[s]=i);return e}var g=!1;function p(e){y(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===g&&(g=!0,n.updateOffset(this),g=!1)}function v(e){return e instanceof p||null!=e&&null!=e._isAMomentObject}function w(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function M(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=w(t)),n}function S(e,t,n){var s,i=Math.min(e.length,t.length),r=Math.abs(e.length-t.length),a=0;for(s=0;s<i;s++)(n&&e[s]!==t[s]||!n&&M(e[s])!==M(t[s]))&&a++;return a+r}function D(e){!1===n.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function k(e,t){var s=!0;return d(function(){if(null!=n.deprecationHandler&&n.deprecationHandler(null,e),s){for(var i,r=[],a=0;a<arguments.length;a++){if(i="","object"==typeof arguments[a]){for(var o in i+="\n["+a+"] ",arguments[0])i+=o+": "+arguments[0][o]+", ";i=i.slice(0,-2)}else i=arguments[a];r.push(i)}D(e+"\nArguments: "+Array.prototype.slice.call(r).join("")+"\n"+(new Error).stack),s=!1}return t.apply(this,arguments)},t)}var Y,O={};function T(e,t){null!=n.deprecationHandler&&n.deprecationHandler(e,t),O[e]||(D(t),O[e]=!0)}function x(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function b(e,t){var n,s=d({},e);for(n in t)l(t,n)&&(i(e[n])&&i(t[n])?(s[n]={},d(s[n],e[n]),d(s[n],t[n])):null!=t[n]?s[n]=t[n]:delete s[n]);for(n in e)l(e,n)&&!l(t,n)&&i(e[n])&&(s[n]=d({},s[n]));return s}function P(e){null!=e&&this.set(e)}n.suppressDeprecationWarnings=!1,n.deprecationHandler=null,Y=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)l(e,t)&&n.push(t);return n};var W={};function H(e,t){var n=e.toLowerCase();W[n]=W[n+"s"]=W[t]=e}function R(e){return"string"==typeof e?W[e]||W[e.toLowerCase()]:void 0}function C(e){var t,n,s={};for(n in e)l(e,n)&&(t=R(n))&&(s[t]=e[n]);return s}var F={};function L(e,t){F[e]=t}function U(e,t,n){var s=""+Math.abs(e),i=t-s.length;return(e>=0?n?"+":"":"-")+Math.pow(10,Math.max(0,i)).toString().substr(1)+s}var N=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,G=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,V={},E={};function I(e,t,n,s){var i=s;"string"==typeof s&&(i=function(){return this[s]()}),e&&(E[e]=i),t&&(E[t[0]]=function(){return U(i.apply(this,arguments),t[1],t[2])}),n&&(E[n]=function(){return this.localeData().ordinal(i.apply(this,arguments),e)})}function A(e,t){return e.isValid()?(t=j(t,e.localeData()),V[t]=V[t]||function(e){var t,n,s,i=e.match(N);for(t=0,n=i.length;t<n;t++)E[i[t]]?i[t]=E[i[t]]:i[t]=(s=i[t]).match(/\[[\s\S]/)?s.replace(/^\[|\]$/g,""):s.replace(/\\/g,"");return function(t){var s,r="";for(s=0;s<n;s++)r+=x(i[s])?i[s].call(t,e):i[s];return r}}(t),V[t](e)):e.localeData().invalidDate()}function j(e,t){var n=5;function s(e){return t.longDateFormat(e)||e}for(G.lastIndex=0;n>=0&&G.test(e);)e=e.replace(G,s),G.lastIndex=0,n-=1;return e}var Z=/\d/,z=/\d\d/,$=/\d{3}/,q=/\d{4}/,J=/[+-]?\d{6}/,B=/\d\d?/,Q=/\d\d\d\d?/,X=/\d\d\d\d\d\d?/,K=/\d{1,3}/,ee=/\d{1,4}/,te=/[+-]?\d{1,6}/,ne=/\d+/,se=/[+-]?\d+/,ie=/Z|[+-]\d\d:?\d\d/gi,re=/Z|[+-]\d\d(?::?\d\d)?/gi,ae=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,oe={};function ue(e,t,n){oe[e]=x(t)?t:function(e,s){return e&&n?n:t}}function le(e,t){return l(oe,e)?oe[e](t._strict,t._locale):new RegExp(de(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(e,t,n,s,i){return t||n||s||i})))}function de(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}var he={};function ce(e,t){var n,s=t;for("string"==typeof e&&(e=[e]),a(t)&&(s=function(e,n){n[t]=M(e)}),n=0;n<e.length;n++)he[e[n]]=s}function fe(e,t){ce(e,function(e,n,s,i){s._w=s._w||{},t(e,s._w,s,i)})}var me=0,_e=1,ye=2,ge=3,pe=4,ve=5,we=6,Me=7,Se=8;function De(e){return ke(e)?366:365}function ke(e){return e%4==0&&e%100!=0||e%400==0}I("Y",0,0,function(){var e=this.year();return e<=9999?""+e:"+"+e}),I(0,["YY",2],0,function(){return this.year()%100}),I(0,["YYYY",4],0,"year"),I(0,["YYYYY",5],0,"year"),I(0,["YYYYYY",6,!0],0,"year"),H("year","y"),L("year",1),ue("Y",se),ue("YY",B,z),ue("YYYY",ee,q),ue("YYYYY",te,J),ue("YYYYYY",te,J),ce(["YYYYY","YYYYYY"],me),ce("YYYY",function(e,t){t[me]=2===e.length?n.parseTwoDigitYear(e):M(e)}),ce("YY",function(e,t){t[me]=n.parseTwoDigitYear(e)}),ce("Y",function(e,t){t[me]=parseInt(e,10)}),n.parseTwoDigitYear=function(e){return M(e)+(M(e)>68?1900:2e3)};var Ye,Oe=Te("FullYear",!0);function Te(e,t){return function(s){return null!=s?(be(this,e,s),n.updateOffset(this,t),this):xe(this,e)}}function xe(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function be(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&ke(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),Pe(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function Pe(e,t){if(isNaN(e)||isNaN(t))return NaN;var n,s=(t%(n=12)+n)%n;return e+=(t-s)/12,1===s?ke(e)?29:28:31-s%7%2}Ye=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},I("M",["MM",2],"Mo",function(){return this.month()+1}),I("MMM",0,0,function(e){return this.localeData().monthsShort(this,e)}),I("MMMM",0,0,function(e){return this.localeData().months(this,e)}),H("month","M"),L("month",8),ue("M",B),ue("MM",B,z),ue("MMM",function(e,t){return t.monthsShortRegex(e)}),ue("MMMM",function(e,t){return t.monthsRegex(e)}),ce(["M","MM"],function(e,t){t[_e]=M(e)-1}),ce(["MMM","MMMM"],function(e,t,n,s){var i=n._locale.monthsParse(e,s,n._strict);null!=i?t[_e]=i:c(n).invalidMonth=e});var We=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,He="January_February_March_April_May_June_July_August_September_October_November_December".split("_");var Re="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");function Ce(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=M(t);else if(!a(t=e.localeData().monthsParse(t)))return e;return n=Math.min(e.date(),Pe(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function Fe(e){return null!=e?(Ce(this,e),n.updateOffset(this,!0),this):xe(this,"Month")}var Le=ae;var Ue=ae;function Ne(){function e(e,t){return t.length-e.length}var t,n,s=[],i=[],r=[];for(t=0;t<12;t++)n=h([2e3,t]),s.push(this.monthsShort(n,"")),i.push(this.months(n,"")),r.push(this.months(n,"")),r.push(this.monthsShort(n,""));for(s.sort(e),i.sort(e),r.sort(e),t=0;t<12;t++)s[t]=de(s[t]),i[t]=de(i[t]);for(t=0;t<24;t++)r[t]=de(r[t]);this._monthsRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+i.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+s.join("|")+")","i")}function Ge(e){var t=new Date(Date.UTC.apply(null,arguments));return e<100&&e>=0&&isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e),t}function Ve(e,t,n){var s=7+t-n;return-((7+Ge(e,0,s).getUTCDay()-t)%7)+s-1}function Ee(e,t,n,s,i){var r,a,o=1+7*(t-1)+(7+n-s)%7+Ve(e,s,i);return o<=0?a=De(r=e-1)+o:o>De(e)?(r=e+1,a=o-De(e)):(r=e,a=o),{year:r,dayOfYear:a}}function Ie(e,t,n){var s,i,r=Ve(e.year(),t,n),a=Math.floor((e.dayOfYear()-r-1)/7)+1;return a<1?s=a+Ae(i=e.year()-1,t,n):a>Ae(e.year(),t,n)?(s=a-Ae(e.year(),t,n),i=e.year()+1):(i=e.year(),s=a),{week:s,year:i}}function Ae(e,t,n){var s=Ve(e,t,n),i=Ve(e+1,t,n);return(De(e)-s+i)/7}I("w",["ww",2],"wo","week"),I("W",["WW",2],"Wo","isoWeek"),H("week","w"),H("isoWeek","W"),L("week",5),L("isoWeek",5),ue("w",B),ue("ww",B,z),ue("W",B),ue("WW",B,z),fe(["w","ww","W","WW"],function(e,t,n,s){t[s.substr(0,1)]=M(e)});I("d",0,"do","day"),I("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e)}),I("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e)}),I("dddd",0,0,function(e){return this.localeData().weekdays(this,e)}),I("e",0,0,"weekday"),I("E",0,0,"isoWeekday"),H("day","d"),H("weekday","e"),H("isoWeekday","E"),L("day",11),L("weekday",11),L("isoWeekday",11),ue("d",B),ue("e",B),ue("E",B),ue("dd",function(e,t){return t.weekdaysMinRegex(e)}),ue("ddd",function(e,t){return t.weekdaysShortRegex(e)}),ue("dddd",function(e,t){return t.weekdaysRegex(e)}),fe(["dd","ddd","dddd"],function(e,t,n,s){var i=n._locale.weekdaysParse(e,s,n._strict);null!=i?t.d=i:c(n).invalidWeekday=e}),fe(["d","e","E"],function(e,t,n,s){t[s]=M(e)});var je="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");var Ze="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");var ze="Su_Mo_Tu_We_Th_Fr_Sa".split("_");var $e=ae;var qe=ae;var Je=ae;function Be(){function e(e,t){return t.length-e.length}var t,n,s,i,r,a=[],o=[],u=[],l=[];for(t=0;t<7;t++)n=h([2e3,1]).day(t),s=this.weekdaysMin(n,""),i=this.weekdaysShort(n,""),r=this.weekdays(n,""),a.push(s),o.push(i),u.push(r),l.push(s),l.push(i),l.push(r);for(a.sort(e),o.sort(e),u.sort(e),l.sort(e),t=0;t<7;t++)o[t]=de(o[t]),u[t]=de(u[t]),l[t]=de(l[t]);this._weekdaysRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+a.join("|")+")","i")}function Qe(){return this.hours()%12||12}function Xe(e,t){I(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)})}function Ke(e,t){return t._meridiemParse}I("H",["HH",2],0,"hour"),I("h",["hh",2],0,Qe),I("k",["kk",2],0,function(){return this.hours()||24}),I("hmm",0,0,function(){return""+Qe.apply(this)+U(this.minutes(),2)}),I("hmmss",0,0,function(){return""+Qe.apply(this)+U(this.minutes(),2)+U(this.seconds(),2)}),I("Hmm",0,0,function(){return""+this.hours()+U(this.minutes(),2)}),I("Hmmss",0,0,function(){return""+this.hours()+U(this.minutes(),2)+U(this.seconds(),2)}),Xe("a",!0),Xe("A",!1),H("hour","h"),L("hour",13),ue("a",Ke),ue("A",Ke),ue("H",B),ue("h",B),ue("k",B),ue("HH",B,z),ue("hh",B,z),ue("kk",B,z),ue("hmm",Q),ue("hmmss",X),ue("Hmm",Q),ue("Hmmss",X),ce(["H","HH"],ge),ce(["k","kk"],function(e,t,n){var s=M(e);t[ge]=24===s?0:s}),ce(["a","A"],function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e}),ce(["h","hh"],function(e,t,n){t[ge]=M(e),c(n).bigHour=!0}),ce("hmm",function(e,t,n){var s=e.length-2;t[ge]=M(e.substr(0,s)),t[pe]=M(e.substr(s)),c(n).bigHour=!0}),ce("hmmss",function(e,t,n){var s=e.length-4,i=e.length-2;t[ge]=M(e.substr(0,s)),t[pe]=M(e.substr(s,2)),t[ve]=M(e.substr(i)),c(n).bigHour=!0}),ce("Hmm",function(e,t,n){var s=e.length-2;t[ge]=M(e.substr(0,s)),t[pe]=M(e.substr(s))}),ce("Hmmss",function(e,t,n){var s=e.length-4,i=e.length-2;t[ge]=M(e.substr(0,s)),t[pe]=M(e.substr(s,2)),t[ve]=M(e.substr(i))});var et,tt=Te("Hours",!0),nt={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:He,monthsShort:Re,week:{dow:0,doy:6},weekdays:je,weekdaysMin:ze,weekdaysShort:Ze,meridiemParse:/[ap]\.?m?\.?/i},st={},it={};function rt(e){return e?e.toLowerCase().replace("_","-"):e}function at(e){var t=null;if(!st[e]&&"undefined"!=typeof module&&module&&module.exports)try{t=et._abbr,require("./locale/"+e),ot(t)}catch(e){}return st[e]}function ot(e,t){var n;return e&&((n=r(t)?lt(e):ut(e,t))?et=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),et._abbr}function ut(e,t){if(null!==t){var n,s=nt;if(t.abbr=e,null!=st[e])T("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),s=st[e]._config;else if(null!=t.parentLocale)if(null!=st[t.parentLocale])s=st[t.parentLocale]._config;else{if(null==(n=at(t.parentLocale)))return it[t.parentLocale]||(it[t.parentLocale]=[]),it[t.parentLocale].push({name:e,config:t}),null;s=n._config}return st[e]=new P(b(s,t)),it[e]&&it[e].forEach(function(e){ut(e.name,e.config)}),ot(e),st[e]}return delete st[e],null}function lt(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return et;if(!s(e)){if(t=at(e))return t;e=[e]}return function(e){for(var t,n,s,i,r=0;r<e.length;){for(t=(i=rt(e[r]).split("-")).length,n=(n=rt(e[r+1]))?n.split("-"):null;t>0;){if(s=at(i.slice(0,t).join("-")))return s;if(n&&n.length>=t&&S(i,n,!0)>=t-1)break;t--}r++}return et}(e)}function dt(e){var t,n=e._a;return n&&-2===c(e).overflow&&(t=n[_e]<0||n[_e]>11?_e:n[ye]<1||n[ye]>Pe(n[me],n[_e])?ye:n[ge]<0||n[ge]>24||24===n[ge]&&(0!==n[pe]||0!==n[ve]||0!==n[we])?ge:n[pe]<0||n[pe]>59?pe:n[ve]<0||n[ve]>59?ve:n[we]<0||n[we]>999?we:-1,c(e)._overflowDayOfYear&&(t<me||t>ye)&&(t=ye),c(e)._overflowWeeks&&-1===t&&(t=Me),c(e)._overflowWeekday&&-1===t&&(t=Se),c(e).overflow=t),e}function ht(e,t,n){return null!=e?e:null!=t?t:n}function ct(e){var t,s,i,r,a,o=[];if(!e._d){var u,l;for(u=e,l=new Date(n.now()),i=u._useUTC?[l.getUTCFullYear(),l.getUTCMonth(),l.getUTCDate()]:[l.getFullYear(),l.getMonth(),l.getDate()],e._w&&null==e._a[ye]&&null==e._a[_e]&&function(e){var t,n,s,i,r,a,o,u;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)r=1,a=4,n=ht(t.GG,e._a[me],Ie(Tt(),1,4).year),s=ht(t.W,1),((i=ht(t.E,1))<1||i>7)&&(u=!0);else{r=e._locale._week.dow,a=e._locale._week.doy;var l=Ie(Tt(),r,a);n=ht(t.gg,e._a[me],l.year),s=ht(t.w,l.week),null!=t.d?((i=t.d)<0||i>6)&&(u=!0):null!=t.e?(i=t.e+r,(t.e<0||t.e>6)&&(u=!0)):i=r}s<1||s>Ae(n,r,a)?c(e)._overflowWeeks=!0:null!=u?c(e)._overflowWeekday=!0:(o=Ee(n,s,i,r,a),e._a[me]=o.year,e._dayOfYear=o.dayOfYear)}(e),null!=e._dayOfYear&&(a=ht(e._a[me],i[me]),(e._dayOfYear>De(a)||0===e._dayOfYear)&&(c(e)._overflowDayOfYear=!0),s=Ge(a,0,e._dayOfYear),e._a[_e]=s.getUTCMonth(),e._a[ye]=s.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=o[t]=i[t];for(;t<7;t++)e._a[t]=o[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[ge]&&0===e._a[pe]&&0===e._a[ve]&&0===e._a[we]&&(e._nextDay=!0,e._a[ge]=0),e._d=(e._useUTC?Ge:function(e,t,n,s,i,r,a){var o=new Date(e,t,n,s,i,r,a);return e<100&&e>=0&&isFinite(o.getFullYear())&&o.setFullYear(e),o}).apply(null,o),r=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[ge]=24),e._w&&void 0!==e._w.d&&e._w.d!==r&&(c(e).weekdayMismatch=!0)}}var ft=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,mt=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,_t=/Z|[+-]\d\d(?::?\d\d)?/,yt=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],gt=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],pt=/^\/?Date\((\-?\d+)/i;function vt(e){var t,n,s,i,r,a,o=e._i,u=ft.exec(o)||mt.exec(o);if(u){for(c(e).iso=!0,t=0,n=yt.length;t<n;t++)if(yt[t][1].exec(u[1])){i=yt[t][0],s=!1!==yt[t][2];break}if(null==i)return void(e._isValid=!1);if(u[3]){for(t=0,n=gt.length;t<n;t++)if(gt[t][1].exec(u[3])){r=(u[2]||" ")+gt[t][0];break}if(null==r)return void(e._isValid=!1)}if(!s&&null!=r)return void(e._isValid=!1);if(u[4]){if(!_t.exec(u[4]))return void(e._isValid=!1);a="Z"}e._f=i+(r||"")+(a||""),kt(e)}else e._isValid=!1}var wt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function Mt(e,t,n,s,i,r){var a=[function(e){var t=parseInt(e,10);{if(t<=49)return 2e3+t;if(t<=999)return 1900+t}return t}(e),Re.indexOf(t),parseInt(n,10),parseInt(s,10),parseInt(i,10)];return r&&a.push(parseInt(r,10)),a}var St={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Dt(e){var t,n,s,i=wt.exec(e._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim());if(i){var r=Mt(i[4],i[3],i[2],i[5],i[6],i[7]);if(t=i[1],n=r,s=e,t&&Ze.indexOf(t)!==new Date(n[0],n[1],n[2]).getDay()&&(c(s).weekdayMismatch=!0,s._isValid=!1,1))return;e._a=r,e._tzm=function(e,t,n){if(e)return St[e];if(t)return 0;var s=parseInt(n,10),i=s%100;return(s-i)/100*60+i}(i[8],i[9],i[10]),e._d=Ge.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),c(e).rfc2822=!0}else e._isValid=!1}function kt(e){if(e._f!==n.ISO_8601)if(e._f!==n.RFC_2822){e._a=[],c(e).empty=!0;var t,s,i,r,a,o,u,d,h=""+e._i,f=h.length,m=0;for(i=j(e._f,e._locale).match(N)||[],t=0;t<i.length;t++)r=i[t],(s=(h.match(le(r,e))||[])[0])&&((a=h.substr(0,h.indexOf(s))).length>0&&c(e).unusedInput.push(a),h=h.slice(h.indexOf(s)+s.length),m+=s.length),E[r]?(s?c(e).empty=!1:c(e).unusedTokens.push(r),o=r,d=e,null!=(u=s)&&l(he,o)&&he[o](u,d._a,d,o)):e._strict&&!s&&c(e).unusedTokens.push(r);c(e).charsLeftOver=f-m,h.length>0&&c(e).unusedInput.push(h),e._a[ge]<=12&&!0===c(e).bigHour&&e._a[ge]>0&&(c(e).bigHour=void 0),c(e).parsedDateParts=e._a.slice(0),c(e).meridiem=e._meridiem,e._a[ge]=function(e,t,n){var s;if(null==n)return t;return null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?((s=e.isPM(n))&&t<12&&(t+=12),s||12!==t||(t=0),t):t}(e._locale,e._a[ge],e._meridiem),ct(e),dt(e)}else Dt(e);else vt(e)}function Yt(e){var t,l,h,_,g=e._i,w=e._f;return e._locale=e._locale||lt(e._l),null===g||void 0===w&&""===g?m({nullInput:!0}):("string"==typeof g&&(e._i=g=e._locale.preparse(g)),v(g)?new p(dt(g)):(o(g)?e._d=g:s(w)?function(e){var t,n,s,i,r;if(0===e._f.length)return c(e).invalidFormat=!0,void(e._d=new Date(NaN));for(i=0;i<e._f.length;i++)r=0,t=y({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[i],kt(t),f(t)&&(r+=c(t).charsLeftOver,r+=10*c(t).unusedTokens.length,c(t).score=r,(null==s||r<s)&&(s=r,n=t));d(e,n||t)}(e):w?kt(e):r(l=(t=e)._i)?t._d=new Date(n.now()):o(l)?t._d=new Date(l.valueOf()):"string"==typeof l?(h=t,null===(_=pt.exec(h._i))?(vt(h),!1===h._isValid&&(delete h._isValid,Dt(h),!1===h._isValid&&(delete h._isValid,n.createFromInputFallback(h)))):h._d=new Date(+_[1])):s(l)?(t._a=u(l.slice(0),function(e){return parseInt(e,10)}),ct(t)):i(l)?function(e){if(!e._d){var t=C(e._i);e._a=u([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10)}),ct(e)}}(t):a(l)?t._d=new Date(l):n.createFromInputFallback(t),f(e)||(e._d=null),e))}function Ot(e,t,n,r,a){var o,u={};return!0!==n&&!1!==n||(r=n,n=void 0),(i(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||s(e)&&0===e.length)&&(e=void 0),u._isAMomentObject=!0,u._useUTC=u._isUTC=a,u._l=n,u._i=e,u._f=t,u._strict=r,(o=new p(dt(Yt(u))))._nextDay&&(o.add(1,"d"),o._nextDay=void 0),o}function Tt(e,t,n,s){return Ot(e,t,n,s,!1)}n.createFromInputFallback=k("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))}),n.ISO_8601=function(){},n.RFC_2822=function(){};var xt=k("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=Tt.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:m()}),bt=k("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=Tt.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:m()});function Pt(e,t){var n,i;if(1===t.length&&s(t[0])&&(t=t[0]),!t.length)return Tt();for(n=t[0],i=1;i<t.length;++i)t[i].isValid()&&!t[i][e](n)||(n=t[i]);return n}var Wt=["year","quarter","month","week","day","hour","minute","second","millisecond"];function Ht(e){var t=C(e),n=t.year||0,s=t.quarter||0,i=t.month||0,r=t.week||0,a=t.day||0,o=t.hour||0,u=t.minute||0,l=t.second||0,d=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===Ye.call(Wt,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,s=0;s<Wt.length;++s)if(e[Wt[s]]){if(n)return!1;parseFloat(e[Wt[s]])!==M(e[Wt[s]])&&(n=!0)}return!0}(t),this._milliseconds=+d+1e3*l+6e4*u+1e3*o*60*60,this._days=+a+7*r,this._months=+i+3*s+12*n,this._data={},this._locale=lt(),this._bubble()}function Rt(e){return e instanceof Ht}function Ct(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function Ft(e,t){I(e,0,0,function(){var e=this.utcOffset(),n="+";return e<0&&(e=-e,n="-"),n+U(~~(e/60),2)+t+U(~~e%60,2)})}Ft("Z",":"),Ft("ZZ",""),ue("Z",re),ue("ZZ",re),ce(["Z","ZZ"],function(e,t,n){n._useUTC=!0,n._tzm=Ut(re,e)});var Lt=/([\+\-]|\d\d)/gi;function Ut(e,t){var n=(t||"").match(e);if(null===n)return null;var s=((n[n.length-1]||[])+"").match(Lt)||["-",0,0],i=60*s[1]+M(s[2]);return 0===i?0:"+"===s[0]?i:-i}function Nt(e,t){var s,i;return t._isUTC?(s=t.clone(),i=(v(e)||o(e)?e.valueOf():Tt(e).valueOf())-s.valueOf(),s._d.setTime(s._d.valueOf()+i),n.updateOffset(s,!1),s):Tt(e).local()}function Gt(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function Vt(){return!!this.isValid()&&(this._isUTC&&0===this._offset)}n.updateOffset=function(){};var Et=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,It=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function At(e,t){var n,s,i,r=e,o=null;return Rt(e)?r={ms:e._milliseconds,d:e._days,M:e._months}:a(e)?(r={},t?r[t]=e:r.milliseconds=e):(o=Et.exec(e))?(n="-"===o[1]?-1:1,r={y:0,d:M(o[ye])*n,h:M(o[ge])*n,m:M(o[pe])*n,s:M(o[ve])*n,ms:M(Ct(1e3*o[we]))*n}):(o=It.exec(e))?(n="-"===o[1]?-1:(o[1],1),r={y:jt(o[2],n),M:jt(o[3],n),w:jt(o[4],n),d:jt(o[5],n),h:jt(o[6],n),m:jt(o[7],n),s:jt(o[8],n)}):null==r?r={}:"object"==typeof r&&("from"in r||"to"in r)&&(i=function(e,t){var n;if(!e.isValid()||!t.isValid())return{milliseconds:0,months:0};t=Nt(t,e),e.isBefore(t)?n=Zt(e,t):((n=Zt(t,e)).milliseconds=-n.milliseconds,n.months=-n.months);return n}(Tt(r.from),Tt(r.to)),(r={}).ms=i.milliseconds,r.M=i.months),s=new Ht(r),Rt(e)&&l(e,"_locale")&&(s._locale=e._locale),s}function jt(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function Zt(e,t){var n={milliseconds:0,months:0};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function zt(e,t){return function(n,s){var i;return null===s||isNaN(+s)||(T(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),i=n,n=s,s=i),$t(this,At(n="string"==typeof n?+n:n,s),e),this}}function $t(e,t,s,i){var r=t._milliseconds,a=Ct(t._days),o=Ct(t._months);e.isValid()&&(i=null==i||i,o&&Ce(e,xe(e,"Month")+o*s),a&&be(e,"Date",xe(e,"Date")+a*s),r&&e._d.setTime(e._d.valueOf()+r*s),i&&n.updateOffset(e,a||o))}At.fn=Ht.prototype,At.invalid=function(){return At(NaN)};var qt=zt(1,"add"),Jt=zt(-1,"subtract");function Bt(e,t){var n=12*(t.year()-e.year())+(t.month()-e.month()),s=e.clone().add(n,"months");return-(n+(t-s<0?(t-s)/(s-e.clone().add(n-1,"months")):(t-s)/(e.clone().add(n+1,"months")-s)))||0}function Qt(e){var t;return void 0===e?this._locale._abbr:(null!=(t=lt(e))&&(this._locale=t),this)}n.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",n.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Xt=k("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return void 0===e?this.localeData():this.locale(e)});function Kt(){return this._locale}function en(e,t){I(0,[e,e.length],0,t)}function tn(e,t,n,s,i){var r;return null==e?Ie(this,s,i).year:(t>(r=Ae(e,s,i))&&(t=r),function(e,t,n,s,i){var r=Ee(e,t,n,s,i),a=Ge(r.year,0,r.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}.call(this,e,t,n,s,i))}I(0,["gg",2],0,function(){return this.weekYear()%100}),I(0,["GG",2],0,function(){return this.isoWeekYear()%100}),en("gggg","weekYear"),en("ggggg","weekYear"),en("GGGG","isoWeekYear"),en("GGGGG","isoWeekYear"),H("weekYear","gg"),H("isoWeekYear","GG"),L("weekYear",1),L("isoWeekYear",1),ue("G",se),ue("g",se),ue("GG",B,z),ue("gg",B,z),ue("GGGG",ee,q),ue("gggg",ee,q),ue("GGGGG",te,J),ue("ggggg",te,J),fe(["gggg","ggggg","GGGG","GGGGG"],function(e,t,n,s){t[s.substr(0,2)]=M(e)}),fe(["gg","GG"],function(e,t,s,i){t[i]=n.parseTwoDigitYear(e)}),I("Q",0,"Qo","quarter"),H("quarter","Q"),L("quarter",7),ue("Q",Z),ce("Q",function(e,t){t[_e]=3*(M(e)-1)}),I("D",["DD",2],"Do","date"),H("date","D"),L("date",9),ue("D",B),ue("DD",B,z),ue("Do",function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient}),ce(["D","DD"],ye),ce("Do",function(e,t){t[ye]=M(e.match(B)[0])});var nn=Te("Date",!0);I("DDD",["DDDD",3],"DDDo","dayOfYear"),H("dayOfYear","DDD"),L("dayOfYear",4),ue("DDD",K),ue("DDDD",$),ce(["DDD","DDDD"],function(e,t,n){n._dayOfYear=M(e)}),I("m",["mm",2],0,"minute"),H("minute","m"),L("minute",14),ue("m",B),ue("mm",B,z),ce(["m","mm"],pe);var sn=Te("Minutes",!1);I("s",["ss",2],0,"second"),H("second","s"),L("second",15),ue("s",B),ue("ss",B,z),ce(["s","ss"],ve);var rn,an=Te("Seconds",!1);for(I("S",0,0,function(){return~~(this.millisecond()/100)}),I(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),I(0,["SSS",3],0,"millisecond"),I(0,["SSSS",4],0,function(){return 10*this.millisecond()}),I(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),I(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),I(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),I(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),I(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),H("millisecond","ms"),L("millisecond",16),ue("S",K,Z),ue("SS",K,z),ue("SSS",K,$),rn="SSSS";rn.length<=9;rn+="S")ue(rn,ne);function on(e,t){t[we]=M(1e3*("0."+e))}for(rn="S";rn.length<=9;rn+="S")ce(rn,on);var un=Te("Milliseconds",!1);I("z",0,0,"zoneAbbr"),I("zz",0,0,"zoneName");var ln=p.prototype;function dn(e){return e}ln.add=qt,ln.calendar=function(e,t){var s=e||Tt(),i=Nt(s,this).startOf("day"),r=n.calendarFormat(this,i)||"sameElse",a=t&&(x(t[r])?t[r].call(this,s):t[r]);return this.format(a||this.localeData().calendar(r,this,Tt(s)))},ln.clone=function(){return new p(this)},ln.diff=function(e,t,n){var s,i,r;if(!this.isValid())return NaN;if(!(s=Nt(e,this)).isValid())return NaN;switch(i=6e4*(s.utcOffset()-this.utcOffset()),t=R(t)){case"year":r=Bt(this,s)/12;break;case"month":r=Bt(this,s);break;case"quarter":r=Bt(this,s)/3;break;case"second":r=(this-s)/1e3;break;case"minute":r=(this-s)/6e4;break;case"hour":r=(this-s)/36e5;break;case"day":r=(this-s-i)/864e5;break;case"week":r=(this-s-i)/6048e5;break;default:r=this-s}return n?r:w(r)},ln.endOf=function(e){return void 0===(e=R(e))||"millisecond"===e?this:("date"===e&&(e="day"),this.startOf(e).add(1,"isoWeek"===e?"week":e).subtract(1,"ms"))},ln.format=function(e){e||(e=this.isUtc()?n.defaultFormatUtc:n.defaultFormat);var t=A(this,e);return this.localeData().postformat(t)},ln.from=function(e,t){return this.isValid()&&(v(e)&&e.isValid()||Tt(e).isValid())?At({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},ln.fromNow=function(e){return this.from(Tt(),e)},ln.to=function(e,t){return this.isValid()&&(v(e)&&e.isValid()||Tt(e).isValid())?At({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},ln.toNow=function(e){return this.to(Tt(),e)},ln.get=function(e){return x(this[e=R(e)])?this[e]():this},ln.invalidAt=function(){return c(this).overflow},ln.isAfter=function(e,t){var n=v(e)?e:Tt(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=R(r(t)?"millisecond":t))?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},ln.isBefore=function(e,t){var n=v(e)?e:Tt(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=R(r(t)?"millisecond":t))?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},ln.isBetween=function(e,t,n,s){return("("===(s=s||"()")[0]?this.isAfter(e,n):!this.isBefore(e,n))&&(")"===s[1]?this.isBefore(t,n):!this.isAfter(t,n))},ln.isSame=function(e,t){var n,s=v(e)?e:Tt(e);return!(!this.isValid()||!s.isValid())&&("millisecond"===(t=R(t||"millisecond"))?this.valueOf()===s.valueOf():(n=s.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},ln.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},ln.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},ln.isValid=function(){return f(this)},ln.lang=Xt,ln.locale=Qt,ln.localeData=Kt,ln.max=bt,ln.min=xt,ln.parsingFlags=function(){return d({},c(this))},ln.set=function(e,t){if("object"==typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:F[n]});return t.sort(function(e,t){return e.priority-t.priority}),t}(e=C(e)),s=0;s<n.length;s++)this[n[s].unit](e[n[s].unit]);else if(x(this[e=R(e)]))return this[e](t);return this},ln.startOf=function(e){switch(e=R(e)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":case"date":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===e&&this.weekday(0),"isoWeek"===e&&this.isoWeekday(1),"quarter"===e&&this.month(3*Math.floor(this.month()/3)),this},ln.subtract=Jt,ln.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},ln.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},ln.toDate=function(){return new Date(this.valueOf())},ln.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return n.year()<0||n.year()>9999?A(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):x(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",A(n,"Z")):A(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},ln.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',s=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",i=t+'[")]';return this.format(n+s+"-MM-DD[T]HH:mm:ss.SSS"+i)},ln.toJSON=function(){return this.isValid()?this.toISOString():null},ln.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},ln.unix=function(){return Math.floor(this.valueOf()/1e3)},ln.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},ln.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},ln.year=Oe,ln.isLeapYear=function(){return ke(this.year())},ln.weekYear=function(e){return tn.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},ln.isoWeekYear=function(e){return tn.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},ln.quarter=ln.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},ln.month=Fe,ln.daysInMonth=function(){return Pe(this.year(),this.month())},ln.week=ln.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},ln.isoWeek=ln.isoWeeks=function(e){var t=Ie(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},ln.weeksInYear=function(){var e=this.localeData()._week;return Ae(this.year(),e.dow,e.doy)},ln.isoWeeksInYear=function(){return Ae(this.year(),1,4)},ln.date=nn,ln.day=ln.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t,n,s=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(t=e,n=this.localeData(),e="string"!=typeof t?t:isNaN(t)?"number"==typeof(t=n.weekdaysParse(t))?t:null:parseInt(t,10),this.add(e-s,"d")):s},ln.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},ln.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=(n=e,s=this.localeData(),"string"==typeof n?s.weekdaysParse(n)%7||7:isNaN(n)?null:n);return this.day(this.day()%7?t:t-7)}return this.day()||7;var n,s},ln.dayOfYear=function(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")},ln.hour=ln.hours=tt,ln.minute=ln.minutes=sn,ln.second=ln.seconds=an,ln.millisecond=ln.milliseconds=un,ln.utcOffset=function(e,t,s){var i,r=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if("string"==typeof e){if(null===(e=Ut(re,e)))return this}else Math.abs(e)<16&&!s&&(e*=60);return!this._isUTC&&t&&(i=Gt(this)),this._offset=e,this._isUTC=!0,null!=i&&this.add(i,"m"),r!==e&&(!t||this._changeInProgress?$t(this,At(e-r,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,n.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?r:Gt(this)},ln.utc=function(e){return this.utcOffset(0,e)},ln.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Gt(this),"m")),this},ln.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Ut(ie,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},ln.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?Tt(e).utcOffset():0,(this.utcOffset()-e)%60==0)},ln.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},ln.isLocal=function(){return!!this.isValid()&&!this._isUTC},ln.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},ln.isUtc=Vt,ln.isUTC=Vt,ln.zoneAbbr=function(){return this._isUTC?"UTC":""},ln.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},ln.dates=k("dates accessor is deprecated. Use date instead.",nn),ln.months=k("months accessor is deprecated. Use month instead",Fe),ln.years=k("years accessor is deprecated. Use year instead",Oe),ln.zone=k("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",function(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()}),ln.isDSTShifted=k("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",function(){if(!r(this._isDSTShifted))return this._isDSTShifted;var e={};if(y(e,this),(e=Yt(e))._a){var t=e._isUTC?h(e._a):Tt(e._a);this._isDSTShifted=this.isValid()&&S(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted});var hn=P.prototype;function cn(e,t,n,s){var i=lt(),r=h().set(s,t);return i[n](r,e)}function fn(e,t,n){if(a(e)&&(t=e,e=void 0),e=e||"",null!=t)return cn(e,t,n,"month");var s,i=[];for(s=0;s<12;s++)i[s]=cn(e,s,n,"month");return i}function mn(e,t,n,s){"boolean"==typeof e?(a(t)&&(n=t,t=void 0),t=t||""):(n=t=e,e=!1,a(t)&&(n=t,t=void 0),t=t||"");var i,r=lt(),o=e?r._week.dow:0;if(null!=n)return cn(t,(n+o)%7,s,"day");var u=[];for(i=0;i<7;i++)u[i]=cn(t,(i+o)%7,s,"day");return u}hn.calendar=function(e,t,n){var s=this._calendar[e]||this._calendar.sameElse;return x(s)?s.call(t,n):s},hn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1)}),this._longDateFormat[e])},hn.invalidDate=function(){return this._invalidDate},hn.ordinal=function(e){return this._ordinal.replace("%d",e)},hn.preparse=dn,hn.postformat=dn,hn.relativeTime=function(e,t,n,s){var i=this._relativeTime[n];return x(i)?i(e,t,n,s):i.replace(/%d/i,e)},hn.pastFuture=function(e,t){var n=this._relativeTime[e>0?"future":"past"];return x(n)?n(t):n.replace(/%s/i,t)},hn.set=function(e){var t,n;for(n in e)x(t=e[n])?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},hn.months=function(e,t){return e?s(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||We).test(t)?"format":"standalone"][e.month()]:s(this._months)?this._months:this._months.standalone},hn.monthsShort=function(e,t){return e?s(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[We.test(t)?"format":"standalone"][e.month()]:s(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},hn.monthsParse=function(e,t,n){var s,i,r;if(this._monthsParseExact)return function(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],s=0;s<12;++s)r=h([2e3,s]),this._shortMonthsParse[s]=this.monthsShort(r,"").toLocaleLowerCase(),this._longMonthsParse[s]=this.months(r,"").toLocaleLowerCase();return n?"MMM"===t?-1!==(i=Ye.call(this._shortMonthsParse,a))?i:null:-1!==(i=Ye.call(this._longMonthsParse,a))?i:null:"MMM"===t?-1!==(i=Ye.call(this._shortMonthsParse,a))?i:-1!==(i=Ye.call(this._longMonthsParse,a))?i:null:-1!==(i=Ye.call(this._longMonthsParse,a))?i:-1!==(i=Ye.call(this._shortMonthsParse,a))?i:null}.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),s=0;s<12;s++){if(i=h([2e3,s]),n&&!this._longMonthsParse[s]&&(this._longMonthsParse[s]=new RegExp("^"+this.months(i,"").replace(".","")+"$","i"),this._shortMonthsParse[s]=new RegExp("^"+this.monthsShort(i,"").replace(".","")+"$","i")),n||this._monthsParse[s]||(r="^"+this.months(i,"")+"|^"+this.monthsShort(i,""),this._monthsParse[s]=new RegExp(r.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[s].test(e))return s;if(n&&"MMM"===t&&this._shortMonthsParse[s].test(e))return s;if(!n&&this._monthsParse[s].test(e))return s}},hn.monthsRegex=function(e){return this._monthsParseExact?(l(this,"_monthsRegex")||Ne.call(this),e?this._monthsStrictRegex:this._monthsRegex):(l(this,"_monthsRegex")||(this._monthsRegex=Ue),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},hn.monthsShortRegex=function(e){return this._monthsParseExact?(l(this,"_monthsRegex")||Ne.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(l(this,"_monthsShortRegex")||(this._monthsShortRegex=Le),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},hn.week=function(e){return Ie(e,this._week.dow,this._week.doy).week},hn.firstDayOfYear=function(){return this._week.doy},hn.firstDayOfWeek=function(){return this._week.dow},hn.weekdays=function(e,t){return e?s(this._weekdays)?this._weekdays[e.day()]:this._weekdays[this._weekdays.isFormat.test(t)?"format":"standalone"][e.day()]:s(this._weekdays)?this._weekdays:this._weekdays.standalone},hn.weekdaysMin=function(e){return e?this._weekdaysMin[e.day()]:this._weekdaysMin},hn.weekdaysShort=function(e){return e?this._weekdaysShort[e.day()]:this._weekdaysShort},hn.weekdaysParse=function(e,t,n){var s,i,r;if(this._weekdaysParseExact)return function(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],s=0;s<7;++s)r=h([2e3,1]).day(s),this._minWeekdaysParse[s]=this.weekdaysMin(r,"").toLocaleLowerCase(),this._shortWeekdaysParse[s]=this.weekdaysShort(r,"").toLocaleLowerCase(),this._weekdaysParse[s]=this.weekdays(r,"").toLocaleLowerCase();return n?"dddd"===t?-1!==(i=Ye.call(this._weekdaysParse,a))?i:null:"ddd"===t?-1!==(i=Ye.call(this._shortWeekdaysParse,a))?i:null:-1!==(i=Ye.call(this._minWeekdaysParse,a))?i:null:"dddd"===t?-1!==(i=Ye.call(this._weekdaysParse,a))?i:-1!==(i=Ye.call(this._shortWeekdaysParse,a))?i:-1!==(i=Ye.call(this._minWeekdaysParse,a))?i:null:"ddd"===t?-1!==(i=Ye.call(this._shortWeekdaysParse,a))?i:-1!==(i=Ye.call(this._weekdaysParse,a))?i:-1!==(i=Ye.call(this._minWeekdaysParse,a))?i:null:-1!==(i=Ye.call(this._minWeekdaysParse,a))?i:-1!==(i=Ye.call(this._weekdaysParse,a))?i:-1!==(i=Ye.call(this._shortWeekdaysParse,a))?i:null}.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),s=0;s<7;s++){if(i=h([2e3,1]).day(s),n&&!this._fullWeekdaysParse[s]&&(this._fullWeekdaysParse[s]=new RegExp("^"+this.weekdays(i,"").replace(".",".?")+"$","i"),this._shortWeekdaysParse[s]=new RegExp("^"+this.weekdaysShort(i,"").replace(".",".?")+"$","i"),this._minWeekdaysParse[s]=new RegExp("^"+this.weekdaysMin(i,"").replace(".",".?")+"$","i")),this._weekdaysParse[s]||(r="^"+this.weekdays(i,"")+"|^"+this.weekdaysShort(i,"")+"|^"+this.weekdaysMin(i,""),this._weekdaysParse[s]=new RegExp(r.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[s].test(e))return s;if(n&&"ddd"===t&&this._shortWeekdaysParse[s].test(e))return s;if(n&&"dd"===t&&this._minWeekdaysParse[s].test(e))return s;if(!n&&this._weekdaysParse[s].test(e))return s}},hn.weekdaysRegex=function(e){return this._weekdaysParseExact?(l(this,"_weekdaysRegex")||Be.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(l(this,"_weekdaysRegex")||(this._weekdaysRegex=$e),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},hn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(l(this,"_weekdaysRegex")||Be.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(l(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=qe),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},hn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(l(this,"_weekdaysRegex")||Be.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(l(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Je),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},hn.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},hn.meridiem=function(e,t,n){return e>11?n?"pm":"PM":n?"am":"AM"},ot("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===M(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),n.lang=k("moment.lang is deprecated. Use moment.locale instead.",ot),n.langData=k("moment.langData is deprecated. Use moment.localeData instead.",lt);var _n=Math.abs;function yn(e,t,n,s){var i=At(t,n);return e._milliseconds+=s*i._milliseconds,e._days+=s*i._days,e._months+=s*i._months,e._bubble()}function gn(e){return e<0?Math.floor(e):Math.ceil(e)}function pn(e){return 4800*e/146097}function vn(e){return 146097*e/4800}function wn(e){return function(){return this.as(e)}}var Mn=wn("ms"),Sn=wn("s"),Dn=wn("m"),kn=wn("h"),Yn=wn("d"),On=wn("w"),Tn=wn("M"),xn=wn("y");function bn(e){return function(){return this.isValid()?this._data[e]:NaN}}var Pn=bn("milliseconds"),Wn=bn("seconds"),Hn=bn("minutes"),Rn=bn("hours"),Cn=bn("days"),Fn=bn("months"),Ln=bn("years");var Un=Math.round,Nn={ss:44,s:45,m:45,h:22,d:26,M:11};var Gn=Math.abs;function Vn(e){return(e>0)-(e<0)||+e}function En(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Gn(this._milliseconds)/1e3,s=Gn(this._days),i=Gn(this._months);t=w((e=w(n/60))/60),n%=60,e%=60;var r=w(i/12),a=i%=12,o=s,u=t,l=e,d=n?n.toFixed(3).replace(/\.?0+$/,""):"",h=this.asSeconds();if(!h)return"P0D";var c=h<0?"-":"",f=Vn(this._months)!==Vn(h)?"-":"",m=Vn(this._days)!==Vn(h)?"-":"",_=Vn(this._milliseconds)!==Vn(h)?"-":"";return c+"P"+(r?f+r+"Y":"")+(a?f+a+"M":"")+(o?m+o+"D":"")+(u||l||d?"T":"")+(u?_+u+"H":"")+(l?_+l+"M":"")+(d?_+d+"S":"")}var In=Ht.prototype;return In.isValid=function(){return this._isValid},In.abs=function(){var e=this._data;return this._milliseconds=_n(this._milliseconds),this._days=_n(this._days),this._months=_n(this._months),e.milliseconds=_n(e.milliseconds),e.seconds=_n(e.seconds),e.minutes=_n(e.minutes),e.hours=_n(e.hours),e.months=_n(e.months),e.years=_n(e.years),this},In.add=function(e,t){return yn(this,e,t,1)},In.subtract=function(e,t){return yn(this,e,t,-1)},In.as=function(e){if(!this.isValid())return NaN;var t,n,s=this._milliseconds;if("month"===(e=R(e))||"year"===e)return t=this._days+s/864e5,n=this._months+pn(t),"month"===e?n:n/12;switch(t=this._days+Math.round(vn(this._months)),e){case"week":return t/7+s/6048e5;case"day":return t+s/864e5;case"hour":return 24*t+s/36e5;case"minute":return 1440*t+s/6e4;case"second":return 86400*t+s/1e3;case"millisecond":return Math.floor(864e5*t)+s;default:throw new Error("Unknown unit "+e)}},In.asMilliseconds=Mn,In.asSeconds=Sn,In.asMinutes=Dn,In.asHours=kn,In.asDays=Yn,In.asWeeks=On,In.asMonths=Tn,In.asYears=xn,In.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*M(this._months/12):NaN},In._bubble=function(){var e,t,n,s,i,r=this._milliseconds,a=this._days,o=this._months,u=this._data;return r>=0&&a>=0&&o>=0||r<=0&&a<=0&&o<=0||(r+=864e5*gn(vn(o)+a),a=0,o=0),u.milliseconds=r%1e3,e=w(r/1e3),u.seconds=e%60,t=w(e/60),u.minutes=t%60,n=w(t/60),u.hours=n%24,o+=i=w(pn(a+=w(n/24))),a-=gn(vn(i)),s=w(o/12),o%=12,u.days=a,u.months=o,u.years=s,this},In.clone=function(){return At(this)},In.get=function(e){return e=R(e),this.isValid()?this[e+"s"]():NaN},In.milliseconds=Pn,In.seconds=Wn,In.minutes=Hn,In.hours=Rn,In.days=Cn,In.weeks=function(){return w(this.days()/7)},In.months=Fn,In.years=Ln,In.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t,n,s,i,r,a,o,u,l,d,h,c=this.localeData(),f=(n=!e,s=c,i=At(t=this).abs(),r=Un(i.as("s")),a=Un(i.as("m")),o=Un(i.as("h")),u=Un(i.as("d")),l=Un(i.as("M")),d=Un(i.as("y")),(h=r<=Nn.ss&&["s",r]||r<Nn.s&&["ss",r]||a<=1&&["m"]||a<Nn.m&&["mm",a]||o<=1&&["h"]||o<Nn.h&&["hh",o]||u<=1&&["d"]||u<Nn.d&&["dd",u]||l<=1&&["M"]||l<Nn.M&&["MM",l]||d<=1&&["y"]||["yy",d])[2]=n,h[3]=+t>0,h[4]=s,function(e,t,n,s,i){return i.relativeTime(t||1,!!n,e,s)}.apply(null,h));return e&&(f=c.pastFuture(+this,f)),c.postformat(f)},In.toISOString=En,In.toString=En,In.toJSON=En,In.locale=Qt,In.localeData=Kt,In.toIsoString=k("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",En),In.lang=Xt,I("X",0,0,"unix"),I("x",0,0,"valueOf"),ue("x",se),ue("X",/[+-]?\d+(\.\d{1,3})?/),ce("X",function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))}),ce("x",function(e,t,n){n._d=new Date(M(e))}),n.version="2.21.0",e=Tt,n.fn=ln,n.min=function(){return Pt("isBefore",[].slice.call(arguments,0))},n.max=function(){return Pt("isAfter",[].slice.call(arguments,0))},n.now=function(){return Date.now?Date.now():+new Date},n.utc=h,n.unix=function(e){return Tt(1e3*e)},n.months=function(e,t){return fn(e,t,"months")},n.isDate=o,n.locale=ot,n.invalid=m,n.duration=At,n.isMoment=v,n.weekdays=function(e,t,n){return mn(e,t,n,"weekdays")},n.parseZone=function(){return Tt.apply(null,arguments).parseZone()},n.localeData=lt,n.isDuration=Rt,n.monthsShort=function(e,t){return fn(e,t,"monthsShort")},n.weekdaysMin=function(e,t,n){return mn(e,t,n,"weekdaysMin")},n.defineLocale=ut,n.updateLocale=function(e,t){if(null!=t){var n,s,i=nt;null!=(s=at(e))&&(i=s._config),(n=new P(t=b(i,t))).parentLocale=st[e],st[e]=n,ot(e)}else null!=st[e]&&(null!=st[e].parentLocale?st[e]=st[e].parentLocale:null!=st[e]&&delete st[e]);return st[e]},n.locales=function(){return Y(st)},n.weekdaysShort=function(e,t,n){return mn(e,t,n,"weekdaysShort")},n.normalizeUnits=R,n.relativeTimeRounding=function(e){return void 0===e?Un:"function"==typeof e&&(Un=e,!0)},n.relativeTimeThreshold=function(e,t){return void 0!==Nn[e]&&(void 0===t?Nn[e]:(Nn[e]=t,"s"===e&&(Nn.ss=t-1),!0))},n.calendarFormat=function(e,t){var n=e.diff(t,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"},n.prototype=ln,n.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"YYYY-[W]WW",MONTH:"YYYY-MM"},n});
/*!
 * FullCalendar v3.9.0
 * Docs & License: https://fullcalendar.io/
 * (c) 2018 Adam Shaw
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("moment"),require("jquery")):"function"==typeof define&&define.amd?define(["moment","jquery"],e):"object"==typeof exports?exports.FullCalendar=e(require("moment"),require("jquery")):t.FullCalendar=e(t.moment,t.jQuery)}("undefined"!=typeof self?self:this,function(t,e){return function(t){function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=236)}([function(e,n){e.exports=t},,function(t,e){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};e.__extends=function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}},function(t,n){t.exports=e},function(t,e,n){function i(t,e){e.left&&t.css({"border-left-width":1,"margin-left":e.left-1}),e.right&&t.css({"border-right-width":1,"margin-right":e.right-1})}function r(t){t.css({"margin-left":"","margin-right":"","border-left-width":"","border-right-width":""})}function o(){ht("body").addClass("fc-not-allowed")}function s(){ht("body").removeClass("fc-not-allowed")}function a(t,e,n){var i=Math.floor(e/t.length),r=Math.floor(e-i*(t.length-1)),o=[],s=[],a=[],u=0;l(t),t.each(function(e,n){var l=e===t.length-1?r:i,d=ht(n).outerHeight(!0);d<l?(o.push(n),s.push(d),a.push(ht(n).height())):u+=d}),n&&(e-=u,i=Math.floor(e/o.length),r=Math.floor(e-i*(o.length-1))),ht(o).each(function(t,e){var n=t===o.length-1?r:i,l=s[t],u=a[t],d=n-(l-u);l<n&&ht(e).height(d)})}function l(t){t.height("")}function u(t){var e=0;return t.find("> *").each(function(t,n){var i=ht(n).outerWidth();i>e&&(e=i)}),e++,t.width(e),e}function d(t,e){var n,i=t.add(e);return i.css({position:"relative",left:-1}),n=t.outerHeight()-e.outerHeight(),i.css({position:"",left:""}),n}function c(t){var e=t.css("position"),n=t.parents().filter(function(){var t=ht(this);return/(auto|scroll)/.test(t.css("overflow")+t.css("overflow-y")+t.css("overflow-x"))}).eq(0);return"fixed"!==e&&n.length?n:ht(t[0].ownerDocument||document)}function p(t,e){var n=t.offset(),i=n.left-(e?e.left:0),r=n.top-(e?e.top:0);return{left:i,right:i+t.outerWidth(),top:r,bottom:r+t.outerHeight()}}function h(t,e){var n=t.offset(),i=g(t),r=n.left+b(t,"border-left-width")+i.left-(e?e.left:0),o=n.top+b(t,"border-top-width")+i.top-(e?e.top:0);return{left:r,right:r+t[0].clientWidth,top:o,bottom:o+t[0].clientHeight}}function f(t,e){var n=t.offset(),i=n.left+b(t,"border-left-width")+b(t,"padding-left")-(e?e.left:0),r=n.top+b(t,"border-top-width")+b(t,"padding-top")-(e?e.top:0);return{left:i,right:i+t.width(),top:r,bottom:r+t.height()}}function g(t){var e,n=t[0].offsetWidth-t[0].clientWidth,i=t[0].offsetHeight-t[0].clientHeight;return n=v(n),i=v(i),e={left:0,right:0,top:0,bottom:i},y()&&"rtl"===t.css("direction")?e.left=n:e.right=n,e}function v(t){return t=Math.max(0,t),t=Math.round(t)}function y(){return null===ft&&(ft=m()),ft}function m(){var t=ht("<div><div/></div>").css({position:"absolute",top:-1e3,left:0,border:0,padding:0,overflow:"scroll",direction:"rtl"}).appendTo("body"),e=t.children(),n=e.offset().left>t.offset().left;return t.remove(),n}function b(t,e){return parseFloat(t.css(e))||0}function w(t){return 1===t.which&&!t.ctrlKey}function D(t){var e=t.originalEvent.touches;return e&&e.length?e[0].pageX:t.pageX}function E(t){var e=t.originalEvent.touches;return e&&e.length?e[0].pageY:t.pageY}function S(t){return/^touch/.test(t.type)}function C(t){t.addClass("fc-unselectable").on("selectstart",T)}function R(t){t.removeClass("fc-unselectable").off("selectstart",T)}function T(t){t.preventDefault()}function M(t,e){var n={left:Math.max(t.left,e.left),right:Math.min(t.right,e.right),top:Math.max(t.top,e.top),bottom:Math.min(t.bottom,e.bottom)};return n.left<n.right&&n.top<n.bottom&&n}function I(t,e){return{left:Math.min(Math.max(t.left,e.left),e.right),top:Math.min(Math.max(t.top,e.top),e.bottom)}}function H(t){return{left:(t.left+t.right)/2,top:(t.top+t.bottom)/2}}function P(t,e){return{left:t.left-e.left,top:t.top-e.top}}function _(t){var e,n,i=[],r=[];for("string"==typeof t?r=t.split(/\s*,\s*/):"function"==typeof t?r=[t]:ht.isArray(t)&&(r=t),e=0;e<r.length;e++)n=r[e],"string"==typeof n?i.push("-"===n.charAt(0)?{field:n.substring(1),order:-1}:{field:n,order:1}):"function"==typeof n&&i.push({func:n});return i}function x(t,e,n,i,r){var o,s;for(o=0;o<n.length;o++)if(s=O(t,e,n[o],i,r))return s;return 0}function O(t,e,n,i,r){if(n.func)return n.func(t,e);var o=t[n.field],s=e[n.field];return null==o&&i&&(o=i[n.field]),null==s&&r&&(s=r[n.field]),F(o,s)*(n.order||1)}function F(t,e){return t||e?null==e?-1:null==t?1:"string"===ht.type(t)||"string"===ht.type(e)?String(t).localeCompare(String(e)):t-e:0}function z(t,e){return pt.duration({days:t.clone().stripTime().diff(e.clone().stripTime(),"days"),ms:t.time()-e.time()})}function B(t,e){return pt.duration({days:t.clone().stripTime().diff(e.clone().stripTime(),"days")})}function A(t,e,n){return pt.duration(Math.round(t.diff(e,n,!0)),n)}function k(t,n){var i,r,o;for(i=0;i<e.unitsDesc.length&&(r=e.unitsDesc[i],!((o=V(r,t,n))>=1&&ut(o)));i++);return r}function L(t,e){var n=k(t);return"week"===n&&"object"==typeof e&&e.days&&(n="day"),n}function V(t,e,n){return null!=n?n.diff(e,t,!0):pt.isDuration(e)?e.as(t):e.end.diff(e.start,t,!0)}function G(t,e,n){var i;return U(n)?(e-t)/n:(i=n.asMonths(),Math.abs(i)>=1&&ut(i)?e.diff(t,"months",!0)/i:e.diff(t,"days",!0)/n.asDays())}function N(t,e){var n,i;return U(t)||U(e)?t/e:(n=t.asMonths(),i=e.asMonths(),Math.abs(n)>=1&&ut(n)&&Math.abs(i)>=1&&ut(i)?n/i:t.asDays()/e.asDays())}function j(t,e){var n;return U(t)?pt.duration(t*e):(n=t.asMonths(),Math.abs(n)>=1&&ut(n)?pt.duration({months:n*e}):pt.duration({days:t.asDays()*e}))}function U(t){return Boolean(t.hours()||t.minutes()||t.seconds()||t.milliseconds())}function W(t){return"[object Date]"===Object.prototype.toString.call(t)||t instanceof Date}function q(t){return"string"==typeof t&&/^\d+\:\d+(?:\:\d+\.?(?:\d{3})?)?$/.test(t)}function Y(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=window.console;if(n&&n.log)return n.log.apply(n,t)}function Z(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=window.console;return n&&n.warn?n.warn.apply(n,t):Y.apply(null,t)}function Q(t,e){var n,i,r,o,s,a,l={};if(e)for(n=0;n<e.length;n++){for(i=e[n],r=[],o=t.length-1;o>=0;o--)if("object"==typeof(s=t[o][i]))r.unshift(s);else if(void 0!==s){l[i]=s;break}r.length&&(l[i]=Q(r))}for(n=t.length-1;n>=0;n--){a=t[n];for(i in a)i in l||(l[i]=a[i])}return l}function X(t,e){for(var n in t)$(t,n)&&(e[n]=t[n])}function $(t,e){return gt.call(t,e)}function K(t,e,n){if(ht.isFunction(t)&&(t=[t]),t){var i=void 0,r=void 0;for(i=0;i<t.length;i++)r=t[i].apply(e,n)||r;return r}}function J(t,e){for(var n=0,i=0;i<t.length;)e(t[i])?(t.splice(i,1),n++):i++;return n}function tt(t,e){for(var n=0,i=0;i<t.length;)t[i]===e?(t.splice(i,1),n++):i++;return n}function et(t,e){var n,i=t.length;if(null==i||i!==e.length)return!1;for(n=0;n<i;n++)if(t[n]!==e[n])return!1;return!0}function nt(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=0;n<t.length;n++)if(void 0!==t[n])return t[n]}function it(t){return(t+"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#039;").replace(/"/g,"&quot;").replace(/\n/g,"<br />")}function rt(t){return t.replace(/&.*?;/g,"")}function ot(t){var e=[];return ht.each(t,function(t,n){null!=n&&e.push(t+":"+n)}),e.join(";")}function st(t){var e=[];return ht.each(t,function(t,n){null!=n&&e.push(t+'="'+it(n)+'"')}),e.join(" ")}function at(t){return t.charAt(0).toUpperCase()+t.slice(1)}function lt(t,e){return t-e}function ut(t){return t%1==0}function dt(t,e){var n=t[e];return function(){return n.apply(t,arguments)}}function ct(t,e,n){void 0===n&&(n=!1);var i,r,o,s,a,l=function(){var u=+new Date-s;u<e?i=setTimeout(l,e-u):(i=null,n||(a=t.apply(o,r),o=r=null))};return function(){o=this,r=arguments,s=+new Date;var u=n&&!i;return i||(i=setTimeout(l,e)),u&&(a=t.apply(o,r),o=r=null),a}}Object.defineProperty(e,"__esModule",{value:!0});var pt=n(0),ht=n(3);e.compensateScroll=i,e.uncompensateScroll=r,e.disableCursor=o,e.enableCursor=s,e.distributeHeight=a,e.undistributeHeight=l,e.matchCellWidths=u,e.subtractInnerElHeight=d,e.getScrollParent=c,e.getOuterRect=p,e.getClientRect=h,e.getContentRect=f,e.getScrollbarWidths=g;var ft=null;e.isPrimaryMouseButton=w,e.getEvX=D,e.getEvY=E,e.getEvIsTouch=S,e.preventSelection=C,e.allowSelection=R,e.preventDefault=T,e.intersectRects=M,e.constrainPoint=I,e.getRectCenter=H,e.diffPoints=P,e.parseFieldSpecs=_,e.compareByFieldSpecs=x,e.compareByFieldSpec=O,e.flexibleCompare=F,e.dayIDs=["sun","mon","tue","wed","thu","fri","sat"],e.unitsDesc=["year","month","week","day","hour","minute","second","millisecond"],e.diffDayTime=z,e.diffDay=B,e.diffByUnit=A,e.computeGreatestUnit=k,e.computeDurationGreatestUnit=L,e.divideRangeByDuration=G,e.divideDurationByDuration=N,e.multiplyDuration=j,e.durationHasTime=U,e.isNativeDate=W,e.isTimeString=q,e.log=Y,e.warn=Z;var gt={}.hasOwnProperty;e.mergeProps=Q,e.copyOwnProps=X,e.hasOwnProp=$,e.applyAll=K,e.removeMatching=J,e.removeExact=tt,e.isArraysEqual=et,e.firstDefined=nt,e.htmlEscape=it,e.stripHtmlEntities=rt,e.cssToStr=ot,e.attrsToStr=st,e.capitaliseFirstLetter=at,e.compareNumbers=lt,e.isInt=ut,e.proxy=dt,e.debounce=ct},function(t,e,n){function i(t,e){return t.startMs-e.startMs}Object.defineProperty(e,"__esModule",{value:!0});var r=n(0),o=n(10),s=function(){function t(t,e){this.isStart=!0,this.isEnd=!0,r.isMoment(t)&&(t=t.clone().stripZone()),r.isMoment(e)&&(e=e.clone().stripZone()),t&&(this.startMs=t.valueOf()),e&&(this.endMs=e.valueOf())}return t.invertRanges=function(e,n){var r,o,s=[],a=n.startMs;for(e.sort(i),r=0;r<e.length;r++)o=e[r],o.startMs>a&&s.push(new t(a,o.startMs)),o.endMs>a&&(a=o.endMs);return a<n.endMs&&s.push(new t(a,n.endMs)),s},t.prototype.intersect=function(e){var n=this.startMs,i=this.endMs,r=null;return null!=e.startMs&&(n=null==n?e.startMs:Math.max(n,e.startMs)),null!=e.endMs&&(i=null==i?e.endMs:Math.min(i,e.endMs)),(null==n||null==i||n<i)&&(r=new t(n,i),r.isStart=this.isStart&&n===this.startMs,r.isEnd=this.isEnd&&i===this.endMs),r},t.prototype.intersectsWith=function(t){return(null==this.endMs||null==t.startMs||this.endMs>t.startMs)&&(null==this.startMs||null==t.endMs||this.startMs<t.endMs)},t.prototype.containsRange=function(t){return(null==this.startMs||null!=t.startMs&&t.startMs>=this.startMs)&&(null==this.endMs||null!=t.endMs&&t.endMs<=this.endMs)},t.prototype.containsDate=function(t){var e=t.valueOf();return(null==this.startMs||e>=this.startMs)&&(null==this.endMs||e<this.endMs)},t.prototype.constrainDate=function(t){var e=t.valueOf();return null!=this.startMs&&e<this.startMs&&(e=this.startMs),null!=this.endMs&&e>=this.endMs&&(e=this.endMs-1),e},t.prototype.equals=function(t){return this.startMs===t.startMs&&this.endMs===t.endMs},t.prototype.clone=function(){var e=new t(this.startMs,this.endMs);return e.isStart=this.isStart,e.isEnd=this.isEnd,e},t.prototype.getStart=function(){return null!=this.startMs?o.default.utc(this.startMs).stripZone():null},t.prototype.getEnd=function(){return null!=this.endMs?o.default.utc(this.endMs).stripZone():null},t.prototype.as=function(t){return r.utc(this.endMs).diff(r.utc(this.startMs),t,!0)},t}();e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(208),s=n(33),a=n(49),l=function(t){function e(n){var i=t.call(this)||this;return i.calendar=n,i.className=[],i.uid=String(e.uuid++),i}return i.__extends(e,t),e.parse=function(t,e){var n=new this(e);return!("object"!=typeof t||!n.applyProps(t))&&n},e.normalizeId=function(t){return t?String(t):null},e.prototype.fetch=function(t,e,n){},e.prototype.removeEventDefsById=function(t){},e.prototype.removeAllEventDefs=function(){},e.prototype.getPrimitive=function(t){},e.prototype.parseEventDefs=function(t){var e,n,i=[];for(e=0;e<t.length;e++)(n=this.parseEventDef(t[e]))&&i.push(n);return i},e.prototype.parseEventDef=function(t){var e=this.calendar.opt("eventDataTransform"),n=this.eventDataTransform;return e&&(t=e(t,this.calendar)),n&&(t=n(t,this.calendar)),a.default.parse(t,this)},e.prototype.applyManualStandardProps=function(t){return null!=t.id&&(this.id=e.normalizeId(t.id)),r.isArray(t.className)?this.className=t.className:"string"==typeof t.className&&(this.className=t.className.split(/\s+/)),!0},e.uuid=0,e.defineStandardProps=o.default.defineStandardProps,e.copyVerbatimStandardProps=o.default.copyVerbatimStandardProps,e}(s.default);e.default=l,o.default.mixInto(l),l.defineStandardProps({id:!1,className:!1,color:!0,backgroundColor:!0,borderColor:!0,textColor:!0,editable:!0,startEditable:!0,durationEditable:!0,rendering:!0,overlap:!0,constraint:!0,allDayDefault:!0,eventDataTransform:!0})},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(14),s=0,a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.listenTo=function(t,e,n){if("object"==typeof e)for(var i in e)e.hasOwnProperty(i)&&this.listenTo(t,i,e[i]);else"string"==typeof e&&t.on(e+"."+this.getListenerNamespace(),r.proxy(n,this))},e.prototype.stopListeningTo=function(t,e){t.off((e||"")+"."+this.getListenerNamespace())},e.prototype.getListenerNamespace=function(){return null==this.listenerId&&(this.listenerId=s++),"_listener"+this.listenerId},e}(o.default);e.default=a},,,function(t,e,n){function i(t,e){return c.format.call(t,e)}function r(t,e,n){void 0===e&&(e=!1),void 0===n&&(n=!1);var i,r,d,c,p=t[0],h=1===t.length&&"string"==typeof p;return o.isMoment(p)||a.isNativeDate(p)||void 0===p?c=o.apply(null,t):(i=!1,r=!1,h?l.test(p)?(p+="-01",t=[p],i=!0,r=!0):(d=u.exec(p))&&(i=!d[5],r=!0):s.isArray(p)&&(r=!0),c=e||i?o.utc.apply(o,t):o.apply(null,t),i?(c._ambigTime=!0,c._ambigZone=!0):n&&(r?c._ambigZone=!0:h&&c.utcOffset(p))),c._fullCalendar=!0,c}Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),s=n(3),a=n(4),l=/^\s*\d{4}-\d\d$/,u=/^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?)?$/,d=o.fn;e.newMomentProto=d;var c=s.extend({},d);e.oldMomentProto=c;var p=o.momentProperties;p.push("_fullCalendar"),p.push("_ambigTime"),p.push("_ambigZone"),e.oldMomentFormat=i;var h=function(){return r(arguments)};e.default=h,h.utc=function(){var t=r(arguments,!0);return t.hasTime()&&t.utc(),t},h.parseZone=function(){return r(arguments,!0,!0)},d.week=d.weeks=function(t){var e=this._locale._fullCalendar_weekCalc;return null==t&&"function"==typeof e?e(this):"ISO"===e?c.isoWeek.apply(this,arguments):c.week.apply(this,arguments)},d.time=function(t){if(!this._fullCalendar)return c.time.apply(this,arguments);if(null==t)return o.duration({hours:this.hours(),minutes:this.minutes(),seconds:this.seconds(),milliseconds:this.milliseconds()});this._ambigTime=!1,o.isDuration(t)||o.isMoment(t)||(t=o.duration(t));var e=0;return o.isDuration(t)&&(e=24*Math.floor(t.asDays())),this.hours(e+t.hours()).minutes(t.minutes()).seconds(t.seconds()).milliseconds(t.milliseconds())},d.stripTime=function(){return this._ambigTime||(this.utc(!0),this.set({hours:0,minutes:0,seconds:0,ms:0}),this._ambigTime=!0,this._ambigZone=!0),this},d.hasTime=function(){return!this._ambigTime},d.stripZone=function(){var t;return this._ambigZone||(t=this._ambigTime,this.utc(!0),this._ambigTime=t||!1,this._ambigZone=!0),this},d.hasZone=function(){return!this._ambigZone},d.local=function(t){return c.local.call(this,this._ambigZone||t),this._ambigTime=!1,this._ambigZone=!1,this},d.utc=function(t){return c.utc.call(this,t),this._ambigTime=!1,this._ambigZone=!1,this},d.utcOffset=function(t){return null!=t&&(this._ambigTime=!1,this._ambigZone=!1),c.utcOffset.apply(this,arguments)}},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(14),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.on=function(t,e){return r(this).on(t,this._prepareIntercept(e)),this},e.prototype.one=function(t,e){return r(this).one(t,this._prepareIntercept(e)),this},e.prototype._prepareIntercept=function(t){var e=function(e,n){return t.apply(n.context||this,n.args||[])};return t.guid||(t.guid=r.guid++),e.guid=t.guid,e},e.prototype.off=function(t,e){return r(this).off(t,e),this},e.prototype.trigger=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];return r(this).triggerHandler(t,{args:e}),this},e.prototype.triggerWith=function(t,e,n){return r(this).triggerHandler(t,{context:e,args:n}),this},e.prototype.hasHandlers=function(t){var e=r._data(this,"events");return e&&e[t]&&e[t].length>0},e}(o.default);e.default=s},function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){this.isAllDay=!1,this.unzonedRange=t,this.isAllDay=e}return t.prototype.toLegacy=function(t){return{start:t.msToMoment(this.unzonedRange.startMs,this.isAllDay),end:t.msToMoment(this.unzonedRange.endMs,this.isAllDay)}},t}();e.default=n},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(34),o=n(209),s=n(17),a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.buildInstances=function(){return[this.buildInstance()]},e.prototype.buildInstance=function(){return new o.default(this,this.dateProfile)},e.prototype.isAllDay=function(){return this.dateProfile.isAllDay()},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e.dateProfile=this.dateProfile,e},e.prototype.rezone=function(){var t=this.source.calendar,e=this.dateProfile;this.dateProfile=new s.default(t.moment(e.start),e.end?t.moment(e.end):null,t)},e.prototype.applyManualStandardProps=function(e){var n=t.prototype.applyManualStandardProps.call(this,e),i=s.default.parse(e,this.source);return!!i&&(this.dateProfile=i,null!=e.date&&(this.miscProps.date=e.date),n)},e}(r.default);e.default=a,a.defineStandardProps({start:!1,date:!1,end:!1,allDay:!1})},function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(){}return t.mixInto=function(t){var e=this;Object.getOwnPropertyNames(this.prototype).forEach(function(n){t.prototype[n]||(t.prototype[n]=e.prototype[n])})},t.mixOver=function(t){var e=this;Object.getOwnPropertyNames(this.prototype).forEach(function(n){t.prototype[n]=e.prototype[n]})},t}();e.default=n},function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t){this.view=t._getView(),this.component=t}return t.prototype.opt=function(t){return this.view.opt(t)},t.prototype.end=function(){},t}();e.default=n},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.version="3.9.0",e.internalApiVersion=12;var i=n(4);e.applyAll=i.applyAll,e.debounce=i.debounce,e.isInt=i.isInt,e.htmlEscape=i.htmlEscape,e.cssToStr=i.cssToStr,e.proxy=i.proxy,e.capitaliseFirstLetter=i.capitaliseFirstLetter,e.getOuterRect=i.getOuterRect,e.getClientRect=i.getClientRect,e.getContentRect=i.getContentRect,e.getScrollbarWidths=i.getScrollbarWidths,e.preventDefault=i.preventDefault,e.parseFieldSpecs=i.parseFieldSpecs,e.compareByFieldSpecs=i.compareByFieldSpecs,e.compareByFieldSpec=i.compareByFieldSpec,e.flexibleCompare=i.flexibleCompare,e.computeGreatestUnit=i.computeGreatestUnit,e.divideRangeByDuration=i.divideRangeByDuration,e.divideDurationByDuration=i.divideDurationByDuration,e.multiplyDuration=i.multiplyDuration,e.durationHasTime=i.durationHasTime,e.log=i.log,e.warn=i.warn,e.removeExact=i.removeExact,e.intersectRects=i.intersectRects;var r=n(47);e.formatDate=r.formatDate,e.formatRange=r.formatRange,e.queryMostGranularFormatUnit=r.queryMostGranularFormatUnit;var o=n(31);e.datepickerLocale=o.datepickerLocale,e.locale=o.locale;var s=n(10);e.moment=s.default;var a=n(11);e.EmitterMixin=a.default;var l=n(7);e.ListenerMixin=l.default;var u=n(48);e.Model=u.default;var d=n(207);e.Constraints=d.default;var c=n(5);e.UnzonedRange=c.default;var p=n(12);e.ComponentFootprint=p.default;var h=n(212);e.BusinessHourGenerator=h.default;var f=n(34);e.EventDef=f.default;var g=n(37);e.EventDefMutation=g.default;var v=n(38);e.EventSourceParser=v.default;var y=n(6);e.EventSource=y.default;var m=n(51);e.defineThemeSystem=m.defineThemeSystem;var b=n(18);e.EventInstanceGroup=b.default;var w=n(52);e.ArrayEventSource=w.default;var D=n(215);e.FuncEventSource=D.default;var E=n(216);e.JsonFeedEventSource=E.default;var S=n(36);e.EventFootprint=S.default;var C=n(33);e.Class=C.default;var R=n(14);e.Mixin=R.default;var T=n(53);e.CoordCache=T.default;var M=n(54);e.DragListener=M.default;var I=n(20);e.Promise=I.default;var H=n(217);e.TaskQueue=H.default;var P=n(218);e.RenderQueue=P.default;var _=n(39);e.Scroller=_.default;var x=n(19);e.Theme=x.default;var O=n(219);e.DateComponent=O.default;var F=n(40);e.InteractiveDateComponent=F.default;var z=n(220);e.Calendar=z.default;var B=n(41);e.View=B.default;var A=n(22);e.defineView=A.defineView,e.getViewConfig=A.getViewConfig;var k=n(55);e.DayTableMixin=k.default;var L=n(56);e.BusinessHourRenderer=L.default;var V=n(42);e.EventRenderer=V.default;var G=n(57);e.FillRenderer=G.default;var N=n(58);e.HelperRenderer=N.default;var j=n(222);e.ExternalDropping=j.default;var U=n(223);e.EventResizing=U.default;var W=n(59);e.EventPointing=W.default;var q=n(224);e.EventDragging=q.default;var Y=n(225);e.DateSelecting=Y.default;var Z=n(60);e.StandardInteractionsMixin=Z.default;var Q=n(226);e.AgendaView=Q.default;var X=n(227);e.TimeGrid=X.default;var $=n(61);e.DayGrid=$.default;var K=n(62);e.BasicView=K.default;var J=n(229);e.MonthView=J.default;var tt=n(230);e.ListView=tt.default},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(5),r=function(){function t(t,e,n){this.start=t,this.end=e||null,this.unzonedRange=this.buildUnzonedRange(n)}return t.parse=function(e,n){var i=e.start||e.date,r=e.end;if(!i)return!1;var o=n.calendar,s=o.moment(i),a=r?o.moment(r):null,l=e.allDay,u=o.opt("forceEventDuration");return!!s.isValid()&&(!a||a.isValid()&&a.isAfter(s)||(a=null),null==l&&null==(l=n.allDayDefault)&&(l=o.opt("allDayDefault")),!0===l?(s.stripTime(),a&&a.stripTime()):!1===l&&(s.hasTime()||s.time(0),a&&!a.hasTime()&&a.time(0)),!a&&u&&(a=o.getDefaultEventEnd(!s.hasTime(),s)),new t(s,a,o))},t.isStandardProp=function(t){return"start"===t||"date"===t||"end"===t||"allDay"===t},t.prototype.isAllDay=function(){return!(this.start.hasTime()||this.end&&this.end.hasTime())},t.prototype.buildUnzonedRange=function(t){var e=this.start.clone().stripZone().valueOf(),n=this.getEnd(t).stripZone().valueOf();return new i.default(e,n)},t.prototype.getEnd=function(t){return this.end?this.end.clone():t.getDefaultEventEnd(this.isAllDay(),this.start)},t}();e.default=r},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(5),r=n(35),o=n(211),s=function(){function t(t){this.eventInstances=t||[]}return t.prototype.getAllEventRanges=function(t){return t?this.sliceNormalRenderRanges(t):this.eventInstances.map(r.eventInstanceToEventRange)},t.prototype.sliceRenderRanges=function(t){return this.isInverse()?this.sliceInverseRenderRanges(t):this.sliceNormalRenderRanges(t)},t.prototype.sliceNormalRenderRanges=function(t){var e,n,i,r=this.eventInstances,s=[];for(e=0;e<r.length;e++)n=r[e],(i=n.dateProfile.unzonedRange.intersect(t))&&s.push(new o.default(i,n.def,n));return s},t.prototype.sliceInverseRenderRanges=function(t){var e=this.eventInstances.map(r.eventInstanceToUnzonedRange),n=this.getEventDef();return e=i.default.invertRanges(e,t),e.map(function(t){return new o.default(t,n)})},t.prototype.isInverse=function(){return this.getEventDef().hasInverseRendering()},t.prototype.getEventDef=function(){return this.explicitEventDef||this.eventInstances[0].def},t}();e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=function(){function t(t){this.optionsManager=t,this.processIconOverride()}return t.prototype.processIconOverride=function(){this.iconOverrideOption&&this.setIconOverride(this.optionsManager.get(this.iconOverrideOption))},t.prototype.setIconOverride=function(t){var e,n;if(i.isPlainObject(t)){e=i.extend({},this.iconClasses);for(n in t)e[n]=this.applyIconOverridePrefix(t[n]);this.iconClasses=e}else!1===t&&(this.iconClasses={})},t.prototype.applyIconOverridePrefix=function(t){var e=this.iconOverridePrefix;return e&&0!==t.indexOf(e)&&(t=e+t),t},t.prototype.getClass=function(t){return this.classes[t]||""},t.prototype.getIconClass=function(t){var e=this.iconClasses[t];return e?this.baseIconClass+" "+e:""},t.prototype.getCustomButtonIconClass=function(t){var e;return this.iconOverrideCustomButtonOption&&(e=t[this.iconOverrideCustomButtonOption])?this.baseIconClass+" "+this.applyIconOverridePrefix(e):""},t}();e.default=r,r.prototype.classes={},r.prototype.iconClasses={},r.prototype.baseIconClass="",r.prototype.iconOverridePrefix=""},function(t,e,n){function i(t,e){t.then=function(n){return"function"==typeof n?s.resolve(n(e)):t}}function r(t){t.then=function(e,n){return"function"==typeof n&&n(),t}}Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),s={construct:function(t){var e=o.Deferred(),n=e.promise();return"function"==typeof t&&t(function(t){e.resolve(t),i(n,t)},function(){e.reject(),r(n)}),n},resolve:function(t){var e=o.Deferred().resolve(t),n=e.promise();return i(n,t),n},reject:function(){var t=o.Deferred().reject(),e=t.promise();return r(e),e}};e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(16),o=n(11),s=n(7);r.touchMouseIgnoreWait=500;var a=null,l=0,u=function(){function t(){this.isTouching=!1,this.mouseIgnoreDepth=0}return t.get=function(){return a||(a=new t,a.bind()),a},t.needed=function(){t.get(),l++},t.unneeded=function(){--l||(a.unbind(),a=null)},t.prototype.bind=function(){var t=this;this.listenTo(i(document),{touchstart:this.handleTouchStart,touchcancel:this.handleTouchCancel,touchend:this.handleTouchEnd,mousedown:this.handleMouseDown,mousemove:this.handleMouseMove,mouseup:this.handleMouseUp,click:this.handleClick,selectstart:this.handleSelectStart,contextmenu:this.handleContextMenu}),window.addEventListener("touchmove",this.handleTouchMoveProxy=function(e){t.handleTouchMove(i.Event(e))},{passive:!1}),window.addEventListener("scroll",this.handleScrollProxy=function(e){t.handleScroll(i.Event(e))},!0)},t.prototype.unbind=function(){this.stopListeningTo(i(document)),window.removeEventListener("touchmove",this.handleTouchMoveProxy),window.removeEventListener("scroll",this.handleScrollProxy,!0)},t.prototype.handleTouchStart=function(t){this.stopTouch(t,!0),this.isTouching=!0,this.trigger("touchstart",t)},t.prototype.handleTouchMove=function(t){this.isTouching&&this.trigger("touchmove",t)},t.prototype.handleTouchCancel=function(t){this.isTouching&&(this.trigger("touchcancel",t),this.stopTouch(t))},t.prototype.handleTouchEnd=function(t){this.stopTouch(t)},t.prototype.handleMouseDown=function(t){this.shouldIgnoreMouse()||this.trigger("mousedown",t)},t.prototype.handleMouseMove=function(t){this.shouldIgnoreMouse()||this.trigger("mousemove",t)},t.prototype.handleMouseUp=function(t){this.shouldIgnoreMouse()||this.trigger("mouseup",t)},t.prototype.handleClick=function(t){this.shouldIgnoreMouse()||this.trigger("click",t)},t.prototype.handleSelectStart=function(t){this.trigger("selectstart",t)},t.prototype.handleContextMenu=function(t){this.trigger("contextmenu",t)},t.prototype.handleScroll=function(t){this.trigger("scroll",t)},t.prototype.stopTouch=function(t,e){void 0===e&&(e=!1),this.isTouching&&(this.isTouching=!1,this.trigger("touchend",t),e||this.startTouchMouseIgnore())},t.prototype.startTouchMouseIgnore=function(){var t=this,e=r.touchMouseIgnoreWait;e&&(this.mouseIgnoreDepth++,setTimeout(function(){t.mouseIgnoreDepth--},e))},t.prototype.shouldIgnoreMouse=function(){return this.isTouching||Boolean(this.mouseIgnoreDepth)},t}();e.default=u,s.default.mixInto(u),o.default.mixInto(u)},function(t,e,n){function i(t,n){e.viewHash[t]=n}function r(t){return e.viewHash[t]}Object.defineProperty(e,"__esModule",{value:!0});var o=n(16);e.viewHash={},o.views=e.viewHash,e.defineView=i,e.getViewConfig=r},function(t,e,n){function i(t,e){return!t&&!e||!(!t||!e)&&(t.component===e.component&&r(t,e)&&r(e,t))}function r(t,e){for(var n in t)if(!/^(component|left|right|top|bottom)$/.test(n)&&t[n]!==e[n])return!1;return!0}Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),s=n(4),a=n(54),l=function(t){function e(e,n){var i=t.call(this,n)||this;return i.component=e,i}return o.__extends(e,t),e.prototype.handleInteractionStart=function(e){var n,i,r,o=this.subjectEl;this.component.hitsNeeded(),this.computeScrollBounds(),e?(i={left:s.getEvX(e),top:s.getEvY(e)},r=i,o&&(n=s.getOuterRect(o),r=s.constrainPoint(r,n)),this.origHit=this.queryHit(r.left,r.top),o&&this.options.subjectCenter&&(this.origHit&&(n=s.intersectRects(this.origHit,n)||n),r=s.getRectCenter(n)),this.coordAdjust=s.diffPoints(r,i)):(this.origHit=null,this.coordAdjust=null),t.prototype.handleInteractionStart.call(this,e)},e.prototype.handleDragStart=function(e){var n;t.prototype.handleDragStart.call(this,e),(n=this.queryHit(s.getEvX(e),s.getEvY(e)))&&this.handleHitOver(n)},e.prototype.handleDrag=function(e,n,r){var o;t.prototype.handleDrag.call(this,e,n,r),o=this.queryHit(s.getEvX(r),s.getEvY(r)),i(o,this.hit)||(this.hit&&this.handleHitOut(),o&&this.handleHitOver(o))},e.prototype.handleDragEnd=function(e){this.handleHitDone(),t.prototype.handleDragEnd.call(this,e)},e.prototype.handleHitOver=function(t){var e=i(t,this.origHit);this.hit=t,this.trigger("hitOver",this.hit,e,this.origHit)},e.prototype.handleHitOut=function(){this.hit&&(this.trigger("hitOut",this.hit),this.handleHitDone(),this.hit=null)},e.prototype.handleHitDone=function(){this.hit&&this.trigger("hitDone",this.hit)},e.prototype.handleInteractionEnd=function(e,n){t.prototype.handleInteractionEnd.call(this,e,n),this.origHit=null,this.hit=null,this.component.hitsNotNeeded()},e.prototype.handleScrollEnd=function(){t.prototype.handleScrollEnd.call(this),this.isDragging&&(this.component.releaseHits(),this.component.prepareHits())},e.prototype.queryHit=function(t,e){return this.coordAdjust&&(t+=this.coordAdjust.left,e+=this.coordAdjust.top),this.component.queryHit(t,e)},e}(a.default);e.default=l},,,,,,,,function(t,e,n){function i(t){a.each(f,function(e,n){null==t[e]&&(t[e]=n(t))})}function r(t,n,i){var r=e.localeOptionHash[t]||(e.localeOptionHash[t]={});r.isRTL=i.isRTL,r.weekNumberTitle=i.weekHeader,a.each(p,function(t,e){r[t]=e(i)});var o=a.datepicker;o&&(o.regional[n]=o.regional[t]=i,o.regional.en=o.regional[""],o.setDefaults(i))}function o(t,n){var i,r;i=e.localeOptionHash[t]||(e.localeOptionHash[t]={}),n&&(i=e.localeOptionHash[t]=d.mergeOptions([i,n])),r=s(t),a.each(h,function(t,e){null==i[t]&&(i[t]=e(r,i))}),d.globalDefaults.locale=t}function s(t){return l.localeData(t)||l.localeData("en")}Object.defineProperty(e,"__esModule",{value:!0});var a=n(3),l=n(0),u=n(16),d=n(32),c=n(4);e.localeOptionHash={},u.locales=e.localeOptionHash;var p={buttonText:function(t){return{prev:c.stripHtmlEntities(t.prevText),next:c.stripHtmlEntities(t.nextText),today:c.stripHtmlEntities(t.currentText)}},monthYearFormat:function(t){return t.showMonthAfterYear?"YYYY["+t.yearSuffix+"] MMMM":"MMMM YYYY["+t.yearSuffix+"]"}},h={dayOfMonthFormat:function(t,e){var n=t.longDateFormat("l");return n=n.replace(/^Y+[^\w\s]*|[^\w\s]*Y+$/g,""),e.isRTL?n+=" ddd":n="ddd "+n,n},
mediumTimeFormat:function(t){return t.longDateFormat("LT").replace(/\s*a$/i,"a")},smallTimeFormat:function(t){return t.longDateFormat("LT").replace(":mm","(:mm)").replace(/(\Wmm)$/,"($1)").replace(/\s*a$/i,"a")},extraSmallTimeFormat:function(t){return t.longDateFormat("LT").replace(":mm","(:mm)").replace(/(\Wmm)$/,"($1)").replace(/\s*a$/i,"t")},hourFormat:function(t){return t.longDateFormat("LT").replace(":mm","").replace(/(\Wmm)$/,"").replace(/\s*a$/i,"a")},noMeridiemTimeFormat:function(t){return t.longDateFormat("LT").replace(/\s*a$/i,"")}},f={smallDayDateFormat:function(t){return t.isRTL?"D dd":"dd D"},weekFormat:function(t){return t.isRTL?"w[ "+t.weekNumberTitle+"]":"["+t.weekNumberTitle+" ]w"},smallWeekFormat:function(t){return t.isRTL?"w["+t.weekNumberTitle+"]":"["+t.weekNumberTitle+"]w"}};e.populateInstanceComputableOptions=i,e.datepickerLocale=r,e.locale=o,e.getMomentLocaleData=s,o("en",d.englishDefaults)},function(t,e,n){function i(t){return r.mergeProps(t,o)}Object.defineProperty(e,"__esModule",{value:!0});var r=n(4);e.globalDefaults={titleRangeSeparator:" – ",monthYearFormat:"MMMM YYYY",defaultTimedEventDuration:"02:00:00",defaultAllDayEventDuration:{days:1},forceEventDuration:!1,nextDayThreshold:"09:00:00",columnHeader:!0,defaultView:"month",aspectRatio:1.35,header:{left:"title",center:"",right:"today prev,next"},weekends:!0,weekNumbers:!1,weekNumberTitle:"W",weekNumberCalculation:"local",scrollTime:"06:00:00",minTime:"00:00:00",maxTime:"24:00:00",showNonCurrentDates:!0,lazyFetching:!0,startParam:"start",endParam:"end",timezoneParam:"timezone",timezone:!1,locale:null,isRTL:!1,buttonText:{prev:"prev",next:"next",prevYear:"prev year",nextYear:"next year",year:"year",today:"today",month:"month",week:"week",day:"day"},allDayText:"all-day",agendaEventMinHeight:0,theme:!1,dragOpacity:.75,dragRevertDuration:500,dragScroll:!0,unselectAuto:!0,dropAccept:"*",eventOrder:"title",eventLimit:!1,eventLimitText:"more",eventLimitClick:"popover",dayPopoverFormat:"LL",handleWindowResize:!0,windowResizeDelay:100,longPressDelay:1e3},e.englishDefaults={dayPopoverFormat:"dddd, MMMM D"},e.rtlDefaults={header:{left:"next,prev today",center:"",right:"title"},buttonIcons:{prev:"right-single-arrow",next:"left-single-arrow",prevYear:"right-double-arrow",nextYear:"left-double-arrow"},themeButtonIcons:{prev:"circle-triangle-e",next:"circle-triangle-w",nextYear:"seek-prev",prevYear:"seek-next"}};var o=["header","footer","buttonText","buttonIcons","themeButtonIcons"];e.mergeOptions=i},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(4),o=function(){function t(){}return t.extend=function(t){var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e}(this);return r.copyOwnProps(t,e.prototype),e},t.mixin=function(t){r.copyOwnProps(t,this.prototype)},t}();e.default=o},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(208),o=function(){function t(t){this.source=t,this.className=[],this.miscProps={}}return t.parse=function(t,e){var n=new this(e);return!!n.applyProps(t)&&n},t.normalizeId=function(t){return String(t)},t.generateId=function(){return"_fc"+t.uuid++},t.prototype.clone=function(){var e=new this.constructor(this.source);return e.id=this.id,e.rawId=this.rawId,e.uid=this.uid,t.copyVerbatimStandardProps(this,e),e.className=this.className.slice(),e.miscProps=i.extend({},this.miscProps),e},t.prototype.hasInverseRendering=function(){return"inverse-background"===this.getRendering()},t.prototype.hasBgRendering=function(){var t=this.getRendering();return"inverse-background"===t||"background"===t},t.prototype.getRendering=function(){return null!=this.rendering?this.rendering:this.source.rendering},t.prototype.getConstraint=function(){return null!=this.constraint?this.constraint:null!=this.source.constraint?this.source.constraint:this.source.calendar.opt("eventConstraint")},t.prototype.getOverlap=function(){return null!=this.overlap?this.overlap:null!=this.source.overlap?this.source.overlap:this.source.calendar.opt("eventOverlap")},t.prototype.isStartExplicitlyEditable=function(){return null!=this.startEditable?this.startEditable:this.source.startEditable},t.prototype.isDurationExplicitlyEditable=function(){return null!=this.durationEditable?this.durationEditable:this.source.durationEditable},t.prototype.isExplicitlyEditable=function(){return null!=this.editable?this.editable:this.source.editable},t.prototype.toLegacy=function(){var e=i.extend({},this.miscProps);return e._id=this.uid,e.source=this.source,e.className=this.className.slice(),e.allDay=this.isAllDay(),null!=this.rawId&&(e.id=this.rawId),t.copyVerbatimStandardProps(this,e),e},t.prototype.applyManualStandardProps=function(e){return null!=e.id?this.id=t.normalizeId(this.rawId=e.id):this.id=t.generateId(),null!=e._id?this.uid=String(e._id):this.uid=t.generateId(),i.isArray(e.className)&&(this.className=e.className),"string"==typeof e.className&&(this.className=e.className.split(/\s+/)),!0},t.prototype.applyMiscProps=function(t){i.extend(this.miscProps,t)},t.uuid=0,t.defineStandardProps=r.default.defineStandardProps,t.copyVerbatimStandardProps=r.default.copyVerbatimStandardProps,t}();e.default=o,r.default.mixInto(o),o.defineStandardProps({_id:!1,id:!1,className:!1,source:!1,title:!0,url:!0,rendering:!0,constraint:!0,overlap:!0,editable:!0,startEditable:!0,durationEditable:!0,color:!0,backgroundColor:!0,borderColor:!0,textColor:!0})},function(t,e,n){function i(t,e){var n,i=[];for(n=0;n<t.length;n++)i.push.apply(i,t[n].buildInstances(e));return i}function r(t){return new l.default(t.dateProfile.unzonedRange,t.def,t)}function o(t){return new u.default(new d.default(t.unzonedRange,t.eventDef.isAllDay()),t.eventDef,t.eventInstance)}function s(t){return t.dateProfile.unzonedRange}function a(t){return t.componentFootprint}Object.defineProperty(e,"__esModule",{value:!0});var l=n(211),u=n(36),d=n(12);e.eventDefsToEventInstances=i,e.eventInstanceToEventRange=r,e.eventRangeToEventFootprint=o,e.eventInstanceToUnzonedRange=s,e.eventFootprintToComponentFootprint=a},function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e,n){this.componentFootprint=t,this.eventDef=e,n&&(this.eventInstance=n)}return t.prototype.getEventLegacy=function(){return(this.eventInstance||this.eventDef).toLegacy()},t}();e.default=n},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(4),r=n(17),o=n(34),s=n(50),a=n(13),l=function(){function t(){}return t.createFromRawProps=function(e,n,a){var l,u,d,c,p=e.def,h={},f={},g={},v={},y=null,m=null;for(l in n)r.default.isStandardProp(l)?h[l]=n[l]:p.isStandardProp(l)?f[l]=n[l]:p.miscProps[l]!==n[l]&&(g[l]=n[l]);return u=r.default.parse(h,p.source),u&&(d=s.default.createFromDiff(e.dateProfile,u,a)),f.id!==p.id&&(y=f.id),i.isArraysEqual(f.className,p.className)||(m=f.className),o.default.copyVerbatimStandardProps(f,v),c=new t,c.eventDefId=y,c.className=m,c.verbatimStandardProps=v,c.miscProps=g,d&&(c.dateMutation=d),c},t.prototype.mutateSingle=function(t){var e;return this.dateMutation&&(e=t.dateProfile,t.dateProfile=this.dateMutation.buildNewDateProfile(e,t.source.calendar)),null!=this.eventDefId&&(t.id=o.default.normalizeId(t.rawId=this.eventDefId)),this.className&&(t.className=this.className),this.verbatimStandardProps&&a.default.copyVerbatimStandardProps(this.verbatimStandardProps,t),this.miscProps&&t.applyMiscProps(this.miscProps),e?function(){t.dateProfile=e}:function(){}},t.prototype.setDateMutation=function(t){t&&!t.isEmpty()?this.dateMutation=t:this.dateMutation=null},t.prototype.isEmpty=function(){return!this.dateMutation},t}();e.default=l},function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={sourceClasses:[],registerClass:function(t){this.sourceClasses.unshift(t)},parse:function(t,e){var n,i,r=this.sourceClasses;for(n=0;n<r.length;n++)if(i=r[n].parse(t,e))return i}}},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(4),s=n(33),a=function(t){function e(e){var n=t.call(this)||this;return e=e||{},n.overflowX=e.overflowX||e.overflow||"auto",n.overflowY=e.overflowY||e.overflow||"auto",n}return i.__extends(e,t),e.prototype.render=function(){this.el=this.renderEl(),this.applyOverflow()},e.prototype.renderEl=function(){return this.scrollEl=r('<div class="fc-scroller"></div>')},e.prototype.clear=function(){this.setHeight("auto"),this.applyOverflow()},e.prototype.destroy=function(){this.el.remove()},e.prototype.applyOverflow=function(){this.scrollEl.css({"overflow-x":this.overflowX,"overflow-y":this.overflowY})},e.prototype.lockOverflow=function(t){var e=this.overflowX,n=this.overflowY;t=t||this.getScrollbarWidths(),"auto"===e&&(e=t.top||t.bottom||this.scrollEl[0].scrollWidth-1>this.scrollEl[0].clientWidth?"scroll":"hidden"),"auto"===n&&(n=t.left||t.right||this.scrollEl[0].scrollHeight-1>this.scrollEl[0].clientHeight?"scroll":"hidden"),this.scrollEl.css({"overflow-x":e,"overflow-y":n})},e.prototype.setHeight=function(t){this.scrollEl.height(t)},e.prototype.getScrollTop=function(){return this.scrollEl.scrollTop()},e.prototype.setScrollTop=function(t){this.scrollEl.scrollTop(t)},e.prototype.getClientWidth=function(){return this.scrollEl[0].clientWidth},e.prototype.getClientHeight=function(){return this.scrollEl[0].clientHeight},e.prototype.getScrollbarWidths=function(){return o.getScrollbarWidths(this.scrollEl)},e}(s.default);e.default=a},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(4),s=n(219),a=n(21),l=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.segSelector=".fc-event-container > *",i.dateSelectingClass&&(i.dateClicking=new i.dateClickingClass(i)),i.dateSelectingClass&&(i.dateSelecting=new i.dateSelectingClass(i)),i.eventPointingClass&&(i.eventPointing=new i.eventPointingClass(i)),i.eventDraggingClass&&i.eventPointing&&(i.eventDragging=new i.eventDraggingClass(i,i.eventPointing)),i.eventResizingClass&&i.eventPointing&&(i.eventResizing=new i.eventResizingClass(i,i.eventPointing)),i.externalDroppingClass&&(i.externalDropping=new i.externalDroppingClass(i)),i}return i.__extends(e,t),e.prototype.setElement=function(e){t.prototype.setElement.call(this,e),this.dateClicking&&this.dateClicking.bindToEl(e),this.dateSelecting&&this.dateSelecting.bindToEl(e),this.bindAllSegHandlersToEl(e)},e.prototype.removeElement=function(){this.endInteractions(),t.prototype.removeElement.call(this)},e.prototype.executeEventUnrender=function(){this.endInteractions(),t.prototype.executeEventUnrender.call(this)},e.prototype.bindGlobalHandlers=function(){t.prototype.bindGlobalHandlers.call(this),this.externalDropping&&this.externalDropping.bindToDocument()},e.prototype.unbindGlobalHandlers=function(){t.prototype.unbindGlobalHandlers.call(this),this.externalDropping&&this.externalDropping.unbindFromDocument()},e.prototype.bindDateHandlerToEl=function(t,e,n){var i=this;this.el.on(e,function(t){if(!r(t.target).is(i.segSelector+":not(.fc-helper),"+i.segSelector+":not(.fc-helper) *,.fc-more,a[data-goto]"))return n.call(i,t)})},e.prototype.bindAllSegHandlersToEl=function(t){[this.eventPointing,this.eventDragging,this.eventResizing].forEach(function(e){e&&e.bindToEl(t)})},e.prototype.bindSegHandlerToEl=function(t,e,n){var i=this;t.on(e,this.segSelector,function(t){var e=r(t.currentTarget);if(!e.is(".fc-helper")){var o=e.data("fc-seg");if(o&&!i.shouldIgnoreEventPointing())return n.call(i,o,t)}})},e.prototype.shouldIgnoreMouse=function(){return a.default.get().shouldIgnoreMouse()},e.prototype.shouldIgnoreTouch=function(){var t=this._getView();return t.isSelected||t.selectedEvent},e.prototype.shouldIgnoreEventPointing=function(){return this.eventDragging&&this.eventDragging.isDragging||this.eventResizing&&this.eventResizing.isResizing},e.prototype.canStartSelection=function(t,e){return o.getEvIsTouch(e)&&!this.canStartResize(t,e)&&(this.isEventDefDraggable(t.footprint.eventDef)||this.isEventDefResizable(t.footprint.eventDef))},e.prototype.canStartDrag=function(t,e){return!this.canStartResize(t,e)&&this.isEventDefDraggable(t.footprint.eventDef)},e.prototype.canStartResize=function(t,e){var n=this._getView(),i=t.footprint.eventDef;return(!o.getEvIsTouch(e)||n.isEventDefSelected(i))&&this.isEventDefResizable(i)&&r(e.target).is(".fc-resizer")},e.prototype.endInteractions=function(){[this.dateClicking,this.dateSelecting,this.eventPointing,this.eventDragging,this.eventResizing].forEach(function(t){t&&t.end()})},e.prototype.isEventDefDraggable=function(t){return this.isEventDefStartEditable(t)},e.prototype.isEventDefStartEditable=function(t){var e=t.isStartExplicitlyEditable();return null==e&&null==(e=this.opt("eventStartEditable"))&&(e=this.isEventDefGenerallyEditable(t)),e},e.prototype.isEventDefGenerallyEditable=function(t){var e=t.isExplicitlyEditable();return null==e&&(e=this.opt("editable")),e},e.prototype.isEventDefResizableFromStart=function(t){return this.opt("eventResizableFromStart")&&this.isEventDefResizable(t)},e.prototype.isEventDefResizableFromEnd=function(t){return this.isEventDefResizable(t)},e.prototype.isEventDefResizable=function(t){var e=t.isDurationExplicitlyEditable();return null==e&&null==(e=this.opt("eventDurationEditable"))&&(e=this.isEventDefGenerallyEditable(t)),e},e.prototype.diffDates=function(t,e){return this.largeUnit?o.diffByUnit(t,e,this.largeUnit):o.diffDayTime(t,e)},e.prototype.isEventInstanceGroupAllowed=function(t){var e,n=this._getView(),i=this.dateProfile,r=this.eventRangesToEventFootprints(t.getAllEventRanges());for(e=0;e<r.length;e++)if(!i.validUnzonedRange.containsRange(r[e].componentFootprint.unzonedRange))return!1;return n.calendar.constraints.isEventInstanceGroupAllowed(t)},e.prototype.isExternalInstanceGroupAllowed=function(t){var e,n=this._getView(),i=this.dateProfile,r=this.eventRangesToEventFootprints(t.getAllEventRanges());for(e=0;e<r.length;e++)if(!i.validUnzonedRange.containsRange(r[e].componentFootprint.unzonedRange))return!1;for(e=0;e<r.length;e++)if(!n.calendar.constraints.isSelectionFootprintAllowed(r[e].componentFootprint))return!1;return!0},e}(s.default);e.default=l},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(0),s=n(4),a=n(218),l=n(221),u=n(40),d=n(21),c=n(5),p=function(t){function e(e,n){var i=t.call(this,null,n.options)||this;return i.batchRenderDepth=0,i.isSelected=!1,i.calendar=e,i.viewSpec=n,i.type=n.type,i.name=i.type,i.initRenderQueue(),i.initHiddenDays(),i.dateProfileGenerator=new i.dateProfileGeneratorClass(i),i.bindBaseRenderHandlers(),i.eventOrderSpecs=s.parseFieldSpecs(i.opt("eventOrder")),i.initialize&&i.initialize(),i}return i.__extends(e,t),e.prototype._getView=function(){return this},e.prototype.opt=function(t){return this.options[t]},e.prototype.initRenderQueue=function(){this.renderQueue=new a.default({event:this.opt("eventRenderWait")}),this.renderQueue.on("start",this.onRenderQueueStart.bind(this)),this.renderQueue.on("stop",this.onRenderQueueStop.bind(this)),this.on("before:change",this.startBatchRender),this.on("change",this.stopBatchRender)},e.prototype.onRenderQueueStart=function(){this.calendar.freezeContentHeight(),this.addScroll(this.queryScroll())},e.prototype.onRenderQueueStop=function(){this.calendar.updateViewSize()&&this.popScroll(),this.calendar.thawContentHeight()},e.prototype.startBatchRender=function(){this.batchRenderDepth++||this.renderQueue.pause()},e.prototype.stopBatchRender=function(){--this.batchRenderDepth||this.renderQueue.resume()},e.prototype.requestRender=function(t,e,n){this.renderQueue.queue(t,e,n)},e.prototype.whenSizeUpdated=function(t){this.renderQueue.isRunning?this.renderQueue.one("stop",t.bind(this)):t.call(this)},e.prototype.computeTitle=function(t){var e;return e=/^(year|month)$/.test(t.currentRangeUnit)?t.currentUnzonedRange:t.activeUnzonedRange,this.formatRange({start:this.calendar.msToMoment(e.startMs,t.isRangeAllDay),end:this.calendar.msToMoment(e.endMs,t.isRangeAllDay)},t.isRangeAllDay,this.opt("titleFormat")||this.computeTitleFormat(t),this.opt("titleRangeSeparator"))},e.prototype.computeTitleFormat=function(t){var e=t.currentRangeUnit;return"year"===e?"YYYY":"month"===e?this.opt("monthYearFormat"):t.currentUnzonedRange.as("days")>1?"ll":"LL"},e.prototype.setDate=function(t){var e=this.get("dateProfile"),n=this.dateProfileGenerator.build(t,void 0,!0);e&&e.activeUnzonedRange.equals(n.activeUnzonedRange)||this.set("dateProfile",n)},e.prototype.unsetDate=function(){this.unset("dateProfile")},e.prototype.fetchInitialEvents=function(t){var e=this.calendar,n=t.isRangeAllDay&&!this.usesMinMaxTime;return e.requestEvents(e.msToMoment(t.activeUnzonedRange.startMs,n),e.msToMoment(t.activeUnzonedRange.endMs,n))},e.prototype.bindEventChanges=function(){this.listenTo(this.calendar,"eventsReset",this.resetEvents)},e.prototype.unbindEventChanges=function(){this.stopListeningTo(this.calendar,"eventsReset")},e.prototype.setEvents=function(t){this.set("currentEvents",t),this.set("hasEvents",!0)},e.prototype.unsetEvents=function(){this.unset("currentEvents"),this.unset("hasEvents")},e.prototype.resetEvents=function(t){this.startBatchRender(),this.unsetEvents(),this.setEvents(t),this.stopBatchRender()},e.prototype.requestDateRender=function(t){var e=this;this.requestRender(function(){e.executeDateRender(t)},"date","init")},e.prototype.requestDateUnrender=function(){var t=this;this.requestRender(function(){t.executeDateUnrender()},"date","destroy")},e.prototype.executeDateRender=function(e){t.prototype.executeDateRender.call(this,e),this.render&&this.render(),this.trigger("datesRendered"),this.addScroll({isDateInit:!0}),this.startNowIndicator()},e.prototype.executeDateUnrender=function(){this.unselect(),this.stopNowIndicator(),this.trigger("before:datesUnrendered"),this.destroy&&this.destroy(),t.prototype.executeDateUnrender.call(this)},e.prototype.bindBaseRenderHandlers=function(){var t=this;this.on("datesRendered",function(){t.whenSizeUpdated(t.triggerViewRender)}),this.on("before:datesUnrendered",function(){t.triggerViewDestroy()})},e.prototype.triggerViewRender=function(){this.publiclyTrigger("viewRender",{context:this,args:[this,this.el]})},e.prototype.triggerViewDestroy=function(){this.publiclyTrigger("viewDestroy",{context:this,args:[this,this.el]})},e.prototype.requestEventsRender=function(t){var e=this;this.requestRender(function(){e.executeEventRender(t),e.whenSizeUpdated(e.triggerAfterEventsRendered)},"event","init")},e.prototype.requestEventsUnrender=function(){var t=this;this.requestRender(function(){t.triggerBeforeEventsDestroyed(),t.executeEventUnrender()},"event","destroy")},e.prototype.requestBusinessHoursRender=function(t){var e=this;this.requestRender(function(){e.renderBusinessHours(t)},"businessHours","init")},e.prototype.requestBusinessHoursUnrender=function(){var t=this;this.requestRender(function(){t.unrenderBusinessHours()},"businessHours","destroy")},e.prototype.bindGlobalHandlers=function(){t.prototype.bindGlobalHandlers.call(this),this.listenTo(d.default.get(),{touchstart:this.processUnselect,mousedown:this.handleDocumentMousedown})},e.prototype.unbindGlobalHandlers=function(){t.prototype.unbindGlobalHandlers.call(this),this.stopListeningTo(d.default.get())},e.prototype.startNowIndicator=function(){var t,e,n,i=this;this.opt("nowIndicator")&&(t=this.getNowIndicatorUnit())&&(e=s.proxy(this,"updateNowIndicator"),this.initialNowDate=this.calendar.getNow(),this.initialNowQueriedMs=(new Date).valueOf(),n=this.initialNowDate.clone().startOf(t).add(1,t).valueOf()-this.initialNowDate.valueOf(),this.nowIndicatorTimeoutID=setTimeout(function(){i.nowIndicatorTimeoutID=null,e(),n=+o.duration(1,t),n=Math.max(100,n),i.nowIndicatorIntervalID=setInterval(e,n)},n))},e.prototype.updateNowIndicator=function(){this.isDatesRendered&&this.initialNowDate&&(this.unrenderNowIndicator(),this.renderNowIndicator(this.initialNowDate.clone().add((new Date).valueOf()-this.initialNowQueriedMs)),this.isNowIndicatorRendered=!0)},e.prototype.stopNowIndicator=function(){this.isNowIndicatorRendered&&(this.nowIndicatorTimeoutID&&(clearTimeout(this.nowIndicatorTimeoutID),this.nowIndicatorTimeoutID=null),this.nowIndicatorIntervalID&&(clearInterval(this.nowIndicatorIntervalID),this.nowIndicatorIntervalID=null),this.unrenderNowIndicator(),this.isNowIndicatorRendered=!1)},e.prototype.updateSize=function(e,n,i){this.setHeight?this.setHeight(e,n):t.prototype.updateSize.call(this,e,n,i),this.updateNowIndicator()},e.prototype.addScroll=function(t){var e=this.queuedScroll||(this.queuedScroll={});r.extend(e,t)},e.prototype.popScroll=function(){this.applyQueuedScroll(),this.queuedScroll=null},e.prototype.applyQueuedScroll=function(){this.queuedScroll&&this.applyScroll(this.queuedScroll)},e.prototype.queryScroll=function(){var t={};return this.isDatesRendered&&r.extend(t,this.queryDateScroll()),t},e.prototype.applyScroll=function(t){t.isDateInit&&this.isDatesRendered&&r.extend(t,this.computeInitialDateScroll()),this.isDatesRendered&&this.applyDateScroll(t)},e.prototype.computeInitialDateScroll=function(){return{}},e.prototype.queryDateScroll=function(){return{}},e.prototype.applyDateScroll=function(t){},e.prototype.reportEventDrop=function(t,e,n,i){var r=this.calendar.eventManager,s=r.mutateEventsWithId(t.def.id,e),a=e.dateMutation;a&&(t.dateProfile=a.buildNewDateProfile(t.dateProfile,this.calendar)),this.triggerEventDrop(t,a&&a.dateDelta||o.duration(),s,n,i)},e.prototype.triggerEventDrop=function(t,e,n,i,r){this.publiclyTrigger("eventDrop",{context:i[0],args:[t.toLegacy(),e,n,r,{},this]})},e.prototype.reportExternalDrop=function(t,e,n,i,r,o){e&&this.calendar.eventManager.addEventDef(t,n),this.triggerExternalDrop(t,e,i,r,o)},e.prototype.triggerExternalDrop=function(t,e,n,i,r){this.publiclyTrigger("drop",{context:n[0],args:[t.dateProfile.start.clone(),i,r,this]}),e&&this.publiclyTrigger("eventReceive",{context:this,args:[t.buildInstance().toLegacy(),this]})},e.prototype.reportEventResize=function(t,e,n,i){var r=this.calendar.eventManager,o=r.mutateEventsWithId(t.def.id,e);t.dateProfile=e.dateMutation.buildNewDateProfile(t.dateProfile,this.calendar),this.triggerEventResize(t,e.dateMutation.endDelta,o,n,i)},e.prototype.triggerEventResize=function(t,e,n,i,r){this.publiclyTrigger("eventResize",{context:i[0],args:[t.toLegacy(),e,n,r,{},this]})},e.prototype.select=function(t,e){this.unselect(e),this.renderSelectionFootprint(t),this.reportSelection(t,e)},e.prototype.renderSelectionFootprint=function(e){this.renderSelection?this.renderSelection(e.toLegacy(this.calendar)):t.prototype.renderSelectionFootprint.call(this,e)},e.prototype.reportSelection=function(t,e){this.isSelected=!0,this.triggerSelect(t,e)},e.prototype.triggerSelect=function(t,e){var n=this.calendar.footprintToDateProfile(t);this.publiclyTrigger("select",{context:this,args:[n.start,n.end,e,this]})},e.prototype.unselect=function(t){this.isSelected&&(this.isSelected=!1,this.destroySelection&&this.destroySelection(),this.unrenderSelection(),this.publiclyTrigger("unselect",{context:this,args:[t,this]}))},e.prototype.selectEventInstance=function(t){this.selectedEventInstance&&this.selectedEventInstance===t||(this.unselectEventInstance(),this.getEventSegs().forEach(function(e){e.footprint.eventInstance===t&&e.el&&e.el.addClass("fc-selected")}),this.selectedEventInstance=t)},e.prototype.unselectEventInstance=function(){this.selectedEventInstance&&(this.getEventSegs().forEach(function(t){t.el&&t.el.removeClass("fc-selected")}),this.selectedEventInstance=null)},e.prototype.isEventDefSelected=function(t){return this.selectedEventInstance&&this.selectedEventInstance.def.id===t.id},e.prototype.handleDocumentMousedown=function(t){s.isPrimaryMouseButton(t)&&this.processUnselect(t)},e.prototype.processUnselect=function(t){this.processRangeUnselect(t),this.processEventUnselect(t)},e.prototype.processRangeUnselect=function(t){var e;this.isSelected&&this.opt("unselectAuto")&&((e=this.opt("unselectCancel"))&&r(t.target).closest(e).length||this.unselect(t))},e.prototype.processEventUnselect=function(t){this.selectedEventInstance&&(r(t.target).closest(".fc-selected").length||this.unselectEventInstance())},e.prototype.triggerBaseRendered=function(){this.publiclyTrigger("viewRender",{context:this,args:[this,this.el]})},e.prototype.triggerBaseUnrendered=function(){this.publiclyTrigger("viewDestroy",{context:this,args:[this,this.el]})},e.prototype.triggerDayClick=function(t,e,n){var i=this.calendar.footprintToDateProfile(t);this.publiclyTrigger("dayClick",{context:e,args:[i.start,n,this]})},e.prototype.isDateInOtherMonth=function(t,e){return!1},e.prototype.getUnzonedRangeOption=function(t){var e=this.opt(t);if("function"==typeof e&&(e=e.apply(null,Array.prototype.slice.call(arguments,1))),e)return this.calendar.parseUnzonedRange(e)},e.prototype.initHiddenDays=function(){var t,e=this.opt("hiddenDays")||[],n=[],i=0;for(!1===this.opt("weekends")&&e.push(0,6),t=0;t<7;t++)(n[t]=-1!==r.inArray(t,e))||i++;if(!i)throw new Error("invalid hiddenDays");this.isHiddenDayHash=n},e.prototype.trimHiddenDays=function(t){var e=t.getStart(),n=t.getEnd();return e&&(e=this.skipHiddenDays(e)),n&&(n=this.skipHiddenDays(n,-1,!0)),null===e||null===n||e<n?new c.default(e,n):null},e.prototype.isHiddenDay=function(t){return o.isMoment(t)&&(t=t.day()),this.isHiddenDayHash[t]},e.prototype.skipHiddenDays=function(t,e,n){void 0===e&&(e=1),void 0===n&&(n=!1);for(var i=t.clone();this.isHiddenDayHash[(i.day()+(n?e:0)+7)%7];)i.add(e,"days");return i},e}(u.default);e.default=p,p.prototype.usesMinMaxTime=!1,p.prototype.dateProfileGeneratorClass=l.default,p.watch("displayingDates",["isInDom","dateProfile"],function(t){this.requestDateRender(t.dateProfile)},function(){this.requestDateUnrender()}),p.watch("displayingBusinessHours",["displayingDates","businessHourGenerator"],function(t){this.requestBusinessHoursRender(t.businessHourGenerator)},function(){this.requestBusinessHoursUnrender()}),p.watch("initialEvents",["dateProfile"],function(t){return this.fetchInitialEvents(t.dateProfile)}),p.watch("bindingEvents",["initialEvents"],function(t){this.setEvents(t.initialEvents),this.bindEventChanges()},function(){this.unbindEventChanges(),this.unsetEvents()}),p.watch("displayingEvents",["displayingDates","hasEvents"],function(){this.requestEventsRender(this.get("currentEvents"))},function(){this.requestEventsUnrender()}),p.watch("title",["dateProfile"],function(t){return this.title=this.computeTitle(t.dateProfile)}),p.watch("legacyDateProps",["dateProfile"],function(t){var e=this.calendar,n=t.dateProfile;this.start=e.msToMoment(n.activeUnzonedRange.startMs,n.isRangeAllDay),this.end=e.msToMoment(n.activeUnzonedRange.endMs,n.isRangeAllDay),this.intervalStart=e.msToMoment(n.currentUnzonedRange.startMs,n.isRangeAllDay),this.intervalEnd=e.msToMoment(n.currentUnzonedRange.endMs,n.isRangeAllDay)})},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(4),o=function(){function t(t,e){this.view=t._getView(),this.component=t,this.fillRenderer=e}return t.prototype.opt=function(t){return this.view.opt(t)},t.prototype.rangeUpdated=function(){var t,e;this.eventTimeFormat=this.opt("eventTimeFormat")||this.opt("timeFormat")||this.computeEventTimeFormat(),t=this.opt("displayEventTime"),null==t&&(t=this.computeDisplayEventTime()),e=this.opt("displayEventEnd"),null==e&&(e=this.computeDisplayEventEnd()),this.displayEventTime=t,this.displayEventEnd=e},t.prototype.render=function(t){var e,n,i,r=this.component._getDateProfile(),o=[],s=[];for(e in t)n=t[e],i=n.sliceRenderRanges(r.activeUnzonedRange),n.getEventDef().hasBgRendering()?o.push.apply(o,i):s.push.apply(s,i);this.renderBgRanges(o),this.renderFgRanges(s)},t.prototype.unrender=function(){this.unrenderBgRanges(),this.unrenderFgRanges()},t.prototype.renderFgRanges=function(t){var e=this.component.eventRangesToEventFootprints(t),n=this.component.eventFootprintsToSegs(e);n=this.renderFgSegEls(n),!1!==this.renderFgSegs(n)&&(this.fgSegs=n)},t.prototype.unrenderFgRanges=function(){this.unrenderFgSegs(this.fgSegs||[]),this.fgSegs=null},t.prototype.renderBgRanges=function(t){var e=this.component.eventRangesToEventFootprints(t),n=this.component.eventFootprintsToSegs(e);!1!==this.renderBgSegs(n)&&(this.bgSegs=n)},t.prototype.unrenderBgRanges=function(){this.unrenderBgSegs(),this.bgSegs=null},t.prototype.getSegs=function(){return(this.bgSegs||[]).concat(this.fgSegs||[])},t.prototype.renderFgSegs=function(t){return!1},t.prototype.unrenderFgSegs=function(t){},t.prototype.renderBgSegs=function(t){var e=this;if(!this.fillRenderer)return!1;this.fillRenderer.renderSegs("bgEvent",t,{getClasses:function(t){return e.getBgClasses(t.footprint.eventDef)},getCss:function(t){return{"background-color":e.getBgColor(t.footprint.eventDef)}},filterEl:function(t,n){return e.filterEventRenderEl(t.footprint,n)}})},t.prototype.unrenderBgSegs=function(){this.fillRenderer&&this.fillRenderer.unrender("bgEvent")},t.prototype.renderFgSegEls=function(t,e){var n=this;void 0===e&&(e=!1);var r,o=this.view.hasPublicHandlers("eventRender"),s="",a=[];if(t.length){for(r=0;r<t.length;r++)this.beforeFgSegHtml(t[r]),s+=this.fgSegHtml(t[r],e);i(s).each(function(e,r){var s=t[e],l=i(r);o&&(l=n.filterEventRenderEl(s.footprint,l)),l&&(l.data("fc-seg",s),s.el=l,a.push(s))})}return a},t.prototype.beforeFgSegHtml=function(t){},t.prototype.fgSegHtml=function(t,e){},t.prototype.getSegClasses=function(t,e,n){var i=["fc-event",t.isStart?"fc-start":"fc-not-start",t.isEnd?"fc-end":"fc-not-end"].concat(this.getClasses(t.footprint.eventDef));return e&&i.push("fc-draggable"),n&&i.push("fc-resizable"),this.view.isEventDefSelected(t.footprint.eventDef)&&i.push("fc-selected"),i},t.prototype.filterEventRenderEl=function(t,e){var n=t.getEventLegacy(),r=this.view.publiclyTrigger("eventRender",{context:n,args:[n,e,this.view]});return!1===r?e=null:r&&!0!==r&&(e=i(r)),e},t.prototype.getTimeText=function(t,e,n){return this._getTimeText(t.eventInstance.dateProfile.start,t.eventInstance.dateProfile.end,t.componentFootprint.isAllDay,e,n)},t.prototype._getTimeText=function(t,e,n,i,r){return null==i&&(i=this.eventTimeFormat),null==r&&(r=this.displayEventEnd),this.displayEventTime&&!n?r&&e?this.view.formatRange({start:t,end:e},!1,i):t.format(i):""},t.prototype.computeEventTimeFormat=function(){return this.opt("smallTimeFormat")},t.prototype.computeDisplayEventTime=function(){return!0},t.prototype.computeDisplayEventEnd=function(){return!0},t.prototype.getBgClasses=function(t){var e=this.getClasses(t);return e.push("fc-bgevent"),e},t.prototype.getClasses=function(t){var e,n=this.getStylingObjs(t),i=[];for(e=0;e<n.length;e++)i.push.apply(i,n[e].eventClassName||n[e].className||[]);return i},t.prototype.getSkinCss=function(t){return{"background-color":this.getBgColor(t),"border-color":this.getBorderColor(t),color:this.getTextColor(t)}},t.prototype.getBgColor=function(t){var e,n,i=this.getStylingObjs(t);for(e=0;e<i.length&&!n;e++)n=i[e].eventBackgroundColor||i[e].eventColor||i[e].backgroundColor||i[e].color;return n||(n=this.opt("eventBackgroundColor")||this.opt("eventColor")),n},t.prototype.getBorderColor=function(t){var e,n,i=this.getStylingObjs(t);for(e=0;e<i.length&&!n;e++)n=i[e].eventBorderColor||i[e].eventColor||i[e].borderColor||i[e].color;return n||(n=this.opt("eventBorderColor")||this.opt("eventColor")),n},t.prototype.getTextColor=function(t){var e,n,i=this.getStylingObjs(t);for(e=0;e<i.length&&!n;e++)n=i[e].eventTextColor||i[e].textColor;return n||(n=this.opt("eventTextColor")),n},t.prototype.getStylingObjs=function(t){var e=this.getFallbackStylingObjs(t);return e.unshift(t),e},t.prototype.getFallbackStylingObjs=function(t){return[t.source]},t.prototype.sortEventSegs=function(t){t.sort(r.proxy(this,"compareEventSegs"))},t.prototype.compareEventSegs=function(t,e){var n=t.footprint,i=e.footprint,o=n.componentFootprint,s=i.componentFootprint,a=o.unzonedRange,l=s.unzonedRange
;return a.startMs-l.startMs||l.endMs-l.startMs-(a.endMs-a.startMs)||s.isAllDay-o.isAllDay||r.compareByFieldSpecs(n.eventDef,i.eventDef,this.view.eventOrderSpecs,n.eventDef.miscProps,i.eventDef.miscProps)},t}();e.default=o},,,,,function(t,e,n){function i(t){return"en"!==t.locale()?t.clone().locale("en"):t}function r(t,e){return h(a(e).fakeFormatString,t)}function o(t,e,n,i,r){var o;return t=y.default.parseZone(t),e=y.default.parseZone(e),o=t.localeData(),n=o.longDateFormat(n)||n,s(a(n),t,e,i||" - ",r)}function s(t,e,n,i,r){var o,s,a,l=t.sameUnits,u=e.clone().stripZone(),d=n.clone().stripZone(),c=f(t.fakeFormatString,e),p=f(t.fakeFormatString,n),h="",v="",y="",m="",b="";for(o=0;o<l.length&&(!l[o]||u.isSame(d,l[o]));o++)h+=c[o];for(s=l.length-1;s>o&&(!l[s]||u.isSame(d,l[s]))&&(s-1!==o||"."!==c[s]);s--)v=c[s]+v;for(a=o;a<=s;a++)y+=c[a],m+=p[a];return(y||m)&&(b=r?m+i+y:y+i+m),g(h+b+v)}function a(t){return C[t]||(C[t]=l(t))}function l(t){var e=u(t);return{fakeFormatString:c(e),sameUnits:p(e)}}function u(t){for(var e,n=[],i=/\[([^\]]*)\]|\(([^\)]*)\)|(LTS|LT|(\w)\4*o?)|([^\w\[\(]+)/g;e=i.exec(t);)e[1]?n.push.apply(n,d(e[1])):e[2]?n.push({maybe:u(e[2])}):e[3]?n.push({token:e[3]}):e[5]&&n.push.apply(n,d(e[5]));return n}function d(t){return". "===t?["."," "]:[t]}function c(t){var e,n,i=[];for(e=0;e<t.length;e++)n=t[e],"string"==typeof n?i.push("["+n+"]"):n.token?n.token in E?i.push(b+"["+n.token+"]"):i.push(n.token):n.maybe&&i.push(w+c(n.maybe)+w);return i.join(m)}function p(t){var e,n,i,r=[];for(e=0;e<t.length;e++)n=t[e],n.token?(i=S[n.token.charAt(0)],r.push(i?i.unit:"second")):n.maybe?r.push.apply(r,p(n.maybe)):r.push(null);return r}function h(t,e){return g(f(t,e).join(""))}function f(t,e){var n,i,r=[],o=y.oldMomentFormat(e,t),s=o.split(m);for(n=0;n<s.length;n++)i=s[n],i.charAt(0)===b?r.push(E[i.substring(1)](e)):r.push(i);return r}function g(t){return t.replace(D,function(t,e){return e.match(/[1-9]/)?e:""})}function v(t){var e,n,i,r,o=u(t);for(e=0;e<o.length;e++)n=o[e],n.token&&(i=S[n.token.charAt(0)])&&(!r||i.value>r.value)&&(r=i);return r?r.unit:null}Object.defineProperty(e,"__esModule",{value:!0});var y=n(10);y.newMomentProto.format=function(){return this._fullCalendar&&arguments[0]?r(this,arguments[0]):this._ambigTime?y.oldMomentFormat(i(this),"YYYY-MM-DD"):this._ambigZone?y.oldMomentFormat(i(this),"YYYY-MM-DD[T]HH:mm:ss"):this._fullCalendar?y.oldMomentFormat(i(this)):y.oldMomentProto.format.apply(this,arguments)},y.newMomentProto.toISOString=function(){return this._ambigTime?y.oldMomentFormat(i(this),"YYYY-MM-DD"):this._ambigZone?y.oldMomentFormat(i(this),"YYYY-MM-DD[T]HH:mm:ss"):this._fullCalendar?y.oldMomentProto.toISOString.apply(i(this),arguments):y.oldMomentProto.toISOString.apply(this,arguments)};var m="\v",b="",w="",D=new RegExp(w+"([^"+w+"]*)"+w,"g"),E={t:function(t){return y.oldMomentFormat(t,"a").charAt(0)},T:function(t){return y.oldMomentFormat(t,"A").charAt(0)}},S={Y:{value:1,unit:"year"},M:{value:2,unit:"month"},W:{value:3,unit:"week"},w:{value:3,unit:"week"},D:{value:4,unit:"day"},d:{value:4,unit:"day"}};e.formatDate=r,e.formatRange=o;var C={};e.queryMostGranularFormatUnit=v},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(33),o=n(11),s=n(7),a=function(t){function e(){var e=t.call(this)||this;return e._watchers={},e._props={},e.applyGlobalWatchers(),e.constructed(),e}return i.__extends(e,t),e.watch=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];this.prototype.hasOwnProperty("_globalWatchArgs")||(this.prototype._globalWatchArgs=Object.create(this.prototype._globalWatchArgs)),this.prototype._globalWatchArgs[t]=e},e.prototype.constructed=function(){},e.prototype.applyGlobalWatchers=function(){var t,e=this._globalWatchArgs;for(t in e)this.watch.apply(this,[t].concat(e[t]))},e.prototype.has=function(t){return t in this._props},e.prototype.get=function(t){return void 0===t?this._props:this._props[t]},e.prototype.set=function(t,e){var n;"string"==typeof t?(n={},n[t]=void 0===e?null:e):n=t,this.setProps(n)},e.prototype.reset=function(t){var e,n=this._props,i={};for(e in n)i[e]=void 0;for(e in t)i[e]=t[e];this.setProps(i)},e.prototype.unset=function(t){var e,n,i={};for(e="string"==typeof t?[t]:t,n=0;n<e.length;n++)i[e[n]]=void 0;this.setProps(i)},e.prototype.setProps=function(t){var e,n,i={},r=0;for(e in t)"object"!=typeof(n=t[e])&&n===this._props[e]||(i[e]=n,r++);if(r){this.trigger("before:batchChange",i);for(e in i)n=i[e],this.trigger("before:change",e,n),this.trigger("before:change:"+e,n);for(e in i)n=i[e],void 0===n?delete this._props[e]:this._props[e]=n,this.trigger("change:"+e,n),this.trigger("change",e,n);this.trigger("batchChange",i)}},e.prototype.watch=function(t,e,n,i){var r=this;this.unwatch(t),this._watchers[t]=this._watchDeps(e,function(e){var i=n.call(r,e);i&&i.then?(r.unset(t),i.then(function(e){r.set(t,e)})):r.set(t,i)},function(e){r.unset(t),i&&i.call(r,e)})},e.prototype.unwatch=function(t){var e=this._watchers[t];e&&(delete this._watchers[t],e.teardown())},e.prototype._watchDeps=function(t,e,n){var i=this,r=0,o=t.length,s=0,a={},l=[],u=!1,d=function(t,e,i){1===++r&&s===o&&(u=!0,n(a),u=!1)},c=function(t,n,i){void 0===n?(i||void 0===a[t]||s--,delete a[t]):(i||void 0!==a[t]||s++,a[t]=n),--r||s===o&&(u||e(a))},p=function(t,e){i.on(t,e),l.push([t,e])};return t.forEach(function(t){var e=!1;"?"===t.charAt(0)&&(t=t.substring(1),e=!0),p("before:change:"+t,function(t){d()}),p("change:"+t,function(n){c(t,n,e)})}),t.forEach(function(t){var e=!1;"?"===t.charAt(0)&&(t=t.substring(1),e=!0),i.has(t)?(a[t]=i.get(t),s++):e&&s++}),s===o&&e(a),{teardown:function(){for(var t=0;t<l.length;t++)i.off(l[t][0],l[t][1]);l=null,s===o&&n()},flash:function(){s===o&&(n(),e(a))}}},e.prototype.flash=function(t){var e=this._watchers[t];e&&e.flash()},e}(r.default);e.default=a,a.prototype._globalWatchArgs={},o.default.mixInto(a),s.default.mixInto(a)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),r=n(4),o=n(13),s=n(210);e.default={parse:function(t,e){return r.isTimeString(t.start)||i.isDuration(t.start)||r.isTimeString(t.end)||i.isDuration(t.end)?s.default.parse(t,e):o.default.parse(t,e)}}},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(4),r=n(17),o=function(){function t(){this.clearEnd=!1,this.forceTimed=!1,this.forceAllDay=!1}return t.createFromDiff=function(e,n,r){function o(t,e){return r?i.diffByUnit(t,e,r):n.isAllDay()?i.diffDay(t,e):i.diffDayTime(t,e)}var s,a,l,u,d=e.end&&!n.end,c=e.isAllDay()&&!n.isAllDay(),p=!e.isAllDay()&&n.isAllDay();return s=o(n.start,e.start),n.end&&(a=o(n.unzonedRange.getEnd(),e.unzonedRange.getEnd()),l=a.subtract(s)),u=new t,u.clearEnd=d,u.forceTimed=c,u.forceAllDay=p,u.setDateDelta(s),u.setEndDelta(l),u},t.prototype.buildNewDateProfile=function(t,e){var n=t.start.clone(),i=null,o=!1;return t.end&&!this.clearEnd?i=t.end.clone():this.endDelta&&!i&&(i=e.getDefaultEventEnd(t.isAllDay(),n)),this.forceTimed?(o=!0,n.hasTime()||n.time(0),i&&!i.hasTime()&&i.time(0)):this.forceAllDay&&(n.hasTime()&&n.stripTime(),i&&i.hasTime()&&i.stripTime()),this.dateDelta&&(o=!0,n.add(this.dateDelta),i&&i.add(this.dateDelta)),this.endDelta&&(o=!0,i.add(this.endDelta)),this.startDelta&&(o=!0,n.add(this.startDelta)),o&&(n=e.applyTimezone(n),i&&(i=e.applyTimezone(i))),!i&&e.opt("forceEventDuration")&&(i=e.getDefaultEventEnd(t.isAllDay(),n)),new r.default(n,i,e)},t.prototype.setDateDelta=function(t){t&&t.valueOf()?this.dateDelta=t:this.dateDelta=null},t.prototype.setStartDelta=function(t){t&&t.valueOf()?this.startDelta=t:this.startDelta=null},t.prototype.setEndDelta=function(t){t&&t.valueOf()?this.endDelta=t:this.endDelta=null},t.prototype.isEmpty=function(){return!(this.clearEnd||this.forceTimed||this.forceAllDay||this.dateDelta||this.startDelta||this.endDelta)},t}();e.default=o},function(t,e,n){function i(t,e){a[t]=e}function r(t){return t?!0===t?s.default:a[t]:o.default}Object.defineProperty(e,"__esModule",{value:!0});var o=n(213),s=n(214),a={};e.defineThemeSystem=i,e.getThemeSystemClass=r},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(4),s=n(20),a=n(6),l=n(13),u=function(t){function e(e){var n=t.call(this,e)||this;return n.eventDefs=[],n}return i.__extends(e,t),e.parse=function(t,e){var n;return r.isArray(t.events)?n=t:r.isArray(t)&&(n={events:t}),!!n&&a.default.parse.call(this,n,e)},e.prototype.setRawEventDefs=function(t){this.rawEventDefs=t,this.eventDefs=this.parseEventDefs(t)},e.prototype.fetch=function(t,e,n){var i,r=this.eventDefs;if(null!=this.currentTimezone&&this.currentTimezone!==n)for(i=0;i<r.length;i++)r[i]instanceof l.default&&r[i].rezone();return this.currentTimezone=n,s.default.resolve(r)},e.prototype.addEventDef=function(t){this.eventDefs.push(t)},e.prototype.removeEventDefsById=function(t){return o.removeMatching(this.eventDefs,function(e){return e.id===t})},e.prototype.removeAllEventDefs=function(){this.eventDefs=[]},e.prototype.getPrimitive=function(){return this.rawEventDefs},e.prototype.applyManualStandardProps=function(e){var n=t.prototype.applyManualStandardProps.call(this,e);return this.setRawEventDefs(e.events),n},e}(a.default);e.default=u,u.defineStandardProps({events:!1})},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(4),o=function(){function t(t){this.isHorizontal=!1,this.isVertical=!1,this.els=i(t.els),this.isHorizontal=t.isHorizontal,this.isVertical=t.isVertical,this.forcedOffsetParentEl=t.offsetParent?i(t.offsetParent):null}return t.prototype.build=function(){var t=this.forcedOffsetParentEl;!t&&this.els.length>0&&(t=this.els.eq(0).offsetParent()),this.origin=t?t.offset():null,this.boundingRect=this.queryBoundingRect(),this.isHorizontal&&this.buildElHorizontals(),this.isVertical&&this.buildElVerticals()},t.prototype.clear=function(){this.origin=null,this.boundingRect=null,this.lefts=null,this.rights=null,this.tops=null,this.bottoms=null},t.prototype.ensureBuilt=function(){this.origin||this.build()},t.prototype.buildElHorizontals=function(){var t=[],e=[];this.els.each(function(n,r){var o=i(r),s=o.offset().left,a=o.outerWidth();t.push(s),e.push(s+a)}),this.lefts=t,this.rights=e},t.prototype.buildElVerticals=function(){var t=[],e=[];this.els.each(function(n,r){var o=i(r),s=o.offset().top,a=o.outerHeight();t.push(s),e.push(s+a)}),this.tops=t,this.bottoms=e},t.prototype.getHorizontalIndex=function(t){this.ensureBuilt();var e,n=this.lefts,i=this.rights,r=n.length;for(e=0;e<r;e++)if(t>=n[e]&&t<i[e])return e},t.prototype.getVerticalIndex=function(t){this.ensureBuilt();var e,n=this.tops,i=this.bottoms,r=n.length;for(e=0;e<r;e++)if(t>=n[e]&&t<i[e])return e},t.prototype.getLeftOffset=function(t){return this.ensureBuilt(),this.lefts[t]},t.prototype.getLeftPosition=function(t){return this.ensureBuilt(),this.lefts[t]-this.origin.left},t.prototype.getRightOffset=function(t){return this.ensureBuilt(),this.rights[t]},t.prototype.getRightPosition=function(t){return this.ensureBuilt(),this.rights[t]-this.origin.left},t.prototype.getWidth=function(t){return this.ensureBuilt(),this.rights[t]-this.lefts[t]},t.prototype.getTopOffset=function(t){return this.ensureBuilt(),this.tops[t]},t.prototype.getTopPosition=function(t){return this.ensureBuilt(),this.tops[t]-this.origin.top},t.prototype.getBottomOffset=function(t){return this.ensureBuilt(),this.bottoms[t]},t.prototype.getBottomPosition=function(t){return this.ensureBuilt(),this.bottoms[t]-this.origin.top},t.prototype.getHeight=function(t){return this.ensureBuilt(),this.bottoms[t]-this.tops[t]},t.prototype.queryBoundingRect=function(){var t;return this.els.length>0&&(t=r.getScrollParent(this.els.eq(0)),!t.is(document))?r.getClientRect(t):null},t.prototype.isPointInBounds=function(t,e){return this.isLeftInBounds(t)&&this.isTopInBounds(e)},t.prototype.isLeftInBounds=function(t){return!this.boundingRect||t>=this.boundingRect.left&&t<this.boundingRect.right},t.prototype.isTopInBounds=function(t){return!this.boundingRect||t>=this.boundingRect.top&&t<this.boundingRect.bottom},t}();e.default=o},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(4),o=n(7),s=n(21),a=function(){function t(t){this.isInteracting=!1,this.isDistanceSurpassed=!1,this.isDelayEnded=!1,this.isDragging=!1,this.isTouch=!1,this.isGeneric=!1,this.shouldCancelTouchScroll=!0,this.scrollAlwaysKills=!1,this.isAutoScroll=!1,this.scrollSensitivity=30,this.scrollSpeed=200,this.scrollIntervalMs=50,this.options=t||{}}return t.prototype.startInteraction=function(t,e){if(void 0===e&&(e={}),"mousedown"===t.type){if(s.default.get().shouldIgnoreMouse())return;if(!r.isPrimaryMouseButton(t))return;t.preventDefault()}this.isInteracting||(this.delay=r.firstDefined(e.delay,this.options.delay,0),this.minDistance=r.firstDefined(e.distance,this.options.distance,0),this.subjectEl=this.options.subjectEl,r.preventSelection(i("body")),this.isInteracting=!0,this.isTouch=r.getEvIsTouch(t),this.isGeneric="dragstart"===t.type,this.isDelayEnded=!1,this.isDistanceSurpassed=!1,this.originX=r.getEvX(t),this.originY=r.getEvY(t),this.scrollEl=r.getScrollParent(i(t.target)),this.bindHandlers(),this.initAutoScroll(),this.handleInteractionStart(t),this.startDelay(t),this.minDistance||this.handleDistanceSurpassed(t))},t.prototype.handleInteractionStart=function(t){this.trigger("interactionStart",t)},t.prototype.endInteraction=function(t,e){this.isInteracting&&(this.endDrag(t),this.delayTimeoutId&&(clearTimeout(this.delayTimeoutId),this.delayTimeoutId=null),this.destroyAutoScroll(),this.unbindHandlers(),this.isInteracting=!1,this.handleInteractionEnd(t,e),r.allowSelection(i("body")))},t.prototype.handleInteractionEnd=function(t,e){this.trigger("interactionEnd",t,e||!1)},t.prototype.bindHandlers=function(){var t=s.default.get();this.isGeneric?this.listenTo(i(document),{drag:this.handleMove,dragstop:this.endInteraction}):this.isTouch?this.listenTo(t,{touchmove:this.handleTouchMove,touchend:this.endInteraction,scroll:this.handleTouchScroll}):this.listenTo(t,{mousemove:this.handleMouseMove,mouseup:this.endInteraction}),this.listenTo(t,{selectstart:r.preventDefault,contextmenu:r.preventDefault})},t.prototype.unbindHandlers=function(){this.stopListeningTo(s.default.get()),this.stopListeningTo(i(document))},t.prototype.startDrag=function(t,e){this.startInteraction(t,e),this.isDragging||(this.isDragging=!0,this.handleDragStart(t))},t.prototype.handleDragStart=function(t){this.trigger("dragStart",t)},t.prototype.handleMove=function(t){var e=r.getEvX(t)-this.originX,n=r.getEvY(t)-this.originY,i=this.minDistance;this.isDistanceSurpassed||e*e+n*n>=i*i&&this.handleDistanceSurpassed(t),this.isDragging&&this.handleDrag(e,n,t)},t.prototype.handleDrag=function(t,e,n){this.trigger("drag",t,e,n),this.updateAutoScroll(n)},t.prototype.endDrag=function(t){this.isDragging&&(this.isDragging=!1,this.handleDragEnd(t))},t.prototype.handleDragEnd=function(t){this.trigger("dragEnd",t)},t.prototype.startDelay=function(t){var e=this;this.delay?this.delayTimeoutId=setTimeout(function(){e.handleDelayEnd(t)},this.delay):this.handleDelayEnd(t)},t.prototype.handleDelayEnd=function(t){this.isDelayEnded=!0,this.isDistanceSurpassed&&this.startDrag(t)},t.prototype.handleDistanceSurpassed=function(t){this.isDistanceSurpassed=!0,this.isDelayEnded&&this.startDrag(t)},t.prototype.handleTouchMove=function(t){this.isDragging&&this.shouldCancelTouchScroll&&t.preventDefault(),this.handleMove(t)},t.prototype.handleMouseMove=function(t){this.handleMove(t)},t.prototype.handleTouchScroll=function(t){this.isDragging&&!this.scrollAlwaysKills||this.endInteraction(t,!0)},t.prototype.trigger=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];this.options[t]&&this.options[t].apply(this,e),this["_"+t]&&this["_"+t].apply(this,e)},t.prototype.initAutoScroll=function(){var t=this.scrollEl;this.isAutoScroll=this.options.scroll&&t&&!t.is(window)&&!t.is(document),this.isAutoScroll&&this.listenTo(t,"scroll",r.debounce(this.handleDebouncedScroll,100))},t.prototype.destroyAutoScroll=function(){this.endAutoScroll(),this.isAutoScroll&&this.stopListeningTo(this.scrollEl,"scroll")},t.prototype.computeScrollBounds=function(){this.isAutoScroll&&(this.scrollBounds=r.getOuterRect(this.scrollEl))},t.prototype.updateAutoScroll=function(t){var e,n,i,o,s=this.scrollSensitivity,a=this.scrollBounds,l=0,u=0;a&&(e=(s-(r.getEvY(t)-a.top))/s,n=(s-(a.bottom-r.getEvY(t)))/s,i=(s-(r.getEvX(t)-a.left))/s,o=(s-(a.right-r.getEvX(t)))/s,e>=0&&e<=1?l=e*this.scrollSpeed*-1:n>=0&&n<=1&&(l=n*this.scrollSpeed),i>=0&&i<=1?u=i*this.scrollSpeed*-1:o>=0&&o<=1&&(u=o*this.scrollSpeed)),this.setScrollVel(l,u)},t.prototype.setScrollVel=function(t,e){this.scrollTopVel=t,this.scrollLeftVel=e,this.constrainScrollVel(),!this.scrollTopVel&&!this.scrollLeftVel||this.scrollIntervalId||(this.scrollIntervalId=setInterval(r.proxy(this,"scrollIntervalFunc"),this.scrollIntervalMs))},t.prototype.constrainScrollVel=function(){var t=this.scrollEl;this.scrollTopVel<0?t.scrollTop()<=0&&(this.scrollTopVel=0):this.scrollTopVel>0&&t.scrollTop()+t[0].clientHeight>=t[0].scrollHeight&&(this.scrollTopVel=0),this.scrollLeftVel<0?t.scrollLeft()<=0&&(this.scrollLeftVel=0):this.scrollLeftVel>0&&t.scrollLeft()+t[0].clientWidth>=t[0].scrollWidth&&(this.scrollLeftVel=0)},t.prototype.scrollIntervalFunc=function(){var t=this.scrollEl,e=this.scrollIntervalMs/1e3;this.scrollTopVel&&t.scrollTop(t.scrollTop()+this.scrollTopVel*e),this.scrollLeftVel&&t.scrollLeft(t.scrollLeft()+this.scrollLeftVel*e),this.constrainScrollVel(),this.scrollTopVel||this.scrollLeftVel||this.endAutoScroll()},t.prototype.endAutoScroll=function(){this.scrollIntervalId&&(clearInterval(this.scrollIntervalId),this.scrollIntervalId=null,this.handleScrollEnd())},t.prototype.handleDebouncedScroll=function(){this.scrollIntervalId||this.handleScrollEnd()},t.prototype.handleScrollEnd=function(){},t}();e.default=a,o.default.mixInto(a)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(4),o=n(14),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.updateDayTable=function(){for(var t,e,n,i=this,r=i.view,o=r.calendar,s=o.msToUtcMoment(i.dateProfile.renderUnzonedRange.startMs,!0),a=o.msToUtcMoment(i.dateProfile.renderUnzonedRange.endMs,!0),l=-1,u=[],d=[];s.isBefore(a);)r.isHiddenDay(s)?u.push(l+.5):(l++,u.push(l),d.push(s.clone())),s.add(1,"days");if(this.breakOnWeeks){for(e=d[0].day(),t=1;t<d.length&&d[t].day()!==e;t++);n=Math.ceil(d.length/t)}else n=1,t=d.length;this.dayDates=d,this.dayIndices=u,this.daysPerRow=t,this.rowCnt=n,this.updateDayTableCols()},e.prototype.updateDayTableCols=function(){this.colCnt=this.computeColCnt(),this.colHeadFormat=this.opt("columnHeaderFormat")||this.opt("columnFormat")||this.computeColHeadFormat()},e.prototype.computeColCnt=function(){return this.daysPerRow},e.prototype.getCellDate=function(t,e){return this.dayDates[this.getCellDayIndex(t,e)].clone()},e.prototype.getCellRange=function(t,e){var n=this.getCellDate(t,e);return{start:n,end:n.clone().add(1,"days")}},e.prototype.getCellDayIndex=function(t,e){return t*this.daysPerRow+this.getColDayIndex(e)},e.prototype.getColDayIndex=function(t){return this.isRTL?this.colCnt-1-t:t},e.prototype.getDateDayIndex=function(t){var e=this.dayIndices,n=t.diff(this.dayDates[0],"days");return n<0?e[0]-1:n>=e.length?e[e.length-1]+1:e[n]},e.prototype.computeColHeadFormat=function(){return this.rowCnt>1||this.colCnt>10?"ddd":this.colCnt>1?this.opt("dayOfMonthFormat"):"dddd"},e.prototype.sliceRangeByRow=function(t){var e,n,i,r,o,s=this.daysPerRow,a=this.view.computeDayRange(t),l=this.getDateDayIndex(a.start),u=this.getDateDayIndex(a.end.clone().subtract(1,"days")),d=[];for(e=0;e<this.rowCnt;e++)n=e*s,i=n+s-1,r=Math.max(l,n),o=Math.min(u,i),r=Math.ceil(r),o=Math.floor(o),r<=o&&d.push({row:e,firstRowDayIndex:r-n,lastRowDayIndex:o-n,isStart:r===l,isEnd:o===u});return d},e.prototype.sliceRangeByDay=function(t){var e,n,i,r,o,s,a=this.daysPerRow,l=this.view.computeDayRange(t),u=this.getDateDayIndex(l.start),d=this.getDateDayIndex(l.end.clone().subtract(1,"days")),c=[];for(e=0;e<this.rowCnt;e++)for(n=e*a,i=n+a-1,r=n;r<=i;r++)o=Math.max(u,r),s=Math.min(d,r),o=Math.ceil(o),s=Math.floor(s),o<=s&&c.push({row:e,firstRowDayIndex:o-n,lastRowDayIndex:s-n,isStart:o===u,isEnd:s===d});return c},e.prototype.renderHeadHtml=function(){var t=this.view.calendar.theme;return'<div class="fc-row '+t.getClass("headerRow")+'"><table class="'+t.getClass("tableGrid")+'"><thead>'+this.renderHeadTrHtml()+"</thead></table></div>"},e.prototype.renderHeadIntroHtml=function(){return this.renderIntroHtml()},e.prototype.renderHeadTrHtml=function(){return"<tr>"+(this.isRTL?"":this.renderHeadIntroHtml())+this.renderHeadDateCellsHtml()+(this.isRTL?this.renderHeadIntroHtml():"")+"</tr>"},e.prototype.renderHeadDateCellsHtml=function(){var t,e,n=[];for(t=0;t<this.colCnt;t++)e=this.getCellDate(0,t),n.push(this.renderHeadDateCellHtml(e));return n.join("")},e.prototype.renderHeadDateCellHtml=function(t,e,n){var i,o=this,s=o.view,a=o.dateProfile.activeUnzonedRange.containsDate(t),l=["fc-day-header",s.calendar.theme.getClass("widgetHeader")];return i="function"==typeof o.opt("columnHeaderHtml")?o.opt("columnHeaderHtml")(t):"function"==typeof o.opt("columnHeaderText")?r.htmlEscape(o.opt("columnHeaderText")(t)):r.htmlEscape(t.format(o.colHeadFormat)),1===o.rowCnt?l=l.concat(o.getDayClasses(t,!0)):l.push("fc-"+r.dayIDs[t.day()]),'<th class="'+l.join(" ")+'"'+(1===(a&&o.rowCnt)?' data-date="'+t.format("YYYY-MM-DD")+'"':"")+(e>1?' colspan="'+e+'"':"")+(n?" "+n:"")+">"+(a?s.buildGotoAnchorHtml({date:t,forceOff:o.rowCnt>1||1===o.colCnt},i):i)+"</th>"},e.prototype.renderBgTrHtml=function(t){return"<tr>"+(this.isRTL?"":this.renderBgIntroHtml(t))+this.renderBgCellsHtml(t)+(this.isRTL?this.renderBgIntroHtml(t):"")+"</tr>"},e.prototype.renderBgIntroHtml=function(t){return this.renderIntroHtml()},e.prototype.renderBgCellsHtml=function(t){var e,n,i=[];for(e=0;e<this.colCnt;e++)n=this.getCellDate(t,e),i.push(this.renderBgCellHtml(n));return i.join("")},e.prototype.renderBgCellHtml=function(t,e){var n=this,i=n.view,r=n.dateProfile.activeUnzonedRange.containsDate(t),o=n.getDayClasses(t);return o.unshift("fc-day",i.calendar.theme.getClass("widgetContent")),'<td class="'+o.join(" ")+'"'+(r?' data-date="'+t.format("YYYY-MM-DD")+'"':"")+(e?" "+e:"")+"></td>"},e.prototype.renderIntroHtml=function(){},e.prototype.bookendCells=function(t){var e=this.renderIntroHtml();e&&(this.isRTL?t.append(e):t.prepend(e))},e}(o.default);e.default=s},function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){this.component=t,this.fillRenderer=e}return t.prototype.render=function(t){var e=this.component,n=e._getDateProfile().activeUnzonedRange,i=t.buildEventInstanceGroup(e.hasAllDayBusinessHours,n),r=i?e.eventRangesToEventFootprints(i.sliceRenderRanges(n)):[];this.renderEventFootprints(r)},t.prototype.renderEventFootprints=function(t){var e=this.component.eventFootprintsToSegs(t);this.renderSegs(e),this.segs=e},t.prototype.renderSegs=function(t){this.fillRenderer&&this.fillRenderer.renderSegs("businessHours",t,{getClasses:function(t){return["fc-nonbusiness","fc-bgevent"]}})},t.prototype.unrender=function(){this.fillRenderer&&this.fillRenderer.unrender("businessHours"),this.segs=null},t.prototype.getSegs=function(){return this.segs||[]},t}();e.default=n},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(4),o=function(){function t(t){this.fillSegTag="div",this.component=t,this.elsByFill={}}return t.prototype.renderFootprint=function(t,e,n){this.renderSegs(t,this.component.componentFootprintToSegs(e),n)},t.prototype.renderSegs=function(t,e,n){var i;return e=this.buildSegEls(t,e,n),i=this.attachSegEls(t,e),i&&this.reportEls(t,i),e},t.prototype.unrender=function(t){var e=this.elsByFill[t];e&&(e.remove(),delete this.elsByFill[t])},t.prototype.buildSegEls=function(t,e,n){var r,o=this,s="",a=[];if(e.length){for(r=0;r<e.length;r++)s+=this.buildSegHtml(t,e[r],n);i(s).each(function(t,r){var s=e[t],l=i(r);n.filterEl&&(l=n.filterEl(s,l)),l&&(l=i(l),l.is(o.fillSegTag)&&(s.el=l,a.push(s)))})}return a},t.prototype.buildSegHtml=function(t,e,n){var i=n.getClasses?n.getClasses(e):[],o=r.cssToStr(n.getCss?n.getCss(e):{});return"<"+this.fillSegTag+(i.length?' class="'+i.join(" ")+'"':"")+(o?' style="'+o+'"':"")+" />"},t.prototype.attachSegEls=function(t,e){},t.prototype.reportEls=function(t,e){this.elsByFill[t]?this.elsByFill[t]=this.elsByFill[t].add(e):this.elsByFill[t]=i(e)},t}();e.default=o},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(13),r=n(36),o=n(6),s=function(){function t(t,e){this.view=t._getView(),this.component=t,this.eventRenderer=e}return t.prototype.renderComponentFootprint=function(t){this.renderEventFootprints([this.fabricateEventFootprint(t)])},t.prototype.renderEventDraggingFootprints=function(t,e,n){this.renderEventFootprints(t,e,"fc-dragging",n?null:this.view.opt("dragOpacity"))},t.prototype.renderEventResizingFootprints=function(t,e,n){this.renderEventFootprints(t,e,"fc-resizing")},t.prototype.renderEventFootprints=function(t,e,n,i){var r,o=this.component.eventFootprintsToSegs(t),s="fc-helper "+(n||"");for(o=this.eventRenderer.renderFgSegEls(o),r=0;r<o.length;r++)o[r].el.addClass(s);if(null!=i)for(r=0;r<o.length;r++)o[r].el.css("opacity",i);this.helperEls=this.renderSegs(o,e)},t.prototype.renderSegs=function(t,e){},t.prototype.unrender=function(){this.helperEls&&(this.helperEls.remove(),this.helperEls=null)},t.prototype.fabricateEventFootprint=function(t){var e,n=this.view.calendar,s=n.footprintToDateProfile(t),a=new i.default(new o.default(n));return a.dateProfile=s,e=a.buildInstance(),new r.default(t,a,e)},t}();e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(21),o=n(15),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.bindToEl=function(t){var e=this.component;e.bindSegHandlerToEl(t,"click",this.handleClick.bind(this)),e.bindSegHandlerToEl(t,"mouseenter",this.handleMouseover.bind(this)),e.bindSegHandlerToEl(t,"mouseleave",this.handleMouseout.bind(this))},e.prototype.handleClick=function(t,e){!1===this.component.publiclyTrigger("eventClick",{context:t.el[0],args:[t.footprint.getEventLegacy(),e,this.view]})&&e.preventDefault()},e.prototype.handleMouseover=function(t,e){r.default.get().shouldIgnoreMouse()||this.mousedOverSeg||(this.mousedOverSeg=t,this.view.isEventDefResizable(t.footprint.eventDef)&&t.el.addClass("fc-allow-mouse-resize"),this.component.publiclyTrigger("eventMouseover",{context:t.el[0],args:[t.footprint.getEventLegacy(),e,this.view]}))},e.prototype.handleMouseout=function(t,e){this.mousedOverSeg&&(this.mousedOverSeg=null,this.view.isEventDefResizable(t.footprint.eventDef)&&t.el.removeClass("fc-allow-mouse-resize"),this.component.publiclyTrigger("eventMouseout",{context:t.el[0],args:[t.footprint.getEventLegacy(),e||{},this.view]}))},e.prototype.end=function(){this.mousedOverSeg&&this.handleMouseout(this.mousedOverSeg)},e}(o.default);e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(14),o=n(245),s=n(225),a=n(59),l=n(224),u=n(223),d=n(222),c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e}(r.default);e.default=c,c.prototype.dateClickingClass=o.default,c.prototype.dateSelectingClass=s.default,c.prototype.eventPointingClass=a.default,c.prototype.eventDraggingClass=l.default,c.prototype.eventResizingClass=u.default,c.prototype.externalDroppingClass=d.default},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(4),s=n(53),a=n(249),l=n(5),u=n(12),d=n(36),c=n(56),p=n(60),h=n(40),f=n(55),g=n(250),v=n(251),y=n(252),m=function(t){function e(e){var n=t.call(this,e)||this;return n.cellWeekNumbersVisible=!1,n.bottomCoordPadding=0,n.isRigid=!1,n.hasAllDayBusinessHours=!0,n}return i.__extends(e,t),e.prototype.componentFootprintToSegs=function(t){var e,n,i=this.sliceRangeByRow(t.unzonedRange);for(e=0;e<i.length;e++)n=i[e],this.isRTL?(n.leftCol=this.daysPerRow-1-n.lastRowDayIndex,n.rightCol=this.daysPerRow-1-n.firstRowDayIndex):(n.leftCol=n.firstRowDayIndex,n.rightCol=n.lastRowDayIndex);return i},e.prototype.renderDates=function(t){this.dateProfile=t,this.updateDayTable(),this.renderGrid()},e.prototype.unrenderDates=function(){this.removeSegPopover()},e.prototype.renderGrid=function(){var t,e,n=this.view,i=this.rowCnt,r=this.colCnt,o="";for(this.headContainerEl&&this.headContainerEl.html(this.renderHeadHtml()),t=0;t<i;t++)o+=this.renderDayRowHtml(t,this.isRigid);for(this.el.html(o),this.rowEls=this.el.find(".fc-row"),this.cellEls=this.el.find(".fc-day, .fc-disabled-day"),this.rowCoordCache=new s.default({els:this.rowEls,isVertical:!0}),this.colCoordCache=new s.default({els:this.cellEls.slice(0,this.colCnt),isHorizontal:!0}),t=0;t<i;t++)for(e=0;e<r;e++)this.publiclyTrigger("dayRender",{context:n,args:[this.getCellDate(t,e),this.getCellEl(t,e),n]})},e.prototype.renderDayRowHtml=function(t,e){var n=this.view.calendar.theme,i=["fc-row","fc-week",n.getClass("dayRow")];return e&&i.push("fc-rigid"),'<div class="'+i.join(" ")+'"><div class="fc-bg"><table class="'+n.getClass("tableGrid")+'">'+this.renderBgTrHtml(t)+'</table></div><div class="fc-content-skeleton"><table>'+(this.getIsNumbersVisible()?"<thead>"+this.renderNumberTrHtml(t)+"</thead>":"")+"</table></div></div>"},e.prototype.getIsNumbersVisible=function(){return this.getIsDayNumbersVisible()||this.cellWeekNumbersVisible},e.prototype.getIsDayNumbersVisible=function(){return this.rowCnt>1},e.prototype.renderNumberTrHtml=function(t){return"<tr>"+(this.isRTL?"":this.renderNumberIntroHtml(t))+this.renderNumberCellsHtml(t)+(this.isRTL?this.renderNumberIntroHtml(t):"")+"</tr>"},e.prototype.renderNumberIntroHtml=function(t){return this.renderIntroHtml()},e.prototype.renderNumberCellsHtml=function(t){var e,n,i=[];for(e=0;e<this.colCnt;e++)n=this.getCellDate(t,e),i.push(this.renderNumberCellHtml(n));return i.join("")},e.prototype.renderNumberCellHtml=function(t){var e,n,i=this.view,r="",o=this.dateProfile.activeUnzonedRange.containsDate(t),s=this.getIsDayNumbersVisible()&&o;return s||this.cellWeekNumbersVisible?(e=this.getDayClasses(t),e.unshift("fc-day-top"),this.cellWeekNumbersVisible&&(n="ISO"===t._locale._fullCalendar_weekCalc?1:t._locale.firstDayOfWeek()),r+='<td class="'+e.join(" ")+'"'+(o?' data-date="'+t.format()+'"':"")+">",this.cellWeekNumbersVisible&&t.day()===n&&(r+=i.buildGotoAnchorHtml({date:t,type:"week"},{class:"fc-week-number"},t.format("w"))),s&&(r+=i.buildGotoAnchorHtml(t,{class:"fc-day-number"},t.format("D"))),r+="</td>"):"<td/>"},e.prototype.prepareHits=function(){this.colCoordCache.build(),this.rowCoordCache.build(),this.rowCoordCache.bottoms[this.rowCnt-1]+=this.bottomCoordPadding},e.prototype.releaseHits=function(){this.colCoordCache.clear(),this.rowCoordCache.clear()},e.prototype.queryHit=function(t,e){if(this.colCoordCache.isLeftInBounds(t)&&this.rowCoordCache.isTopInBounds(e)){var n=this.colCoordCache.getHorizontalIndex(t),i=this.rowCoordCache.getVerticalIndex(e);if(null!=i&&null!=n)return this.getCellHit(i,n)}},e.prototype.getHitFootprint=function(t){var e=this.getCellRange(t.row,t.col);return new u.default(new l.default(e.start,e.end),!0)},e.prototype.getHitEl=function(t){return this.getCellEl(t.row,t.col)},e.prototype.getCellHit=function(t,e){return{row:t,col:e,component:this,left:this.colCoordCache.getLeftOffset(e),right:this.colCoordCache.getRightOffset(e),top:this.rowCoordCache.getTopOffset(t),bottom:this.rowCoordCache.getBottomOffset(t)}},e.prototype.getCellEl=function(t,e){return this.cellEls.eq(t*this.colCnt+e)},e.prototype.executeEventUnrender=function(){this.removeSegPopover(),t.prototype.executeEventUnrender.call(this)},e.prototype.getOwnEventSegs=function(){
return t.prototype.getOwnEventSegs.call(this).concat(this.popoverSegs||[])},e.prototype.renderDrag=function(t,e,n){var i;for(i=0;i<t.length;i++)this.renderHighlight(t[i].componentFootprint);if(t.length&&e&&e.component!==this)return this.helperRenderer.renderEventDraggingFootprints(t,e,n),!0},e.prototype.unrenderDrag=function(){this.unrenderHighlight(),this.helperRenderer.unrender()},e.prototype.renderEventResize=function(t,e,n){var i;for(i=0;i<t.length;i++)this.renderHighlight(t[i].componentFootprint);this.helperRenderer.renderEventResizingFootprints(t,e,n)},e.prototype.unrenderEventResize=function(){this.unrenderHighlight(),this.helperRenderer.unrender()},e.prototype.removeSegPopover=function(){this.segPopover&&this.segPopover.hide()},e.prototype.limitRows=function(t){var e,n,i=this.eventRenderer.rowStructs||[];for(e=0;e<i.length;e++)this.unlimitRow(e),!1!==(n=!!t&&("number"==typeof t?t:this.computeRowLevelLimit(e)))&&this.limitRow(e,n)},e.prototype.computeRowLevelLimit=function(t){function e(t,e){o=Math.max(o,r(e).outerHeight())}var n,i,o,s=this.rowEls.eq(t),a=s.height(),l=this.eventRenderer.rowStructs[t].tbodyEl.children();for(n=0;n<l.length;n++)if(i=l.eq(n).removeClass("fc-limited"),o=0,i.find("> td > :first-child").each(e),i.position().top+o>a)return n;return!1},e.prototype.limitRow=function(t,e){var n,i,o,s,a,l,u,d,c,p,h,f,g,v,y,m=this,b=this.eventRenderer.rowStructs[t],w=[],D=0,E=function(n){for(;D<n;)l=m.getCellSegs(t,D,e),l.length&&(c=i[e-1][D],y=m.renderMoreLink(t,D,l),v=r("<div/>").append(y),c.append(v),w.push(v[0])),D++};if(e&&e<b.segLevels.length){for(n=b.segLevels[e-1],i=b.cellMatrix,o=b.tbodyEl.children().slice(e).addClass("fc-limited").get(),s=0;s<n.length;s++){for(a=n[s],E(a.leftCol),d=[],u=0;D<=a.rightCol;)l=this.getCellSegs(t,D,e),d.push(l),u+=l.length,D++;if(u){for(c=i[e-1][a.leftCol],p=c.attr("rowspan")||1,h=[],f=0;f<d.length;f++)g=r('<td class="fc-more-cell"/>').attr("rowspan",p),l=d[f],y=this.renderMoreLink(t,a.leftCol+f,[a].concat(l)),v=r("<div/>").append(y),g.append(v),h.push(g[0]),w.push(g[0]);c.addClass("fc-limited").after(r(h)),o.push(c[0])}}E(this.colCnt),b.moreEls=r(w),b.limitedEls=r(o)}},e.prototype.unlimitRow=function(t){var e=this.eventRenderer.rowStructs[t];e.moreEls&&(e.moreEls.remove(),e.moreEls=null),e.limitedEls&&(e.limitedEls.removeClass("fc-limited"),e.limitedEls=null)},e.prototype.renderMoreLink=function(t,e,n){var i=this,o=this.view;return r('<a class="fc-more"/>').text(this.getMoreLinkText(n.length)).on("click",function(s){var a=i.opt("eventLimitClick"),l=i.getCellDate(t,e),u=r(s.currentTarget),d=i.getCellEl(t,e),c=i.getCellSegs(t,e),p=i.resliceDaySegs(c,l),h=i.resliceDaySegs(n,l);"function"==typeof a&&(a=i.publiclyTrigger("eventLimitClick",{context:o,args:[{date:l.clone(),dayEl:d,moreEl:u,segs:p,hiddenSegs:h},s,o]})),"popover"===a?i.showSegPopover(t,e,u,p):"string"==typeof a&&o.calendar.zoomTo(l,a)})},e.prototype.showSegPopover=function(t,e,n,i){var r,o,s=this,l=this.view,u=n.parent();r=1===this.rowCnt?l.el:this.rowEls.eq(t),o={className:"fc-more-popover "+l.calendar.theme.getClass("popover"),content:this.renderSegPopoverContent(t,e,i),parentEl:l.el,top:r.offset().top,autoHide:!0,viewportConstrain:this.opt("popoverViewportConstrain"),hide:function(){s.popoverSegs&&s.triggerBeforeEventSegsDestroyed(s.popoverSegs),s.segPopover.removeElement(),s.segPopover=null,s.popoverSegs=null}},this.isRTL?o.right=u.offset().left+u.outerWidth()+1:o.left=u.offset().left-1,this.segPopover=new a.default(o),this.segPopover.show(),this.bindAllSegHandlersToEl(this.segPopover.el),this.triggerAfterEventSegsRendered(i)},e.prototype.renderSegPopoverContent=function(t,e,n){var i,s=this.view,a=s.calendar.theme,l=this.getCellDate(t,e).format(this.opt("dayPopoverFormat")),u=r('<div class="fc-header '+a.getClass("popoverHeader")+'"><span class="fc-close '+a.getIconClass("close")+'"></span><span class="fc-title">'+o.htmlEscape(l)+'</span><div class="fc-clear"/></div><div class="fc-body '+a.getClass("popoverContent")+'"><div class="fc-event-container"></div></div>'),d=u.find(".fc-event-container");for(n=this.eventRenderer.renderFgSegEls(n,!0),this.popoverSegs=n,i=0;i<n.length;i++)this.hitsNeeded(),n[i].hit=this.getCellHit(t,e),this.hitsNotNeeded(),d.append(n[i].el);return u},e.prototype.resliceDaySegs=function(t,e){var n,i,o,s=e.clone(),a=s.clone().add(1,"days"),c=new l.default(s,a),p=[];for(n=0;n<t.length;n++)i=t[n],(o=i.footprint.componentFootprint.unzonedRange.intersect(c))&&p.push(r.extend({},i,{footprint:new d.default(new u.default(o,i.footprint.componentFootprint.isAllDay),i.footprint.eventDef,i.footprint.eventInstance),isStart:i.isStart&&o.isStart,isEnd:i.isEnd&&o.isEnd}));return this.eventRenderer.sortEventSegs(p),p},e.prototype.getMoreLinkText=function(t){var e=this.opt("eventLimitText");return"function"==typeof e?e(t):"+"+t+" "+e},e.prototype.getCellSegs=function(t,e,n){for(var i,r=this.eventRenderer.rowStructs[t].segMatrix,o=n||0,s=[];o<r.length;)i=r[o][e],i&&s.push(i),o++;return s},e}(h.default);e.default=m,m.prototype.eventRendererClass=g.default,m.prototype.businessHourRendererClass=c.default,m.prototype.helperRendererClass=v.default,m.prototype.fillRendererClass=y.default,p.default.mixInto(m),f.default.mixInto(m)},function(t,e,n){function i(t){return function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.colWeekNumbersVisible=!1,e}return r.__extends(e,t),e.prototype.renderHeadIntroHtml=function(){var t=this.view;return this.colWeekNumbersVisible?'<th class="fc-week-number '+t.calendar.theme.getClass("widgetHeader")+'" '+t.weekNumberStyleAttr()+"><span>"+s.htmlEscape(this.opt("weekNumberTitle"))+"</span></th>":""},e.prototype.renderNumberIntroHtml=function(t){var e=this.view,n=this.getCellDate(t,0);return this.colWeekNumbersVisible?'<td class="fc-week-number" '+e.weekNumberStyleAttr()+">"+e.buildGotoAnchorHtml({date:n,type:"week",forceOff:1===this.colCnt},n.format("w"))+"</td>":""},e.prototype.renderBgIntroHtml=function(){var t=this.view;return this.colWeekNumbersVisible?'<td class="fc-week-number '+t.calendar.theme.getClass("widgetContent")+'" '+t.weekNumberStyleAttr()+"></td>":""},e.prototype.renderIntroHtml=function(){var t=this.view;return this.colWeekNumbersVisible?'<td class="fc-week-number" '+t.weekNumberStyleAttr()+"></td>":""},e.prototype.getIsNumbersVisible=function(){return d.default.prototype.getIsNumbersVisible.apply(this,arguments)||this.colWeekNumbersVisible},e}(t)}Object.defineProperty(e,"__esModule",{value:!0});var r=n(2),o=n(3),s=n(4),a=n(39),l=n(41),u=n(228),d=n(61),c=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.dayGrid=i.instantiateDayGrid(),i.dayGrid.isRigid=i.hasRigidRows(),i.opt("weekNumbers")&&(i.opt("weekNumbersWithinDays")?(i.dayGrid.cellWeekNumbersVisible=!0,i.dayGrid.colWeekNumbersVisible=!1):(i.dayGrid.cellWeekNumbersVisible=!1,i.dayGrid.colWeekNumbersVisible=!0)),i.addChild(i.dayGrid),i.scroller=new a.default({overflowX:"hidden",overflowY:"auto"}),i}return r.__extends(e,t),e.prototype.instantiateDayGrid=function(){return new(i(this.dayGridClass))(this)},e.prototype.executeDateRender=function(e){this.dayGrid.breakOnWeeks=/year|month|week/.test(e.currentRangeUnit),t.prototype.executeDateRender.call(this,e)},e.prototype.renderSkeleton=function(){var t,e;this.el.addClass("fc-basic-view").html(this.renderSkeletonHtml()),this.scroller.render(),t=this.scroller.el.addClass("fc-day-grid-container"),e=o('<div class="fc-day-grid" />').appendTo(t),this.el.find(".fc-body > tr > td").append(t),this.dayGrid.headContainerEl=this.el.find(".fc-head-container"),this.dayGrid.setElement(e)},e.prototype.unrenderSkeleton=function(){this.dayGrid.removeElement(),this.scroller.destroy()},e.prototype.renderSkeletonHtml=function(){var t=this.calendar.theme;return'<table class="'+t.getClass("tableGrid")+'">'+(this.opt("columnHeader")?'<thead class="fc-head"><tr><td class="fc-head-container '+t.getClass("widgetHeader")+'">&nbsp;</td></tr></thead>':"")+'<tbody class="fc-body"><tr><td class="'+t.getClass("widgetContent")+'"></td></tr></tbody></table>'},e.prototype.weekNumberStyleAttr=function(){return null!=this.weekNumberWidth?'style="width:'+this.weekNumberWidth+'px"':""},e.prototype.hasRigidRows=function(){var t=this.opt("eventLimit");return t&&"number"!=typeof t},e.prototype.updateSize=function(e,n,i){var r,o,a=this.opt("eventLimit"),l=this.dayGrid.headContainerEl.find(".fc-row");if(!this.dayGrid.rowEls)return void(n||(r=this.computeScrollerHeight(e),this.scroller.setHeight(r)));t.prototype.updateSize.call(this,e,n,i),this.dayGrid.colWeekNumbersVisible&&(this.weekNumberWidth=s.matchCellWidths(this.el.find(".fc-week-number"))),this.scroller.clear(),s.uncompensateScroll(l),this.dayGrid.removeSegPopover(),a&&"number"==typeof a&&this.dayGrid.limitRows(a),r=this.computeScrollerHeight(e),this.setGridHeight(r,n),a&&"number"!=typeof a&&this.dayGrid.limitRows(a),n||(this.scroller.setHeight(r),o=this.scroller.getScrollbarWidths(),(o.left||o.right)&&(s.compensateScroll(l,o),r=this.computeScrollerHeight(e),this.scroller.setHeight(r)),this.scroller.lockOverflow(o))},e.prototype.computeScrollerHeight=function(t){return t-s.subtractInnerElHeight(this.el,this.scroller.el)},e.prototype.setGridHeight=function(t,e){e?s.undistributeHeight(this.dayGrid.rowEls):s.distributeHeight(this.dayGrid.rowEls,t,!0)},e.prototype.computeInitialDateScroll=function(){return{top:0}},e.prototype.queryDateScroll=function(){return{top:this.scroller.getScrollTop()}},e.prototype.applyDateScroll=function(t){void 0!==t.top&&this.scroller.setScrollTop(t.top)},e}(l.default);e.default=c,c.prototype.dateProfileGeneratorClass=u.default,c.prototype.dayGridClass=d.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){function i(t,e,n){var i;for(i=0;i<t.length;i++)if(!e(t[i].eventInstance.toLegacy(),n?n.toLegacy():null))return!1;return!0}function r(t,e){var n,i,r,o,s=e.toLegacy();for(n=0;n<t.length;n++){if(i=t[n].eventInstance,r=i.def,!1===(o=r.getOverlap()))return!1;if("function"==typeof o&&!o(i.toLegacy(),s))return!1}return!0}Object.defineProperty(e,"__esModule",{value:!0});var o=n(5),s=n(12),a=n(49),l=n(6),u=n(35),d=function(){function t(t,e){this.eventManager=t,this._calendar=e}return t.prototype.opt=function(t){return this._calendar.opt(t)},t.prototype.isEventInstanceGroupAllowed=function(t){var e,n=t.getEventDef(),i=this.eventRangesToEventFootprints(t.getAllEventRanges()),r=this.getPeerEventInstances(n),o=r.map(u.eventInstanceToEventRange),s=this.eventRangesToEventFootprints(o),a=n.getConstraint(),l=n.getOverlap(),d=this.opt("eventAllow");for(e=0;e<i.length;e++)if(!this.isFootprintAllowed(i[e].componentFootprint,s,a,l,i[e].eventInstance))return!1;if(d)for(e=0;e<i.length;e++)if(!1===d(i[e].componentFootprint.toLegacy(this._calendar),i[e].getEventLegacy()))return!1;return!0},t.prototype.getPeerEventInstances=function(t){return this.eventManager.getEventInstancesWithoutId(t.id)},t.prototype.isSelectionFootprintAllowed=function(t){var e,n=this.eventManager.getEventInstances(),i=n.map(u.eventInstanceToEventRange),r=this.eventRangesToEventFootprints(i);return!!this.isFootprintAllowed(t,r,this.opt("selectConstraint"),this.opt("selectOverlap"))&&(!(e=this.opt("selectAllow"))||!1!==e(t.toLegacy(this._calendar)))},t.prototype.isFootprintAllowed=function(t,e,n,o,s){var a,l;if(null!=n&&(a=this.constraintValToFootprints(n,t.isAllDay),!this.isFootprintWithinConstraints(t,a)))return!1;if(l=this.collectOverlapEventFootprints(e,t),!1===o){if(l.length)return!1}else if("function"==typeof o&&!i(l,o,s))return!1;return!(s&&!r(l,s))},t.prototype.isFootprintWithinConstraints=function(t,e){var n;for(n=0;n<e.length;n++)if(this.footprintContainsFootprint(e[n],t))return!0;return!1},t.prototype.constraintValToFootprints=function(t,e){var n;return"businessHours"===t?this.buildCurrentBusinessFootprints(e):"object"==typeof t?(n=this.parseEventDefToInstances(t),n?this.eventInstancesToFootprints(n):this.parseFootprints(t)):null!=t?(n=this.eventManager.getEventInstancesWithId(t),this.eventInstancesToFootprints(n)):void 0},t.prototype.buildCurrentBusinessFootprints=function(t){var e=this._calendar.view,n=e.get("businessHourGenerator"),i=e.dateProfile.activeUnzonedRange,r=n.buildEventInstanceGroup(t,i);return r?this.eventInstancesToFootprints(r.eventInstances):[]},t.prototype.eventInstancesToFootprints=function(t){var e=t.map(u.eventInstanceToEventRange);return this.eventRangesToEventFootprints(e).map(u.eventFootprintToComponentFootprint)},t.prototype.collectOverlapEventFootprints=function(t,e){var n,i=[];for(n=0;n<t.length;n++)this.footprintsIntersect(e,t[n].componentFootprint)&&i.push(t[n]);return i},t.prototype.parseEventDefToInstances=function(t){var e=this.eventManager,n=a.default.parse(t,new l.default(this._calendar));return!!n&&n.buildInstances(e.currentPeriod.unzonedRange)},t.prototype.eventRangesToEventFootprints=function(t){var e,n=[];for(e=0;e<t.length;e++)n.push.apply(n,this.eventRangeToEventFootprints(t[e]));return n},t.prototype.eventRangeToEventFootprints=function(t){return[u.eventRangeToEventFootprint(t)]},t.prototype.parseFootprints=function(t){var e,n;return t.start&&(e=this._calendar.moment(t.start),e.isValid()||(e=null)),t.end&&(n=this._calendar.moment(t.end),n.isValid()||(n=null)),[new s.default(new o.default(e,n),e&&!e.hasTime()||n&&!n.hasTime())]},t.prototype.footprintContainsFootprint=function(t,e){return t.unzonedRange.containsRange(e.unzonedRange)},t.prototype.footprintsIntersect=function(t,e){return t.unzonedRange.intersectsWith(e.unzonedRange)},t}();e.default=d},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(4),o=n(14),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.defineStandardProps=function(t){var e=this.prototype;e.hasOwnProperty("standardPropMap")||(e.standardPropMap=Object.create(e.standardPropMap)),r.copyOwnProps(t,e.standardPropMap)},e.copyVerbatimStandardProps=function(t,e){var n,i=this.prototype.standardPropMap;for(n in i)null!=t[n]&&!0===i[n]&&(e[n]=t[n])},e.prototype.applyProps=function(t){var e,n=this.standardPropMap,i={},r={};for(e in t)!0===n[e]?this[e]=t[e]:!1===n[e]?i[e]=t[e]:r[e]=t[e];return this.applyMiscProps(r),this.applyManualStandardProps(i)},e.prototype.applyManualStandardProps=function(t){return!0},e.prototype.applyMiscProps=function(t){},e.prototype.isStandardProp=function(t){return t in this.standardPropMap},e}(o.default);e.default=s,s.prototype.standardPropMap={}},function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){this.def=t,this.dateProfile=e}return t.prototype.toLegacy=function(){var t=this.dateProfile,e=this.def.toLegacy();return e.start=t.start.clone(),e.end=t.end?t.end.clone():null,e},t}();e.default=n},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(0),s=n(34),a=n(209),l=n(17),u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.isAllDay=function(){return!this.startTime&&!this.endTime},e.prototype.buildInstances=function(t){for(var e,n,i,r=this.source.calendar,o=t.getStart(),s=t.getEnd(),u=[];o.isBefore(s);)this.dowHash&&!this.dowHash[o.day()]||(e=r.applyTimezone(o),n=e.clone(),i=null,this.startTime?n.time(this.startTime):n.stripTime(),this.endTime&&(i=e.clone().time(this.endTime)),u.push(new a.default(this,new l.default(n,i,r)))),o.add(1,"days");return u},e.prototype.setDow=function(t){this.dowHash||(this.dowHash={});for(var e=0;e<t.length;e++)this.dowHash[t[e]]=!0},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e.startTime&&(e.startTime=o.duration(this.startTime)),e.endTime&&(e.endTime=o.duration(this.endTime)),this.dowHash&&(e.dowHash=r.extend({},this.dowHash)),e},e}(s.default);e.default=u,u.prototype.applyProps=function(t){var e=s.default.prototype.applyProps.call(this,t);return t.start&&(this.startTime=o.duration(t.start)),t.end&&(this.endTime=o.duration(t.end)),t.dow&&this.setDow(t.dow),e},u.defineStandardProps({start:!1,end:!1,dow:!1})},function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e,n){this.unzonedRange=t,this.eventDef=e,n&&(this.eventInstance=n)}return t}();e.default=n},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(35),o=n(18),s=n(210),a=n(6),l={start:"09:00",end:"17:00",dow:[1,2,3,4,5],rendering:"inverse-background"},u=function(){function t(t,e){this.rawComplexDef=t,this.calendar=e}return t.prototype.buildEventInstanceGroup=function(t,e){var n,i=this.buildEventDefs(t);if(i.length)return n=new o.default(r.eventDefsToEventInstances(i,e)),n.explicitEventDef=i[0],n},t.prototype.buildEventDefs=function(t){var e,n=this.rawComplexDef,r=[],o=!1,s=[];for(!0===n?r=[{}]:i.isPlainObject(n)?r=[n]:i.isArray(n)&&(r=n,o=!0),e=0;e<r.length;e++)o&&!r[e].dow||s.push(this.buildEventDef(t,r[e]));return s},t.prototype.buildEventDef=function(t,e){var n=i.extend({},l,e);return t&&(n.start=null,n.end=null),s.default.parse(n,new a.default(this.calendar))},t}();e.default=u},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(19),o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e}(r.default);e.default=o,o.prototype.classes={widget:"fc-unthemed",widgetHeader:"fc-widget-header",widgetContent:"fc-widget-content",buttonGroup:"fc-button-group",button:"fc-button",cornerLeft:"fc-corner-left",cornerRight:"fc-corner-right",stateDefault:"fc-state-default",stateActive:"fc-state-active",stateDisabled:"fc-state-disabled",stateHover:"fc-state-hover",stateDown:"fc-state-down",popoverHeader:"fc-widget-header",popoverContent:"fc-widget-content",headerRow:"fc-widget-header",dayRow:"fc-widget-content",listView:"fc-widget-content"},o.prototype.baseIconClass="fc-icon",o.prototype.iconClasses={close:"fc-icon-x",prev:"fc-icon-left-single-arrow",next:"fc-icon-right-single-arrow",prevYear:"fc-icon-left-double-arrow",nextYear:"fc-icon-right-double-arrow"},o.prototype.iconOverrideOption="buttonIcons",o.prototype.iconOverrideCustomButtonOption="icon",o.prototype.iconOverridePrefix="fc-icon-"},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(19),o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e}(r.default);e.default=o,o.prototype.classes={widget:"ui-widget",widgetHeader:"ui-widget-header",widgetContent:"ui-widget-content",buttonGroup:"fc-button-group",button:"ui-button",cornerLeft:"ui-corner-left",cornerRight:"ui-corner-right",stateDefault:"ui-state-default",stateActive:"ui-state-active",stateDisabled:"ui-state-disabled",stateHover:"ui-state-hover",stateDown:"ui-state-down",today:"ui-state-highlight",popoverHeader:"ui-widget-header",popoverContent:"ui-widget-content",headerRow:"ui-widget-header",dayRow:"ui-widget-content",listView:"ui-widget-content"},o.prototype.baseIconClass="ui-icon",o.prototype.iconClasses={close:"ui-icon-closethick",prev:"ui-icon-circle-triangle-w",next:"ui-icon-circle-triangle-e",prevYear:"ui-icon-seek-prev",nextYear:"ui-icon-seek-next"},o.prototype.iconOverrideOption="themeButtonIcons",o.prototype.iconOverrideCustomButtonOption="themeIcon",o.prototype.iconOverridePrefix="ui-icon-"},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(20),s=n(6),a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.parse=function(t,e){var n;return r.isFunction(t.events)?n=t:r.isFunction(t)&&(n={events:t}),!!n&&s.default.parse.call(this,n,e)},e.prototype.fetch=function(t,e,n){var i=this;return this.calendar.pushLoading(),o.default.construct(function(r){i.func.call(i.calendar,t.clone(),e.clone(),n,function(t){i.calendar.popLoading(),r(i.parseEventDefs(t))})})},e.prototype.getPrimitive=function(){return this.func},e.prototype.applyManualStandardProps=function(e){var n=t.prototype.applyManualStandardProps.call(this,e);return this.func=e.events,n},e}(s.default);e.default=a,a.defineStandardProps({events:!1})},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(4),s=n(20),a=n(6),l=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.parse=function(t,e){var n;return"string"==typeof t.url?n=t:"string"==typeof t&&(n={url:t}),!!n&&a.default.parse.call(this,n,e)},e.prototype.fetch=function(t,n,i){var a=this,l=this.ajaxSettings,u=l.success,d=l.error,c=this.buildRequestParams(t,n,i);return this.calendar.pushLoading(),s.default.construct(function(t,n){r.ajax(r.extend({},e.AJAX_DEFAULTS,l,{url:a.url,data:c,success:function(e,i,s){var l;a.calendar.popLoading(),e?(l=o.applyAll(u,a,[e,i,s]),r.isArray(l)&&(e=l),t(a.parseEventDefs(e))):n()},error:function(t,e,i){a.calendar.popLoading(),o.applyAll(d,a,[t,e,i]),n()}}))})},e.prototype.buildRequestParams=function(t,e,n){var i,o,s,a,l=this.calendar,u=this.ajaxSettings,d={};return i=this.startParam,null==i&&(i=l.opt("startParam")),o=this.endParam,null==o&&(o=l.opt("endParam")),s=this.timezoneParam,null==s&&(s=l.opt("timezoneParam")),a=r.isFunction(u.data)?u.data():u.data||{},r.extend(d,a),d[i]=t.format(),d[o]=e.format(),n&&"local"!==n&&(d[s]=n),d},e.prototype.getPrimitive=function(){return this.url},e.prototype.applyMiscProps=function(t){this.ajaxSettings=t},e.AJAX_DEFAULTS={dataType:"json",cache:!1},e}(a.default);e.default=l,l.defineStandardProps({url:!0,startParam:!0,endParam:!0,timezoneParam:!0})},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(11),r=function(){function t(){this.q=[],this.isPaused=!1,this.isRunning=!1}return t.prototype.queue=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.q.push.apply(this.q,t),this.tryStart()},t.prototype.pause=function(){this.isPaused=!0},t.prototype.resume=function(){this.isPaused=!1,this.tryStart()},t.prototype.getIsIdle=function(){return!this.isRunning&&!this.isPaused},t.prototype.tryStart=function(){!this.isRunning&&this.canRunNext()&&(this.isRunning=!0,this.trigger("start"),this.runRemaining())},t.prototype.canRunNext=function(){return!this.isPaused&&this.q.length},t.prototype.runRemaining=function(){var t,e,n=this;do{if(t=this.q.shift(),(e=this.runTask(t))&&e.then)return void e.then(function(){n.canRunNext()&&n.runRemaining()})}while(this.canRunNext());this.trigger("stop"),this.isRunning=!1,this.tryStart()},t.prototype.runTask=function(t){return t()},t}();e.default=r,i.default.mixInto(r)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(217),o=function(t){function e(e){var n=t.call(this)||this;return n.waitsByNamespace=e||{},n}return i.__extends(e,t),e.prototype.queue=function(t,e,n){var i,r={func:t,namespace:e,type:n};e&&(i=this.waitsByNamespace[e]),this.waitNamespace&&(e===this.waitNamespace&&null!=i?this.delayWait(i):(this.clearWait(),this.tryStart())),this.compoundTask(r)&&(this.waitNamespace||null==i?this.tryStart():this.startWait(e,i))},e.prototype.startWait=function(t,e){this.waitNamespace=t,this.spawnWait(e)},e.prototype.delayWait=function(t){clearTimeout(this.waitId),this.spawnWait(t)},e.prototype.spawnWait=function(t){var e=this;this.waitId=setTimeout(function(){e.waitNamespace=null,e.tryStart()},t)},e.prototype.clearWait=function(){this.waitNamespace&&(clearTimeout(this.waitId),this.waitId=null,this.waitNamespace=null)},e.prototype.canRunNext=function(){if(!t.prototype.canRunNext.call(this))return!1;if(this.waitNamespace){for(var e=this.q,n=0;n<e.length;n++)if(e[n].namespace!==this.waitNamespace)return!0;return!1}return!0},e.prototype.runTask=function(t){t.func()},e.prototype.compoundTask=function(t){var e,n,i=this.q,r=!0;if(t.namespace&&"destroy"===t.type)for(e=i.length-1;e>=0;e--)switch(n=i[e],n.type){case"init":r=!1;case"add":case"remove":i.splice(e,1)}return r&&i.push(t),r},e}(r.default);e.default=o},function(t,e,n){function i(t){var e,n,i,r=[];for(e in t)for(n=t[e].eventInstances,i=0;i<n.length;i++)r.push(n[i].toLegacy());return r}Object.defineProperty(e,"__esModule",{value:!0});var r=n(2),o=n(3),s=n(0),a=n(4),l=n(10),u=n(47),d=n(237),c=n(35),p=function(t){function e(n,i){var r=t.call(this)||this;return r.isRTL=!1,r.hitsNeededDepth=0,r.hasAllDayBusinessHours=!1,r.isDatesRendered=!1,n&&(r.view=n),i&&(r.options=i),r.uid=String(e.guid++),r.childrenByUid={},r.nextDayThreshold=s.duration(r.opt("nextDayThreshold")),r.isRTL=r.opt("isRTL"),r.fillRendererClass&&(r.fillRenderer=new r.fillRendererClass(r)),r.eventRendererClass&&(r.eventRenderer=new r.eventRendererClass(r,r.fillRenderer)),r.helperRendererClass&&r.eventRenderer&&(r.helperRenderer=new r.helperRendererClass(r,r.eventRenderer)),r.businessHourRendererClass&&r.fillRenderer&&(r.businessHourRenderer=new r.businessHourRendererClass(r,r.fillRenderer)),r}return r.__extends(e,t),e.prototype.addChild=function(t){return!this.childrenByUid[t.uid]&&(this.childrenByUid[t.uid]=t,!0)},e.prototype.removeChild=function(t){return!!this.childrenByUid[t.uid]&&(delete this.childrenByUid[t.uid],!0)},e.prototype.updateSize=function(t,e,n){this.callChildren("updateSize",arguments)},e.prototype.opt=function(t){return this._getView().opt(t)},e.prototype.publiclyTrigger=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=this._getCalendar();return n.publiclyTrigger.apply(n,t)},e.prototype.hasPublicHandlers=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=this._getCalendar();return n.hasPublicHandlers.apply(n,t)},e.prototype.executeDateRender=function(t){this.dateProfile=t,this.renderDates(t),this.isDatesRendered=!0,this.callChildren("executeDateRender",arguments)},e.prototype.executeDateUnrender=function(){this.callChildren("executeDateUnrender",arguments),this.dateProfile=null,this.unrenderDates(),this.isDatesRendered=!1},e.prototype.renderDates=function(t){},e.prototype.unrenderDates=function(){},e.prototype.getNowIndicatorUnit=function(){},e.prototype.renderNowIndicator=function(t){this.callChildren("renderNowIndicator",arguments)},e.prototype.unrenderNowIndicator=function(){this.callChildren("unrenderNowIndicator",arguments)},e.prototype.renderBusinessHours=function(t){this.businessHourRenderer&&this.businessHourRenderer.render(t),this.callChildren("renderBusinessHours",arguments)},e.prototype.unrenderBusinessHours=function(){this.callChildren("unrenderBusinessHours",arguments),this.businessHourRenderer&&this.businessHourRenderer.unrender()},e.prototype.executeEventRender=function(t){this.eventRenderer?(this.eventRenderer.rangeUpdated(),this.eventRenderer.render(t)):this.renderEvents&&this.renderEvents(i(t)),this.callChildren("executeEventRender",arguments)},e.prototype.executeEventUnrender=function(){this.callChildren("executeEventUnrender",arguments),this.eventRenderer?this.eventRenderer.unrender():this.destroyEvents&&this.destroyEvents()},e.prototype.getBusinessHourSegs=function(){var t=this.getOwnBusinessHourSegs();return this.iterChildren(function(e){t.push.apply(t,e.getBusinessHourSegs())}),t},e.prototype.getOwnBusinessHourSegs=function(){return this.businessHourRenderer?this.businessHourRenderer.getSegs():[]},e.prototype.getEventSegs=function(){var t=this.getOwnEventSegs();return this.iterChildren(function(e){t.push.apply(t,e.getEventSegs())}),t},e.prototype.getOwnEventSegs=function(){return this.eventRenderer?this.eventRenderer.getSegs():[]},e.prototype.triggerAfterEventsRendered=function(){this.triggerAfterEventSegsRendered(this.getEventSegs()),this.publiclyTrigger("eventAfterAllRender",{context:this,args:[this]})},e.prototype.triggerAfterEventSegsRendered=function(t){var e=this;this.hasPublicHandlers("eventAfterRender")&&t.forEach(function(t){var n;t.el&&(n=t.footprint.getEventLegacy(),e.publiclyTrigger("eventAfterRender",{context:n,args:[n,t.el,e]}))})},e.prototype.triggerBeforeEventsDestroyed=function(){this.triggerBeforeEventSegsDestroyed(this.getEventSegs())},e.prototype.triggerBeforeEventSegsDestroyed=function(t){var e=this;this.hasPublicHandlers("eventDestroy")&&t.forEach(function(t){var n;t.el&&(n=t.footprint.getEventLegacy(),e.publiclyTrigger("eventDestroy",{context:n,args:[n,t.el,e]}))})},e.prototype.showEventsWithId=function(t){this.getEventSegs().forEach(function(e){e.footprint.eventDef.id===t&&e.el&&e.el.css("visibility","")}),this.callChildren("showEventsWithId",arguments)},e.prototype.hideEventsWithId=function(t){this.getEventSegs().forEach(function(e){e.footprint.eventDef.id===t&&e.el&&e.el.css("visibility","hidden")}),this.callChildren("hideEventsWithId",arguments)},e.prototype.renderDrag=function(t,e,n){var i=!1;return this.iterChildren(function(r){r.renderDrag(t,e,n)&&(i=!0)}),i},e.prototype.unrenderDrag=function(){this.callChildren("unrenderDrag",arguments)},e.prototype.renderEventResize=function(t,e,n){this.callChildren("renderEventResize",arguments)},e.prototype.unrenderEventResize=function(){this.callChildren("unrenderEventResize",arguments)},e.prototype.renderSelectionFootprint=function(t){this.renderHighlight(t),this.callChildren("renderSelectionFootprint",arguments)},e.prototype.unrenderSelection=function(){this.unrenderHighlight(),this.callChildren("unrenderSelection",arguments)},e.prototype.renderHighlight=function(t){this.fillRenderer&&this.fillRenderer.renderFootprint("highlight",t,{getClasses:function(){return["fc-highlight"]}}),this.callChildren("renderHighlight",arguments)},e.prototype.unrenderHighlight=function(){this.fillRenderer&&this.fillRenderer.unrender("highlight"),this.callChildren("unrenderHighlight",arguments)},e.prototype.hitsNeeded=function(){this.hitsNeededDepth++||this.prepareHits(),this.callChildren("hitsNeeded",arguments)},e.prototype.hitsNotNeeded=function(){this.hitsNeededDepth&&!--this.hitsNeededDepth&&this.releaseHits(),this.callChildren("hitsNotNeeded",arguments)},e.prototype.prepareHits=function(){},e.prototype.releaseHits=function(){},e.prototype.queryHit=function(t,e){var n,i,r=this.childrenByUid;for(n in r)if(i=r[n].queryHit(t,e))break;return i},e.prototype.getSafeHitFootprint=function(t){var e=this.getHitFootprint(t);return this.dateProfile.activeUnzonedRange.containsRange(e.unzonedRange)?e:null},e.prototype.getHitFootprint=function(t){},e.prototype.getHitEl=function(t){},e.prototype.eventRangesToEventFootprints=function(t){var e,n=[];for(e=0;e<t.length;e++)n.push.apply(n,this.eventRangeToEventFootprints(t[e]));return n},e.prototype.eventRangeToEventFootprints=function(t){return[c.eventRangeToEventFootprint(t)]},e.prototype.eventFootprintsToSegs=function(t){var e,n=[];for(e=0;e<t.length;e++)n.push.apply(n,this.eventFootprintToSegs(t[e]));return n},e.prototype.eventFootprintToSegs=function(t){var e,n,i,r=t.componentFootprint.unzonedRange;for(e=this.componentFootprintToSegs(t.componentFootprint),n=0;n<e.length;n++)i=e[n],r.isStart||(i.isStart=!1),r.isEnd||(i.isEnd=!1),i.footprint=t;return e},e.prototype.componentFootprintToSegs=function(t){return[]},e.prototype.callChildren=function(t,e){this.iterChildren(function(n){n[t].apply(n,e)})},e.prototype.iterChildren=function(t){var e,n=this.childrenByUid;for(e in n)t(n[e])},e.prototype._getCalendar=function(){var t=this;return t.calendar||t.view.calendar},e.prototype._getView=function(){return this.view},e.prototype._getDateProfile=function(){return this._getView().get("dateProfile")},e.prototype.buildGotoAnchorHtml=function(t,e,n){var i,r,s,u;return o.isPlainObject(t)?(i=t.date,r=t.type,s=t.forceOff):i=t,i=l.default(i),u={date:i.format("YYYY-MM-DD"),type:r||"day"},"string"==typeof e&&(n=e,e=null),e=e?" "+a.attrsToStr(e):"",n=n||"",!s&&this.opt("navLinks")?"<a"+e+' data-goto="'+a.htmlEscape(JSON.stringify(u))+'">'+n+"</a>":"<span"+e+">"+n+"</span>"},e.prototype.getAllDayHtml=function(){return this.opt("allDayHtml")||a.htmlEscape(this.opt("allDayText"))},e.prototype.getDayClasses=function(t,e){var n,i=this._getView(),r=[]
;return this.dateProfile.activeUnzonedRange.containsDate(t)?(r.push("fc-"+a.dayIDs[t.day()]),i.isDateInOtherMonth(t,this.dateProfile)&&r.push("fc-other-month"),n=i.calendar.getNow(),t.isSame(n,"day")?(r.push("fc-today"),!0!==e&&r.push(i.calendar.theme.getClass("today"))):t<n?r.push("fc-past"):r.push("fc-future")):r.push("fc-disabled-day"),r},e.prototype.formatRange=function(t,e,n,i){var r=t.end;return e&&(r=r.clone().subtract(1)),u.formatRange(t.start,r,n,i,this.isRTL)},e.prototype.currentRangeAs=function(t){return this._getDateProfile().currentUnzonedRange.as(t)},e.prototype.computeDayRange=function(t){var e=this._getCalendar(),n=e.msToUtcMoment(t.startMs,!0),i=e.msToUtcMoment(t.endMs),r=+i.time(),o=i.clone().stripTime();return r&&r>=this.nextDayThreshold&&o.add(1,"days"),o<=n&&(o=n.clone().add(1,"days")),{start:n,end:o}},e.prototype.isMultiDayRange=function(t){var e=this.computeDayRange(t);return e.end.diff(e.start,"days")>1},e.guid=0,e}(d.default);e.default=p},function(t,e,n){function i(t,e){return null==e?t:r.isFunction(e)?t.filter(e):(e+="",t.filter(function(t){return t.id==e||t._id===e}))}Object.defineProperty(e,"__esModule",{value:!0});var r=n(3),o=n(0),s=n(4),a=n(32),l=n(238),u=n(21),d=n(11),c=n(7),p=n(239),h=n(240),f=n(241),g=n(207),v=n(31),y=n(10),m=n(5),b=n(12),w=n(17),D=n(242),E=n(212),S=n(38),C=n(49),R=n(13),T=n(37),M=n(6),I=n(51),H=function(){function t(t,e){this.loadingLevel=0,this.ignoreUpdateViewSize=0,this.freezeContentHeightDepth=0,u.default.needed(),this.el=t,this.viewsByType={},this.optionsManager=new h.default(this,e),this.viewSpecManager=new f.default(this.optionsManager,this),this.initMomentInternals(),this.initCurrentDate(),this.initEventManager(),this.constraints=new g.default(this.eventManager,this),this.constructed()}return t.prototype.constructed=function(){},t.prototype.getView=function(){return this.view},t.prototype.publiclyTrigger=function(t,e){var n,i,o=this.opt(t);if(r.isPlainObject(e)?(n=e.context,i=e.args):r.isArray(e)&&(i=e),null==n&&(n=this.el[0]),i||(i=[]),this.triggerWith(t,n,i),o)return o.apply(n,i)},t.prototype.hasPublicHandlers=function(t){return this.hasHandlers(t)||this.opt(t)},t.prototype.option=function(t,e){var n;if("string"==typeof t){if(void 0===e)return this.optionsManager.get(t);n={},n[t]=e,this.optionsManager.add(n)}else"object"==typeof t&&this.optionsManager.add(t)},t.prototype.opt=function(t){return this.optionsManager.get(t)},t.prototype.instantiateView=function(t){var e=this.viewSpecManager.getViewSpec(t);if(!e)throw new Error('View type "'+t+'" is not valid');return new e.class(this,e)},t.prototype.isValidViewType=function(t){return Boolean(this.viewSpecManager.getViewSpec(t))},t.prototype.changeView=function(t,e){e&&(e.start&&e.end?this.optionsManager.recordOverrides({visibleRange:e}):this.currentDate=this.moment(e).stripZone()),this.renderView(t)},t.prototype.zoomTo=function(t,e){var n;e=e||"day",n=this.viewSpecManager.getViewSpec(e)||this.viewSpecManager.getUnitViewSpec(e),this.currentDate=t.clone(),this.renderView(n?n.type:null)},t.prototype.initCurrentDate=function(){var t=this.opt("defaultDate");this.currentDate=null!=t?this.moment(t).stripZone():this.getNow()},t.prototype.prev=function(){var t=this.view,e=t.dateProfileGenerator.buildPrev(t.get("dateProfile"));e.isValid&&(this.currentDate=e.date,this.renderView())},t.prototype.next=function(){var t=this.view,e=t.dateProfileGenerator.buildNext(t.get("dateProfile"));e.isValid&&(this.currentDate=e.date,this.renderView())},t.prototype.prevYear=function(){this.currentDate.add(-1,"years"),this.renderView()},t.prototype.nextYear=function(){this.currentDate.add(1,"years"),this.renderView()},t.prototype.today=function(){this.currentDate=this.getNow(),this.renderView()},t.prototype.gotoDate=function(t){this.currentDate=this.moment(t).stripZone(),this.renderView()},t.prototype.incrementDate=function(t){this.currentDate.add(o.duration(t)),this.renderView()},t.prototype.getDate=function(){return this.applyTimezone(this.currentDate)},t.prototype.pushLoading=function(){this.loadingLevel++||this.publiclyTrigger("loading",[!0,this.view])},t.prototype.popLoading=function(){--this.loadingLevel||this.publiclyTrigger("loading",[!1,this.view])},t.prototype.render=function(){this.contentEl?this.elementVisible()&&(this.calcSize(),this.updateViewSize()):this.initialRender()},t.prototype.initialRender=function(){var t=this,e=this.el;e.addClass("fc"),e.on("click.fc","a[data-goto]",function(e){var n=r(e.currentTarget),i=n.data("goto"),o=t.moment(i.date),a=i.type,l=t.view.opt("navLink"+s.capitaliseFirstLetter(a)+"Click");"function"==typeof l?l(o,e):("string"==typeof l&&(a=l),t.zoomTo(o,a))}),this.optionsManager.watch("settingTheme",["?theme","?themeSystem"],function(n){var i=I.getThemeSystemClass(n.themeSystem||n.theme),r=new i(t.optionsManager),o=r.getClass("widget");t.theme=r,o&&e.addClass(o)},function(){var n=t.theme.getClass("widget");t.theme=null,n&&e.removeClass(n)}),this.optionsManager.watch("settingBusinessHourGenerator",["?businessHours"],function(e){t.businessHourGenerator=new E.default(e.businessHours,t),t.view&&t.view.set("businessHourGenerator",t.businessHourGenerator)},function(){t.businessHourGenerator=null}),this.optionsManager.watch("applyingDirClasses",["?isRTL","?locale"],function(t){e.toggleClass("fc-ltr",!t.isRTL),e.toggleClass("fc-rtl",t.isRTL)}),this.contentEl=r("<div class='fc-view-container'/>").prependTo(e),this.initToolbars(),this.renderHeader(),this.renderFooter(),this.renderView(this.opt("defaultView")),this.opt("handleWindowResize")&&r(window).resize(this.windowResizeProxy=s.debounce(this.windowResize.bind(this),this.opt("windowResizeDelay")))},t.prototype.destroy=function(){this.view&&this.clearView(),this.toolbarsManager.proxyCall("removeElement"),this.contentEl.remove(),this.el.removeClass("fc fc-ltr fc-rtl"),this.optionsManager.unwatch("settingTheme"),this.optionsManager.unwatch("settingBusinessHourGenerator"),this.el.off(".fc"),this.windowResizeProxy&&(r(window).unbind("resize",this.windowResizeProxy),this.windowResizeProxy=null),u.default.unneeded()},t.prototype.elementVisible=function(){return this.el.is(":visible")},t.prototype.bindViewHandlers=function(t){var e=this;t.watch("titleForCalendar",["title"],function(n){t===e.view&&e.setToolbarsTitle(n.title)}),t.watch("dateProfileForCalendar",["dateProfile"],function(n){t===e.view&&(e.currentDate=n.dateProfile.date,e.updateToolbarButtons(n.dateProfile))})},t.prototype.unbindViewHandlers=function(t){t.unwatch("titleForCalendar"),t.unwatch("dateProfileForCalendar")},t.prototype.renderView=function(t){var e,n=this.view;this.freezeContentHeight(),n&&t&&n.type!==t&&this.clearView(),!this.view&&t&&(e=this.view=this.viewsByType[t]||(this.viewsByType[t]=this.instantiateView(t)),this.bindViewHandlers(e),e.startBatchRender(),e.setElement(r("<div class='fc-view fc-"+t+"-view' />").appendTo(this.contentEl)),this.toolbarsManager.proxyCall("activateButton",t)),this.view&&(this.view.get("businessHourGenerator")!==this.businessHourGenerator&&this.view.set("businessHourGenerator",this.businessHourGenerator),this.view.setDate(this.currentDate),e&&e.stopBatchRender()),this.thawContentHeight()},t.prototype.clearView=function(){var t=this.view;this.toolbarsManager.proxyCall("deactivateButton",t.type),this.unbindViewHandlers(t),t.removeElement(),t.unsetDate(),this.view=null},t.prototype.reinitView=function(){var t=this.view,e=t.queryScroll();this.freezeContentHeight(),this.clearView(),this.calcSize(),this.renderView(t.type),this.view.applyScroll(e),this.thawContentHeight()},t.prototype.getSuggestedViewHeight=function(){return null==this.suggestedViewHeight&&this.calcSize(),this.suggestedViewHeight},t.prototype.isHeightAuto=function(){return"auto"===this.opt("contentHeight")||"auto"===this.opt("height")},t.prototype.updateViewSize=function(t){void 0===t&&(t=!1);var e,n=this.view;if(!this.ignoreUpdateViewSize&&n)return t&&(this.calcSize(),e=n.queryScroll()),this.ignoreUpdateViewSize++,n.updateSize(this.getSuggestedViewHeight(),this.isHeightAuto(),t),this.ignoreUpdateViewSize--,t&&n.applyScroll(e),!0},t.prototype.calcSize=function(){this.elementVisible()&&this._calcSize()},t.prototype._calcSize=function(){var t=this.opt("contentHeight"),e=this.opt("height");this.suggestedViewHeight="number"==typeof t?t:"function"==typeof t?t():"number"==typeof e?e-this.queryToolbarsHeight():"function"==typeof e?e()-this.queryToolbarsHeight():"parent"===e?this.el.parent().height()-this.queryToolbarsHeight():Math.round(this.contentEl.width()/Math.max(this.opt("aspectRatio"),.5))},t.prototype.windowResize=function(t){t.target===window&&this.view&&this.view.isDatesRendered&&this.updateViewSize(!0)&&this.publiclyTrigger("windowResize",[this.view])},t.prototype.freezeContentHeight=function(){this.freezeContentHeightDepth++||this.forceFreezeContentHeight()},t.prototype.forceFreezeContentHeight=function(){this.contentEl.css({width:"100%",height:this.contentEl.height(),overflow:"hidden"})},t.prototype.thawContentHeight=function(){this.freezeContentHeightDepth--,this.contentEl.css({width:"",height:"",overflow:""}),this.freezeContentHeightDepth&&this.forceFreezeContentHeight()},t.prototype.initToolbars=function(){this.header=new p.default(this,this.computeHeaderOptions()),this.footer=new p.default(this,this.computeFooterOptions()),this.toolbarsManager=new l.default([this.header,this.footer])},t.prototype.computeHeaderOptions=function(){return{extraClasses:"fc-header-toolbar",layout:this.opt("header")}},t.prototype.computeFooterOptions=function(){return{extraClasses:"fc-footer-toolbar",layout:this.opt("footer")}},t.prototype.renderHeader=function(){var t=this.header;t.setToolbarOptions(this.computeHeaderOptions()),t.render(),t.el&&this.el.prepend(t.el)},t.prototype.renderFooter=function(){var t=this.footer;t.setToolbarOptions(this.computeFooterOptions()),t.render(),t.el&&this.el.append(t.el)},t.prototype.setToolbarsTitle=function(t){this.toolbarsManager.proxyCall("updateTitle",t)},t.prototype.updateToolbarButtons=function(t){var e=this.getNow(),n=this.view,i=n.dateProfileGenerator.build(e),r=n.dateProfileGenerator.buildPrev(n.get("dateProfile")),o=n.dateProfileGenerator.buildNext(n.get("dateProfile"));this.toolbarsManager.proxyCall(i.isValid&&!t.currentUnzonedRange.containsDate(e)?"enableButton":"disableButton","today"),this.toolbarsManager.proxyCall(r.isValid?"enableButton":"disableButton","prev"),this.toolbarsManager.proxyCall(o.isValid?"enableButton":"disableButton","next")},t.prototype.queryToolbarsHeight=function(){return this.toolbarsManager.items.reduce(function(t,e){return t+(e.el?e.el.outerHeight(!0):0)},0)},t.prototype.select=function(t,e){this.view.select(this.buildSelectFootprint.apply(this,arguments))},t.prototype.unselect=function(){this.view&&this.view.unselect()},t.prototype.buildSelectFootprint=function(t,e){var n,i=this.moment(t).stripZone();return n=e?this.moment(e).stripZone():i.hasTime()?i.clone().add(this.defaultTimedEventDuration):i.clone().add(this.defaultAllDayEventDuration),new b.default(new m.default(i,n),!i.hasTime())},t.prototype.initMomentInternals=function(){var t=this;this.defaultAllDayEventDuration=o.duration(this.opt("defaultAllDayEventDuration")),this.defaultTimedEventDuration=o.duration(this.opt("defaultTimedEventDuration")),this.optionsManager.watch("buildingMomentLocale",["?locale","?monthNames","?monthNamesShort","?dayNames","?dayNamesShort","?firstDay","?weekNumberCalculation"],function(e){var n,i=e.weekNumberCalculation,r=e.firstDay;"iso"===i&&(i="ISO");var o=Object.create(v.getMomentLocaleData(e.locale));e.monthNames&&(o._months=e.monthNames),e.monthNamesShort&&(o._monthsShort=e.monthNamesShort),e.dayNames&&(o._weekdays=e.dayNames),e.dayNamesShort&&(o._weekdaysShort=e.dayNamesShort),null==r&&"ISO"===i&&(r=1),null!=r&&(n=Object.create(o._week),n.dow=r,o._week=n),"ISO"!==i&&"local"!==i&&"function"!=typeof i||(o._fullCalendar_weekCalc=i),t.localeData=o,t.currentDate&&t.localizeMoment(t.currentDate)})},t.prototype.moment=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n;return"local"===this.opt("timezone")?(n=y.default.apply(null,t),n.hasTime()&&n.local()):n="UTC"===this.opt("timezone")?y.default.utc.apply(null,t):y.default.parseZone.apply(null,t),this.localizeMoment(n),n},t.prototype.msToMoment=function(t,e){var n=y.default.utc(t);return e?n.stripTime():n=this.applyTimezone(n),this.localizeMoment(n),n},t.prototype.msToUtcMoment=function(t,e){var n=y.default.utc(t);return e&&n.stripTime(),this.localizeMoment(n),n},t.prototype.localizeMoment=function(t){t._locale=this.localeData},t.prototype.getIsAmbigTimezone=function(){return"local"!==this.opt("timezone")&&"UTC"!==this.opt("timezone")},t.prototype.applyTimezone=function(t){if(!t.hasTime())return t.clone();var e,n=this.moment(t.toArray()),i=t.time().asMilliseconds()-n.time().asMilliseconds();return i&&(e=n.clone().add(i),t.time().asMilliseconds()-e.time().asMilliseconds()==0&&(n=e)),n},t.prototype.footprintToDateProfile=function(t,e){void 0===e&&(e=!1);var n,i=y.default.utc(t.unzonedRange.startMs);return e||(n=y.default.utc(t.unzonedRange.endMs)),t.isAllDay?(i.stripTime(),n&&n.stripTime()):(i=this.applyTimezone(i),n&&(n=this.applyTimezone(n))),new w.default(i,n,this)},t.prototype.getNow=function(){var t=this.opt("now");return"function"==typeof t&&(t=t()),this.moment(t).stripZone()},t.prototype.humanizeDuration=function(t){return t.locale(this.opt("locale")).humanize()},t.prototype.parseUnzonedRange=function(t){var e=null,n=null;return t.start&&(e=this.moment(t.start).stripZone()),t.end&&(n=this.moment(t.end).stripZone()),e||n?e&&n&&n.isBefore(e)?null:new m.default(e,n):null},t.prototype.initEventManager=function(){var t=this,e=new D.default(this),n=this.opt("eventSources")||[],i=this.opt("events");this.eventManager=e,i&&n.unshift(i),e.on("release",function(e){t.trigger("eventsReset",e)}),e.freeze(),n.forEach(function(n){var i=S.default.parse(n,t);i&&e.addSource(i)}),e.thaw()},t.prototype.requestEvents=function(t,e){return this.eventManager.requestEvents(t,e,this.opt("timezone"),!this.opt("lazyFetching"))},t.prototype.getEventEnd=function(t){return t.end?t.end.clone():this.getDefaultEventEnd(t.allDay,t.start)},t.prototype.getDefaultEventEnd=function(t,e){var n=e.clone();return t?n.stripTime().add(this.defaultAllDayEventDuration):n.add(this.defaultTimedEventDuration),this.getIsAmbigTimezone()&&n.stripZone(),n},t.prototype.rerenderEvents=function(){this.view.flash("displayingEvents")},t.prototype.refetchEvents=function(){this.eventManager.refetchAllSources()},t.prototype.renderEvents=function(t,e){this.eventManager.freeze();for(var n=0;n<t.length;n++)this.renderEvent(t[n],e);this.eventManager.thaw()},t.prototype.renderEvent=function(t,e){void 0===e&&(e=!1);var n=this.eventManager,i=C.default.parse(t,t.source||n.stickySource);i&&n.addEventDef(i,e)},t.prototype.removeEvents=function(t){var e,n,r=this.eventManager,o=[],s={};if(null==t)r.removeAllEventDefs();else{for(r.getEventInstances().forEach(function(t){o.push(t.toLegacy())}),o=i(o,t),n=0;n<o.length;n++)e=this.eventManager.getEventDefByUid(o[n]._id),s[e.id]=!0;r.freeze();for(n in s)r.removeEventDefsById(n);r.thaw()}},t.prototype.clientEvents=function(t){var e=[];return this.eventManager.getEventInstances().forEach(function(t){e.push(t.toLegacy())}),i(e,t)},t.prototype.updateEvents=function(t){this.eventManager.freeze();for(var e=0;e<t.length;e++)this.updateEvent(t[e]);this.eventManager.thaw()},t.prototype.updateEvent=function(t){var e,n,i=this.eventManager.getEventDefByUid(t._id);i instanceof R.default&&(e=i.buildInstance(),n=T.default.createFromRawProps(e,t,null),this.eventManager.mutateEventsWithId(i.id,n))},t.prototype.getEventSources=function(){return this.eventManager.otherSources.slice()},t.prototype.getEventSourceById=function(t){return this.eventManager.getSourceById(M.default.normalizeId(t))},t.prototype.addEventSource=function(t){var e=S.default.parse(t,this);e&&this.eventManager.addSource(e)},t.prototype.removeEventSources=function(t){var e,n,i=this.eventManager;if(null==t)this.eventManager.removeAllSources();else{for(e=i.multiQuerySources(t),i.freeze(),n=0;n<e.length;n++)i.removeSource(e[n]);i.thaw()}},t.prototype.removeEventSource=function(t){var e,n=this.eventManager,i=n.querySources(t);for(n.freeze(),e=0;e<i.length;e++)n.removeSource(i[e]);n.thaw()},t.prototype.refetchEventSources=function(t){var e,n=this.eventManager,i=n.multiQuerySources(t);for(n.freeze(),e=0;e<i.length;e++)n.refetchSource(i[e]);n.thaw()},t.defaults=a.globalDefaults,t.englishDefaults=a.englishDefaults,t.rtlDefaults=a.rtlDefaults,t}();e.default=H,d.default.mixInto(H),c.default.mixInto(H)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),r=n(4),o=n(5),s=function(){function t(t){this._view=t}return t.prototype.opt=function(t){return this._view.opt(t)},t.prototype.trimHiddenDays=function(t){return this._view.trimHiddenDays(t)},t.prototype.msToUtcMoment=function(t,e){return this._view.calendar.msToUtcMoment(t,e)},t.prototype.buildPrev=function(t){var e=t.date.clone().startOf(t.currentRangeUnit).subtract(t.dateIncrement);return this.build(e,-1)},t.prototype.buildNext=function(t){var e=t.date.clone().startOf(t.currentRangeUnit).add(t.dateIncrement);return this.build(e,1)},t.prototype.build=function(t,e,n){void 0===n&&(n=!1);var r,o,s,a,l,u,d=!t.hasTime(),c=null,p=null;return r=this.buildValidRange(),r=this.trimHiddenDays(r),n&&(t=this.msToUtcMoment(r.constrainDate(t),d)),o=this.buildCurrentRangeInfo(t,e),s=/^(year|month|week|day)$/.test(o.unit),a=this.buildRenderRange(this.trimHiddenDays(o.unzonedRange),o.unit,s),a=this.trimHiddenDays(a),l=a.clone(),this.opt("showNonCurrentDates")||(l=l.intersect(o.unzonedRange)),c=i.duration(this.opt("minTime")),p=i.duration(this.opt("maxTime")),l=this.adjustActiveRange(l,c,p),l=l.intersect(r),l&&(t=this.msToUtcMoment(l.constrainDate(t),d)),u=o.unzonedRange.intersectsWith(r),{validUnzonedRange:r,currentUnzonedRange:o.unzonedRange,currentRangeUnit:o.unit,isRangeAllDay:s,activeUnzonedRange:l,renderUnzonedRange:a,minTime:c,maxTime:p,isValid:u,date:t,dateIncrement:this.buildDateIncrement(o.duration)}},t.prototype.buildValidRange=function(){return this._view.getUnzonedRangeOption("validRange",this._view.calendar.getNow())||new o.default},t.prototype.buildCurrentRangeInfo=function(t,e){var n,i=this._view.viewSpec,o=null,s=null,a=null;return i.duration?(o=i.duration,s=i.durationUnit,a=this.buildRangeFromDuration(t,e,o,s)):(n=this.opt("dayCount"))?(s="day",a=this.buildRangeFromDayCount(t,e,n)):(a=this.buildCustomVisibleRange(t))?s=r.computeGreatestUnit(a.getStart(),a.getEnd()):(o=this.getFallbackDuration(),s=r.computeGreatestUnit(o),a=this.buildRangeFromDuration(t,e,o,s)),{duration:o,unit:s,unzonedRange:a}},t.prototype.getFallbackDuration=function(){return i.duration({days:1})},t.prototype.adjustActiveRange=function(t,e,n){var i=t.getStart(),r=t.getEnd();return this._view.usesMinMaxTime&&(e<0&&i.time(0).add(e),n>864e5&&r.time(n-864e5)),new o.default(i,r)},t.prototype.buildRangeFromDuration=function(t,e,n,s){function a(){d=t.clone().startOf(h),c=d.clone().add(n),p=new o.default(d,c)}var l,u,d,c,p,h=this.opt("dateAlignment");return h||(l=this.opt("dateIncrement"),l?(u=i.duration(l),h=u<n?r.computeDurationGreatestUnit(u,l):s):h=s),n.as("days")<=1&&this._view.isHiddenDay(d)&&(d=this._view.skipHiddenDays(d,e),d.startOf("day")),a(),this.trimHiddenDays(p)||(t=this._view.skipHiddenDays(t,e),a()),p},t.prototype.buildRangeFromDayCount=function(t,e,n){var i,r=this.opt("dateAlignment"),s=0,a=t.clone();r&&a.startOf(r),a.startOf("day"),a=this._view.skipHiddenDays(a,e),i=a.clone();do{i.add(1,"day"),this._view.isHiddenDay(i)||s++}while(s<n);return new o.default(a,i)},t.prototype.buildCustomVisibleRange=function(t){var e=this._view.getUnzonedRangeOption("visibleRange",this._view.calendar.applyTimezone(t));return!e||null!=e.startMs&&null!=e.endMs?e:null},t.prototype.buildRenderRange=function(t,e,n){return t.clone()},t.prototype.buildDateIncrement=function(t){var e,n=this.opt("dateIncrement");return n?i.duration(n):(e=this.opt("dateAlignment"))?i.duration(1,e):t||i.duration({days:1})},t}();e.default=s},function(t,e,n){function i(t){var e,n,i,r,l=a.dataAttrPrefix;return l&&(l+="-"),e=t.data(l+"event")||null,e&&(e="object"==typeof e?o.extend({},e):{},n=e.start,null==n&&(n=e.time),i=e.duration,r=e.stick,delete e.start,delete e.time,delete e.duration,delete e.stick),null==n&&(n=t.data(l+"start")),null==n&&(n=t.data(l+"time")),null==i&&(i=t.data(l+"duration")),null==r&&(r=t.data(l+"stick")),n=null!=n?s.duration(n):null,i=null!=i?s.duration(i):null,r=Boolean(r),{eventProps:e,startTime:n,duration:i,stick:r}}Object.defineProperty(e,"__esModule",{value:!0});var r=n(2),o=n(3),s=n(0),a=n(16),l=n(4),u=n(10),d=n(7),c=n(23),p=n(13),h=n(18),f=n(6),g=n(15),v=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.isDragging=!1,e}return r.__extends(e,t),e.prototype.end=function(){this.dragListener&&this.dragListener.endInteraction()},e.prototype.bindToDocument=function(){this.listenTo(o(document),{dragstart:this.handleDragStart,sortstart:this.handleDragStart})},e.prototype.unbindFromDocument=function(){this.stopListeningTo(o(document))},e.prototype.handleDragStart=function(t,e){var n,i;this.opt("droppable")&&(n=o((e?e.item:null)||t.target),i=this.opt("dropAccept"),(o.isFunction(i)?i.call(n[0],n):n.is(i))&&(this.isDragging||this.listenToExternalDrag(n,t,e)))},e.prototype.listenToExternalDrag=function(t,e,n){var r,o=this,s=this.component,a=this.view,u=i(t);(this.dragListener=new c.default(s,{interactionStart:function(){o.isDragging=!0},hitOver:function(t){var e,n=!0,i=t.component.getSafeHitFootprint(t);i?(r=o.computeExternalDrop(i,u),r?(e=new h.default(r.buildInstances()),n=u.eventProps?s.isEventInstanceGroupAllowed(e):s.isExternalInstanceGroupAllowed(e)):n=!1):n=!1,n||(r=null,l.disableCursor()),r&&s.renderDrag(s.eventRangesToEventFootprints(e.sliceRenderRanges(s.dateProfile.renderUnzonedRange,a.calendar)))},hitOut:function(){r=null},hitDone:function(){l.enableCursor(),s.unrenderDrag()},interactionEnd:function(e){r&&a.reportExternalDrop(r,Boolean(u.eventProps),Boolean(u.stick),t,e,n),o.isDragging=!1,o.dragListener=null}})).startDrag(e)},e.prototype.computeExternalDrop=function(t,e){var n,i=this.view.calendar,r=u.default.utc(t.unzonedRange.startMs).stripZone();return t.isAllDay&&(e.startTime?r.time(e.startTime):r.stripTime()),e.duration&&(n=r.clone().add(e.duration)),r=i.applyTimezone(r),n&&(n=i.applyTimezone(n)),p.default.parse(o.extend({},e.eventProps,{start:r,end:n}),new f.default(i))},e}(g.default);e.default=v,d.default.mixInto(v),a.dataAttrPrefix=""},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(4),s=n(37),a=n(50),l=n(23),u=n(15),d=function(t){function e(e,n){var i=t.call(this,e)||this;return i.isResizing=!1,i.eventPointing=n,i}return i.__extends(e,t),e.prototype.end=function(){this.dragListener&&this.dragListener.endInteraction()},e.prototype.bindToEl=function(t){var e=this.component;e.bindSegHandlerToEl(t,"mousedown",this.handleMouseDown.bind(this)),e.bindSegHandlerToEl(t,"touchstart",this.handleTouchStart.bind(this))},e.prototype.handleMouseDown=function(t,e){this.component.canStartResize(t,e)&&this.buildDragListener(t,r(e.target).is(".fc-start-resizer")).startInteraction(e,{distance:5})},e.prototype.handleTouchStart=function(t,e){this.component.canStartResize(t,e)&&this.buildDragListener(t,r(e.target).is(".fc-start-resizer")).startInteraction(e)},e.prototype.buildDragListener=function(t,e){var n,i,r=this,s=this.component,a=this.view,u=a.calendar,d=u.eventManager,c=t.el,p=t.footprint.eventDef,h=t.footprint.eventInstance;return this.dragListener=new l.default(s,{scroll:this.opt("dragScroll"),subjectEl:c,interactionStart:function(){n=!1},dragStart:function(e){n=!0,r.eventPointing.handleMouseout(t,e),r.segResizeStart(t,e)},hitOver:function(n,l,c){var h,f=!0,g=s.getSafeHitFootprint(c),v=s.getSafeHitFootprint(n);g&&v?(i=e?r.computeEventStartResizeMutation(g,v,t.footprint):r.computeEventEndResizeMutation(g,v,t.footprint),i?(h=d.buildMutatedEventInstanceGroup(p.id,i),f=s.isEventInstanceGroupAllowed(h)):f=!1):f=!1,f?i.isEmpty()&&(i=null):(i=null,o.disableCursor()),i&&(a.hideEventsWithId(t.footprint.eventDef.id),a.renderEventResize(s.eventRangesToEventFootprints(h.sliceRenderRanges(s.dateProfile.renderUnzonedRange,u)),t))},hitOut:function(){i=null},hitDone:function(){a.unrenderEventResize(t),a.showEventsWithId(t.footprint.eventDef.id),o.enableCursor()},interactionEnd:function(e){n&&r.segResizeStop(t,e),i&&a.reportEventResize(h,i,c,e),r.dragListener=null}})},e.prototype.segResizeStart=function(t,e){this.isResizing=!0,this.component.publiclyTrigger("eventResizeStart",{context:t.el[0],args:[t.footprint.getEventLegacy(),e,{},this.view]})},e.prototype.segResizeStop=function(t,e){this.isResizing=!1,this.component.publiclyTrigger("eventResizeStop",{context:t.el[0],args:[t.footprint.getEventLegacy(),e,{},this.view]})},e.prototype.computeEventStartResizeMutation=function(t,e,n){var i,r,o=n.componentFootprint.unzonedRange,l=this.component.diffDates(e.unzonedRange.getStart(),t.unzonedRange.getStart());return o.getStart().add(l)<o.getEnd()&&(i=new a.default,i.setStartDelta(l),r=new s.default,r.setDateMutation(i),r)},e.prototype.computeEventEndResizeMutation=function(t,e,n){var i,r,o=n.componentFootprint.unzonedRange,l=this.component.diffDates(e.unzonedRange.getEnd(),t.unzonedRange.getEnd());return o.getEnd().add(l)>o.getStart()&&(i=new a.default,i.setEndDelta(l),r=new s.default,r.setDateMutation(i),r)},e}(u.default);e.default=d},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(4),o=n(37),s=n(50),a=n(54),l=n(23),u=n(244),d=n(15),c=function(t){function e(e,n){var i=t.call(this,e)||this;return i.isDragging=!1,i.eventPointing=n,i}return i.__extends(e,t),e.prototype.end=function(){this.dragListener&&this.dragListener.endInteraction()},e.prototype.getSelectionDelay=function(){var t=this.opt("eventLongPressDelay");return null==t&&(t=this.opt("longPressDelay")),t},e.prototype.bindToEl=function(t){var e=this.component;e.bindSegHandlerToEl(t,"mousedown",this.handleMousedown.bind(this)),e.bindSegHandlerToEl(t,"touchstart",this.handleTouchStart.bind(this))},e.prototype.handleMousedown=function(t,e){!this.component.shouldIgnoreMouse()&&this.component.canStartDrag(t,e)&&this.buildDragListener(t).startInteraction(e,{distance:5})},e.prototype.handleTouchStart=function(t,e){var n=this.component,i={delay:this.view.isEventDefSelected(t.footprint.eventDef)?0:this.getSelectionDelay()};n.canStartDrag(t,e)?this.buildDragListener(t).startInteraction(e,i):n.canStartSelection(t,e)&&this.buildSelectListener(t).startInteraction(e,i)},e.prototype.buildSelectListener=function(t){var e=this,n=this.view,i=t.footprint.eventDef,r=t.footprint.eventInstance;if(this.dragListener)return this.dragListener;var o=this.dragListener=new a.default({dragStart:function(t){o.isTouch&&!n.isEventDefSelected(i)&&r&&n.selectEventInstance(r)},interactionEnd:function(t){e.dragListener=null}});return o},e.prototype.buildDragListener=function(t){var e,n,i,o=this,s=this.component,a=this.view,d=a.calendar,c=d.eventManager,p=t.el,h=t.footprint.eventDef,f=t.footprint.eventInstance;if(this.dragListener)return this.dragListener;var g=this.dragListener=new l.default(a,{scroll:this.opt("dragScroll"),subjectEl:p,subjectCenter:!0,interactionStart:function(i){t.component=s,e=!1,n=new u.default(t.el,{additionalClass:"fc-dragging",parentEl:a.el,opacity:g.isTouch?null:o.opt("dragOpacity"),revertDuration:o.opt("dragRevertDuration"),zIndex:2}),n.hide(),n.start(i)},dragStart:function(n){g.isTouch&&!a.isEventDefSelected(h)&&f&&a.selectEventInstance(f),e=!0,o.eventPointing.handleMouseout(t,n),o.segDragStart(t,n),a.hideEventsWithId(t.footprint.eventDef.id)},hitOver:function(e,l,u){var p,f,v,y=!0;t.hit&&(u=t.hit),p=u.component.getSafeHitFootprint(u),f=e.component.getSafeHitFootprint(e),p&&f?(i=o.computeEventDropMutation(p,f,h),i?(v=c.buildMutatedEventInstanceGroup(h.id,i),y=s.isEventInstanceGroupAllowed(v)):y=!1):y=!1,y||(i=null,r.disableCursor()),i&&a.renderDrag(s.eventRangesToEventFootprints(v.sliceRenderRanges(s.dateProfile.renderUnzonedRange,d)),t,g.isTouch)?n.hide():n.show(),l&&(i=null)},hitOut:function(){a.unrenderDrag(t),n.show(),i=null},hitDone:function(){r.enableCursor()},interactionEnd:function(r){delete t.component,n.stop(!i,function(){e&&(a.unrenderDrag(t),o.segDragStop(t,r)),a.showEventsWithId(t.footprint.eventDef.id),i&&a.reportEventDrop(f,i,p,r)}),o.dragListener=null}});return g},e.prototype.segDragStart=function(t,e){this.isDragging=!0,this.component.publiclyTrigger("eventDragStart",{context:t.el[0],args:[t.footprint.getEventLegacy(),e,{},this.view]})},e.prototype.segDragStop=function(t,e){this.isDragging=!1,this.component.publiclyTrigger("eventDragStop",{context:t.el[0],args:[t.footprint.getEventLegacy(),e,{},this.view]})},e.prototype.computeEventDropMutation=function(t,e,n){var i=new o.default;return i.setDateMutation(this.computeEventDateMutation(t,e)),i},e.prototype.computeEventDateMutation=function(t,e){var n,i,r=t.unzonedRange.getStart(),o=e.unzonedRange.getStart(),a=!1,l=!1,u=!1;return t.isAllDay!==e.isAllDay&&(a=!0,e.isAllDay?(u=!0,r.stripTime()):l=!0),n=this.component.diffDates(o,r),i=new s.default,i.clearEnd=a,i.forceTimed=l,i.forceAllDay=u,i.setDateDelta(n),i},e}(d.default);e.default=c},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(4),o=n(23),s=n(12),a=n(5),l=n(15),u=function(t){function e(e){var n=t.call(this,e)||this;return n.dragListener=n.buildDragListener(),n}return i.__extends(e,t),e.prototype.end=function(){this.dragListener.endInteraction()},e.prototype.getDelay=function(){var t=this.opt("selectLongPressDelay");return null==t&&(t=this.opt("longPressDelay")),t},e.prototype.bindToEl=function(t){var e=this,n=this.component,i=this.dragListener;n.bindDateHandlerToEl(t,"mousedown",function(t){e.opt("selectable")&&!n.shouldIgnoreMouse()&&i.startInteraction(t,{distance:e.opt("selectMinDistance")})}),n.bindDateHandlerToEl(t,"touchstart",function(t){e.opt("selectable")&&!n.shouldIgnoreTouch()&&i.startInteraction(t,{delay:e.getDelay()})}),r.preventSelection(t)},e.prototype.buildDragListener=function(){var t,e=this,n=this.component;return new o.default(n,{scroll:this.opt("dragScroll"),interactionStart:function(){t=null},dragStart:function(t){e.view.unselect(t)},hitOver:function(i,o,s){var a,l;s&&(a=n.getSafeHitFootprint(s),l=n.getSafeHitFootprint(i),t=a&&l?e.computeSelection(a,l):null,t?n.renderSelectionFootprint(t):!1===t&&r.disableCursor())},hitOut:function(){t=null,n.unrenderSelection()},hitDone:function(){r.enableCursor()},interactionEnd:function(n,i){!i&&t&&e.view.reportSelection(t,n)}})},e.prototype.computeSelection=function(t,e){var n=this.computeSelectionFootprint(t,e);return!(n&&!this.isSelectionFootprintAllowed(n))&&n},e.prototype.computeSelectionFootprint=function(t,e){var n=[t.unzonedRange.startMs,t.unzonedRange.endMs,e.unzonedRange.startMs,e.unzonedRange.endMs];return n.sort(r.compareNumbers),new s.default(new a.default(n[0],n[3]),t.isAllDay)},e.prototype.isSelectionFootprintAllowed=function(t){return this.component.dateProfile.validUnzonedRange.containsRange(t.unzonedRange)&&this.view.calendar.constraints.isSelectionFootprintAllowed(t)},e}(l.default);e.default=u},function(t,e,n){function i(t){var e,n=[],i=[];for(e=0;e<t.length;e++)t[e].componentFootprint.isAllDay?n.push(t[e]):i.push(t[e]);return{allDay:n,timed:i}}Object.defineProperty(e,"__esModule",{value:!0});var r,o,s=n(2),a=n(0),l=n(3),u=n(4),d=n(39),c=n(41),p=n(227),h=n(61),f=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.usesMinMaxTime=!0,i.timeGrid=i.instantiateTimeGrid(),i.addChild(i.timeGrid),i.opt("allDaySlot")&&(i.dayGrid=i.instantiateDayGrid(),i.addChild(i.dayGrid)),i.scroller=new d.default({overflowX:"hidden",overflowY:"auto"}),i}
return s.__extends(e,t),e.prototype.instantiateTimeGrid=function(){var t=new this.timeGridClass(this);return u.copyOwnProps(r,t),t},e.prototype.instantiateDayGrid=function(){var t=new this.dayGridClass(this);return u.copyOwnProps(o,t),t},e.prototype.renderSkeleton=function(){var t,e;this.el.addClass("fc-agenda-view").html(this.renderSkeletonHtml()),this.scroller.render(),t=this.scroller.el.addClass("fc-time-grid-container"),e=l('<div class="fc-time-grid" />').appendTo(t),this.el.find(".fc-body > tr > td").append(t),this.timeGrid.headContainerEl=this.el.find(".fc-head-container"),this.timeGrid.setElement(e),this.dayGrid&&(this.dayGrid.setElement(this.el.find(".fc-day-grid")),this.dayGrid.bottomCoordPadding=this.dayGrid.el.next("hr").outerHeight())},e.prototype.unrenderSkeleton=function(){this.timeGrid.removeElement(),this.dayGrid&&this.dayGrid.removeElement(),this.scroller.destroy()},e.prototype.renderSkeletonHtml=function(){var t=this.calendar.theme;return'<table class="'+t.getClass("tableGrid")+'">'+(this.opt("columnHeader")?'<thead class="fc-head"><tr><td class="fc-head-container '+t.getClass("widgetHeader")+'">&nbsp;</td></tr></thead>':"")+'<tbody class="fc-body"><tr><td class="'+t.getClass("widgetContent")+'">'+(this.dayGrid?'<div class="fc-day-grid"/><hr class="fc-divider '+t.getClass("widgetHeader")+'"/>':"")+"</td></tr></tbody></table>"},e.prototype.axisStyleAttr=function(){return null!=this.axisWidth?'style="width:'+this.axisWidth+'px"':""},e.prototype.getNowIndicatorUnit=function(){return this.timeGrid.getNowIndicatorUnit()},e.prototype.updateSize=function(e,n,i){var r,o,s;if(t.prototype.updateSize.call(this,e,n,i),this.axisWidth=u.matchCellWidths(this.el.find(".fc-axis")),!this.timeGrid.colEls)return void(n||(o=this.computeScrollerHeight(e),this.scroller.setHeight(o)));var a=this.el.find(".fc-row:not(.fc-scroller *)");this.timeGrid.bottomRuleEl.hide(),this.scroller.clear(),u.uncompensateScroll(a),this.dayGrid&&(this.dayGrid.removeSegPopover(),r=this.opt("eventLimit"),r&&"number"!=typeof r&&(r=5),r&&this.dayGrid.limitRows(r)),n||(o=this.computeScrollerHeight(e),this.scroller.setHeight(o),s=this.scroller.getScrollbarWidths(),(s.left||s.right)&&(u.compensateScroll(a,s),o=this.computeScrollerHeight(e),this.scroller.setHeight(o)),this.scroller.lockOverflow(s),this.timeGrid.getTotalSlatHeight()<o&&this.timeGrid.bottomRuleEl.show())},e.prototype.computeScrollerHeight=function(t){return t-u.subtractInnerElHeight(this.el,this.scroller.el)},e.prototype.computeInitialDateScroll=function(){var t=a.duration(this.opt("scrollTime")),e=this.timeGrid.computeTimeTop(t);return e=Math.ceil(e),e&&e++,{top:e}},e.prototype.queryDateScroll=function(){return{top:this.scroller.getScrollTop()}},e.prototype.applyDateScroll=function(t){void 0!==t.top&&this.scroller.setScrollTop(t.top)},e.prototype.getHitFootprint=function(t){return t.component.getHitFootprint(t)},e.prototype.getHitEl=function(t){return t.component.getHitEl(t)},e.prototype.executeEventRender=function(t){var e,n,i={},r={};for(e in t)n=t[e],n.getEventDef().isAllDay()?i[e]=n:r[e]=n;this.timeGrid.executeEventRender(r),this.dayGrid&&this.dayGrid.executeEventRender(i)},e.prototype.renderDrag=function(t,e,n){var r=i(t),o=!1;return o=this.timeGrid.renderDrag(r.timed,e,n),this.dayGrid&&(o=this.dayGrid.renderDrag(r.allDay,e,n)||o),o},e.prototype.renderEventResize=function(t,e,n){var r=i(t);this.timeGrid.renderEventResize(r.timed,e,n),this.dayGrid&&this.dayGrid.renderEventResize(r.allDay,e,n)},e.prototype.renderSelectionFootprint=function(t){t.isAllDay?this.dayGrid&&this.dayGrid.renderSelectionFootprint(t):this.timeGrid.renderSelectionFootprint(t)},e}(c.default);e.default=f,f.prototype.timeGridClass=p.default,f.prototype.dayGridClass=h.default,r={renderHeadIntroHtml:function(){var t,e=this.view,n=e.calendar,i=n.msToUtcMoment(this.dateProfile.renderUnzonedRange.startMs,!0);return this.opt("weekNumbers")?(t=i.format(this.opt("smallWeekFormat")),'<th class="fc-axis fc-week-number '+n.theme.getClass("widgetHeader")+'" '+e.axisStyleAttr()+">"+e.buildGotoAnchorHtml({date:i,type:"week",forceOff:this.colCnt>1},u.htmlEscape(t))+"</th>"):'<th class="fc-axis '+n.theme.getClass("widgetHeader")+'" '+e.axisStyleAttr()+"></th>"},renderBgIntroHtml:function(){var t=this.view;return'<td class="fc-axis '+t.calendar.theme.getClass("widgetContent")+'" '+t.axisStyleAttr()+"></td>"},renderIntroHtml:function(){return'<td class="fc-axis" '+this.view.axisStyleAttr()+"></td>"}},o={renderBgIntroHtml:function(){var t=this.view;return'<td class="fc-axis '+t.calendar.theme.getClass("widgetContent")+'" '+t.axisStyleAttr()+"><span>"+t.getAllDayHtml()+"</span></td>"},renderIntroHtml:function(){return'<td class="fc-axis" '+this.view.axisStyleAttr()+"></td>"}}},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(0),s=n(4),a=n(40),l=n(56),u=n(60),d=n(55),c=n(53),p=n(5),h=n(12),f=n(246),g=n(247),v=n(248),y=[{hours:1},{minutes:30},{minutes:15},{seconds:30},{seconds:15}],m=function(t){function e(e){var n=t.call(this,e)||this;return n.processOptions(),n}return i.__extends(e,t),e.prototype.componentFootprintToSegs=function(t){var e,n=this.sliceRangeByTimes(t.unzonedRange);for(e=0;e<n.length;e++)this.isRTL?n[e].col=this.daysPerRow-1-n[e].dayIndex:n[e].col=n[e].dayIndex;return n},e.prototype.sliceRangeByTimes=function(t){var e,n,i=[];for(n=0;n<this.daysPerRow;n++)(e=t.intersect(this.dayRanges[n]))&&i.push({startMs:e.startMs,endMs:e.endMs,isStart:e.isStart,isEnd:e.isEnd,dayIndex:n});return i},e.prototype.processOptions=function(){var t,e=this.opt("slotDuration"),n=this.opt("snapDuration");e=o.duration(e),n=n?o.duration(n):e,this.slotDuration=e,this.snapDuration=n,this.snapsPerSlot=e/n,t=this.opt("slotLabelFormat"),r.isArray(t)&&(t=t[t.length-1]),this.labelFormat=t||this.opt("smallTimeFormat"),t=this.opt("slotLabelInterval"),this.labelInterval=t?o.duration(t):this.computeLabelInterval(e)},e.prototype.computeLabelInterval=function(t){var e,n,i;for(e=y.length-1;e>=0;e--)if(n=o.duration(y[e]),i=s.divideDurationByDuration(n,t),s.isInt(i)&&i>1)return n;return o.duration(t)},e.prototype.renderDates=function(t){this.dateProfile=t,this.updateDayTable(),this.renderSlats(),this.renderColumns()},e.prototype.unrenderDates=function(){this.unrenderColumns()},e.prototype.renderSkeleton=function(){var t=this.view.calendar.theme;this.el.html('<div class="fc-bg"></div><div class="fc-slats"></div><hr class="fc-divider '+t.getClass("widgetHeader")+'" style="display:none" />'),this.bottomRuleEl=this.el.find("hr")},e.prototype.renderSlats=function(){var t=this.view.calendar.theme;this.slatContainerEl=this.el.find("> .fc-slats").html('<table class="'+t.getClass("tableGrid")+'">'+this.renderSlatRowHtml()+"</table>"),this.slatEls=this.slatContainerEl.find("tr"),this.slatCoordCache=new c.default({els:this.slatEls,isVertical:!0})},e.prototype.renderSlatRowHtml=function(){for(var t,e,n,i=this.view,r=i.calendar,a=r.theme,l=this.isRTL,u=this.dateProfile,d="",c=o.duration(+u.minTime),p=o.duration(0);c<u.maxTime;)t=r.msToUtcMoment(u.renderUnzonedRange.startMs).time(c),e=s.isInt(s.divideDurationByDuration(p,this.labelInterval)),n='<td class="fc-axis fc-time '+a.getClass("widgetContent")+'" '+i.axisStyleAttr()+">"+(e?"<span>"+s.htmlEscape(t.format(this.labelFormat))+"</span>":"")+"</td>",d+='<tr data-time="'+t.format("HH:mm:ss")+'"'+(e?"":' class="fc-minor"')+">"+(l?"":n)+'<td class="'+a.getClass("widgetContent")+'"/>'+(l?n:"")+"</tr>",c.add(this.slotDuration),p.add(this.slotDuration);return d},e.prototype.renderColumns=function(){var t=this.dateProfile,e=this.view.calendar.theme;this.dayRanges=this.dayDates.map(function(e){return new p.default(e.clone().add(t.minTime),e.clone().add(t.maxTime))}),this.headContainerEl&&this.headContainerEl.html(this.renderHeadHtml()),this.el.find("> .fc-bg").html('<table class="'+e.getClass("tableGrid")+'">'+this.renderBgTrHtml(0)+"</table>"),this.colEls=this.el.find(".fc-day, .fc-disabled-day"),this.colCoordCache=new c.default({els:this.colEls,isHorizontal:!0}),this.renderContentSkeleton()},e.prototype.unrenderColumns=function(){this.unrenderContentSkeleton()},e.prototype.renderContentSkeleton=function(){var t,e,n="";for(t=0;t<this.colCnt;t++)n+='<td><div class="fc-content-col"><div class="fc-event-container fc-helper-container"></div><div class="fc-event-container"></div><div class="fc-highlight-container"></div><div class="fc-bgevent-container"></div><div class="fc-business-container"></div></div></td>';e=this.contentSkeletonEl=r('<div class="fc-content-skeleton"><table><tr>'+n+"</tr></table></div>"),this.colContainerEls=e.find(".fc-content-col"),this.helperContainerEls=e.find(".fc-helper-container"),this.fgContainerEls=e.find(".fc-event-container:not(.fc-helper-container)"),this.bgContainerEls=e.find(".fc-bgevent-container"),this.highlightContainerEls=e.find(".fc-highlight-container"),this.businessContainerEls=e.find(".fc-business-container"),this.bookendCells(e.find("tr")),this.el.append(e)},e.prototype.unrenderContentSkeleton=function(){this.contentSkeletonEl&&(this.contentSkeletonEl.remove(),this.contentSkeletonEl=null,this.colContainerEls=null,this.helperContainerEls=null,this.fgContainerEls=null,this.bgContainerEls=null,this.highlightContainerEls=null,this.businessContainerEls=null)},e.prototype.groupSegsByCol=function(t){var e,n=[];for(e=0;e<this.colCnt;e++)n.push([]);for(e=0;e<t.length;e++)n[t[e].col].push(t[e]);return n},e.prototype.attachSegsByCol=function(t,e){var n,i,r;for(n=0;n<this.colCnt;n++)for(i=t[n],r=0;r<i.length;r++)e.eq(n).append(i[r].el)},e.prototype.getNowIndicatorUnit=function(){return"minute"},e.prototype.renderNowIndicator=function(t){if(this.colContainerEls){var e,n=this.componentFootprintToSegs(new h.default(new p.default(t,t.valueOf()+1),!1)),i=this.computeDateTop(t,t),o=[];for(e=0;e<n.length;e++)o.push(r('<div class="fc-now-indicator fc-now-indicator-line"></div>').css("top",i).appendTo(this.colContainerEls.eq(n[e].col))[0]);n.length>0&&o.push(r('<div class="fc-now-indicator fc-now-indicator-arrow"></div>').css("top",i).appendTo(this.el.find(".fc-content-skeleton"))[0]),this.nowIndicatorEls=r(o)}},e.prototype.unrenderNowIndicator=function(){this.nowIndicatorEls&&(this.nowIndicatorEls.remove(),this.nowIndicatorEls=null)},e.prototype.updateSize=function(e,n,i){t.prototype.updateSize.call(this,e,n,i),this.slatCoordCache.build(),i&&this.updateSegVerticals([].concat(this.eventRenderer.getSegs(),this.businessSegs||[]))},e.prototype.getTotalSlatHeight=function(){return this.slatContainerEl.outerHeight()},e.prototype.computeDateTop=function(t,e){return this.computeTimeTop(o.duration(t-e.clone().stripTime()))},e.prototype.computeTimeTop=function(t){var e,n,i=this.slatEls.length,r=this.dateProfile,o=(t-r.minTime)/this.slotDuration;return o=Math.max(0,o),o=Math.min(i,o),e=Math.floor(o),e=Math.min(e,i-1),n=o-e,this.slatCoordCache.getTopPosition(e)+this.slatCoordCache.getHeight(e)*n},e.prototype.updateSegVerticals=function(t){this.computeSegVerticals(t),this.assignSegVerticals(t)},e.prototype.computeSegVerticals=function(t){var e,n,i,r=this.opt("agendaEventMinHeight");for(e=0;e<t.length;e++)n=t[e],i=this.dayDates[n.dayIndex],n.top=this.computeDateTop(n.startMs,i),n.bottom=Math.max(n.top+r,this.computeDateTop(n.endMs,i))},e.prototype.assignSegVerticals=function(t){var e,n;for(e=0;e<t.length;e++)n=t[e],n.el.css(this.generateSegVerticalCss(n))},e.prototype.generateSegVerticalCss=function(t){return{top:t.top,bottom:-t.bottom}},e.prototype.prepareHits=function(){this.colCoordCache.build(),this.slatCoordCache.build()},e.prototype.releaseHits=function(){this.colCoordCache.clear()},e.prototype.queryHit=function(t,e){var n=this.snapsPerSlot,i=this.colCoordCache,r=this.slatCoordCache;if(i.isLeftInBounds(t)&&r.isTopInBounds(e)){var o=i.getHorizontalIndex(t),s=r.getVerticalIndex(e);if(null!=o&&null!=s){var a=r.getTopOffset(s),l=r.getHeight(s),u=(e-a)/l,d=Math.floor(u*n),c=s*n+d,p=a+d/n*l,h=a+(d+1)/n*l;return{col:o,snap:c,component:this,left:i.getLeftOffset(o),right:i.getRightOffset(o),top:p,bottom:h}}}},e.prototype.getHitFootprint=function(t){var e,n=this.getCellDate(0,t.col),i=this.computeSnapTime(t.snap);return n.time(i),e=n.clone().add(this.snapDuration),new h.default(new p.default(n,e),!1)},e.prototype.computeSnapTime=function(t){return o.duration(this.dateProfile.minTime+this.snapDuration*t)},e.prototype.getHitEl=function(t){return this.colEls.eq(t.col)},e.prototype.renderDrag=function(t,e,n){var i;if(e){if(t.length)return this.helperRenderer.renderEventDraggingFootprints(t,e,n),!0}else for(i=0;i<t.length;i++)this.renderHighlight(t[i].componentFootprint)},e.prototype.unrenderDrag=function(){this.unrenderHighlight(),this.helperRenderer.unrender()},e.prototype.renderEventResize=function(t,e,n){this.helperRenderer.renderEventResizingFootprints(t,e,n)},e.prototype.unrenderEventResize=function(){this.helperRenderer.unrender()},e.prototype.renderSelectionFootprint=function(t){this.opt("selectHelper")?this.helperRenderer.renderComponentFootprint(t):this.renderHighlight(t)},e.prototype.unrenderSelection=function(){this.helperRenderer.unrender(),this.unrenderHighlight()},e}(a.default);e.default=m,m.prototype.eventRendererClass=f.default,m.prototype.businessHourRendererClass=l.default,m.prototype.helperRendererClass=g.default,m.prototype.fillRendererClass=v.default,u.default.mixInto(m),d.default.mixInto(m)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(5),o=n(221),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.buildRenderRange=function(e,n,i){var o=t.prototype.buildRenderRange.call(this,e,n,i),s=this.msToUtcMoment(o.startMs,i),a=this.msToUtcMoment(o.endMs,i);return/^(year|month)$/.test(n)&&(s.startOf("week"),a.weekday()&&a.add(1,"week").startOf("week")),new r.default(s,a)},e}(o.default);e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(0),o=n(4),s=n(62),a=n(253),l=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.setGridHeight=function(t,e){e&&(t*=this.dayGrid.rowCnt/6),o.distributeHeight(this.dayGrid.rowEls,t,!e)},e.prototype.isDateInOtherMonth=function(t,e){return t.month()!==r.utc(e.currentUnzonedRange.startMs).month()},e}(s.default);e.default=l,l.prototype.dateProfileGeneratorClass=a.default},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(4),s=n(5),a=n(41),l=n(39),u=n(254),d=n(255),c=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.segSelector=".fc-list-item",i.scroller=new l.default({overflowX:"hidden",overflowY:"auto"}),i}return i.__extends(e,t),e.prototype.renderSkeleton=function(){this.el.addClass("fc-list-view "+this.calendar.theme.getClass("listView")),this.scroller.render(),this.scroller.el.appendTo(this.el),this.contentEl=this.scroller.scrollEl},e.prototype.unrenderSkeleton=function(){this.scroller.destroy()},e.prototype.updateSize=function(e,n,i){t.prototype.updateSize.call(this,e,n,i),this.scroller.clear(),n||this.scroller.setHeight(this.computeScrollerHeight(e))},e.prototype.computeScrollerHeight=function(t){return t-o.subtractInnerElHeight(this.el,this.scroller.el)},e.prototype.renderDates=function(t){for(var e=this.calendar,n=e.msToUtcMoment(t.renderUnzonedRange.startMs,!0),i=e.msToUtcMoment(t.renderUnzonedRange.endMs,!0),r=[],o=[];n<i;)r.push(n.clone()),o.push(new s.default(n,n.clone().add(1,"day"))),n.add(1,"day");this.dayDates=r,this.dayRanges=o},e.prototype.componentFootprintToSegs=function(t){var e,n,i,r=this.dayRanges,o=[];for(e=0;e<r.length;e++)if((n=t.unzonedRange.intersect(r[e]))&&(i={startMs:n.startMs,endMs:n.endMs,isStart:n.isStart,isEnd:n.isEnd,dayIndex:e},o.push(i),!i.isEnd&&!t.isAllDay&&e+1<r.length&&t.unzonedRange.endMs<r[e+1].startMs+this.nextDayThreshold)){i.endMs=t.unzonedRange.endMs,i.isEnd=!0;break}return o},e.prototype.renderEmptyMessage=function(){this.contentEl.html('<div class="fc-list-empty-wrap2"><div class="fc-list-empty-wrap1"><div class="fc-list-empty">'+o.htmlEscape(this.opt("noEventsMessage"))+"</div></div></div>")},e.prototype.renderSegList=function(t){var e,n,i,o=this.groupSegsByDay(t),s=r('<table class="fc-list-table '+this.calendar.theme.getClass("tableList")+'"><tbody/></table>'),a=s.find("tbody");for(e=0;e<o.length;e++)if(n=o[e])for(a.append(this.dayHeaderHtml(this.dayDates[e])),this.eventRenderer.sortEventSegs(n),i=0;i<n.length;i++)a.append(n[i].el);this.contentEl.empty().append(s)},e.prototype.groupSegsByDay=function(t){var e,n,i=[];for(e=0;e<t.length;e++)n=t[e],(i[n.dayIndex]||(i[n.dayIndex]=[])).push(n);return i},e.prototype.dayHeaderHtml=function(t){var e=this.opt("listDayFormat"),n=this.opt("listDayAltFormat");return'<tr class="fc-list-heading" data-date="'+t.format("YYYY-MM-DD")+'"><td class="'+(this.calendar.theme.getClass("tableListHeading")||this.calendar.theme.getClass("widgetHeader"))+'" colspan="3">'+(e?this.buildGotoAnchorHtml(t,{class:"fc-list-heading-main"},o.htmlEscape(t.format(e))):"")+(n?this.buildGotoAnchorHtml(t,{class:"fc-list-heading-alt"},o.htmlEscape(t.format(n))):"")+"</td></tr>"},e}(a.default);e.default=c,c.prototype.eventRendererClass=u.default,c.prototype.eventPointingClass=d.default},,,,,,function(t,e,n){var i=n(3),r=n(16),o=n(4),s=n(220);n(10),n(47),n(256),n(257),n(260),n(261),n(262),n(263),i.fullCalendar=r,i.fn.fullCalendar=function(t){var e=Array.prototype.slice.call(arguments,1),n=this;return this.each(function(r,a){var l,u=i(a),d=u.data("fullCalendar");"string"==typeof t?"getCalendar"===t?r||(n=d):"destroy"===t?d&&(d.destroy(),u.removeData("fullCalendar")):d?i.isFunction(d[t])?(l=d[t].apply(d,e),r||(n=l),"destroy"===t&&u.removeData("fullCalendar")):o.warn("'"+t+"' is an unknown FullCalendar method."):o.warn("Attempting to call a FullCalendar method on an element with no calendar."):d||(d=new s.default(u,t),u.data("fullCalendar",d),d.render())}),n},t.exports=r},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(48),o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.setElement=function(t){this.el=t,this.bindGlobalHandlers(),this.renderSkeleton(),this.set("isInDom",!0)},e.prototype.removeElement=function(){this.unset("isInDom"),this.unrenderSkeleton(),this.unbindGlobalHandlers(),this.el.remove()},e.prototype.bindGlobalHandlers=function(){},e.prototype.unbindGlobalHandlers=function(){},e.prototype.renderSkeleton=function(){},e.prototype.unrenderSkeleton=function(){},e}(r.default);e.default=o},function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t){this.items=t||[]}return t.prototype.proxyCall=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];var i=[];return this.items.forEach(function(n){i.push(n[t].apply(n,e))}),i},t}();e.default=n},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(4),o=function(){function t(t,e){this.el=null,this.viewsWithButtons=[],this.calendar=t,this.toolbarOptions=e}return t.prototype.setToolbarOptions=function(t){this.toolbarOptions=t},t.prototype.render=function(){var t=this.toolbarOptions.layout,e=this.el;t?(e?e.empty():e=this.el=i("<div class='fc-toolbar "+this.toolbarOptions.extraClasses+"'/>"),e.append(this.renderSection("left")).append(this.renderSection("right")).append(this.renderSection("center")).append('<div class="fc-clear"/>')):this.removeElement()},t.prototype.removeElement=function(){this.el&&(this.el.remove(),this.el=null)},t.prototype.renderSection=function(t){var e=this,n=this.calendar,o=n.theme,s=n.optionsManager,a=n.viewSpecManager,l=i('<div class="fc-'+t+'"/>'),u=this.toolbarOptions.layout[t],d=s.get("customButtons")||{},c=s.overrides.buttonText||{},p=s.get("buttonText")||{};return u&&i.each(u.split(" "),function(t,s){var u,h=i(),f=!0;i.each(s.split(","),function(t,s){var l,u,g,v,y,m,b,w,D;"title"===s?(h=h.add(i("<h2>&nbsp;</h2>")),f=!1):((l=d[s])?(g=function(t){l.click&&l.click.call(w[0],t)},(v=o.getCustomButtonIconClass(l))||(v=o.getIconClass(s))||(y=l.text)):(u=a.getViewSpec(s))?(e.viewsWithButtons.push(s),g=function(){n.changeView(s)},(y=u.buttonTextOverride)||(v=o.getIconClass(s))||(y=u.buttonTextDefault)):n[s]&&(g=function(){n[s]()},(y=c[s])||(v=o.getIconClass(s))||(y=p[s])),g&&(b=["fc-"+s+"-button",o.getClass("button"),o.getClass("stateDefault")],y?(m=r.htmlEscape(y),D=""):v&&(m="<span class='"+v+"'></span>",D=' aria-label="'+s+'"'),w=i('<button type="button" class="'+b.join(" ")+'"'+D+">"+m+"</button>").click(function(t){w.hasClass(o.getClass("stateDisabled"))||(g(t),(w.hasClass(o.getClass("stateActive"))||w.hasClass(o.getClass("stateDisabled")))&&w.removeClass(o.getClass("stateHover")))}).mousedown(function(){w.not("."+o.getClass("stateActive")).not("."+o.getClass("stateDisabled")).addClass(o.getClass("stateDown"))}).mouseup(function(){w.removeClass(o.getClass("stateDown"))}).hover(function(){w.not("."+o.getClass("stateActive")).not("."+o.getClass("stateDisabled")).addClass(o.getClass("stateHover"))},function(){w.removeClass(o.getClass("stateHover")).removeClass(o.getClass("stateDown"))}),h=h.add(w)))}),f&&h.first().addClass(o.getClass("cornerLeft")).end().last().addClass(o.getClass("cornerRight")).end(),h.length>1?(u=i("<div/>"),f&&u.addClass(o.getClass("buttonGroup")),u.append(h),l.append(u)):l.append(h)}),l},t.prototype.updateTitle=function(t){this.el&&this.el.find("h2").text(t)},t.prototype.activateButton=function(t){this.el&&this.el.find(".fc-"+t+"-button").addClass(this.calendar.theme.getClass("stateActive"))},t.prototype.deactivateButton=function(t){this.el&&this.el.find(".fc-"+t+"-button").removeClass(this.calendar.theme.getClass("stateActive"))},t.prototype.disableButton=function(t){this.el&&this.el.find(".fc-"+t+"-button").prop("disabled",!0).addClass(this.calendar.theme.getClass("stateDisabled"))},t.prototype.enableButton=function(t){this.el&&this.el.find(".fc-"+t+"-button").prop("disabled",!1).removeClass(this.calendar.theme.getClass("stateDisabled"))},t.prototype.getViewsWithButtons=function(){return this.viewsWithButtons},t}();e.default=o},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(4),s=n(32),a=n(31),l=n(48),u=function(t){function e(e,n){var i=t.call(this)||this;return i._calendar=e,i.overrides=r.extend({},n),i.dynamicOverrides={},i.compute(),i}return i.__extends(e,t),e.prototype.add=function(t){var e,n=0;this.recordOverrides(t);for(e in t)n++;if(1===n){if("height"===e||"contentHeight"===e||"aspectRatio"===e)return void this._calendar.updateViewSize(!0);if("defaultDate"===e)return;if("businessHours"===e)return;if(/^(event|select)(Overlap|Constraint|Allow)$/.test(e))return;if("timezone"===e)return void this._calendar.view.flash("initialEvents")}this._calendar.renderHeader(),this._calendar.renderFooter(),this._calendar.viewsByType={},this._calendar.reinitView()},e.prototype.compute=function(){var t,e,n,i,r;t=o.firstDefined(this.dynamicOverrides.locale,this.overrides.locale),e=a.localeOptionHash[t],e||(t=s.globalDefaults.locale,e=a.localeOptionHash[t]||{}),n=o.firstDefined(this.dynamicOverrides.isRTL,this.overrides.isRTL,e.isRTL,s.globalDefaults.isRTL),i=n?s.rtlDefaults:{},this.dirDefaults=i,this.localeDefaults=e,r=s.mergeOptions([s.globalDefaults,i,e,this.overrides,this.dynamicOverrides]),a.populateInstanceComputableOptions(r),this.reset(r)},e.prototype.recordOverrides=function(t){var e;for(e in t)this.dynamicOverrides[e]=t[e];this._calendar.viewSpecManager.clearCache(),this.compute()},e}(l.default);e.default=u},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),r=n(3),o=n(22),s=n(4),a=n(32),l=n(31),u=function(){function t(t,e){this.optionsManager=t,this._calendar=e,this.clearCache()}return t.prototype.clearCache=function(){this.viewSpecCache={}},t.prototype.getViewSpec=function(t){var e=this.viewSpecCache;return e[t]||(e[t]=this.buildViewSpec(t))},t.prototype.getUnitViewSpec=function(t){var e,n,i;if(-1!==r.inArray(t,s.unitsDesc))for(e=this._calendar.header.getViewsWithButtons(),r.each(o.viewHash,function(t){e.push(t)}),n=0;n<e.length;n++)if((i=this.getViewSpec(e[n]))&&i.singleUnit===t)return i},t.prototype.buildViewSpec=function(t){for(var e,n,r,l,u,d=this.optionsManager.overrides.views||{},c=[],p=[],h=[],f=t;f;)e=o.viewHash[f],n=d[f],f=null,"function"==typeof e&&(e={class:e}),e&&(c.unshift(e),p.unshift(e.defaults||{}),r=r||e.duration,f=f||e.type),n&&(h.unshift(n),r=r||n.duration,f=f||n.type);return e=s.mergeProps(c),e.type=t,!!e.class&&(r=r||this.optionsManager.dynamicOverrides.duration||this.optionsManager.overrides.duration,r&&(l=i.duration(r),l.valueOf()&&(u=s.computeDurationGreatestUnit(l,r),e.duration=l,e.durationUnit=u,1===l.as(u)&&(e.singleUnit=u,h.unshift(d[u]||{})))),e.defaults=a.mergeOptions(p),e.overrides=a.mergeOptions(h),this.buildViewSpecOptions(e),this.buildViewSpecButtonText(e,t),e)},t.prototype.buildViewSpecOptions=function(t){var e=this.optionsManager;t.options=a.mergeOptions([a.globalDefaults,t.defaults,e.dirDefaults,e.localeDefaults,e.overrides,t.overrides,e.dynamicOverrides]),l.populateInstanceComputableOptions(t.options)},t.prototype.buildViewSpecButtonText=function(t,e){function n(n){var i=n.buttonText||{};return i[e]||(t.buttonTextKey?i[t.buttonTextKey]:null)||(t.singleUnit?i[t.singleUnit]:null)}var i=this.optionsManager;t.buttonTextOverride=n(i.dynamicOverrides)||n(i.overrides)||t.overrides.buttonText,t.buttonTextDefault=n(i.localeDefaults)||n(i.dirDefaults)||t.defaults.buttonText||n(a.globalDefaults)||(t.duration?this._calendar.humanizeDuration(t.duration):null)||e},t}();e.default=u},function(t,e,n){function i(t,e){return t.getPrimitive()===e.getPrimitive()}Object.defineProperty(e,"__esModule",{value:!0});var r=n(3),o=n(4),s=n(243),a=n(52),l=n(6),u=n(38),d=n(13),c=n(18),p=n(11),h=n(7),f=function(){function t(t){this.calendar=t,this.stickySource=new a.default(t),this.otherSources=[]}return t.prototype.requestEvents=function(t,e,n,i){return!i&&this.currentPeriod&&this.currentPeriod.isWithinRange(t,e)&&n===this.currentPeriod.timezone||this.setPeriod(new s.default(t,e,n)),this.currentPeriod.whenReleased()},t.prototype.addSource=function(t){this.otherSources.push(t),this.currentPeriod&&this.currentPeriod.requestSource(t)},t.prototype.removeSource=function(t){o.removeExact(this.otherSources,t),this.currentPeriod&&this.currentPeriod.purgeSource(t)},t.prototype.removeAllSources=function(){this.otherSources=[],this.currentPeriod&&this.currentPeriod.purgeAllSources()},t.prototype.refetchSource=function(t){var e=this.currentPeriod;e&&(e.freeze(),e.purgeSource(t),e.requestSource(t),e.thaw())},t.prototype.refetchAllSources=function(){var t=this.currentPeriod;t&&(t.freeze(),t.purgeAllSources(),t.requestSources(this.getSources()),t.thaw())},t.prototype.getSources=function(){return[this.stickySource].concat(this.otherSources)},t.prototype.multiQuerySources=function(t){t?r.isArray(t)||(t=[t]):t=[];var e,n=[];for(e=0;e<t.length;e++)n.push.apply(n,this.querySources(t[e]));return n},t.prototype.querySources=function(t){var e,n,o=this.otherSources;for(e=0;e<o.length;e++)if((n=o[e])===t)return[n];return(n=this.getSourceById(l.default.normalizeId(t)))?[n]:(t=u.default.parse(t,this.calendar),t?r.grep(o,function(e){return i(t,e)}):void 0)},t.prototype.getSourceById=function(t){return r.grep(this.otherSources,function(e){return e.id&&e.id===t})[0]},t.prototype.setPeriod=function(t){this.currentPeriod&&(this.unbindPeriod(this.currentPeriod),this.currentPeriod=null),this.currentPeriod=t,this.bindPeriod(t),t.requestSources(this.getSources())},t.prototype.bindPeriod=function(t){this.listenTo(t,"release",function(t){this.trigger("release",t)})},t.prototype.unbindPeriod=function(t){this.stopListeningTo(t)},t.prototype.getEventDefByUid=function(t){if(this.currentPeriod)return this.currentPeriod.getEventDefByUid(t)},t.prototype.addEventDef=function(t,e){e&&this.stickySource.addEventDef(t),this.currentPeriod&&this.currentPeriod.addEventDef(t)},t.prototype.removeEventDefsById=function(t){this.getSources().forEach(function(e){e.removeEventDefsById(t)}),this.currentPeriod&&this.currentPeriod.removeEventDefsById(t)},t.prototype.removeAllEventDefs=function(){this.getSources().forEach(function(t){t.removeAllEventDefs()}),this.currentPeriod&&this.currentPeriod.removeAllEventDefs()},t.prototype.mutateEventsWithId=function(t,e){var n,i=this.currentPeriod,r=[];return i?(i.freeze(),n=i.getEventDefsById(t),n.forEach(function(t){i.removeEventDef(t),r.push(e.mutateSingle(t)),i.addEventDef(t)}),i.thaw(),function(){i.freeze();for(var t=0;t<n.length;t++)i.removeEventDef(n[t]),r[t](),i.addEventDef(n[t]);i.thaw()}):function(){}},t.prototype.buildMutatedEventInstanceGroup=function(t,e){var n,i,r=this.getEventDefsById(t),o=[];for(n=0;n<r.length;n++)(i=r[n].clone())instanceof d.default&&(e.mutateSingle(i),o.push.apply(o,i.buildInstances()));return new c.default(o)},t.prototype.freeze=function(){this.currentPeriod&&this.currentPeriod.freeze()},t.prototype.thaw=function(){this.currentPeriod&&this.currentPeriod.thaw()},t.prototype.getEventDefsById=function(t){return this.currentPeriod.getEventDefsById(t)},t.prototype.getEventInstances=function(){return this.currentPeriod.getEventInstances()},t.prototype.getEventInstancesWithId=function(t){return this.currentPeriod.getEventInstancesWithId(t)},t.prototype.getEventInstancesWithoutId=function(t){return this.currentPeriod.getEventInstancesWithoutId(t)},t}();e.default=f,p.default.mixInto(f),h.default.mixInto(f)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(4),o=n(20),s=n(11),a=n(5),l=n(18),u=function(){function t(t,e,n){this.pendingCnt=0,this.freezeDepth=0,this.stuntedReleaseCnt=0,this.releaseCnt=0,this.start=t,this.end=e,this.timezone=n,this.unzonedRange=new a.default(t.clone().stripZone(),e.clone().stripZone()),this.requestsByUid={},this.eventDefsByUid={},this.eventDefsById={},this.eventInstanceGroupsById={}}return t.prototype.isWithinRange=function(t,e){return!t.isBefore(this.start)&&!e.isAfter(this.end)},t.prototype.requestSources=function(t){this.freeze();for(var e=0;e<t.length;e++)this.requestSource(t[e]);this.thaw()},t.prototype.requestSource=function(t){var e=this,n={source:t,status:"pending",eventDefs:null};this.requestsByUid[t.uid]=n,this.pendingCnt+=1,t.fetch(this.start,this.end,this.timezone).then(function(t){"cancelled"!==n.status&&(n.status="completed",n.eventDefs=t,e.addEventDefs(t),e.pendingCnt--,e.tryRelease())},function(){"cancelled"!==n.status&&(n.status="failed",e.pendingCnt--,e.tryRelease())})},t.prototype.purgeSource=function(t){var e=this.requestsByUid[t.uid];e&&(delete this.requestsByUid[t.uid],"pending"===e.status?(e.status="cancelled",this.pendingCnt--,this.tryRelease()):"completed"===e.status&&e.eventDefs.forEach(this.removeEventDef.bind(this)))},t.prototype.purgeAllSources=function(){var t,e,n=this.requestsByUid,i=0;for(t in n)e=n[t],"pending"===e.status?e.status="cancelled":"completed"===e.status&&i++;this.requestsByUid={},this.pendingCnt=0,i&&this.removeAllEventDefs()},t.prototype.getEventDefByUid=function(t){return this.eventDefsByUid[t]},t.prototype.getEventDefsById=function(t){var e=this.eventDefsById[t];return e?e.slice():[]},t.prototype.addEventDefs=function(t){for(var e=0;e<t.length;e++)this.addEventDef(t[e])},t.prototype.addEventDef=function(t){var e,n=this.eventDefsById,i=t.id,r=n[i]||(n[i]=[]),o=t.buildInstances(this.unzonedRange);for(r.push(t),this.eventDefsByUid[t.uid]=t,e=0;e<o.length;e++)this.addEventInstance(o[e],i)},t.prototype.removeEventDefsById=function(t){var e=this;this.getEventDefsById(t).forEach(function(t){e.removeEventDef(t)})},t.prototype.removeAllEventDefs=function(){var t=i.isEmptyObject(this.eventDefsByUid);this.eventDefsByUid={},this.eventDefsById={},this.eventInstanceGroupsById={},t||this.tryRelease()},t.prototype.removeEventDef=function(t){var e=this.eventDefsById,n=e[t.id]
;delete this.eventDefsByUid[t.uid],n&&(r.removeExact(n,t),n.length||delete e[t.id],this.removeEventInstancesForDef(t))},t.prototype.getEventInstances=function(){var t,e=this.eventInstanceGroupsById,n=[];for(t in e)n.push.apply(n,e[t].eventInstances);return n},t.prototype.getEventInstancesWithId=function(t){var e=this.eventInstanceGroupsById[t];return e?e.eventInstances.slice():[]},t.prototype.getEventInstancesWithoutId=function(t){var e,n=this.eventInstanceGroupsById,i=[];for(e in n)e!==t&&i.push.apply(i,n[e].eventInstances);return i},t.prototype.addEventInstance=function(t,e){var n=this.eventInstanceGroupsById;(n[e]||(n[e]=new l.default)).eventInstances.push(t),this.tryRelease()},t.prototype.removeEventInstancesForDef=function(t){var e,n=this.eventInstanceGroupsById,i=n[t.id];i&&(e=r.removeMatching(i.eventInstances,function(e){return e.def===t}),i.eventInstances.length||delete n[t.id],e&&this.tryRelease())},t.prototype.tryRelease=function(){this.pendingCnt||(this.freezeDepth?this.stuntedReleaseCnt++:this.release())},t.prototype.release=function(){this.releaseCnt++,this.trigger("release",this.eventInstanceGroupsById)},t.prototype.whenReleased=function(){var t=this;return this.releaseCnt?o.default.resolve(this.eventInstanceGroupsById):o.default.construct(function(e){t.one("release",e)})},t.prototype.freeze=function(){this.freezeDepth++||(this.stuntedReleaseCnt=0)},t.prototype.thaw=function(){--this.freezeDepth||!this.stuntedReleaseCnt||this.pendingCnt||this.release()},t}();e.default=u,s.default.mixInto(u)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(4),o=n(7),s=function(){function t(t,e){this.isFollowing=!1,this.isHidden=!1,this.isAnimating=!1,this.options=e=e||{},this.sourceEl=t,this.parentEl=e.parentEl?i(e.parentEl):t.parent()}return t.prototype.start=function(t){this.isFollowing||(this.isFollowing=!0,this.y0=r.getEvY(t),this.x0=r.getEvX(t),this.topDelta=0,this.leftDelta=0,this.isHidden||this.updatePosition(),r.getEvIsTouch(t)?this.listenTo(i(document),"touchmove",this.handleMove):this.listenTo(i(document),"mousemove",this.handleMove))},t.prototype.stop=function(t,e){var n=this,r=this.options.revertDuration,o=function(){n.isAnimating=!1,n.removeElement(),n.top0=n.left0=null,e&&e()};this.isFollowing&&!this.isAnimating&&(this.isFollowing=!1,this.stopListeningTo(i(document)),t&&r&&!this.isHidden?(this.isAnimating=!0,this.el.animate({top:this.top0,left:this.left0},{duration:r,complete:o})):o())},t.prototype.getEl=function(){var t=this.el;return t||(t=this.el=this.sourceEl.clone().addClass(this.options.additionalClass||"").css({position:"absolute",visibility:"",display:this.isHidden?"none":"",margin:0,right:"auto",bottom:"auto",width:this.sourceEl.width(),height:this.sourceEl.height(),opacity:this.options.opacity||"",zIndex:this.options.zIndex}),t.addClass("fc-unselectable"),t.appendTo(this.parentEl)),t},t.prototype.removeElement=function(){this.el&&(this.el.remove(),this.el=null)},t.prototype.updatePosition=function(){var t,e;this.getEl(),null==this.top0&&(t=this.sourceEl.offset(),e=this.el.offsetParent().offset(),this.top0=t.top-e.top,this.left0=t.left-e.left),this.el.css({top:this.top0+this.topDelta,left:this.left0+this.leftDelta})},t.prototype.handleMove=function(t){this.topDelta=r.getEvY(t)-this.y0,this.leftDelta=r.getEvX(t)-this.x0,this.isHidden||this.updatePosition()},t.prototype.hide=function(){this.isHidden||(this.isHidden=!0,this.el&&this.el.hide())},t.prototype.show=function(){this.isHidden&&(this.isHidden=!1,this.updatePosition(),this.getEl().show())},t}();e.default=s,o.default.mixInto(s)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(23),o=n(15),s=function(t){function e(e){var n=t.call(this,e)||this;return n.dragListener=n.buildDragListener(),n}return i.__extends(e,t),e.prototype.end=function(){this.dragListener.endInteraction()},e.prototype.bindToEl=function(t){var e=this.component,n=this.dragListener;e.bindDateHandlerToEl(t,"mousedown",function(t){e.shouldIgnoreMouse()||n.startInteraction(t)}),e.bindDateHandlerToEl(t,"touchstart",function(t){e.shouldIgnoreTouch()||n.startInteraction(t)})},e.prototype.buildDragListener=function(){var t,e=this,n=this.component,i=new r.default(n,{scroll:this.opt("dragScroll"),interactionStart:function(){t=i.origHit},hitOver:function(e,n,i){n||(t=null)},hitOut:function(){t=null},interactionEnd:function(i,r){var o;!r&&t&&(o=n.getSafeHitFootprint(t))&&e.view.triggerDayClick(o,n.getHitEl(t),i)}});return i.shouldCancelTouchScroll=!1,i.scrollAlwaysKills=!0,i},e}(o.default);e.default=s},function(t,e,n){function i(t){var e,n,i,r=[];for(e=0;e<t.length;e++){for(n=t[e],i=0;i<r.length&&s(n,r[i]).length;i++);n.level=i,(r[i]||(r[i]=[])).push(n)}return r}function r(t){var e,n,i,r,o;for(e=0;e<t.length;e++)for(n=t[e],i=0;i<n.length;i++)for(r=n[i],r.forwardSegs=[],o=e+1;o<t.length;o++)s(r,t[o],r.forwardSegs)}function o(t){var e,n,i=t.forwardSegs,r=0;if(void 0===t.forwardPressure){for(e=0;e<i.length;e++)n=i[e],o(n),r=Math.max(r,1+n.forwardPressure);t.forwardPressure=r}}function s(t,e,n){void 0===n&&(n=[]);for(var i=0;i<e.length;i++)a(t,e[i])&&n.push(e[i]);return n}function a(t,e){return t.bottom>e.top&&t.top<e.bottom}Object.defineProperty(e,"__esModule",{value:!0});var l=n(2),u=n(4),d=n(42),c=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.timeGrid=e,i}return l.__extends(e,t),e.prototype.renderFgSegs=function(t){this.renderFgSegsIntoContainers(t,this.timeGrid.fgContainerEls)},e.prototype.renderFgSegsIntoContainers=function(t,e){var n,i;for(n=this.timeGrid.groupSegsByCol(t),i=0;i<this.timeGrid.colCnt;i++)this.updateFgSegCoords(n[i]);this.timeGrid.attachSegsByCol(n,e)},e.prototype.unrenderFgSegs=function(){this.fgSegs&&this.fgSegs.forEach(function(t){t.el.remove()})},e.prototype.computeEventTimeFormat=function(){return this.opt("noMeridiemTimeFormat")},e.prototype.computeDisplayEventEnd=function(){return!0},e.prototype.fgSegHtml=function(t,e){var n,i,r,o=this.view,s=o.calendar,a=t.footprint.componentFootprint,l=a.isAllDay,d=t.footprint.eventDef,c=o.isEventDefDraggable(d),p=!e&&t.isStart&&o.isEventDefResizableFromStart(d),h=!e&&t.isEnd&&o.isEventDefResizableFromEnd(d),f=this.getSegClasses(t,c,p||h),g=u.cssToStr(this.getSkinCss(d));if(f.unshift("fc-time-grid-event","fc-v-event"),o.isMultiDayRange(a.unzonedRange)){if(t.isStart||t.isEnd){var v=s.msToMoment(t.startMs),y=s.msToMoment(t.endMs);n=this._getTimeText(v,y,l),i=this._getTimeText(v,y,l,"LT"),r=this._getTimeText(v,y,l,null,!1)}}else n=this.getTimeText(t.footprint),i=this.getTimeText(t.footprint,"LT"),r=this.getTimeText(t.footprint,null,!1);return'<a class="'+f.join(" ")+'"'+(d.url?' href="'+u.htmlEscape(d.url)+'"':"")+(g?' style="'+g+'"':"")+'><div class="fc-content">'+(n?'<div class="fc-time" data-start="'+u.htmlEscape(r)+'" data-full="'+u.htmlEscape(i)+'"><span>'+u.htmlEscape(n)+"</span></div>":"")+(d.title?'<div class="fc-title">'+u.htmlEscape(d.title)+"</div>":"")+'</div><div class="fc-bg"/>'+(h?'<div class="fc-resizer fc-end-resizer" />':"")+"</a>"},e.prototype.updateFgSegCoords=function(t){this.timeGrid.computeSegVerticals(t),this.computeFgSegHorizontals(t),this.timeGrid.assignSegVerticals(t),this.assignFgSegHorizontals(t)},e.prototype.computeFgSegHorizontals=function(t){var e,n,s;if(this.sortEventSegs(t),e=i(t),r(e),n=e[0]){for(s=0;s<n.length;s++)o(n[s]);for(s=0;s<n.length;s++)this.computeFgSegForwardBack(n[s],0,0)}},e.prototype.computeFgSegForwardBack=function(t,e,n){var i,r=t.forwardSegs;if(void 0===t.forwardCoord)for(r.length?(this.sortForwardSegs(r),this.computeFgSegForwardBack(r[0],e+1,n),t.forwardCoord=r[0].backwardCoord):t.forwardCoord=1,t.backwardCoord=t.forwardCoord-(t.forwardCoord-n)/(e+1),i=0;i<r.length;i++)this.computeFgSegForwardBack(r[i],0,t.forwardCoord)},e.prototype.sortForwardSegs=function(t){t.sort(u.proxy(this,"compareForwardSegs"))},e.prototype.compareForwardSegs=function(t,e){return e.forwardPressure-t.forwardPressure||(t.backwardCoord||0)-(e.backwardCoord||0)||this.compareEventSegs(t,e)},e.prototype.assignFgSegHorizontals=function(t){var e,n;for(e=0;e<t.length;e++)n=t[e],n.el.css(this.generateFgSegHorizontalCss(n)),n.bottom-n.top<30&&n.el.addClass("fc-short")},e.prototype.generateFgSegHorizontalCss=function(t){var e,n,i=this.opt("slotEventOverlap"),r=t.backwardCoord,o=t.forwardCoord,s=this.timeGrid.generateSegVerticalCss(t),a=this.timeGrid.isRTL;return i&&(o=Math.min(1,r+2*(o-r))),a?(e=1-o,n=r):(e=r,n=1-o),s.zIndex=t.level+1,s.left=100*e+"%",s.right=100*n+"%",i&&t.forwardPressure&&(s[a?"marginLeft":"marginRight"]=20),s},e}(d.default);e.default=c},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(58),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.renderSegs=function(t,e){var n,i,o,s=[];for(this.eventRenderer.renderFgSegsIntoContainers(t,this.component.helperContainerEls),n=0;n<t.length;n++)i=t[n],e&&e.col===i.col&&(o=e.el,i.el.css({left:o.css("left"),right:o.css("right"),"margin-left":o.css("margin-left"),"margin-right":o.css("margin-right")})),s.push(i.el[0]);return r(s)},e}(o.default);e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(57),o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.attachSegEls=function(t,e){var n,i=this.component;return"bgEvent"===t?n=i.bgContainerEls:"businessHours"===t?n=i.businessContainerEls:"highlight"===t&&(n=i.highlightContainerEls),i.updateSegVerticals(e),i.attachSegsByCol(i.groupSegsByCol(e),n),e.map(function(t){return t.el[0]})},e}(r.default);e.default=o},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(4),o=n(7),s=function(){function t(t){this.isHidden=!0,this.margin=10,this.options=t||{}}return t.prototype.show=function(){this.isHidden&&(this.el||this.render(),this.el.show(),this.position(),this.isHidden=!1,this.trigger("show"))},t.prototype.hide=function(){this.isHidden||(this.el.hide(),this.isHidden=!0,this.trigger("hide"))},t.prototype.render=function(){var t=this,e=this.options;this.el=i('<div class="fc-popover"/>').addClass(e.className||"").css({top:0,left:0}).append(e.content).appendTo(e.parentEl),this.el.on("click",".fc-close",function(){t.hide()}),e.autoHide&&this.listenTo(i(document),"mousedown",this.documentMousedown)},t.prototype.documentMousedown=function(t){this.el&&!i(t.target).closest(this.el).length&&this.hide()},t.prototype.removeElement=function(){this.hide(),this.el&&(this.el.remove(),this.el=null),this.stopListeningTo(i(document),"mousedown")},t.prototype.position=function(){var t,e,n,o,s,a=this.options,l=this.el.offsetParent().offset(),u=this.el.outerWidth(),d=this.el.outerHeight(),c=i(window),p=r.getScrollParent(this.el);o=a.top||0,s=void 0!==a.left?a.left:void 0!==a.right?a.right-u:0,p.is(window)||p.is(document)?(p=c,t=0,e=0):(n=p.offset(),t=n.top,e=n.left),t+=c.scrollTop(),e+=c.scrollLeft(),!1!==a.viewportConstrain&&(o=Math.min(o,t+p.outerHeight()-d-this.margin),o=Math.max(o,t+this.margin),s=Math.min(s,e+p.outerWidth()-u-this.margin),s=Math.max(s,e+this.margin)),this.el.css({top:o-l.top,left:s-l.left})},t.prototype.trigger=function(t){this.options[t]&&this.options[t].apply(this,Array.prototype.slice.call(arguments,1))},t}();e.default=s,o.default.mixInto(s)},function(t,e,n){function i(t,e){var n,i;for(n=0;n<e.length;n++)if(i=e[n],i.leftCol<=t.rightCol&&i.rightCol>=t.leftCol)return!0;return!1}function r(t,e){return t.leftCol-e.leftCol}Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),s=n(3),a=n(4),l=n(42),u=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.dayGrid=e,i}return o.__extends(e,t),e.prototype.renderBgRanges=function(e){e=s.grep(e,function(t){return t.eventDef.isAllDay()}),t.prototype.renderBgRanges.call(this,e)},e.prototype.renderFgSegs=function(t){var e=this.rowStructs=this.renderSegRows(t);this.dayGrid.rowEls.each(function(t,n){s(n).find(".fc-content-skeleton > table").append(e[t].tbodyEl)})},e.prototype.unrenderFgSegs=function(){for(var t,e=this.rowStructs||[];t=e.pop();)t.tbodyEl.remove();this.rowStructs=null},e.prototype.renderSegRows=function(t){var e,n,i=[];for(e=this.groupSegRows(t),n=0;n<e.length;n++)i.push(this.renderSegRow(n,e[n]));return i},e.prototype.renderSegRow=function(t,e){function n(t){for(;o<t;)d=(y[i-1]||[])[o],d?d.attr("rowspan",parseInt(d.attr("rowspan")||1,10)+1):(d=s("<td/>"),a.append(d)),v[i][o]=d,y[i][o]=d,o++}var i,r,o,a,l,u,d,c=this.dayGrid.colCnt,p=this.buildSegLevels(e),h=Math.max(1,p.length),f=s("<tbody/>"),g=[],v=[],y=[];for(i=0;i<h;i++){if(r=p[i],o=0,a=s("<tr/>"),g.push([]),v.push([]),y.push([]),r)for(l=0;l<r.length;l++){for(u=r[l],n(u.leftCol),d=s('<td class="fc-event-container"/>').append(u.el),u.leftCol!==u.rightCol?d.attr("colspan",u.rightCol-u.leftCol+1):y[i][o]=d;o<=u.rightCol;)v[i][o]=d,g[i][o]=u,o++;a.append(d)}n(c),this.dayGrid.bookendCells(a),f.append(a)}return{row:t,tbodyEl:f,cellMatrix:v,segMatrix:g,segLevels:p,segs:e}},e.prototype.buildSegLevels=function(t){var e,n,o,s=[];for(this.sortEventSegs(t),e=0;e<t.length;e++){for(n=t[e],o=0;o<s.length&&i(n,s[o]);o++);n.level=o,(s[o]||(s[o]=[])).push(n)}for(o=0;o<s.length;o++)s[o].sort(r);return s},e.prototype.groupSegRows=function(t){var e,n=[];for(e=0;e<this.dayGrid.rowCnt;e++)n.push([]);for(e=0;e<t.length;e++)n[t[e].row].push(t[e]);return n},e.prototype.computeEventTimeFormat=function(){return this.opt("extraSmallTimeFormat")},e.prototype.computeDisplayEventEnd=function(){return 1===this.dayGrid.colCnt},e.prototype.fgSegHtml=function(t,e){var n,i,r=this.view,o=t.footprint.eventDef,s=t.footprint.componentFootprint.isAllDay,l=r.isEventDefDraggable(o),u=!e&&s&&t.isStart&&r.isEventDefResizableFromStart(o),d=!e&&s&&t.isEnd&&r.isEventDefResizableFromEnd(o),c=this.getSegClasses(t,l,u||d),p=a.cssToStr(this.getSkinCss(o)),h="";return c.unshift("fc-day-grid-event","fc-h-event"),t.isStart&&(n=this.getTimeText(t.footprint))&&(h='<span class="fc-time">'+a.htmlEscape(n)+"</span>"),i='<span class="fc-title">'+(a.htmlEscape(o.title||"")||"&nbsp;")+"</span>",'<a class="'+c.join(" ")+'"'+(o.url?' href="'+a.htmlEscape(o.url)+'"':"")+(p?' style="'+p+'"':"")+'><div class="fc-content">'+(this.dayGrid.isRTL?i+" "+h:h+" "+i)+"</div>"+(u?'<div class="fc-resizer fc-start-resizer" />':"")+(d?'<div class="fc-resizer fc-end-resizer" />':"")+"</a>"},e}(l.default);e.default=u},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(58),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.renderSegs=function(t,e){var n,i=[];return n=this.eventRenderer.renderSegRows(t),this.component.rowEls.each(function(t,o){var s,a,l=r(o),u=r('<div class="fc-helper-skeleton"><table/></div>');e&&e.row===t?a=e.el.position().top:(s=l.find(".fc-content-skeleton tbody"),s.length||(s=l.find(".fc-content-skeleton table")),a=s.position().top),u.css("top",a).find("table").append(n[t].tbodyEl),l.append(u),i.push(u[0])}),r(i)},e}(o.default);e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(57),s=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.fillSegTag="td",e}return i.__extends(e,t),e.prototype.attachSegEls=function(t,e){var n,i,r,o=[];for(n=0;n<e.length;n++)i=e[n],r=this.renderFillRow(t,i),this.component.rowEls.eq(i.row).append(r),o.push(r[0]);return o},e.prototype.renderFillRow=function(t,e){var n,i,o,s=this.component.colCnt,a=e.leftCol,l=e.rightCol+1;return n="businessHours"===t?"bgevent":t.toLowerCase(),i=r('<div class="fc-'+n+'-skeleton"><table><tr/></table></div>'),o=i.find("tr"),a>0&&o.append('<td colspan="'+a+'"/>'),o.append(e.el.attr("colspan",l-a)),l<s&&o.append('<td colspan="'+(s-l)+'"/>'),this.component.bookendCells(o),i},e}(o.default);e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(228),o=n(5),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.buildRenderRange=function(e,n,i){var r,s=t.prototype.buildRenderRange.call(this,e,n,i),a=this.msToUtcMoment(s.startMs,i),l=this.msToUtcMoment(s.endMs,i);return this.opt("fixedWeekCount")&&(r=Math.ceil(l.diff(a,"weeks",!0)),l.add(6-r,"weeks")),new o.default(a,l)},e}(r.default);e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(4),o=n(42),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.renderFgSegs=function(t){t.length?this.component.renderSegList(t):this.component.renderEmptyMessage()},e.prototype.fgSegHtml=function(t){var e,n=this.view,i=n.calendar,o=i.theme,s=t.footprint,a=s.eventDef,l=s.componentFootprint,u=a.url,d=["fc-list-item"].concat(this.getClasses(a)),c=this.getBgColor(a);return e=l.isAllDay?n.getAllDayHtml():n.isMultiDayRange(l.unzonedRange)?t.isStart||t.isEnd?r.htmlEscape(this._getTimeText(i.msToMoment(t.startMs),i.msToMoment(t.endMs),l.isAllDay)):n.getAllDayHtml():r.htmlEscape(this.getTimeText(s)),u&&d.push("fc-has-url"),'<tr class="'+d.join(" ")+'">'+(this.displayEventTime?'<td class="fc-list-item-time '+o.getClass("widgetContent")+'">'+(e||"")+"</td>":"")+'<td class="fc-list-item-marker '+o.getClass("widgetContent")+'"><span class="fc-event-dot"'+(c?' style="background-color:'+c+'"':"")+'></span></td><td class="fc-list-item-title '+o.getClass("widgetContent")+'"><a'+(u?' href="'+r.htmlEscape(u)+'"':"")+">"+r.htmlEscape(a.title||"")+"</a></td></tr>"},e.prototype.computeEventTimeFormat=function(){return this.opt("mediumTimeFormat")},e}(o.default);e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(3),o=n(59),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e.prototype.handleClick=function(e,n){var i;t.prototype.handleClick.call(this,e,n),r(n.target).closest("a[href]").length||(i=e.footprint.eventDef.url)&&!n.isDefaultPrevented()&&(window.location.href=i)},e}(o.default);e.default=s},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(38),r=n(52),o=n(215),s=n(216);i.default.registerClass(r.default),i.default.registerClass(o.default),i.default.registerClass(s.default)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(51),r=n(213),o=n(214),s=n(258),a=n(259);i.defineThemeSystem("standard",r.default),i.defineThemeSystem("jquery-ui",o.default),i.defineThemeSystem("bootstrap3",s.default),i.defineThemeSystem("bootstrap4",a.default)},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(19),o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e}(r.default);e.default=o,o.prototype.classes={widget:"fc-bootstrap3",tableGrid:"table-bordered",tableList:"table",tableListHeading:"active",buttonGroup:"btn-group",button:"btn btn-default",stateActive:"active",stateDisabled:"disabled",today:"alert alert-info",popover:"panel panel-default",popoverHeader:"panel-heading",popoverContent:"panel-body",headerRow:"panel-default",dayRow:"panel-default",listView:"panel panel-default"},o.prototype.baseIconClass="glyphicon",o.prototype.iconClasses={close:"glyphicon-remove",prev:"glyphicon-chevron-left",next:"glyphicon-chevron-right",prevYear:"glyphicon-backward",nextYear:"glyphicon-forward"},o.prototype.iconOverrideOption="bootstrapGlyphicons",o.prototype.iconOverrideCustomButtonOption="bootstrapGlyphicon",o.prototype.iconOverridePrefix="glyphicon-"},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(19),o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i.__extends(e,t),e}(r.default);e.default=o,o.prototype.classes={widget:"fc-bootstrap4",tableGrid:"table-bordered",tableList:"table",tableListHeading:"table-active",buttonGroup:"btn-group",button:"btn btn-primary",stateActive:"active",stateDisabled:"disabled",today:"alert alert-info",popover:"card card-primary",popoverHeader:"card-header",popoverContent:"card-body",headerRow:"table-bordered",dayRow:"table-bordered",listView:"card card-primary"},o.prototype.baseIconClass="fa",o.prototype.iconClasses={close:"fa-times",prev:"fa-chevron-left",next:"fa-chevron-right",prevYear:"fa-angle-double-left",nextYear:"fa-angle-double-right"},o.prototype.iconOverrideOption="bootstrapFontAwesome",o.prototype.iconOverrideCustomButtonOption="bootstrapFontAwesome",o.prototype.iconOverridePrefix="fa-"},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(22),r=n(62),o=n(229);i.defineView("basic",{class:r.default}),i.defineView("basicDay",{type:"basic",duration:{days:1}}),i.defineView("basicWeek",{type:"basic",duration:{weeks:1}}),i.defineView("month",{class:o.default,duration:{months:1},defaults:{fixedWeekCount:!0}})},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(22),r=n(226);i.defineView("agenda",{class:r.default,defaults:{allDaySlot:!0,slotDuration:"00:30:00",slotEventOverlap:!0}}),i.defineView("agendaDay",{type:"agenda",duration:{days:1}}),i.defineView("agendaWeek",{type:"agenda",duration:{weeks:1}})},function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0});var i=n(22),r=n(230);i.defineView("list",{class:r.default,buttonTextKey:"list",defaults:{buttonText:"list",listDayFormat:"LL",noEventsMessage:"No events to display"}}),i.defineView("listDay",{type:"list",duration:{days:1},defaults:{listDayFormat:"dddd"}}),i.defineView("listWeek",{type:"list",duration:{weeks:1},defaults:{listDayFormat:"dddd",listDayAltFormat:"LL"}}),i.defineView("listMonth",{type:"list",duration:{month:1},defaults:{listDayAltFormat:"dddd"}}),i.defineView("listYear",{type:"list",duration:{year:1},defaults:{listDayAltFormat:"dddd"}})},function(t,e){Object.defineProperty(e,"__esModule",{value:!0})}])});
/*! iFrame Resizer (iframeSizer.min.js ) - v4.1.1 - 2019-04-10
 *  Desc: Force cross domain iframes to size to content.
 *  Requires: iframeResizer.contentWindow.min.js to be loaded into the target frame.
 *  Copyright: (c) 2019 David J. Bradshaw - dave@bradshaw.net
 *  License: MIT
 */

!function(f){if("undefined"!=typeof window){var e,l=0,m=!1,n=!1,p="message".length,b="[iFrameSizer]",y=b.length,v=null,r=window.requestAnimationFrame,g={max:1,scroll:1,bodyScroll:1,documentElementScroll:1},F={},i=null,h={autoResize:!0,bodyBackground:null,bodyMargin:null,bodyMarginV1:8,bodyPadding:null,checkOrigin:!0,inPageLinks:!1,enablePublicMethods:!0,heightCalculationMethod:"bodyOffset",id:"iFrameResizer",interval:32,log:!1,maxHeight:1/0,maxWidth:1/0,minHeight:0,minWidth:0,resizeFrom:"parent",scrolling:!1,sizeHeight:!0,sizeWidth:!1,warningTimeout:5e3,tolerance:0,widthCalculationMethod:"scroll",onClosed:function(){},onInit:function(){},onMessage:function(){O("onMessage function not defined")},onResized:function(){},onScroll:function(){return!0}},I={};window.jQuery&&((e=window.jQuery).fn?e.fn.iFrameResize||(e.fn.iFrameResize=function(i){return this.filter("iframe").each(function(e,n){d(n,i)}).end()}):z("","Unable to bind to jQuery, it is not fully loaded.")),"function"==typeof define&&define.amd?define([],B):"object"==typeof module&&"object"==typeof module.exports&&(module.exports=B()),window.iFrameResize=window.iFrameResize||B()}function w(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver}function M(e,n,i){e.addEventListener(n,i,!1)}function x(e,n,i){e.removeEventListener(n,i,!1)}function o(e){return b+"["+(i="Host page: "+(n=e),window.top!==window.self&&(i=window.parentIFrame&&window.parentIFrame.getId?window.parentIFrame.getId()+": "+n:"Nested host page: "+n),i)+"]";var n,i}function t(e){return F[e]?F[e].log:m}function k(e,n){a("log",e,n,t(e))}function z(e,n){a("info",e,n,t(e))}function O(e,n){a("warn",e,n,!0)}function a(e,n,i,t){!0===t&&"object"==typeof window.console&&console[e](o(n),i)}function s(n){function a(){e("Height"),e("Width"),j(function(){S(h),N(w),l("onResized",h)},h,"init")}function e(e){var n=Number(F[w]["max"+e]),i=Number(F[w]["min"+e]),t=e.toLowerCase(),o=Number(h[t]);k(w,"Checking "+t+" is in range "+i+"-"+n),o<i&&(o=i,k(w,"Set "+t+" to min value")),n<o&&(o=n,k(w,"Set "+t+" to max value")),h[t]=""+o}function s(e){return g.substr(g.indexOf(":")+p+e)}function d(i,t){var e,n,o;e=function(){var e,n;P("Send Page Info","pageInfo:"+(e=document.body.getBoundingClientRect(),n=h.iframe.getBoundingClientRect(),JSON.stringify({iframeHeight:n.height,iframeWidth:n.width,clientHeight:Math.max(document.documentElement.clientHeight,window.innerHeight||0),clientWidth:Math.max(document.documentElement.clientWidth,window.innerWidth||0),offsetTop:parseInt(n.top-e.top,10),offsetLeft:parseInt(n.left-e.left,10),scrollTop:window.pageYOffset,scrollLeft:window.pageXOffset,documentHeight:document.documentElement.clientHeight,documentWidth:document.documentElement.clientWidth,windowHeight:window.innerHeight,windowWidth:window.innerWidth})),i,t)},n=32,I[o=t]||(I[o]=setTimeout(function(){I[o]=null,e()},n))}function c(e){var n=e.getBoundingClientRect();return W(w),{x:Math.floor(Number(n.left)+Number(v.x)),y:Math.floor(Number(n.top)+Number(v.y))}}function u(e){var n=e?c(h.iframe):{x:0,y:0},i={x:Number(h.width)+n.x,y:Number(h.height)+n.y};k(w,"Reposition requested from iFrame (offset x:"+n.x+" y:"+n.y+")"),window.top!==window.self?window.parentIFrame?window.parentIFrame["scrollTo"+(e?"Offset":"")](i.x,i.y):O(w,"Unable to scroll to requested position, window.parentIFrame not found"):(v=i,f(),k(w,"--"))}function f(){!1!==l("onScroll",v)?N(w):C()}function l(e,n){return R(w,e,n)}var i,t,o,r,m,g=n.data,h={},w=null;"[iFrameResizerChild]Ready"===g?function(){for(var e in F)P("iFrame requested init",A(e),document.getElementById(e),e)}():b===(""+g).substr(0,y)&&g.substr(y).split(":")[0]in F?(m=g.substr(y).split(":"),h={iframe:F[m[0]]&&F[m[0]].iframe,id:m[0],height:m[1],width:m[2],type:m[3]},w=h.id,F[w]&&(F[w].loaded=!0),(r=h.type in{true:1,false:1,undefined:1})&&k(w,"Ignoring init message from meta parent page"),!r&&(o=!0,F[t=w]||(o=!1,O(h.type+" No settings for "+t+". Message was: "+g)),o)&&(k(w,"Received: "+g),i=!0,null===h.iframe&&(O(w,"IFrame ("+h.id+") not found"),i=!1),i&&function(){var e,i=n.origin,t=F[w]&&F[w].checkOrigin;if(t&&""+i!="null"&&!(t.constructor===Array?function(){var e=0,n=!1;for(k(w,"Checking connection is from allowed list of origins: "+t);e<t.length;e++)if(t[e]===i){n=!0;break}return n}():(e=F[w]&&F[w].remoteHost,k(w,"Checking connection is from: "+e),i===e)))throw new Error("Unexpected message received from: "+i+" for "+h.iframe.id+". Message was: "+n.data+". This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.");return!0}()&&function(){switch(F[w]&&F[w].firstRun&&F[w]&&(F[w].firstRun=!1),h.type){case"close":F[w].closeRequeston?R(w,"onCloseRequest",F[w].iframe):T(h.iframe);break;case"message":r=s(6),k(w,"onMessage passed: {iframe: "+h.iframe.id+", message: "+r+"}"),l("onMessage",{iframe:h.iframe,message:JSON.parse(r)}),k(w,"--");break;case"scrollTo":u(!1);break;case"scrollToOffset":u(!0);break;case"pageInfo":d(F[w]&&F[w].iframe,w),function(){function e(n,i){function t(){F[r]?d(F[r].iframe,r):o()}["scroll","resize"].forEach(function(e){k(r,n+e+" listener for sendPageInfo"),i(window,e,t)})}function o(){e("Remove ",x)}var r=w;e("Add ",M),F[r]&&(F[r].stopPageInfo=o)}();break;case"pageInfoStop":F[w]&&F[w].stopPageInfo&&(F[w].stopPageInfo(),delete F[w].stopPageInfo);break;case"inPageLink":e=s(9),i=e.split("#")[1]||"",t=decodeURIComponent(i),(o=document.getElementById(t)||document.getElementsByName(t)[0])?(n=c(o),k(w,"Moving to in page link (#"+i+") at x: "+n.x+" y: "+n.y),v={x:n.x,y:n.y},f(),k(w,"--")):window.top!==window.self?window.parentIFrame?window.parentIFrame.moveToAnchor(i):k(w,"In page link #"+i+" not found and window.parentIFrame not found"):k(w,"In page link #"+i+" not found");break;case"reset":H(h);break;case"init":a(),l("onInit",h.iframe);break;default:a()}var e,n,i,t,o,r}())):z(w,"Ignored: "+g)}function R(e,n,i){var t=null,o=null;if(F[e]){if("function"!=typeof(t=F[e][n]))throw new TypeError(n+" on iFrame["+e+"] is not a function");o=t(i)}return o}function E(e){var n=e.id;delete F[n]}function T(e){var n=e.id;k(n,"Removing iFrame: "+n);try{e.parentNode&&e.parentNode.removeChild(e)}catch(e){O(e)}R(n,"onClosed",n),k(n,"--"),E(e)}function W(e){null===v&&k(e,"Get page position: "+(v={x:window.pageXOffset!==f?window.pageXOffset:document.documentElement.scrollLeft,y:window.pageYOffset!==f?window.pageYOffset:document.documentElement.scrollTop}).x+","+v.y)}function N(e){null!==v&&(window.scrollTo(v.x,v.y),k(e,"Set page position: "+v.x+","+v.y),C())}function C(){v=null}function H(e){k(e.id,"Size reset requested by "+("init"===e.type?"host page":"iFrame")),W(e.id),j(function(){S(e),P("reset","reset",e.iframe,e.id)},e,"reset")}function S(i){function t(e){n||"0"!==i[e]||(n=!0,k(o,"Hidden iFrame detected, creating visibility listener"),function(){function n(){Object.keys(F).forEach(function(e){!function(n){function e(e){return"0px"===(F[n]&&F[n].iframe.style[e])}F[n]&&(i=F[n].iframe,null!==i.offsetParent)&&(e("height")||e("width"))&&P("Visibility change","resize",F[n].iframe,n);var i}(F[e])})}function e(e){k("window","Mutation observed: "+e[0].target+" "+e[0].type),c(n,16)}var i=w();i&&(t=document.querySelector("body"),o={attributes:!0,attributeOldValue:!1,characterData:!0,characterDataOldValue:!1,childList:!0,subtree:!0},new i(e).observe(t,o));var t,o}())}function e(e){var n;n=e,i.id?(i.iframe.style[n]=i[n]+"px",k(i.id,"IFrame ("+o+") "+n+" set to "+i[n]+"px")):k("undefined","messageData id not set"),t(e)}var o=i.iframe.id;F[o]&&(F[o].sizeHeight&&e("height"),F[o].sizeWidth&&e("width"))}function j(e,n,i){i!==n.type&&r?(k(n.id,"Requesting animation frame"),r(e)):e()}function P(e,n,i,t,o){var r,a=!1;t=t||i.id,F[t]&&(i&&"contentWindow"in i&&null!==i.contentWindow?(r=F[t]&&F[t].targetOrigin,k(t,"["+e+"] Sending msg to iframe["+t+"] ("+n+") targetOrigin: "+r),i.contentWindow.postMessage(b+n,r)):O(t,"["+e+"] IFrame("+t+") not found"),o&&F[t]&&F[t].warningTimeout&&(F[t].msgTimeout=setTimeout(function(){!F[t]||F[t].loaded||a||(a=!0,O(t,"IFrame has not responded within "+F[t].warningTimeout/1e3+" seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ignored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning."))},F[t].warningTimeout)))}function A(e){return e+":"+F[e].bodyMarginV1+":"+F[e].sizeWidth+":"+F[e].log+":"+F[e].interval+":"+F[e].enablePublicMethods+":"+F[e].autoResize+":"+F[e].bodyMargin+":"+F[e].heightCalculationMethod+":"+F[e].bodyBackground+":"+F[e].bodyPadding+":"+F[e].tolerance+":"+F[e].inPageLinks+":"+F[e].resizeFrom+":"+F[e].widthCalculationMethod}function d(i,e){function n(e){var n=e.split("Callback");if(2===n.length){var i="on"+n[0].charAt(0).toUpperCase()+n[0].slice(1);this[i]=this[e],delete this[e],O(u,"Deprecated: '"+e+"' has been renamed '"+i+"'. The old method will be removed in the next major version.")}}var t,o,r,a,s,d,c,u=(""===(t=i.id)&&(i.id=(o=e&&e.id||h.id+l++,null!==document.getElementById(o)&&(o+=l++),t=o),m=(e||{}).log,k(t,"Added missing iframe ID: "+t+" ("+i.src+")")),t);u in F&&"iFrameResizer"in i?O(u,"Ignored iFrame, already setup."):(d=(d=e)||{},F[u]={firstRun:!0,iframe:i,remoteHost:i.src.split("/").slice(0,3).join("/")},function(e){if("object"!=typeof e)throw new TypeError("Options is not an object")}(d),Object.keys(d).forEach(n,d),function(e){for(var n in h)Object.prototype.hasOwnProperty.call(h,n)&&(F[u][n]=Object.prototype.hasOwnProperty.call(e,n)?e[n]:h[n])}(d),F[u]&&(F[u].targetOrigin=!0===F[u].checkOrigin?""===(c=F[u].remoteHost)||"file://"===c?"*":c:"*"),function(){switch(k(u,"IFrame scrolling "+(F[u]&&F[u].scrolling?"enabled":"disabled")+" for "+u),i.style.overflow=!1===(F[u]&&F[u].scrolling)?"hidden":"auto",F[u]&&F[u].scrolling){case"omit":break;case!0:i.scrolling="yes";break;case!1:i.scrolling="no";break;default:i.scrolling=F[u]?F[u].scrolling:"no"}}(),function(){function e(e){1/0!==F[u][e]&&0!==F[u][e]&&(i.style[e]=F[u][e]+"px",k(u,"Set "+e+" = "+F[u][e]+"px"))}function n(e){if(F[u]["min"+e]>F[u]["max"+e])throw new Error("Value for min"+e+" can not be greater than max"+e)}n("Height"),n("Width"),e("maxHeight"),e("minHeight"),e("maxWidth"),e("minWidth")}(),"number"!=typeof(F[u]&&F[u].bodyMargin)&&"0"!==(F[u]&&F[u].bodyMargin)||(F[u].bodyMarginV1=F[u].bodyMargin,F[u].bodyMargin=F[u].bodyMargin+"px"),r=A(u),(s=w())&&(a=s,i.parentNode&&new a(function(e){e.forEach(function(e){Array.prototype.slice.call(e.removedNodes).forEach(function(e){e===i&&T(i)})})}).observe(i.parentNode,{childList:!0})),M(i,"load",function(){var e,n;P("iFrame.onload",r,i,f,!0),e=F[u]&&F[u].firstRun,n=F[u]&&F[u].heightCalculationMethod in g,!e&&n&&H({iframe:i,height:0,width:0,type:"init"})}),P("init",r,i,f,!0),F[u]&&(F[u].iframe.iFrameResizer={close:T.bind(null,F[u].iframe),removeListeners:E.bind(null,F[u].iframe),resize:P.bind(null,"Window resize","resize",F[u].iframe),moveToAnchor:function(e){P("Move to anchor","moveToAnchor:"+e,F[u].iframe,u)},sendMessage:function(e){P("Send Message","message:"+(e=JSON.stringify(e)),F[u].iframe,u)}}))}function c(e,n){null===i&&(i=setTimeout(function(){i=null,e()},n))}function u(){"hidden"!==document.visibilityState&&(k("document","Trigger event: Visiblity change"),c(function(){q("Tab Visable","resize")},16))}function q(i,t){Object.keys(F).forEach(function(e){var n;F[n=e]&&"parent"===F[n].resizeFrom&&F[n].autoResize&&!F[n].firstRun&&P(i,t,document.getElementById(e),e)})}function L(){M(window,"message",s),M(window,"resize",function(){var e;k("window","Trigger event: "+(e="resize")),c(function(){q("Window "+e,"resize")},16)}),M(document,"visibilitychange",u),M(document,"-webkit-visibilitychange",u)}function B(){function t(e,n){n&&(!function(){if(!n.tagName)throw new TypeError("Object is not a valid DOM element");if("IFRAME"!==n.tagName.toUpperCase())throw new TypeError("Expected <IFRAME> tag, found <"+n.tagName+">")}(),d(n,e),o.push(n))}var o;return function(){var e,n=["moz","webkit","o","ms"];for(e=0;e<n.length&&!r;e+=1)r=window[n[e]+"RequestAnimationFrame"];r||k("setup","RequestAnimationFrame not supported")}(),L(),function(e,n){var i;switch(o=[],(i=e)&&i.enablePublicMethods&&O("enablePublicMethods option has been removed, public methods are now always available in the iFrame"),typeof n){case"undefined":case"string":Array.prototype.forEach.call(document.querySelectorAll(n||"iframe"),t.bind(f,e));break;case"object":t(e,n);break;default:throw new TypeError("Unexpected data type ("+typeof n+")")}return o}}}();
//# sourceMappingURL=iframeResizer.map
/**
 * Paginator viewmodel, creates an array for pagination. Also keeps track of pagination variables.
 * @param {String} totalResults    Total number of items.
 * @param {String} itemsPerPage    How many items are on each page.
 * @param {String} paginationItems How many pagination buttons to display.
 */

var PaginationViewModel = function(totalResults, itemsPerPage, paginationItems) {
	var self = this;
    self.itemsPerPage = ko.observable(itemsPerPage || 6); 					// How many results to display per page.
    self.totalResults = ko.observable(totalResults || -1);
    self.currentPage = ko.observable(1);
    self.paginationItems = ko.observable(paginationItems || 3); 			// Max number pagination buttons to display at the bottom of the page. (Must be set to odd numbers)
    
    self.firstVisibleItem = ko.computed(function(){
    	if(self.currentPage() === 1){
    		return 1;
    	}
    	return parseInt(self.itemsPerPage()) * (parseInt(self.currentPage()) - 1) + 1;
    });

    self.totalPages = ko.computed(function(){
    	return Math.ceil(self.totalResults() / self.itemsPerPage());
    });

    self.lastVisibleItem = ko.computed(function(){
    	if(self.currentPage() < self.totalPages()){
    		return parseInt(self.firstVisibleItem()) - 1 + parseInt(self.itemsPerPage());
    	} else {
    		return parseInt(self.totalResults());
    	}
    });

    self.nextPageExists = ko.computed(function() {
        return self.currentPage() < self.totalPages();
    });

    self.showPageDetails = ko.computed(function() {
        return self.totalResults() > 0;
    });

    self.showPageButtons = ko.computed(function() {
        return self.totalPages() > 1;
    });

    self.showPagination = ko.computed(function() {
        return self.showPageDetails() || self.showPageButtons();
    });

    self.previousPageExists = ko.computed(function() {
        return self.currentPage() > 1;
    });

    self.getTabIndex = ko.computed(function(page) {
        return (self.currentPage() === page) ? -1 : 0;
    });

    self.prevDisabled = ko.computed(function(){
    	return self.previousPageExists() ? '' : 'disabled';
    });

    self.nextDisabled = ko.computed(function(){
    	return self.nextPageExists() ? '' : 'disabled';
    });

    self.activeClass = function(data){
    	return data === self.currentPage() ? 'active' : '';
    };

	/*
	 * Uses paginationItems to construct an array that represents the pagination buttons at the bottom of the page.
	 * This is later used by the template to create these buttons. As an example: [1,2,3,4,5] will be returned if there are at least 5 pages, 
	 * and the current page is between 1 and 3.
	 * @return {Array} An array that represents the pagination buttons at the bottom of the page.
	 */

    self.paginationArray = ko.computed(function() {
        var pageArray = [];
        var halfMax = (self.paginationItems() - 1) / 2;

        /* updated 11/1 to fix for type coercion */
        var currentPage = typeof self.currentPage() === 'number' ? self.currentPage() : parseInt(self.currentPage());
        var paginationItems = typeof self.paginationItems() === 'number' ? self.paginationItems() : parseInt(self.paginationItems());
        var totalPages = typeof self.totalPages() === 'number' ? self.totalPages() : parseInt(self.totalPages());

        if (currentPage <= (paginationItems - 1)) {																	//if there are less than 4 pages display all pages
            for (var i = 1; i <= Math.min(paginationItems, totalPages); i++) {
                pageArray.push(i);
            }
        } else if (currentPage >= paginationItems && ((currentPage + halfMax) <= totalPages)) { 		//if there are halfMax pages after current page, center the currentPage
            for (var j = (currentPage - halfMax); j < ((currentPage - halfMax) + paginationItems); j++) {
                pageArray.push(j);
            }
        } else if (currentPage >= paginationItems && ((currentPage + halfMax) > totalPages)) { 			//if there are fewer than halfMax pages after current page, then display final 5 pages
            for (var k = (totalPages - paginationItems + 1) || 1; k <= totalPages; k++) {
                pageArray.push(k);
            }
        }
        return pageArray;
    });

    self.init = function(totalResults) {
        self.totalResults(totalResults);
    };

};

/* Example HTML
<div class="pagination" data-sly-test="${!wcmmode.edit}" data-bind="if: showPagination">
	<p>Displaying <span class="first" data-bind="text: firstVisibleItem"></span>-<span data-bind="text: lastVisibleItem"></span> of <span class="total" data-bind="text: totalResults"></span></p>
		<div class="paging" data-bind="if: showPageButtons">
		    <a href="#" class="prev" data-bind="css: prevDisabled">
		        <span class="icon-angle-left" aria-hidden="true"></span>
		        <span class="sr-only">Previous</span>
		    </a>

		    <ol>   
		        <li data-bind="template: { name: 'pagination-item-template', foreach: paginationArray }"></li>
		    </ol>

		    <a href="#" class="next" data-bind="css: nextDisabled">
		        <span class="icon-angle-right" aria-hidden="true"></span>
		        <span class="sr-only">Next</span>
		    </a>
		</div>
</div>

<script type="text/html" id="pagination-item-template">
	<li data-bind="css: $root.activeClass($data)"><a href="#" data-bind="text: $data"></a></li>
</script>
*/

/*!
* simplePagination.js v1.6
* A simple jQuery pagination plugin.
* http://flaviusmatis.github.com/simplePagination.js/
*
* Copyright 2012, Flavius Matis
* Released under the MIT license.
* http://flaviusmatis.github.com/license.html
*/
/** @license
* simplePagination.js v1.6
* A simple jQuery pagination plugin.
* http://flaviusmatis.github.com/simplePagination.js/
*
* Copyright 2012, Flavius Matis
* Released under the MIT license.
* http://flaviusmatis.github.com/license.html
*/
(function($){

	var methods = {
		init: function(options) {
			var o = $.extend({
				items: 1,
				itemsOnPage: 1,
				pages: 0,
				displayedPages: 5,
				edges: 2,
				currentPage: 0,
				useAnchors: true,
				hrefTextPrefix: '#page-',
				hrefTextSuffix: '',
				prevText: 'Prev',
				nextText: 'Next',
				ellipseText: '&hellip;',
				ellipsePageSet: true,
				cssStyle: 'light-theme',
				listStyle: '',
				labelMap: [],
				selectOnClick: true,
				nextAtFront: false,
				invertPageOrder: false,
				useStartEdge : true,
				useEndEdge : true,
				onPageClick: function(pageNumber, event) {
					// Callback triggered when a page is clicked
					// Page number is given as an optional parameter
				},
				onInit: function() {
					// Callback triggered immediately after initialization
				}
			}, options || {});

			var self = this;

			o.pages = o.pages ? o.pages : Math.ceil(o.items / o.itemsOnPage) ? Math.ceil(o.items / o.itemsOnPage) : 1;
			if (o.currentPage)
				o.currentPage = o.currentPage - 1;
			else
				o.currentPage = !o.invertPageOrder ? 0 : o.pages - 1;
			o.halfDisplayed = o.displayedPages / 2;

			this.each(function() {
				self.addClass(o.cssStyle + ' simple-pagination').data('pagination', o);
				methods._draw.call(self);
			});

			o.onInit();

			return this;
		},

		selectPage: function(page) {
			methods._selectPage.call(this, page - 1);
			return this;
		},

		prevPage: function() {
			var o = this.data('pagination');
			if (!o.invertPageOrder) {
				if (o.currentPage > 0) {
					methods._selectPage.call(this, o.currentPage - 1);
				}
			} else {
				if (o.currentPage < o.pages - 1) {
					methods._selectPage.call(this, o.currentPage + 1);
				}
			}
			return this;
		},

		nextPage: function() {
			var o = this.data('pagination');
			if (!o.invertPageOrder) {
				if (o.currentPage < o.pages - 1) {
					methods._selectPage.call(this, o.currentPage + 1);
				}
			} else {
				if (o.currentPage > 0) {
					methods._selectPage.call(this, o.currentPage - 1);
				}
			}
			return this;
		},

		getPagesCount: function() {
			return this.data('pagination').pages;
		},

		setPagesCount: function(count) {
			this.data('pagination').pages = count;
		},

		getCurrentPage: function () {
			return this.data('pagination').currentPage + 1;
		},

		destroy: function(){
			this.empty();
			return this;
		},

		drawPage: function (page) {
			var o = this.data('pagination');
			o.currentPage = page - 1;
			this.data('pagination', o);
			methods._draw.call(this);
			return this;
		},

		redraw: function(){
			methods._draw.call(this);
			return this;
		},

		disable: function(){
			var o = this.data('pagination');
			o.disabled = true;
			this.data('pagination', o);
			methods._draw.call(this);
			return this;
		},

		enable: function(){
			var o = this.data('pagination');
			o.disabled = false;
			this.data('pagination', o);
			methods._draw.call(this);
			return this;
		},

		updateItems: function (newItems) {
			var o = this.data('pagination');
			o.items = newItems;
			o.pages = methods._getPages(o);
			this.data('pagination', o);
			methods._draw.call(this);
		},

		updateItemsOnPage: function (itemsOnPage) {
			var o = this.data('pagination');
			o.itemsOnPage = itemsOnPage;
			o.pages = methods._getPages(o);
			this.data('pagination', o);
			methods._selectPage.call(this, 0);
			return this;
		},

		getItemsOnPage: function() {
			return this.data('pagination').itemsOnPage;
		},

		_draw: function() {
			var	o = this.data('pagination'),
				interval = methods._getInterval(o),
				i,
				tagName;

			methods.destroy.call(this);

			tagName = (typeof this.prop === 'function') ? this.prop('tagName') : this.attr('tagName');

			// var $panel = tagName === 'UL' ? this : $('<ul' + (o.listStyle ? ' class="' + o.listStyle + '"' : '') + '></ul>').appendTo(this);
            var $panel = tagName === 'UL' ? this : $('<ul class="pagination-count text-right"></ul>').appendTo(this);

			// Generate Prev link
			if (o.prevText) {
				// methods._appendItem.call(this, !o.invertPageOrder ? o.currentPage - 1 : o.currentPage + 1, {text: o.prevText, classes: 'prev'});
                methods._appendItem.call(this, !o.invertPageOrder ? o.currentPage - 1 : o.currentPage + 1, {text: '', classes: 'prev control_prev'});
			}

			// Generate Next link (if option set for at front)
			if (o.nextText && o.nextAtFront) {
				// methods._appendItem.call(this, !o.invertPageOrder ? o.currentPage + 1 : o.currentPage - 1, {text: o.nextText, classes: 'next'});
                methods._appendItem.call(this, !o.invertPageOrder ? o.currentPage + 1 : o.currentPage - 1, {text: '', classes: 'next control_next'});
			}

			// Generate start edges
			if (!o.invertPageOrder) {
				if (interval.start > 0 && o.edges > 0) {
					if(o.useStartEdge) {
						var end = Math.min(o.edges, interval.start);
						for (i = 0; i < end; i++) {
							methods._appendItem.call(this, i);
						}
					}
					if (o.edges < interval.start && (interval.start - o.edges != 1)) {
						$panel.append('<li class="disabled"><span class="ellipse">' + o.ellipseText + '</span></li>');
					} else if (interval.start - o.edges == 1) {
						methods._appendItem.call(this, o.edges);
					}
				}
			} else {
				if (interval.end < o.pages && o.edges > 0) {
					if(o.useStartEdge) {
						var begin = Math.max(o.pages - o.edges, interval.end);
						for (i = o.pages - 1; i >= begin; i--) {
							methods._appendItem.call(this, i);
						}
					}

					if (o.pages - o.edges > interval.end && (o.pages - o.edges - interval.end != 1)) {
						$panel.append('<li class="disabled"><span class="ellipse">' + o.ellipseText + '</span></li>');
					} else if (o.pages - o.edges - interval.end == 1) {
						methods._appendItem.call(this, interval.end);
					}
				}
			}

			// Generate interval links
			if (!o.invertPageOrder) {
				for (i = interval.start; i < interval.end; i++) {
					methods._appendItem.call(this, i);
				}
			} else {
				for (i = interval.end - 1; i >= interval.start; i--) {
					methods._appendItem.call(this, i);
				}
			}

			// Generate end edges
			if (!o.invertPageOrder) {
				if (interval.end < o.pages && o.edges > 0) {
					if (o.pages - o.edges > interval.end && (o.pages - o.edges - interval.end != 1)) {
						$panel.append('<li class="disabled"><span class="ellipse">' + o.ellipseText + '</span></li>');
					} else if (o.pages - o.edges - interval.end == 1) {
						methods._appendItem.call(this, interval.end);
					}
					if(o.useEndEdge) {
						var begin = Math.max(o.pages - o.edges, interval.end);
						for (i = begin; i < o.pages; i++) {
							methods._appendItem.call(this, i);
						}
					}
				}
			} else {
				if (interval.start > 0 && o.edges > 0) {
					if (o.edges < interval.start && (interval.start - o.edges != 1)) {
						$panel.append('<li class="disabled"><span class="ellipse">' + o.ellipseText + '</span></li>');
					} else if (interval.start - o.edges == 1) {
						methods._appendItem.call(this, o.edges);
					}

					if(o.useEndEdge) {
						var end = Math.min(o.edges, interval.start);
						for (i = end - 1; i >= 0; i--) {
							methods._appendItem.call(this, i);
						}
					}
				}
			}

			// Generate Next link (unless option is set for at front)
			if (o.nextText && !o.nextAtFront) {
				methods._appendItem.call(this, !o.invertPageOrder ? o.currentPage + 1 : o.currentPage - 1, {text: '', classes: 'next control_next icon-chevron-right'});
			}

			if (o.ellipsePageSet && !o.disabled) {
				methods._ellipseClick.call(this, $panel);
			}

		},

		_getPages: function(o) {
			var pages = Math.ceil(o.items / o.itemsOnPage);
			return pages || 1;
		},

		_getInterval: function(o) {
			return {
				start: Math.ceil(o.currentPage > o.halfDisplayed ? Math.max(Math.min(o.currentPage - o.halfDisplayed, (o.pages - o.displayedPages)), 0) : 0),
				end: Math.ceil(o.currentPage > o.halfDisplayed ? Math.min(o.currentPage + o.halfDisplayed, o.pages) : Math.min(o.displayedPages, o.pages))
			};
		},

		_appendItem: function(pageIndex, opts) {
			var self = this, options, $link, o = self.data('pagination'), $linkWrapper = $('<li class="pagination-item"></li>'), $ul = self.find('ul');

			pageIndex = pageIndex < 0 ? 0 : (pageIndex < o.pages ? pageIndex : o.pages - 1);

			options = {
				text: pageIndex + 1,
				classes: ''
			};

			if (o.labelMap.length && o.labelMap[pageIndex]) {
				options.text = o.labelMap[pageIndex];
			}

			options = $.extend(options, opts || {});

			if (pageIndex == o.currentPage || o.disabled) {
                if (o.disabled || options.classes.indexOf('prev') >= 0 || options.classes.indexOf('next') >= 0 ) {
					$linkWrapper.addClass('disabled');
				} else {
                    $linkWrapper.addClass('active selected');
				}
				$link = $('<a class="current">' + (options.text) + '</a>');
			} else {
				if (o.useAnchors) {
					// $link = $('<a href="' + o.hrefTextPrefix + (pageIndex + 1) + o.hrefTextSuffix + '" class="page-link">' + (options.text) + '</a>');
                    $link = $('<a class="page-link">' + (options.text) + '</a>');
				} else {
					$link = $('<span >' + (options.text) + '</span>');
				}
				$link.click(function(event){
					return methods._selectPage.call(self, pageIndex, event);
				});
			}

			if (options.classes) {
				$link.addClass(options.classes);
			}

			$linkWrapper.append($link);

			if ($ul.length) {
				$ul.append($linkWrapper);
			} else {
				self.append($linkWrapper);
			}
		},

		_selectPage: function(pageIndex, event) {
			var o = this.data('pagination');
			o.currentPage = pageIndex;
			if (o.selectOnClick) {
				methods._draw.call(this);
			}
			return o.onPageClick(pageIndex + 1, event);
		},


		_ellipseClick: function($panel) {
			var self = this,
				o = this.data('pagination'),
				$ellip = $panel.find('.ellipse');
			$ellip.addClass('clickable').parent().removeClass('disabled');
			$ellip.click(function(event) {
				if (!o.disable) {
					var $this = $(this),
						val = (parseInt($this.parent().prev().text(), 10) || 0) + 1;
					$this
						.html('<input type="number" min="1" max="' + o.pages + '" step="1" value="' + val + '">')
						.find('input')
						.focus()
						.click(function(event) {
							// prevent input number arrows from bubbling a click event on $ellip
							event.stopPropagation();
						})
						.keyup(function(event) {
							var val = $(this).val();
							if (event.which === 13 && val !== '') {
								// enter to accept
								if ((val>0)&&(val<=o.pages))
								methods._selectPage.call(self, val - 1);
							} else if (event.which === 27) {
								// escape to cancel
								$ellip.empty().html(o.ellipseText);
							}
						})
						.bind('blur', function(event) {
							var val = $(this).val();
							if (val !== '') {
								methods._selectPage.call(self, val - 1);
							}
							$ellip.empty().html(o.ellipseText);
							return false;
						});
				}
				return false;
			});
		}

	};

	$.fn.pagination = function(method) {

		// Method calling logic
		if (methods[method] && method.charAt(0) != '_') {
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if (typeof method === 'object' || !method) {
			return methods.init.apply(this, arguments);
		} else {
			$.error('Method ' +  method + ' does not exist on jQuery.pagination');
		}

	};

})(jQuery);

/*! npm.im/object-fit-images 3.2.3 */
var objectFitImages=function(){"use strict";function t(t,e){return"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='"+t+"' height='"+e+"'%3E%3C/svg%3E"}function e(t){if(t.srcset&&!m&&window.picturefill){var e=window.picturefill._;t[e.ns]&&t[e.ns].evaled||e.fillImg(t,{reselect:!0}),t[e.ns].curSrc||(t[e.ns].supported=!1,e.fillImg(t,{reselect:!0})),t.currentSrc=t[e.ns].curSrc||t.src}}function i(t){for(var e,i=getComputedStyle(t).fontFamily,r={};null!==(e=l.exec(i));)r[e[1]]=e[2];return r}function r(e,i,r){var n=t(i||1,r||0);p.call(e,"src")!==n&&b.call(e,"src",n)}function n(t,e){t.naturalWidth?e(t):setTimeout(n,100,t,e)}function c(t){var c=i(t),o=t[a];if(c["object-fit"]=c["object-fit"]||"fill",!o.img){if("fill"===c["object-fit"])return;if(!o.skipTest&&g&&!c["object-position"])return}if(!o.img){o.img=new Image(t.width,t.height),o.img.srcset=p.call(t,"data-ofi-srcset")||t.srcset,o.img.src=p.call(t,"data-ofi-src")||t.src,b.call(t,"data-ofi-src",t.src),t.srcset&&b.call(t,"data-ofi-srcset",t.srcset),r(t,t.naturalWidth||t.width,t.naturalHeight||t.height),t.srcset&&(t.srcset="");try{s(t)}catch(t){window.console&&console.warn("https://bit.ly/ofi-old-browser")}}e(o.img),t.style.backgroundImage='url("'+(o.img.currentSrc||o.img.src).replace(/"/g,'\\"')+'")',t.style.backgroundPosition=c["object-position"]||"center",t.style.backgroundRepeat="no-repeat",t.style.backgroundOrigin="content-box",/scale-down/.test(c["object-fit"])?n(o.img,function(){o.img.naturalWidth>t.width||o.img.naturalHeight>t.height?t.style.backgroundSize="contain":t.style.backgroundSize="auto"}):t.style.backgroundSize=c["object-fit"].replace("none","auto").replace("fill","100% 100%"),n(o.img,function(e){r(t,e.naturalWidth,e.naturalHeight)})}function s(t){var e={get:function(e){return t[a].img[e||"src"]},set:function(e,i){return t[a].img[i||"src"]=e,b.call(t,"data-ofi-"+i,e),c(t),e}};Object.defineProperty(t,"src",e),Object.defineProperty(t,"currentSrc",{get:function(){return e.get("currentSrc")}}),Object.defineProperty(t,"srcset",{get:function(){return e.get("srcset")},set:function(t){return e.set(t,"srcset")}})}function o(t,e){var i=!h&&!t;if(e=e||{},t=t||"img",f&&!e.skipTest||!d)return!1;"img"===t?t=document.getElementsByTagName("img"):"string"==typeof t?t=document.querySelectorAll(t):"length"in t||(t=[t]);for(var r=0;r<t.length;r++)t[r][a]=t[r][a]||{skipTest:e.skipTest},c(t[r]);i&&(document.body.addEventListener("load",function(t){"IMG"===t.target.tagName&&o(t.target,{skipTest:e.skipTest})},!0),h=!0,t="img"),e.watchMQ&&window.addEventListener("resize",o.bind(null,t,{skipTest:e.skipTest}))}var a="bfred-it:object-fit-images",l=/(object-fit|object-position)\s*:\s*([-\w\s%]+)/g,u="undefined"==typeof Image?{style:{"object-position":1}}:new Image,g="object-fit"in u.style,f="object-position"in u.style,d="background-size"in u.style,m="string"==typeof u.currentSrc,p=u.getAttribute,b=u.setAttribute,h=!1;return o.supportsObjectFit=g,o.supportsObjectPosition=f,function(){function t(t,e){return t[a]&&t[a].img&&("src"===e||"srcset"===e)?t[a].img:t}f||(HTMLImageElement.prototype.getAttribute=function(e){return p.call(t(this,e),e)},HTMLImageElement.prototype.setAttribute=function(e,i){return b.call(t(this,e),e,String(i))})}(),o}();
/*----------------------------------------
 * objectFitPolyfill 2.3.0
 *
 * Made by Constance Chen
 * Released under the MIT license
 *
 * https://github.com/constancecchen/object-fit-polyfill
 *--------------------------------------*/
!function(){"use strict";if("undefined"!=typeof window){var t=window.navigator.userAgent.match(/Edge\/(\d{2})\./),n=!!t&&16<=parseInt(t[1],10);if(!("objectFit"in document.documentElement.style!=!1)||n){var o=function(t,e,i){var n,o,l,a,d;if((i=i.split(" ")).length<2&&(i[1]=i[0]),"x"===t)n=i[0],o=i[1],l="left",a="right",d=e.clientWidth;else{if("y"!==t)return;n=i[1],o=i[0],l="top",a="bottom",d=e.clientHeight}if(n!==l&&o!==l){if(n!==a&&o!==a)return"center"===n||"50%"===n?(e.style[l]="50%",void(e.style["margin-"+l]=d/-2+"px")):void(0<=n.indexOf("%")?(n=parseInt(n))<50?(e.style[l]=n+"%",e.style["margin-"+l]=d*(n/-100)+"px"):(n=100-n,e.style[a]=n+"%",e.style["margin-"+a]=d*(n/-100)+"px"):e.style[l]=n);e.style[a]="0"}else e.style[l]="0"},l=function(t){var e=t.dataset?t.dataset.objectFit:t.getAttribute("data-object-fit"),i=t.dataset?t.dataset.objectPosition:t.getAttribute("data-object-position");e=e||"cover",i=i||"50% 50%";var n=t.parentNode;return function(t){var e=window.getComputedStyle(t,null),i=e.getPropertyValue("position"),n=e.getPropertyValue("overflow"),o=e.getPropertyValue("display");i&&"static"!==i||(t.style.position="relative"),"hidden"!==n&&(t.style.overflow="hidden"),o&&"inline"!==o||(t.style.display="block"),0===t.clientHeight&&(t.style.height="100%"),-1===t.className.indexOf("object-fit-polyfill")&&(t.className=t.className+" object-fit-polyfill")}(n),function(t){var e=window.getComputedStyle(t,null),i={"max-width":"none","max-height":"none","min-width":"0px","min-height":"0px",top:"auto",right:"auto",bottom:"auto",left:"auto","margin-top":"0px","margin-right":"0px","margin-bottom":"0px","margin-left":"0px"};for(var n in i)e.getPropertyValue(n)!==i[n]&&(t.style[n]=i[n])}(t),t.style.position="absolute",t.style.width="auto",t.style.height="auto","scale-down"===e&&(e=t.clientWidth<n.clientWidth&&t.clientHeight<n.clientHeight?"none":"contain"),"none"===e?(o("x",t,i),void o("y",t,i)):"fill"===e?(t.style.width="100%",t.style.height="100%",o("x",t,i),void o("y",t,i)):(t.style.height="100%",void("cover"===e&&t.clientWidth>n.clientWidth||"contain"===e&&t.clientWidth<n.clientWidth?(t.style.top="0",t.style.marginTop="0",o("x",t,i)):(t.style.width="100%",t.style.height="auto",t.style.left="0",t.style.marginLeft="0",o("y",t,i))))},e=function(t){if(void 0===t||t instanceof Event)t=document.querySelectorAll("[data-object-fit]");else if(t&&t.nodeName)t=[t];else{if("object"!=typeof t||!t.length||!t[0].nodeName)return!1;t=t}for(var e=0;e<t.length;e++)if(t[e].nodeName){var i=t[e].nodeName.toLowerCase();if("img"===i){if(n)continue;t[e].complete?l(t[e]):t[e].addEventListener("load",function(){l(this)})}else"video"===i?0<t[e].readyState?l(t[e]):t[e].addEventListener("loadedmetadata",function(){l(this)}):l(t[e])}return!0};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e(),window.addEventListener("resize",e),window.objectFitPolyfill=e}else window.objectFitPolyfill=function(){return!1}}}();

var CQ = CQ || {};

var stickyJumpNav = {
    scrollList:false,
    watching:true,
    stickinessPoint: 0,


    init:function(IDz) {
        const $stickyNav = $('.sticky-jump-nav');
        stickyJumpNav.stickinessPoint = stickyJumpNav.calculateStickinessPoint()

        $(window).on('resize', function(e) {
            stickyJumpNav.resize($(window).width(), $stickyNav);
        });
        $(window).on('scroll', function(e) {
            if(stickyJumpNav.scrollList === true) {
               stickyJumpNav.scroller($stickyNav, $(window).scrollTop(), stickyJumpNav.stickinessPoint);
            }
            stickyJumpNav.watch($stickyNav, IDz);
        });
        // Determines Mobile Behavior.
        stickyJumpNav.resize($(window).width(), $stickyNav);
    },
    watch:function(stik, IDz) {
        if(stickyJumpNav.watching === true) {
            let chapter;
            $.each(IDz, function(i, el) {
                if(!(IDz[i] === "")) {
                    var obj = $("#"+el+"");
                    if($(document).scrollTop() > obj.offset().top - 180) {
                        chapter = i;
                        return;
                    }
                } else {
                    chapter = 0;
                }
            });
            stickyJumpNav.updateChapter(IDz, chapter);
        }
    },
    resize:function(w, stik) {
        if(w < 768) {
            stickyJumpNav.mobileBehavior(stik);
        } else {
            stickyJumpNav.stickinessPoint = stickyJumpNav.calculateStickinessPoint();
            stickyJumpNav.killMobile(stik);
        }
    },
    scroller:function($stickyNav, windowScrollTop, stickinessPoint) {
        const $header = $('.header.component'),
            $body = $('body'),
            stickyNavMarginTop = parseInt($stickyNav.css('margin-top').replace('px', ''));
        let currentIndent = Number(windowScrollTop + $header.outerHeight());

        if($header.outerHeight() <= 0) {
            currentIndent = Number(windowScrollTop + parseInt($header.css('padding-top').replace('px', '')));
        }
        if(currentIndent >= stickinessPoint) {
            $stickyNav.addClass('stuck');
            $body.addClass('jump-stuck');

            $body.css({
                'padding-top': $stickyNav.find('.wrap').outerHeight()
            });

            $stickyNav.css({
                'top': $header.outerHeight() - stickyNavMarginTop -1
            });
        } else {
            if($body.hasClass('jump-stuck')) {
                $body.removeClass('jump-stuck');
                $stickyNav.removeClass('stuck');
                $stickyNav.removeAttr('style');
                $body.css({
                    'padding-top': 0
                });
            }
        }
    },
    mobileBehavior:function($stickyNav) {
        const $btn = $stickyNav.find('.mobile-toggle button'),
            $tabs = $stickyNav.find('.nav-tabs'),
            $stickNavItems = $tabs.find('li');

        $tabs.removeAttr('style');
        $stickNavItems.each(function (i, el) {
            $(el).on('click', function () {
                stickyJumpNav.mobileSet(i, el);
            });
        });
        if (!$stickyNav.hasClass('mobile')) {
            $stickyNav.addClass('mobile');

            $btn.on('click', function (e) {
                stickyJumpNav.toggleDropdown(e);
            });
        }
        stickyJumpNav.scrollList = false;
    },
    killMobile:function(s) {
        var overflo = 0;
        $(s).removeClass('mobile');
        $(s).find('.nav-tabs').removeAttr('style');
        var btn = $(s).find('.mobile-toggle button'),
            cnct = $(s).find('.nav-tabs li');
        btn.off('click');
        stickyJumpNav.scrollList = true;
        cnct.each(function(i, el) {
            $(el).off('click');
            $(el).on('click', function() {
                stickyJumpNav.activeSelect(el);
            });
            const widthToUse = $(el).css('display') === 'none' ? 0 : $(el).outerWidth();
            overflo += widthToUse;
        });
        if(overflo > $(s).find('.nav-tabs').outerWidth()) {
            $(s).find('.nav-tabs').css({
                'width': overflo,
                'max-width': 'none',
                'flex-wrap': 'nowrap'
            });
        }
    },
    toggleDropdown:function(e) {
        var drp = $(e.currentTarget).parent().parent().find('.nav-tabs');
        if(drp.is(':visible') !== true) {
            drp.slideDown(250);
            $(e.currentTarget).addClass("open");
        } else {
            drp.slideUp(250);
            $(e.currentTarget).removeClass("open");
        }
    },
    mobileSelect:function(e) {
        var drp = $(e.currentTarget).parent().parent();
        drp.slideUp(250);
        stickyJumpNav.watching = false;
        setTimeout(function() {
            stickyJumpNav.watching = true;
        }, 350);
    },
    activeSelect:function(e) {
        var mnu = $(e).parent();
        if($(e).hasClass('active') !== true) {
            mnu.find('.active').removeClass('active');
            $(e).addClass('active');
            stickyJumpNav.watching = false;
        }
        setTimeout(function() {
            stickyJumpNav.watching = true;
        }, 350);
    },
    mobileSet:function(i, el) {
        const drp = $(el).parent(),
            btn = $(el).parent().parent().find('.mobile-toggle button');
        btn.find('.text').text($(el).find('a > span').text());
        drp.slideUp(250);
    },
    updateChapter:function(IDz, c) {
        const $tabs = $(".sticky-jump-nav .nav-tabs"),
            $buttonText = $(".sticky-jump-nav .mobile-toggle button .text"),
            overview = $(".sticky-jump-nav").next().offset().top - $('header').outerHeight() - $(".sticky-jump-nav").outerHeight();
        $tabs.find("li.active").removeClass('active');
        if($(window).scrollTop() > overview) {
            $tabs.find("li").eq(c).addClass('active');
            $buttonText.text($tabs.find('li').eq(c).text());
        } else {
            $buttonText.text('');
        }
    },
    calculateStickinessPoint: function () {
        const $stickyNav = $('.sticky-jump-nav');
        const $body = $('body');
        const stickyNavMarginTop = parseInt($stickyNav.css('margin-top').replace('px', ''));

        return $stickyNav.prev().offset().top + $stickyNav.prev().height() + stickyNavMarginTop - ($body.outerHeight() - $body.height());
    }
}

$(document).ready(function() {
    var $body = $('body');

    let $sectionsOnPageWithStickyNav = $('.home .parbase.section, ' +
        '.product-page .parbase.section, ' +
        '.sku-page .parbase.section, ' +
        '.generic-interior-page .parbase.section, ' +
        '.category-page .parbase.section, ' +
        '.macro-page .parbase.section, ' +
        '.micro-page .parbase.section, ' +
        '.education-article-page .parbase.section');


    // detect IE8 and above, and edge
    if (document.documentMode || /Edge/.test(navigator.userAgent)) {
        $body.attr('data-is-ie', 'youbetcha');
    }

    //object-fit polyfill (runs on load as well)
    objectFitImages();

    //detect firefox
    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {
        $('html').addClass('firefox');
    }

    function setTileCategory() {
        var isHomePage = $body.attr('data-homepage') === 'true';
        var bodySolution = $body.attr('data-solution');

        /* We only want this functionality on the homepage (for now) */

        if (isHomePage && bodySolution.length) {

            var tileSolutionList = $('.tile-callouts.component');
            tileSolutionList.each(function(i, tile) {
                var solutionCategory = $(tile).attr('data-solution-reference');
                var $tile = $(tile);

                if (bodySolution !== solutionCategory) {
                    $tile.addClass('slide-up');
                } else {
                    $tile.hasClass('slide-up') ? $tile.toggleClass('slide-up') : null;
                }
            });
        }
    }

    CQ.setTileCategory = setTileCategory;


    //hide product promo
    $('.product-bar.assistant-bar .bar-close').on('click', function(e) {
        e.preventDefault();
        $('.product-bar.assistant-bar').addClass('bar-hide');
    });

    //hide product promo for PAWMS-521 : Promo Bar Experience Fragment
    $('.promo-bar-exp-frag .bar-close').on('click', function(e) {
        e.preventDefault();
        $('.promo-bar-exp-frag').addClass('bar-hide');
    });

      //hide product promo for PAWMS-521 : Promo Bar Experience Fragment
    $('.promo-bar-xpf .bar-close').on('click', function(e) {
        e.preventDefault();
        $('.promo-bar-xpf').addClass('bar-hide');
    });

    //jump nav on homepage
    //SCROLLSPY
    $bodyHome = $('body.home');
    $bodyProduct = $('body.product-page');
    $bodySku = $('body.sku-page');
    // if ($bodyHome.length !== 0 && ($bodyProduct || $bodySku)) {
    //     $('body.home, body.product-page, body.sku-page').scrollspy({ target: '#stickyJumpNav' });
    // }

    //populate side nav, bullets, and hamburger nav
    //actually populate the navs
    if($('#stickyJumpNav').length > 0) {
        $('#stickyJumpNav ul').append('<li style="display: none !important"><a href="#" "aria-label="Overview"><span>Overview</span></a></li>');
    }
    $sectionsOnPageWithStickyNav.each(function() {
        var theID = $(this).children('section').attr('id');
        var theIDTitle = $(this).children('section').attr('data-nav');
        if (theID && $('#jumpNav').length > 0) {
            $('#jumpNav ul').append('<li><a href="#' + theID + '" aria-label="' + theIDTitle + ' Jump Link"><span class="icon-plus"></span><span class="title">' + theIDTitle + '</span></a></li>');
            $('[data-spy="scroll"]').each(function() {
                $(this).scrollspy('refresh');
            });
        }
        if (theID && $('#stickyJumpNav').length > 0) {
            $('#stickyJumpNav ul').append('<li><a href="#' + theID + '" aria-label="' + theIDTitle + ' Jump Link"><span>' + theIDTitle + '</span></a></li>');
            $('[data-spy="scroll"]').each(function() {
                $(this).scrollspy('refresh');
            });
        }
    });
    if($('#stickyJumpNav').length > 0) {
        var IDz = [""];
        $sectionsOnPageWithStickyNav.each(function() {
            var thsId = $(this).children('section').attr('id');
            if(thsId) {
                IDz.push(thsId);
            }
        });
        if(IDz.length > 1) {
            stickyJumpNav.init(IDz);
        } else {
            $('#stickyJumpNav').remove();
        }
    }

    var offset;
    //scroll to function for scrollspy

    //this function also controls the scroll for the toolbar component (uses anchors on the page)
    $("a[href^='#']").on('click', function(e) {
        var isAnchor = $(e.currentTarget).attr('href')[0] === '#';
        var nonEmptyAnchor = $(e.currentTarget).attr('href') !== '#';
        var emptyAnchor = $(e.currentTarget).attr('href') === '#';
        var hash = this.hash;
        var targetExists = ($(hash).length > 0);
        var isBrand = ($('.brand-grid').length > 0);
        var isContact = ($('.contact-grid').length > 0);
        var isStickyJumpNavAnchor = $(e.currentTarget).parents('.sticky-jump-nav').length > 0;

        if (isAnchor && nonEmptyAnchor && targetExists && !isBrand && !isContact && isStickyJumpNavAnchor) {
            const navHeight = Number($('.header.component').outerHeight()),
                $sticky = $('.sticky-jump-nav'),
                $mobileToggle = $sticky.find('.mobile-toggle');
            let offset = $(hash).offset().top;

            if($sticky.length > 0) {
                if(stickyJumpNav.scrollList) {
                    // if Desktop
                    offset = offset - (navHeight + $sticky.outerHeight());
                } else {
                    // if Mobile
                    offset = offset - (navHeight + $mobileToggle.outerHeight());
                }
            }

            e.preventDefault();

            $('html,body').animate({
                scrollTop: offset+"px"
            }, 300, function() {
                //window.location.hash = hash;
            });
        } else if(isAnchor && emptyAnchor && !isBrand && !isContact) {
            e.preventDefault();
            var navHeight = Number($('.header.component').outerHeight()),
                offset = 0,
                $sticky = $('.sticky-jump-nav');
            if($(e.currentTarget).attr('aria-label') === "Overview" && $('body').hasClass('home') === false) {
                offset = $sticky.prev().outerHeight() + $sticky.prev().offset().top + $('.header.component').outerHeight();
            }
            $('html,body').animate({
                scrollTop: offset
            }, 300, function() {
                //window.location.hash = hash;
            });
        }
    });
    //function to adjust offset of scrollspy
    function fixSpy() {
        var data = $body.data('bs.scrollspy');
        if (data) {
            offset = $(window).height() / 2;
            data.options.offset = offset;
            $body.data('bs.scrollspy', data);
            $body.scrollspy('refresh');
        }
    }

    //svg conversion
    $('nav.main img[src$=".svg"], footer img[src$=".svg"], .help img[src$=".svg"]').each(function() {
        var $img = jQuery(this);
        var imgURL = $img.attr('src');
        var attributes = $img.prop("attributes");

        $.get(imgURL, function(data) {
            // Get the SVG tag, ignore the rest
            var $svg = $(data).find('svg');

            // Remove any invalid XML tags
            $svg = $svg.removeAttr('xmlns:a');

            // Loop through IMG attributes and apply on SVG
            $.each(attributes, function() {
                $svg.attr(this.name, this.value);
            });

            // Replace IMG with SVG
            $img.replaceWith($svg);
            $svg.get(0).setAttribute('preserveAspectRatio', 'xMidYMin meet');
        }, 'xml');
    });

    $('.logo svg').each(function() {
        $(this).get(0).setAttribute('preserveAspectRatio', 'xMinYMin meet');
    });

    //custom dropdown (chosen.js)
    $chosenSelect = $(".chosen-select");
    // if ($chosenSelect.length) {
    //     $chosenSelect.chosen({disable_search_threshold: 50});
    // }

    //adding select dropdown arrow for mobile/tablet views only
    $('form select.chosen-select').each(function() {
        $(this).after('<span class="arrow" aria-hidden="true"></span>');
    });

    //sticky nav and sticky jumpnav (jumpnav on homepage only)
    var position = $(window).scrollTop();
    var $jumpNav = $('#jumpNav');
    var ogOffset;

    resetJumpOffset();

    var $header = $('header:not(.landing-page-header)');
    var $hcs = $(".hero-channel-selector.component");
    if ($header.length && !$hcs.length) {
        $(window).on('scroll', function() {
            var scroll = $(window).scrollTop();
             if (scroll > 0) {
                if (!$header.hasClass("header")) {
                    $header.addClass('stuck').removeClass('not-stuck');
                }
             } else if (scroll === 0) {
                if (!$header.hasClass("header")) {
                    $header.removeClass('stuck').addClass('not-stuck');
                }
             }
            position = scroll;
            checkJumpPosition();
        });
    } else {
        $header.removeClass("not-stuck").addClass("stuck");
    }

    //resize functions
    var resizeTimer;
    $(window).on('resize', function() {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function() {
            setViewWidth();
            fixSpy();
            resetJumpOffset();
            checkJumpPosition();
            if (typeof checkTipEdge === "function") {
                checkTipEdge();
            }
        }, 250);
    });

    //jump nav positioning
    function checkJumpPosition() {
        if ($jumpNav.length > 0) {
            var navCenter = ($(window).height() / 2) - ($jumpNav.height() / 2);
            $jumpNav.css({ top: ogOffset }).removeClass('init');
            if (($jumpNav.offset().top - $(window).scrollTop()) <= navCenter && !$jumpNav.hasClass('stuck')) {
                $jumpNav.addClass('stuck');
            } else if ($(window).scrollTop() + navCenter <= ogOffset && $jumpNav.hasClass('stuck')) {
                $jumpNav.removeClass('stuck');
            }
            defineHorizontalPositionOfJumpNav();
        }
    }

    function resetJumpOffset() {
        if ($jumpNav.length > 0) {
            ogOffset = $(window).height() - (($(window).height() * .35) + $jumpNav.height());
        }
    }

    function getWidth() {
        return Math.floor(!!window.visualViewport ? window.visualViewport.width : window.outerWidth || window.innerWidth);
    }

    /** Place the jumpnav just inside the right border of the body (1440px) */
    function defineHorizontalPositionOfJumpNav() {
        var buffer = 20;
        var placement = (getWidth() - 1440) / 2 + buffer;
        if (placement > 0) {
            $jumpNav.css('right', placement);
        } else {
            $jumpNav.css('right', '20px');
        }
    }

    //function to assign view type to body
    function setViewWidth() {
        var desktop = 'tablet-desktop';
        var tablet = 'tablet';
        var mobile = 'mobile';

        if (isMobile()) {
            CQ.isOnMobile = true;
            if ($(window).width() >= 992) {
                $body.removeClass(tablet + mobile).addClass(desktop);
            } else if ($(window).width() < 992 && $(window).width() >= 768) {
                $body.removeClass(desktop + mobile).addClass(tablet);
            } else if ($(window).width() < 768) {
                $body.removeClass(tablet + desktop).addClass(mobile);
            }
        } else {
            $body.removeClass(mobile + tablet + desktop);
            CQ.resolutionSetting = false;
        }
    }

    //test for touch events, this is used to prevent default when at desktop tablet view for left side navigation
    function isMobile() {
        var userAgent = navigator.userAgent || navigator.vendor || window.opera;
        // Windows Phone must come first because its UA also contains "Android"
        if (/windows phone/i.test(userAgent)) {
            return true;
        }

        if (/android/i.test(userAgent)) {
            return true;
        }
        // iOS detection from: http://stackoverflow.com/a/9039885/177710
        return /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;

    }

    function testBrowser() {
        var ua = window.navigator.userAgent;
        var msie = ua.indexOf("MSIE ");

        if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) {
            $body.addClass('ie');
        } else if (window.navigator.userAgent.indexOf("Edge") > -1) {
            $body.addClass('edge');
        } else {}
        return false;
    }
    testBrowser();

    setTimeout(function() {
        $body.trigger('pentair.init');
    }, 10);

    // Get GCLID from URL params and set in a cookie
    var gclid = getParam('gclid');
    if (gclid) {
        var gclsrc = getParam('gclsrc');
        if (!gclsrc || gclsrc.indexOf('aw') !== -1) {
            setCookie('gclid', gclid, 90);
        }
    }
});

// Call functions on load
$(window).load(function($stickyNav) {
    const headerHeight = $('header').height();
    $(window).resize();

    // init jumpnav
    var $jumpNav = $('#jumpNav'),
        $stickyJump = $('#stickyJumpNav');

    if ($jumpNav.length > 0) {
        if ($(window).scrollTop() >= ($(window).height() / 2) - ($jumpNav.height())) {
            $jumpNav.addClass('stuck').removeClass('init');
        }
    }

    if ($stickyJump.length > 0) {
        $stickyJump.removeClass('init');
    }

    // moves jump nav below header no matter header size
    if($(window).width() < 767) {
        $(".sticky-jump-nav").css("top", headerHeight+'px' )
    }

    // if jump navigation is hidden, hide-jump-nav class is added for styling of hero
    $('main').each(function() {
		if(!$(this).find(".sticky-jump-nav").length)
            $(this).addClass('hide-jump-nav');
    });

    //ADA hide cloned items from screenreaders
    $('.owl-carousel').find('.cloned').each(function() {
        $(this).attr('aria-hidden', 'true');
    });

    //run resize functions on load
    objectFitImages();
});

// Param getter
function getParam(p) {
    var match = RegExp('[?&]' + p + '=([^&]*)').exec(window.location.search);
    return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
}

// Cookie setter/getter
function setCookie(name, value, days) {
    var date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
    var expires = "; expires=" + date.toGMTString();
    document.cookie = name + "=" + value + expires + ";path=/";
}

function readCookie(name) {
    var n = name + "=";
    var cookie = document.cookie.split(';');
    for (var i = 0; i < cookie.length; i++) {
        var c = cookie[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1, c.length);
        }
        if (c.indexOf(n) == 0) {
            return c.substring(n.length, c.length);
        }
    }
    return null;
}

window.Pentair = window.Pentair || {};

window.Pentair.helpers = (function(){
	
	/**
	 * Strips out /content/pentair/ when applicable.
	 * @param  {String} href Internal link uri.
	 * @return {String}      Internal link with /content/pentair/ removed.
	 */
	var shortUri = function (href) {
		if(href) {
			var parser = document.createElement('a');
			parser.href = $('link[rel="canonical"]').first().attr('href');
			var pathIndex = href.indexOf(parser.pathname.replace('.html', ''));
			return pathIndex !== -1 ? href.slice(pathIndex) : href;
		}
		return href;
	};

	return { shortUri : shortUri }

})();

$(document).ready(function(){

    //mobile nav
    var body = $('body');
    var hamburger = $('.hamburger-menu');
    var searchButton = $('.tertiary .icon-search');
    var mobileNav = $('.mobile-nav-wrap');
    var tabletNav = $('.tablet-nav-wrap');

    hamburger.on('click', function(e) {
        e.preventDefault();
        if ($(this).hasClass('open')) {
            closeMobileNav();
        } else{
            closeMobileSearch();
            body.addClass('menu-open');
            hamburger.addClass('open');
            mobileNav.fadeIn('fast');
            tabletNav.addClass('tablet-open');
        }
    });

    searchButton.on('click', function() {
        if ($(this).hasClass('open')){
            searchButton.removeClass('open');
            body.removeClass('menu-open');
        } else{
            closeMobileNav();
            body.addClass('menu-open');
            searchButton.addClass('open');
            focusSearchField(100); // 100 attempts in 10 milisecond intervals (net 1 second)
        }
    });

    var legacySearchForm = $('#search-form');
    if (legacySearchForm.length) {
        legacySearchForm.parsley().on('field:validated', function() {
            var ok = $('.parsley-error').length === 0;
            $('.bs-callout-info').toggleClass('hidden', !ok);
            $('.bs-callout-warning').toggleClass('hidden', ok);
        })
        .on('form:submit', function() {
            return true;
        });
    }

    var searchPath = $('#searchModal').find(".search-form").attr('action');
    var ua = window.navigator.userAgent;
    var msie = ua.indexOf('MSIE ');
    var trident = ua.indexOf('Trident/');
    var edge = ua.indexOf('Edge/');
    if (msie > 0 || trident > 0 || edge > 0) {
        // skip using shortURI because it breaks //TODO please fix
    } else {
      searchPath = window.Pentair.helpers.shortUri(searchPath);
    }

    $('#searchModal').find(".search-form").attr('action', searchPath);

    $('#searchModal .icon-close').on('click',function(e){
        searchButton.removeClass('open');
        body.removeClass('menu-open');
    });

    function focusSearchField(limit) {
        // The .focus() event requires that the search field be visible on the page.
        // Its visibility is controlled by custom animations and the timing may be a moving target.
        // To account for this I've set a timed counter that will determine if the element is visible
        // then focus on it. (Usually runs for 80 to 110ms.)
        if(limit != null && typeof limit === 'number') {
            if (limit < 1) {
                $('#siteSearch').focus();
            } else {
                setTimeout(function() {
                    limit -= 1;
                    var searchIsVisible = $('#searchModal').hasClass('in');
                    if(searchIsVisible) {
                        $('#siteSearch').focus();
                    } else {
                        focusSearchField(limit);
                    }
                }, 10);
            }
        } else {
            console.error('focusSearchField called without a limit, or it is not a number.')
        }
    }

    //close navigation, used when search is opened
    function closeMobileNav(){
        //set main nav back to normal;
        hamburger.removeClass('open');
        body.removeClass('menu-open');
        mobileNav.fadeOut('fast');
        tabletNav.removeClass('tablet-open');
        mobileNav.find('.slide').removeClass('slide');
        mobileNav.removeClass('slid');
    }

    //close search, used when nav is opened
    function closeMobileSearch(){
        searchButton.removeClass('open');
        body.removeClass('menu-open');
        $('#searchModal').modal('hide');
    }

    function getMaxHeight(elements) {
        return Math.max.apply(null, $(elements).map(function () {
            return $(this).height();
        }).get());
    }

    // PAWMS-652, dynamically adjust menu height to avoid excessive white space
    function adjustNavHeight(el, isFocused) {
        // don't adjust height for .nav-style-simple-dropdown
        if ($(el).parents('.nav-style-simple-dropdown').length) {
            return;
        }

        var activeTier2 = $(el).find('.tier-2').css('height', 'auto');
        var tier2Height = isFocused ?  getMaxHeight(activeTier2) : $(activeTier2).height();

        var activeTier3 = $(activeTier2).find('.active .tier-3').css('height', 'auto');
        var tier3Height = isFocused ?  getMaxHeight(activeTier3) : $(activeTier3).height();

        var activeTier4 = $(activeTier3).find('.active .tier-4').css('height', 'auto');
        var tier4Height = isFocused ?  getMaxHeight(activeTier4) : $(activeTier4).height();

        var maxHeight = Math.max(tier2Height, tier3Height, tier4Height);

        $(activeTier2).css('height', maxHeight);
        $(activeTier3).css('height', maxHeight);
        $(activeTier4).css('height', maxHeight);
    }

    var $topLevelLinks = $('.top-level-link').hover(function() {
        adjustNavHeight($(this).find('.main-navigation.component'));
    });


    //main navigation toggling
    const delay = 100;
    var timeoutId = -1;
    var $tier2 = $('ul.tier-2');
    var $tier3 = $('ul.tier-3');
    var $tier4 = $('ul.tier-4');
    var $secondary = $('.secondary ul.tier-2');
    $tier2.find(' > li:first-child').addClass('active').removeClass('not-active');
    $tier2.find(' > li').hover(function(){
        var thisLi = this;
        clearTimeout(timeoutId);
        timeoutId = setTimeout(function() {
            $(thisLi).closest('ul.tier-2').find(' > li').removeClass('active').addClass('not-active');
            $(thisLi).addClass('active').removeClass('not-active');
            adjustNavHeight($(thisLi).closest('.main-navigation.component'));
        }, delay);
    });

    /* Start - New Main Navigation Toggling */
    var mainNavComponent = $(".main-navigation.component");
    var mainNavTier2 = mainNavComponent.find("ul.tier-2");
    var mainNavTier3 = mainNavComponent.find("ul.tier-3");

    mainNavTier2.find(" > li").each(function() {
        if ($(this).find(".dropdown").children().length) {
            $(this).addClass("has-children");
        }
    });

    mainNavTier3.find(" > li").each(function() {
        //var dropdown = $(this).find(".dropdown");
        var dropdown = $(this).find("> .dropdown");
        /*if (dropdown.find("> ul").length && dropdown.find("> ul > li").length) {
            $(this).addClass("has-children");
        }*/
        if (dropdown.find("> .mobile-slider > ul").length && dropdown.find("> .mobile-slider > ul > li").length) {
            $(this).addClass("has-children");
        }
        else {
            $(this).addClass("no-children");
        }
    });

    mainNavTier3.find(' > li:first-child').addClass('active').removeClass('not-active');
    mainNavTier3.find(' > li').hover(function(){
        var thisLi = this;
        clearTimeout(timeoutId);
        timeoutId = setTimeout(function() {
            $(thisLi).closest('ul.tier-3').find(' > li').removeClass('active').addClass('not-active');
            $(thisLi).addClass('active').removeClass('not-active');
            adjustNavHeight($(thisLi).closest('.main-navigation.component'));
        }, delay);
    });
    /* End - New Main Navigation Toggling */

    //assign alt ul when there is no tier 4 present in nav

    $tier3.each(function(){
        if ($(this).closest('.outer').hasClass('solutions')) {
            if ($(this).find('ul.tier-4').length > 0) {
            } else {
                $(this).addClass('alt');
            }
        }
    });

    $tier3.each(function() {
        var totalCategories = 0;
        var categories = {};

        // Add up total tier3 categories and link columns
        if ($(this).closest('.outer').hasClass('solutions')){
            $(this).children('li').each(function(){
                totalCategories++;
                if($(this).hasClass('split-4')){
                    categories["cat" + totalCategories] = 4;
                } else if ($(this).hasClass('split-3')) {
                    categories["cat" + totalCategories] = 3;
                } else if ($(this).hasClass('split-2')) {
                    categories["cat" + totalCategories] = 2;
                } else {
                    categories["cat" + totalCategories] = 1;
                }
            });
        }
        // balance the columns amongst category lists
        for (i=1; i < totalCategories; i++) {
            if (totalCategories > 3) {
                //if 4 categories
                categories["cat"+i] = 1;
            } else if (totalCategories > 2) {
                //if 3 categories
                if (categories["cat1"] >= 2) {
                    categories["cat1"] = 2;
                    categories["cat2"] = 1;
                    categories["cat3"] = 1;
                } else if (categories["cat1"] == 1 && categories["cat2"] >= 2) {
                    categories["cat1"] = 1;
                    categories["cat2"] = 2;
                    categories["cat3"] = 1;
                } else if (categories["cat3"] >= 2) {
                    categories["cat1"] = 1;
                    categories["cat2"] = 1;
                    categories["cat3"] = 2;
                }
            } else if (totalCategories > 1) {
                //if 2 categories
                if (categories["cat1"] >= 3 && categories["cat2"] == 1) {
                    categories["cat1"] = 3;
                    categories["cat2"] = 1;
                } else if (categories["cat1"] > 1 && categories["cat2"] > 1) {
                    categories["cat1"] = 2;
                    categories["cat2"] = 2;
                } else if (categories["cat1"] == 1 && categories["cat2"] > 1) {
                    categories["cat1"] = 1;
                    categories["cat2"] = 3;
                }
            }
        }

        // loop children again and reset split class
        if ($(this).closest('.outer').hasClass('solutions')) {
            $(this).children('li').each(function (i, e) {
                var index = i + 1;
                if ($(this).hasClass('split-4') && categories["cat" + index] != 4) {
                    $(this).removeClass('split-4');
                } else if ($(this).hasClass('split-3') && categories["cat" + index] != 3) {
                    $(this).removeClass('split-3');
                } else if ($(this).hasClass('split-2') && categories["cat" + index] != 2) {
                    $(this).removeClass('split-2');
                }
                $(this).addClass('split-' + categories["cat" + index]);

                // Truncate the link list based on columns
                $childList = $(this).find('.tier-4');

                if (categories["cat" + index] > 3 && $childList.find('li').size() > 32) {
                    $childList.html($childList.find('li').slice(0, 31)).append(
                        "<li class='view-all'>" + $(this).parent().find('h4').html() + "</li>"
                    );
                } else if (categories["cat" + index] == 3 && $childList.find('li').size() > 24) {
                    $childList.html($childList.find('li').slice(0, 23)).append(
                        "<li class='view-all'>" + $(this).parent().find('h4').html() + "</li>"
                    );
                } else if (categories["cat" + index] == 2 && $childList.find('li').size() > 16) {
                    $childList.html($childList.find('li').slice(0, 15)).append(
                        "<li class='view-all'>" + $(this).parent().find('h4').html() + "</li>"
                    );
                } else if (categories["cat" + index] == 1 && $childList.find('li').size() > 8) {
                    $childList.html($childList.find('li').slice(0, 7)).append(
                        "<li class='view-all'>" + $(this).parent().find('h4').html() + "</li>"
                    );
                }

                $childList.find('.view-all a').text($(this).find('.hidden-view-all').text());
            });
        }
    });

    //main nav list splitting
    $tier3.each(function(){
        var $this = $(this);
        if ($this.hasClass('alt') && $this.closest('.outer').hasClass('solutions')){
            if ($this.find('li').length > 8 && $this.find('li').length <= 16){
                $this.addClass('two-col');
            } else if ($this.find('li').length > 16 && $this.find('li').length <= 24){
                $this.addClass('three-col');
            } else if ($this.find('li').length > 24){
                $this.addClass('four-col');
            }
        }
    });

    //product list splitting
    $tier3.each(function(){
        var $this = $(this);
        if ($this.closest('.outer').find('.products').length > 0){
            if ($this.find('li').length > 13 && $this.find('li').length <= 26){
                $this.addClass('two-col');
            } else if ($this.find('li').length > 26){
                $this.addClass('three-col');
            }
        }
    });

    //secondary nav list splitting
    $secondary.each(function(){
        var $this = $(this);
        if ($this.find('li').length > 4){
            $this.addClass('three-col');
        }
    });


    //prevent default on side nav at tablet desktop due to link jumping
    $('nav.main > ul > li > a, .tier-2 > li > a ').on('click', function(e){
        if (($('body').hasClass('tablet-desktop') || $('body').hasClass('tablet')) && !$(this).hasClass('hovered')){
            e.preventDefault();
            $('nav.main > ul > li > a').removeClass('hovered');
            $(this).addClass('hovered');
        }
    });



    //mobile nav sliding
    $('nav.main .icon-angle-right').on('click', function(e){
        e.preventDefault();
        var $this = $(this);
        mobileNav.addClass('slid');
        $this.closest('.has-children').find('.mobile-slider:first').addClass('slide');
        mobileNav.scrollTop(0);
    });

    //mobile back slide
    $('nav.main .back').on('click', function(e){
        var $this = $(this);
        $this.closest('.mobile-slider').removeClass('slide');
        if ($this.closest('ul').hasClass('tier-1') || $this.closest('ul').hasClass('secondary')){
            mobileNav.removeClass('slid');
        }
    });

    var dropHeight;

    $(".tier-1 > li.solutions").hover(function () {
        //console.log($(this).find('.dropdown .dropdown').height());
        dropHeight = $(this).find(".dropdown > .wrap").outerHeight() + $(this).find(".tier-2 > .active .dropdown > .wrap").outerHeight();
        $(this).find("> .dropdown").height(dropHeight);
    });

    $(".solutions .tier-2 > li").hover(function () {
        var thisLi = this;
        clearTimeout(timeoutId);
        timeoutId = setTimeout(function() {
            //console.log($(this).find('.dropdown .dropdown').height());
            dropHeight = $(thisLi).closest(".wrap").outerHeight() + $(thisLi).find(".dropdown > .wrap").outerHeight();
            $(thisLi).closest(".dropdown").height(dropHeight);
        }, delay);
    });

    // Accessibility for main navigation using the tab key

    // Determine dropdown height on top level focus
    let topLevelLi = $('.top-level-link.has-children');
    let topLevelAnchor = topLevelLi.find('> a');
    topLevelAnchor.on("focus", function() {
        let thisTopLevelLi = $(this).parent();
        adjustNavHeight(thisTopLevelLi.find('.main-navigation.component'), true);
    });

    // Common code to set the current li as active
    function setAsActive($thisLi) {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(function() {
            $thisLi.addClass("active").removeClass("not-active");
            $thisLi.siblings().removeClass("active");
            $(".top-level-link").find(".dropdown").addClass("active");
            $(".top-level-link").find(".dropdown .container").addClass("active");
            adjustNavHeight($thisLi.closest(".main-navigation.component"), true);
        }, delay);
    }

    // Tier 2 links
    let tier2Link = $tier2.find("> li").find("a");
    $(tier2Link).on("focus", function () {
        let tier2Li = $(this).parent();
        setAsActive(tier2Li);
    });

    // Tier 3 Links
    let tier3Link = $tier3.find("> li").find("a");
    $(tier3Link).on("focus", function () {
        let tier3Li = $(this).parent();
        setAsActive(tier3Li);
    });

    // Tier 4 Links
    let tier4Link = $tier4.find("> li").find("a");
    $(tier4Link).on("focus", function () {
        let tier4Li = $(this).parent();
        let thisTopLevelLi = tier4Li.parents(".top-level-link");
        let thisTier2Li = tier4Li.parents(".tier-2 > li");
        let thisTier3Li = tier4Li.parents(".tier-3 > li");
        setAsActive(thisTier2Li);
        setAsActive(thisTier3Li);
    });

    // This closes the menu and resets focus to the top of the page body
    // if the menu is open and has focus. Does not work for mouse hover, only for focus.
    topLevelLi.keydown(function (event) {
        if (event.keyCode == 27 && $(event.target).parents(".main-nav")) {
            $(document.activeElement).blur();
            $(body).focus();
        }
    });
});

var GenericFilterViewModel = function(){

    var self = this;
    var rootModel = this;

    self.filters = ko.observableArray(); // array of FilterCategories
    self.filterCount = ko.observable(0);
    self.activeFilters = ko.computed(function(){
        var allFilterModels = [];
        self.filters().forEach(function(elem, index){
            allFilterModels = allFilterModels.concat(elem.activeFilters());
        });
        return allFilterModels;
    });
    self.filterRules = {};
    self.data = ko.observableArray();

    /**
        Filter rules by name of each category.
        {
            'Distance' : function(dealerItem, currentFilter) {
                return currentFilter.value() >= dealerItem.distance; },
            'Dealer Name': function(dealerItem, currentFilter){
                return currentFilter.value() === dealerItem.name; }
        };
    */

    self.setFilterRules = function (filterRules) {
        self.filterRules = filterRules;
    };

    /**
     * Populates categories of either static or dynamic data. Dynamic categories are accumulated from the data object.
     * Example data:
     * var distanceValues = [{value : 5, title : 5}, {value : 10, title : 10}, {value : 25, title : 25}, {value : 50, title : 50}, {value : 100, title : 100}];
     * [{name: "Distance", type: "static", values: distanceValues}, {name: "Dealer Name", type: "dynamic", fromField: "name"}];
     */
    self.populateCategories = function(categoryArray, data){
        rootModel.data(data);
        categoryArray.forEach(function(categoryElem, categoryIndex){
            var newModel = new self.FilterCategory(categoryElem.name, categoryElem.name, categoryElem.name, categoryElem.inputType);
            var categoryId = categoryIndex + "_" + categoryElem.name.replace(/\s/g,"_");
            if(categoryElem.type === "static"){
                categoryElem.values.forEach(function(elem, index){
                    newModel.values.push(new self.FilterModel(elem.value, elem.title, categoryId + "_" + index, newModel));
                });
            } else if(categoryElem.type === "dynamic") { //accumulate the value array from dealerList
                var fieldValues = [];
                data.forEach(function(elem){
                    if(elem[categoryElem.fromField]){
                        fieldValues.push(elem[categoryElem.fromField]);
                    }
                });

                fieldValues = ko.utils.arrayGetDistinctValues(fieldValues).sort();

                fieldValues.forEach(function(elem, index){
                    newModel.values.push(new self.FilterModel(elem, elem, categoryId + "_" + index, newModel));
                });
            }
            self.filters.push(newModel);
        });
    };

    self.filteredDataList = ko.computed(function(){
        var dataList = [];
        dataList = self.data().filter(function(dataItem, dataIndex){
            return self.filterResults()[dataIndex];
        });
        return dataList;
    }).extend({ rateLimit: 50 });

    self.categoryFilterResults = ko.computed(function(){
        var categoryFilterResults = []; // array of arrays based on categories
        self.filters().forEach(function(categoryModel, categoryIndex){

            var activeFilters = categoryModel.values().filter(function(filterModel){
                return filterModel.selected();
            });

            // Returns true for data index if at least one filter in each category passes,
            // or there are no filters for that item
            var modelFilterResults = self.data().map(function(dataItem, dataIndex){
                var noActiveFilters = activeFilters.length === 0;
                return noActiveFilters || activeFilters.reduce(function(acc, currentFilter, currentIndex, filterArray){
                    return acc || currentFilter.filterResults()[dataIndex];
                }, false);
            });

            categoryModel.filterResults(modelFilterResults);
            categoryFilterResults.push(modelFilterResults);
        });

        return categoryFilterResults;
    });

    self.filterResults = ko.computed(function(){
        var mergedFilterResult = [];

        // At this point the array is filled with [[true, true, true, ...],[false, true, true, ...], ...]
        // Where each inner array contains whether or not each data element passes a filter,
        // and the outer array defines each filter. This section &&'s filter values between all categories.

        self.categoryFilterResults().forEach(function(newElem){
            if(mergedFilterResult.length === 0){
                mergedFilterResult = newElem;
            } else {
                mergedFilterResult = mergedFilterResult.map(function(originalElem, originalIndex){
                    return originalElem && newElem[originalIndex];
                });
            }
        });

        return mergedFilterResult;
    });


    // Each filter category contains individual filters.
    self.FilterCategory = function(name, title, label, inputType, valuesArray){
        var self = this;
        self.parent = rootModel;

        self.name = ko.observable(name);
        self.title = ko.observable(title);
        self.values = ko.observableArray(valuesArray || []); // array of valueModels
        self.isOpen = ko.observable(false);
        self.label = ko.observable(label);
        self.inputType = ko.observable(inputType || "checkbox");

        self.filterResults = ko.observableArray();

        self.showCategory = ko.computed(function(){
            var noFilters = self.values().length === 0;
           var oneFilterContainsAllResults = ((self.values().length) === 1 && (self.values()[0].count() === rootModel.data().length));
           var oneFilterContainsNoResults = ((self.values().length) === 1 && (self.values()[0].count() === 0));
           return !(oneFilterContainsAllResults || oneFilterContainsNoResults || noFilters);
        }).extend({ rateLimit: 50 });


        self.showDistCategory = ko.computed(function(){
            var noFilters = self.values().length === 0;
           // var oneFilterContainsAllResults = ((self.values().length) === 1 && (self.values()[0].count() === rootModel.data().length));
           // var oneFilterContainsNoResults = ((self.values().length) === 1 && (self.values()[0].count() === 0));
           // return !(oneFilterContainsAllResults || oneFilterContainsNoResults || noFilters);
            return !(noFilters);
        }).extend({ rateLimit: 50 });

        self.toggleState = function(context, event){ // for toggling open/closed state
            self.isOpen(!self.isOpen());
            if(self.isOpen()){
                $(event.currentTarget).parent().find('ul').slideDown('fast');
            } else {
                $(event.currentTarget).parent().find('ul').slideUp('fast');
            }
        };

        self.activeFilters = ko.computed(function(){
            return self.values().filter(function(elem){return elem.selected()});
        });

        self.otherCategoryFilterResults = ko.computed(function(){
            var otherCategories = rootModel.filters().filter(function(elem){return elem.title() !== self.title()});
            var filterResults = [];

            otherCategories.forEach(function(categoryElem, categoryIndex){
                if(filterResults.length == 0){
                    filterResults = categoryElem.filterResults();
                } else {
                    filterResults = filterResults.map(function(filterElem, filterIndex){
                        return filterResults[filterIndex] && categoryElem.filterResults()[filterIndex];
                    })
                }
            });

            return filterResults;
        });

    };

    // Each filter. inputType can be 'checkbox' or 'radio'
    self.FilterModel = function(value, title, uniqueId, parent){
        var self = this;
        self.parent = parent;

        self.value = ko.observable(value);
        self.title = ko.observable(title);
        self.uniqueId = ko.observable(uniqueId);
        self.selected = ko.observable(false);

        self.toggleSelection = function () {
            self.selected(!self.selected());
        };

        // If only this filter was applied, this is the resulting dataList mapping, one level up we have a cumulative version of this.
        self.filterResults = ko.computed(function(){
            var filterMapping = rootModel.data().map(function(dataItem){
                return rootModel.filterRules[self.parent.name()](dataItem, self);
            });
            return filterMapping;
        });

        // By overlaying self.filterResults && parent.otherCategoryFilterResults we get the total count for this filter
        self.count = ko.computed(function(){
            return self.filterResults().reduce(function(acc, elem, index){
                return acc + (elem && parent.otherCategoryFilterResults()[index] ? 1 : 0)
            }, 0);
        });

        self.count.subscribe(function(newValue){
            if(newValue == 0 && self.selected()){
                self.selected(false);
            }
        });

        self.selected.subscribe(function(newValue){  // Track number of selections
            if(parent.inputType() === "radio"){
                parent.activeFilters().forEach(function(filterModel){
                    if(filterModel.value() !== newValue){ filterModel.selected(false); }
                });
            } else {
                rootModel.filterCount(rootModel.filterCount() + (self.selected() ? 1 : -1));
            }
        });

        return self;
    };

};
var MicroApplProductGridViewModel = function (elem) {
    var self = this,
        $elem = $(elem),
        $win = $(window),
        $pagination=$(".pgrid-micro-appl-pagination"),
        // $paginationWrapper=$(".ko-micro-appl-product-grid .pgrid-micro-appl-pagination"),
        $hintText = $(".hint-text"),
        snpBaseSearchURL = $elem.attr('data-appl-url') || 'http://stage.sp1004f8b7.guided.ss-omtrdc.net/',
        isEditMode= $elem.attr('data-iseditmode'),
        microApplTagName= $elem.attr('data-appl-tag') || '';

    // How many pagination buttons to display depends on screen size.
    var paginationItems = function(){
        if ( matchMedia('(max-width: 765px)').matches ) {
            return 3;
        }
        return 5;
    };

    /* Start: variables initilization */
    self.initVariables = function(){
        self.defaults = {
            snpBaseUrl: snpBaseSearchURL,
            sortBy :'pTitle',
            displayedPages: 3,
            microApplTag: microApplTagName
        };

        self.productsResults = ko.observableArray([]);
        self.productsSectionResults = ko.observableArray([]);
        self.productsFiltersFacets = ko.observableArray([]);
        self.selectedFiltersFacets = ko.observableArray([]);
        self.seeAllProducts = ko.observable(false);
        self.selectedTagName = ko.observable();
        self.resultsCount = ko.observable(0);
        self.paginator = new PaginationViewModel(0, 12, paginationItems()); // Params: totalResults, itemsPerPage, paginationItems
        self.noResults = ko.observable(false);
        self.noProductsMsg = ko.observable(false);
        self.isLoading = ko.observable(false);

        //filters
        self.itemsPerPageArr = ko.observableArray([
            { text: '12',value:'12' },
            { text: '24',value:'24' },
            { text: '48',value:'48' }
        ]);
        self.sortItems = ko.observableArray([
            { text: 'Sort By', value: ''},
            { text: 'A-Z',value:'pTitle' },
            { text: 'Z-A',value:'pTitleDesc' }
        ]);

        self.fetchSectionTags();
    };
    /* End: Valible initilization */

    /*Start: Scroll Method */

    self.scrollToGrid = function(){
        $('html, body').stop().animate({ scrollTop: $('.ko-micro-appl-product-grid').offset().top - 150 }, 900);
    };

    /*End: Scroll Method */

    /* Start: Makes S&P calls with provided params and updates the values */
    self.doProductSearch = function(snpParams,type,tagName,callback) {
        tagName = tagName || self.selectedTagName();
        if(tagName){
            snpParams['x1'] = 'pSecTagTitle';
            snpParams['q1'] = tagName;
            snpParams['sp_s'] = ['pIsFeatured', 'pBanner'];
        }
        console.log(snpParams)
        $.ajax({
            dataType: "jsonp",
            url: self.defaults.snpBaseUrl,
            data: snpParams
        }).success(function(resp){
            $(".filters-sort-by").trigger('chosen:updated');
            $(".filters-num-results").trigger('chosen:updated');

            if( tagName ) {
                self.selectedFiltersFacets([]);
                self.updateFilterFacets( resp.facets );
                self.updateProducts( resp );
                if(!self.seeAllProducts()){
                    self.toggleView();
                }
                self.selectedTagName(tagName);
                if('pageClick' === type || '' === type){
                    self.scrollToGrid();
                }

            }
            //pagiantion observable
            if ( resp && resp.general && resp.general.total ) {
                self.paginator.totalResults(resp.general.total);
            }
        }).done(function(){
            objectFitImages();
            if(typeof callback === 'function' ){
                callback();
            }
        }).error(function(){
            console.log("Error occured in doProductSearch");
        });
    };
    /* End: Makes S&P calls with provided params and updates the values */

    /* Start: Makes S&P calls to fetch multiple categories */
    self.fetchSectionTags = function(){
        self.toggleLoader(true);
        $.ajax({
            dataType: "jsonp",
            url: self.defaults.snpBaseUrl,
            data: self.getSnpParams()
        }).success(function(data){
            $(".filters-sort-by").trigger('chosen:updated');
            $(".filters-num-results").trigger('chosen:updated');
            var tags = data.facets[0].values;
            self.sectionTags = tags;
            if( tags != null ){
                if (tags.length === 1) {
                    self.fetchSectionProducts({
                        type: 'do-not-scroll',
                        tagName: tags[0].value
                    }, function() {
                        self.toggleLoader(false);
                    });
                } else {
                    self.fetchAllProductSections(self.getSnpParams('products'), 'default', tags);
                }
            } else {
                self.noProductsMsg(true);
                self.toggleLoader(false);
            }
        })
    };
    /* End: Makes S&P calls to fetch multiple categories */

    /* Start: Fetches first three results in a category to show on section headers */
    self.fetchAllProductSections = function(snpParams,type,tags,singleCategoryView){
        var sectionResults = [];
        var resultsCount = 0;
        var sectionTags = tags || self.sectionTags;
        var counter = 0;
        var filteredTags = sectionTags.map(function(tag){
            return tag.value;
        });
        self.toggleLoader(true);
        for(var i=0; i<sectionTags.length; i++) {
            snpParams['x1'] = 'pSecTagTitle';
            snpParams['q1'] = sectionTags[i].value;
            snpParams['count'] = 3;
            snpParams['sp_s'] = ['pIsFeatured', 'pBanner'];

            $.ajax({
                dataType: "jsonp",
                url: self.defaults.snpBaseUrl,
                data: snpParams
            }).success(function(resp){
                counter++;
                $(".filters-sort-by").trigger('chosen:updated');
                $(".filters-num-results").trigger('chosen:updated');
                if( resp !== null ){
                    var resultsets = resp.resultsets && resp.resultsets.length ? resp.resultsets[0].results : [];
                    var pSecTag = resp.general.q1;
                    var total = resp.general && resp.general.total && +resp.general.total > 0 ? +resp.general.total : 0;
                    if(type !== 'filterSearch') {
                        self.updateFilterFacets(resp.facets, true);
                    }

                    var tempResults = [];
                    for( var i=0;i<resultsets.length;i++){
                        tempResults.push(new ProductModel(resultsets[i],isEditMode));
                    }

                    resultsCount+= total;
                    sectionResults.push({
                        tagName: pSecTag,
                        results: tempResults,
                        total: total
                    });

                    //Sorting results based on section tags
                    sectionResults.sort(function(a,b){
                        // Featured Products at the top, Other Products at the bottom, everything else sorted A-Z
                        if(a.tagName === 'Featured Products') {
                            return -1; // a top
                        }
                        if(b.tagName === 'Featured Products') {
                            return 1; // b top
                        }
                        if(a.tagName === 'Other Products') {
                            return 1; // b top
                        }
                        if(b.tagName === 'Other Products') {
                            return -1;  // a top
                        }

                        return filteredTags.indexOf(a.tagName) > filteredTags.indexOf(b.tagName) ? 1 : -1;
                    });

                // Sort pBanner to bottom.
                }
                self.productsSectionResults(sectionResults);
                self.resultsCount(resultsCount);

                if(counter===sectionTags.length){
                    self.toggleLoader(false);

                    if(singleCategoryView){
                        self.fetchSectionProducts(sectionResults[0]);
                    }
                }
            });
        }
    };
    /* End: Fetches first three results in a category to show on seaction headers*/

    /* Start: Checks for duplicate facets or facet values */
    self.isExistingFacetOrValue = function(facet, allFacets, param){
        var index = -1;
        param = param || 'name';
        allFacets.forEach(function(f,i){
            if(facet[param] === f[param]){
                index = i;
            }
        });
        return index;
    };
    /* End: Checks for duplicate facets or facet values */

    /* Start: updates the selected filters */
    self.updateCheckedValues = function(){
        $('.filtered > span[data-id]').each(function(){
            var targetName = $(this).attr('data-name');
            var targetVal = $(this).text();
            var $targetEl = $('[name="'+targetName+'"][value="'+targetVal+'"]');
            $targetEl.prop('checked',true);
            $targetEl.closest('.filter-group').addClass('open');
            $targetEl.closest('.filter-group > ul').show();
        });
    };
    /* End: updates the selected filters */

    /* Start: Sorting the facet values of each facet */
    self.sortFacetVals = function(v){
        v.sort(function(a,b){
            var aLabel = a.value,
                bLabel = b.value;
            if(aLabel && aLabel.indexOf(' ')){
                aLabel = a.value.split(' ')[0];
                aLabel = aLabel.split('-')[0];
                aLabel = +aLabel ? +aLabel : aLabel;
            }
            if(bLabel && bLabel.indexOf(' ')){
                bLabel = b.value.split(' ')[0];
                bLabel = bLabel.split('-')[0];
                bLabel = +bLabel ? +bLabel : bLabel;
            }
            return aLabel > bLabel ? 1 : -1;
        });
        return v;
    };
    /* End: Sorting the facet values of each facet */

    /* Start: Updates the filter facet and values */
    self.updateFilterFacets = function(facets, isSectionsView){
        var updatedFacets = [];
        if(isSectionsView) {
            updatedFacets = self.productsFiltersFacets();
        } else {
            self.selectedFiltersFacets([]);
        }
        for(var i=0;i < facets.length;i++){
            var facet = facets[i];
            var existingIndex = self.isExistingFacetOrValue(facet, updatedFacets);
            if(facet.name){
                if(existingIndex >= 0) {
                    var prevFacetVals = updatedFacets[existingIndex].values;
                    var facetVals = facet.values;
                    var tempVals = prevFacetVals;

                    /* Start: Checking for an existing facet value. Pushing it, if value doesn't exist
                              Updating the count value, if value exists */
                    for(var j=0;j < facetVals.length;j++){
                        if(facetVals[j] && facetVals[j].value) {
                            var facetIndex = self.isExistingFacetOrValue(facetVals[j], prevFacetVals,'value');
                            if( facetIndex === -1 ) {
                                prevFacetVals.push(facetVals[j]);
                            } else {
                                prevFacetVals[facetIndex].count = (+prevFacetVals[facetIndex].count + +facetVals[j].count);
                            }
                        }
                    }
                    /* End: Checking for an existing facet value. Pushing it, if value doesn't exist
                              Updating the count value, if value exists */

                    var sortedFacets = self.sortFacetVals(prevFacetVals);

                    updatedFacets[existingIndex].values = prevFacetVals;

                } else {
                    facet.values = self.sortFacetVals(facet.values);
                    updatedFacets.push(facet);
                }
            }
        }

        //sorting the facets alphabetically
        updatedFacets.sort(function(a,b){
            return a.label > b.label ? 1 : -1;
        });

        // clearing the productsFiltersFacets before pushing the updatedFacets
        self.selectedFiltersFacets([]);
        self.selectedFiltersFacets(updatedFacets);
        if(isSectionsView) {
            self.productsFiltersFacets(updatedFacets);
        }

        //updating selected facets
        self.updateCheckedValues();
    };
    /* End: Updates the filter facet and values */

    /*Start: getSnpParams */
    self.getSnpParams = function( type ){
        var params	 = {};
        if( self.defaults.microApplTag ){
            params['x2']= 'pAppl';
            params['q2']= self.defaults.microApplTag;
        }
        var isProductSearch = false;

        if( type === 'facetChange' && self.seeAllProducts() ) {
            isProductSearch = true;
        }

        if( !!type || isProductSearch) {
            params['pageApp'] = 'products';
            params['sp_s'] = [$(".filters-sort-by").val() || self.defaults.sortBy, "pBanner"];
            params['count'] = self.paginator.itemsPerPage(); 
            params['page'] = self.paginator.currentPage();
        } else {
            params['pageApp'] = 'products_sections_facets';
        }

        //get checked filters
        var filterGroups = $('.filter-group');
        var counter=3;
        filterGroups.each(function(){
            var $group = $(this);
            var filterName = $group.attr('data-group-name');
            var nameValues=[];
            $.each($("input[name='"+filterName+"']:checked"), function(){
                nameValues.push($(this).val());
            });
            if(nameValues.length > 0){
                params['x'+counter] = filterName;
                params['q'+counter] = nameValues.join('|');
                counter++;
            }
        });
        return params;
    };
    /*End: getSnpParams */

    /* Start : fetches products respective to the sections */
    self.fetchSectionProducts = function($data,callback){
        var type = $data.type || 'products';
        self.doProductSearch(self.getSnpParams('products'),type,$data.tagName,callback);
    };
    /* End : fetches products respective to the sections */

    /*Start: updateProducts */
    self.updateProducts = function( snpResp ){
        var newProductArray = [];
        self.productsResults([]);
        if( snpResp !== null ){
            var results = snpResp.resultsets[0]['results'];
            for( var i=0;i<results.length;i++){
                newProductArray.push(new ProductModel(results[i],isEditMode));
            }

            self.productsResults(newProductArray);
        }
        if(self.productsResults().length > 0){
            self.noResults(false);
        }else{
            self.noResults(true);
        }
    };
    /*End: updateProducts  */

    /* Start : product sections */
    self.productSection = function (snpResp ){
        if( snpResp !== null ){
            self.productsSectionResults(snpResp);
        }
    };
    /* End : product sections */

    /* Start : toggle views to see all products */
    self.toggleView = function(type){
        var seeAllProducts = self.seeAllProducts();
        if(seeAllProducts) {
            self.selectedTagName('');
            self.selectedFiltersFacets(self.productsFiltersFacets());
            self.updateCheckedValues();
        }
        self.seeAllProducts( !seeAllProducts );
    };
    /* End : toggle views to see all products */


    /*Start: showModel */
    self.showModel = function(data,event){

        event.preventDefault();

        //update model data
        var $quickViewModel= $('#quickviewModal');
        var $modelDom = $quickViewModel.find('.product-data .quick-view');
        $modelDom.find('.image img').attr('src',data['pFileReference']);
        $modelDom.find('.image img').attr('alt', data['pTitle']);
        $modelDom.find('.ribbon').attr('style', data['pBanner'] ? '' : 'display: none;');
        $modelDom.find('.ribbon').removeClass('dark-blue').removeClass('white').addClass(data['pBannerColor']);
        $modelDom.find('.ribbon span').text(data['pBannerLabel']);

        $modelDom.find('.details h3').html( data['pTitle'] );
        $modelDom.find('.details p.desc').html( data['pImageMetadataDesc'] || data['pDescription']);
        $modelDom.find('.details a.learn-more-link').attr( 'href', data['pPath']);
        $modelDom.find('.p-info').html( data['pInfo'] );
        $modelDom.find('.bazaar-voice-rating').html('');

        if(self.showRating.bind(data)()){
            var bvRatingsHtml = '<div data-bv-show=\"inline_rating\" data-bv-product-id=\"' + data['pBVProductId'] + '\"></div>';
            $modelDom.find('.bazaar-voice-rating').html(bvRatingsHtml);
        }

        //get the content from the product item and update in the model

        if( data['skus'].length > 0 && data['allSkusUnlinked'] === 'false'){

            var skusStr="<ul>";
            for( var i=0;i<data['skus'].length;i++ ){
                if(self.getSkuHtml(data['skus'][i])){
                    skusStr = skusStr + self.getSkuHtml(data['skus'][i])
                }
            }
            skusStr = skusStr+"</ul>";
            $quickViewModel.find('.sku-products').html( skusStr  );
            $quickViewModel.find('.sku-products').addClass('hide');
            $quickViewModel.find('.see-items-link').addClass('active').removeClass('hide');

        }else{
            $quickViewModel.find('.see-items-link').removeClass('active').addClass('hide');
            $quickViewModel.find('.sku-products').html('');
        }

        $quickViewModel.modal('show');
    };
    /*End:showModel */

    /*Start: SKU HTML construction from product data*/
    self.getSkuHtml = function(data){
        var skuLi = '';
        if(data['skuId']){
            skuLi = "<li>";
            var titleOrId = data['skuTitle'] || data['skuId'];
            skuLi = skuLi+'<a class="sku-link" href=\"'+data['skuPath']+'\">'+titleOrId+'</a>';
            skuLi = skuLi+"</li>";
        }
        return skuLi;
        /*var $clonedProduct = $('.product-data').clone();
		 var $modelDom = $clonedProduct.find('.quick-view');
		$modelDom.find('.image img').attr('src',data['skuFileReference']);
		$modelDom.find('.details h3').html( data['skuTitle'] );
		$modelDom.find('.details p.desc').html( data['skuDescription']);
		$modelDom.find('.details a.learn-more-link').attr( 'href', data['skuPath']);
		$modelDom.find('.p-info').html("");*/
        //return skuLi;
    };
    /*End: getSkuHtml*/

    self.clickPage = function () {
        var targetPage = $(event.target);
        self.paginator.currentPage(parseInt(targetPage.text(),10));
        self.doProductSearch( self.getSnpParams('pageClick'),'pageClick' );
    };

    /*Start: filterSearch */
    self.filterSearch = function(searchType) {
        self.paginator.currentPage(1);
        if(self.seeAllProducts()){
            self.doProductSearch( self.getSnpParams(searchType), searchType );
        }
        self.fetchAllProductSections( self.getSnpParams('products'), 'filterSearch');
    };
    /*End: filterSearch */

    var fsTimeout = null;

    //binding change event for the sort and items per page dropdown
    $(".filters-sort-by").on('change', function(){
        self.filterSearch('sortbychange');

    });

    //change event bind for the results per page dropdown
    $(".filters-num-results").on('change', function(){
        self.paginator.itemsPerPage(parseInt($(this).val(),10));
        self.filterSearch('itemseperpage');
    });

    //click event bind for facets filters
    $('.filter').on('click','fieldset > ul input[type = "checkbox"]', function(e){
        if($(this).prop("checked")){
            self.appendFilter($(this));
        }else{
            self.removeFilter($(this));
        }
        if(fsTimeout){
            clearTimeout(fsTimeout);
        }
        fsTimeout = setTimeout(function(){
            self.filterSearch( 'facetChange' );
        },800);

    });

    //event bind for the filter hint text
    $('.filtered').on('click','span',function(){
        var targetName = $(this).attr('data-name');
        var targetVal = $(this).attr('data-value');
        var $targetEl = $('[name="'+targetName+'"][value="'+targetVal+'"]');
        $targetEl.trigger('click');
        $(this).remove();
    });

    //event bind to show all skus of product
    var $quickViewModal = $('#quickviewModal');
    $quickViewModal.on('click','.see-items-link',function(e){
        e.preventDefault();
        $quickViewModal.find('.sku-products').toggleClass('hide');
        $quickViewModal.find('.see-items-link').toggleClass('active');
    });

    self.showRating = function () {
        return this.pBVProductId && (this.pBVProductGrid == '' || this.pBVProductGrid == 'true');
    };

    self.prevPage = function () {
        if(self.paginator.previousPageExists()){
            var currentPage = self.paginator.currentPage();
            self.paginator.currentPage(currentPage - 1);
            self.doProductSearch( self.getSnpParams('pageClick'),'pageClick');
        }
    };

    self.nextPage = function () {
        if(self.paginator.nextPageExists()){
            var currentPage = self.paginator.currentPage();
            self.paginator.currentPage(currentPage + 1);
            self.doProductSearch( self.getSnpParams('pageClick'),'pageClick');
        }
    };

    self.appendFilter = function($elem){
        var htmlStr = "<span data-id='"+$elem.prop('id')+"' data-name='"+$elem.prop('name')+"' data-value='"+$elem.prop('value')+"'>"+$elem.prop('value')+"</span>";
        $('.filtered').append(htmlStr);
    };
    self.removeFilter= function($elem){
        var name= $elem.prop('name');
        var val= $elem.prop('value');
        $('.filtered').find("[data-name='" +name+ "'][data-value='"+val+"']").remove();
    };

    self.loadedOnce = false;

    /* Start : Loader Functionality */
    self.toggleLoader = function(show){
        if(show){
            $(".loader").removeClass('hide');
            if ( self.loadedOnce === false ) {
                $('.product-grid').addClass('loading init-load');
            } else {
                $('.product-grid').addClass('loading');
            }
            self.isLoading(true);
        }else {
            $(".loader").addClass('hide');
            $('.product-grid').removeClass('loading init-load');
            if ( self.loadedOnce === false ) {
                self.loadedOnce = true;
            } else {
                self.scrollToGrid();
            }
            self.isLoading(false);
        }
    };
    /* End : Loader Functionality */

      /* Start: Init Method that starts the component */
    self.init = function(){
        self.initVariables();
    };
    /* End: Init Method that starts the component */

    $(window).resize($.throttle(function(){
        self.paginator.paginationItems(paginationItems());
    }, 100));

    self.init();
};

$(document).ready(function () {
    $('.ko-micro-appl-product-grid').each(function () {
        $('.product-grid').closest('.section').append($(this).find('.loader-wrapper'));
        try {
            ko.applyBindings(new MicroApplProductGridViewModel($(this)), this);
        } catch (e) {
            console.log(e);
        }
    });
}); 

//view models
var ProductModel = function (product,wcmmode) {
    // any manipulation towards the keys and values have to be done here;

    var applProduct = {};
    var pPath = product['pPath'];
    if("edit" === wcmmode ){
        if( pPath && pPath.indexOf('/content/pentair') === -1 ){
            pPath = "/content/pentair"+pPath;
        }
    }
    applProduct['pPath'] = pPath;
    applProduct['pTitle']= product['pTitle'];
    applProduct['pDescription'] = product['pDescription'];
    applProduct['pImageMetadataDesc'] = product['pImageMetadataDesc'];
    applProduct['pInfo'] = product['pInfo'];
    applProduct['pAccessories'] = product['pAccessories'];
    applProduct['pAppl'] = product['pAppl'];
    applProduct['pBrands'] = product['pBrands'];
    applProduct['pCategories'] = product['pCategories'];
    applProduct['pCertTxt'] = product['pCertTxt'];
    applProduct['pCertImg'] = product['pCertImg'];
    applProduct['pFeatures'] = product['pFeatures'];
    applProduct['pBanner'] = product['pBanner'];
    applProduct['pBannerLabel'] = product['pBannerLabel'];
    applProduct['pBannerColor'] = product['pBannerColor'];
    applProduct['pBVProductId'] = product['pBVProductId'];
    applProduct['pBVProductGrid'] = product['pBVProductGrid'];

    if (product['pFileReference']) {
        applProduct['pFileReference'] = product['pFileReference'];
    } else {
        applProduct['pFileReference'] = "/content/dam/extranet/product-related/product-photo/Pentair_ProductImagePlaceholder_300x300.jpg";
    }
    applProduct['pFooter']= product['pFooter'];
    applProduct['pOverview']= product['pOverview'];
    applProduct['pId']= product['pId'];

    //getting skus data of product
    applProduct['skus']=[];
    applProduct['allSkusUnlinked'] = 'true';
    var skuUnlinked =  product['skuUnlinked'].split(',');
    var skuIds =  product['skuId'].split('|');
    var skuTitles =  product['skuTitle'].split('|');
    var skuPaths =  product['skuPath'].split('|');
    var skuDes =  product['skuDescription'].split('|');
    var skuRef =  product['skuFileReference'].split('|');
    /*skuDiscontnd ,skuFeatures,footer,skuOverview,capacities,heads */

    if( skuIds.length > 0 && !!skuIds[0]){
        for( var i=0;i<skuIds.length; i++ ){
            var SKU = {};
            SKU['skuId'] = skuIds[i];
            SKU['skuTitle']= skuTitles[i];
            SKU['skuDescription']=skuDes[i];

            SKU['skuFileReference']= skuRef[i];
            var skuPath = skuPaths[i];
            if("edit" === wcmmode ){
                if( skuPath && skuPath.indexOf('/content/pentair') === -1 ){
                    skuPath = "/content/pentair"+skuPath;
                }
            }
            //do we have atleast one sku which is not unlinked
            if(skuUnlinked[i] === 'false'){
               applProduct['allSkusUnlinked'] = 'false';
            }
            SKU['skuPath']= skuPath;
            applProduct['skus'].push(SKU);
        }
    }
    return applProduct;
};

var FacetsFilter = function ( item ) { 
    // any manipulation towards the keys and values have to be done here;
    return item;
};

var PageListViewModel = function(elem) {
    var self = this,
        $elem = $(elem),
        isEditMode = $elem.attr('data-iseditmode'),
        snpBaseSearchURL = $elem.attr('data-appl-url') || 'http://stage.sp1004f8b7.guided.ss-omtrdc.net/',
        itemsPerPage = $elem.attr('data-per-page'),
        resultType = $elem.attr('data-result-type'),
        blogTag = $elem.attr('data-blog-tag') || '';
        self.selectedFilters = ko.observableArray();

    // How many pagination buttons to display depends on screen size.
    var paginationItems = function() {
        if(matchMedia('(max-width: 765px)').matches) {
            return 3;
        }
        return 5;
    };

    var updateAnalytics = function () {

        var blogFilterValues = _.chain(self.selectedFilters())
            .map(function(elem){return elem.filterLabel + ':' + elem.name}, '')
            .value()
            .join('|');

        var newDigitalData = {
            resources: {
                blogFilterValues: _.chain(self.selectedFilters()).map(function(elem){return elem.filterLabel + ':' + elem.name}, '').value().join('|')
            },
            event : {
                eventName: resultType.replace('blogs', 'blog') + ' filter',
                eventAction: 'click',
                type: resultType.replace('blogs', 'blog'),
                timeStamp: (new Date).toString()
            }
        };

        $.extend(window.digitalData, newDigitalData);

        return true;
    };

    /* Start: variables initilization */
    self.initVariables = function() {

        self.defaults = {
            displayedPages: 3,
            snpBaseUrl: snpBaseSearchURL,
            pageApp: 'bne'
        };
        self.bneResults = ko.observableArray([]);

        self.pageFiltersFacets = ko.observableArray([]);

        self.paginator = new PaginationViewModel(0, +itemsPerPage, paginationItems()); // Params: totalResults, itemsPerPage, paginationItems(method)

        self.noResults = ko.observable(false);

        self.doSearch(self.getSnpParams(), 'onload');

        self.selectedFilters.subscribe(function(newValue){
            self.filterSearch('facetChange');
            updateAnalytics();
        });

    };
    /* End: Valible initilization */

    /* Start: Makes S&P calls with provided params and updates the values */
    self.doSearch = function(snpParams, type) {
        $.ajax({
            dataType: "jsonp",
            url: self.defaults.snpBaseUrl,
            data: snpParams
        }).success(function(resp) {

            self.updatePageResults(resp);
            if("onload" === type) {
                self.updateFilterFacets(resp, (blogTag !== '' ? ['bneBlogName'] : null));
            } else {
                $('html, body').stop().animate({scrollTop: $('.ko-page-list').offset().top - 150}, 500);
            }

            //pagiantion observable
            if(resp && resp.general && resp.general.total) {
                self.paginator.totalResults(resp.general.total);
            }

        }).done(function() {
            objectFitImages();
        }).fail(function() {
            console.log("Error occured in doSearch");
        });
    };
    /* End: Makes S&P calls with provided params and updates the values */

    /*Start: getSnpParams */
    self.getSnpParams = function() {

        var params = {};
        params['pageApp'] = self.defaults.pageApp;
        params['sp_x_1'] = 'entityType';
        params['sp_q_1'] = resultType;
        params['count'] = self.paginator.itemsPerPage();
        params['page'] = self.paginator.currentPage();

        var counter = 2;

        if (resultType === 'blogs') {
            params['sort'] = 'bneDate';

            if ($.isEmptyObject(blogTag)) {
                params['x' + counter] = 'bneBlogName';
                params['q' + counter] = blogTag;
                counter++;
            }
        } else if (resultType === 'news') {
            params['sort'] = 'bneDate';
        }

        var facetObj = {};
        _.chain(self.selectedFilters())
            .groupBy('filter')
            .each(function(element, index){facetObj[index]= _.pluck(element, 'name').join("|")}); // Produces: {bneAuthor: "Pentair Communications", bneDateFacet: "March 2018|March 2019"}

        _.each(facetObj, function(elem, key){   //adds as S&P params
            var nameValues = [];
            params['x' + counter] = key;
            params['q' + counter] = elem;
            counter++;
        });

        return params;
    };
    /*End: getSnpParams */

    /*Start: updatePageResults */
    self.updatePageResults = function(snpResp) {
        self.bneResults([]);
        if(snpResp !== null) {
            var results = snpResp.resultsets[0]['results'];

            for(var i = 0; i < results.length; i++) {
                self.bneResults.push(new BNEModel(results[i], isEditMode));
            }
        }
        if(self.bneResults().length > 0) {
            self.noResults(false);
        } else {
            self.noResults(true);
        }
    };
    /*End: updatePageResults  */

    /*Start: updateFilterFacets  */
    self.updateFilterFacets = function(snpresp, skipItems) {
        var facets = snpresp.facets;
        for(var i = 0; i < facets.length; i++) {
            var facet = facets[i];
            if(!$.isEmptyObject(facet)) {
                if(skipItems && skipItems.indexOf(facet.name) >= 0) {
                    if(facet.values && facet.values.length > 1) {
                        var facetValuesObj = facet.values;
                        facet.values = facetValuesObj.filter(function(f) {
                            return f.value !== blogTag;
                        });
                        self.pageFiltersFacets.push(new FacetsFilter(facet));
                    }
                } else {
                    self.pageFiltersFacets.push(new FacetsFilter(facet));
                }
            }
        }

    };
    /*End: updateFilterFacets  */

    /*Start: filterSearch */
    self.filterSearch = function(searchType) {
        self.paginator.currentPage(1);
        self.doSearch(self.getSnpParams(), searchType);
    };
    /*End: filterSearch */

    // open/close tier-4 filters
    var $filterParentLink = $('.page-list.component .filter');
    $filterParentLink.on('click', 'fieldset > ul li > span', function() {
        var $this = $(this);
        if($this.parent('li').hasClass('open')) {
            $this.parent('li').removeClass('open');
            $this.next().stop().slideUp('fast');
        } else {
            $this.parent('li').addClass('open');
            $this.next().stop().slideDown('fast');
        }
    });

    //event bind for the fitler hint text
    // $('.filtered').on('click', 'span', function() {
    //     var inputId = $(this).attr('data-id');
    //     $('#' + inputId).trigger('click');
    //     $(this).remove();
    // });

    self.clickPage = function() {
        var targetPage = $(event.target);
        self.paginator.currentPage(parseInt(targetPage.text(), 10));
        self.doSearch(self.getSnpParams(), 'pageClick');
    };

    self.prevPage = function() {
        if(self.paginator.previousPageExists()) {
            var currentPage = self.paginator.currentPage();
            self.paginator.currentPage(currentPage - 1);
            self.doSearch(self.getSnpParams(), 'pageClick');
        }
    };

    self.nextPage = function() {
        if(self.paginator.nextPageExists()) {
            var currentPage = self.paginator.currentPage();
            self.paginator.currentPage(currentPage + 1);
            self.doSearch(self.getSnpParams(), 'pageClick');
        }
    };

    self.removeFilter = function(index) {
        self.selectedFilters.splice(index, 1);
    };

    /* Start: Init Method that starts the component */
    self.init = function() {
        self.initVariables();
    };
    /* End: Init Method that starts the component */

    $(window).resize($.throttle(function() {
        if(self.paginator) {
            self.paginator.paginationItems(paginationItems());
        }
    }, 100));
    self.init();

};

$(document).ready(function() {
    $('.ko-page-list').each(function() {
        var koPageList = new PageListViewModel($(this));
        try {
            ko.applyBindings(koPageList, this);
        } catch(e) {
            console.log(e);
        }
    });
});

//view models
//Model Object for Blogs/Events/News
var BNEModel = function(bneResult, wcmmode) {
    // any manipulation towards the keys and values have to be done here;

    var bneModelObj = {};
    var bnePagePath = bneResult['bnePagePath'];
    if("edit" === wcmmode) {
        if(bnePagePath && bnePagePath.indexOf('/content/pentair') === -1) {
            bnePagePath = "/content/pentair" + bnePagePath;
        }
    }
    bneModelObj['bnePagePath'] = bnePagePath;
    bneModelObj['bneImgPath'] = bneResult['bneImgPath'];
    bneModelObj['bneTitle'] = bneResult['bneTitle'];
    bneModelObj['bneIndustry'] = bneResult['bneIndustry'];
    bneModelObj['bneDate'] = bneResult['bneDate'];
    bneModelObj['bneDateString'] = bneResult['bneDateString'];
    bneModelObj['bneDesc'] = bneResult['bneDesc'];
    bneModelObj['bneAuthor'] = bneResult['bneAuthor'];
    bneModelObj['bneName'] = bneResult['bneName'];
    bneModelObj['bneAuthorImg'] = bneResult['bneAuthorImg'];
    bneModelObj['bneEventLink'] = bneResult['bneEventLink'];
    bneModelObj['bneEventLocation'] = bneResult['bneEventLocation'];

    return bneModelObj;
};

var FacetsFilter = function(item) {
    // any manipulation towards the keys and values have to be done here;
    return item;
};

var SiteSearchViewModel = function(elem) {
    var self = this,
        $elem = $(elem),
        $allPagination = $(".all .ko-site-search-pagination"),
        $productPagination = $(".product .ko-site-search-pagination"),
        $blogPagination = $(".blog .ko-site-search-pagination"),
        $eventPagination = $(".event .ko-site-search-pagination"),
        $newsPagination = $(".news .ko-site-search-pagination"),
        $allPaginationWrapper = $(".site-search-results .all.pagination"),
        $productPaginationWrapper = $(".site-search-results .product.pagination"),
        $blogPaginationWrapper = $(".site-search-results .blog.pagination"),
        $eventPaginationWrapper = $(".site-search-results .event.pagination"),
        $newsPaginationWrapper = $(".site-search-results .news.pagination"),
        $hintText = $(".hint-text"),
        itemsPerPageConf = $elem.attr('data-items-per-page'),
        isEditMode = $elem.attr('data-iseditmode'),
        snpBaseSearchURL = $elem.attr('data-snp-api-path') || 'http://sp1004f8b7.guided.ss-omtrdc.net/';

    /* Start: variables initialization */
    self.initVariables = function() {

        self.defaults = {
            snpBaseUrl: snpBaseSearchURL,
            displayedPages: 3,
            itemsPerPage: itemsPerPageConf,
            collections: {
                'all': 'all',
                'products': 'pentair_products',
                'blogs': 'pentair_blogs',
                'news': 'pentair_news',
                'events': 'pentair_events'
            }
        };

        // all
        self.searchResults = ko.observableArray([]);
        self.searchType = ko.observable();
        self.keyword = ko.observable('');
        self.type = ko.observable('all');
        self.currentPage = ko.observable(1);
        self.resultsStarts = ko.observable(1);
        self.resultsEnds = ko.observable();
        self.totalResultsCount = ko.observable();
        self.allNoResults = ko.observable(true);
        self.suggestedTerm = ko.observable('-- No Suggested Term --');
        self.showDidYouMean = ko.observable(false);

        // product results
        self.productSearchResults = ko.observableArray([]);
        self.productResultsStarts = ko.observable(1);
        self.productResultsEnds = ko.observable();
        self.productTotalResultsCount = ko.observable();
        self.productNoResults = ko.observable(true);
        self.productCurrentPage = ko.observable(1);

        // blog results
        self.blogSearchResults = ko.observableArray([]);
        self.blogResultsStarts = ko.observable(1);
        self.blogResultsEnds = ko.observable();
        self.blogTotalResultsCount = ko.observable();
        self.blogNoResults = ko.observable(true);
        self.blogCurrentPage = ko.observable(1);

        // event results
        self.eventSearchResults = ko.observableArray([]);
        self.eventResultsStarts = ko.observable(1);
        self.eventResultsEnds = ko.observable();
        self.eventTotalResultsCount = ko.observable();
        self.eventNoResults = ko.observable(true);
        self.eventCurrentPage = ko.observable(1);

        // news results
        self.newsSearchResults = ko.observableArray([]);
        self.newsResultsStarts = ko.observable(1);
        self.newsResultsEnds = ko.observable();
        self.newsTotalResultsCount = ko.observable();
        self.newsNoResults = ko.observable(true);
        self.newsCurrentPage = ko.observable(1);

        var snpParms = self.getSnpParms('onload');
        var productSnpParams = JSON.parse(JSON.stringify(snpParms));
        productSnpParams.sp_k = 'pentair_products';

        var blogSnpParams = JSON.parse(JSON.stringify(snpParms));
        blogSnpParams.sp_k = 'pentair_blogs';

        var eventSnpParams = JSON.parse(JSON.stringify(snpParms));
        eventSnpParams.sp_k = 'pentair_events';

        var newsSnpParams = JSON.parse(JSON.stringify(snpParms));
        newsSnpParams.sp_k = 'pentair_news';

        if(snpParms['q'].trim() !== "") {
            self.doSiteSearch(snpParms, 'onload');
            self.getProducts(productSnpParams, 'onload');
            self.getBlogs(blogSnpParams, 'onload');
            self.getEvents(eventSnpParams, 'onload');
            self.getNews(newsSnpParams, 'onload');
        } else {
            self.toggleLoader();
        }

    };
    /* End: Valible initilization */

    self.pushBrowserState = function(params) {
        var url = $.param.querystring(window.location.href, params, 2);
        window.history.pushState(params, '', url);
    };

    self.doSearch = function(data, event) {

        var snpParms = self.getSnpParms('submit');
        if(snpParms['q']) {

            if(snpParms['q'].trim() !== "") {
                self.currentPage(1);
                self.productCurrentPage(1);
                self.blogCurrentPage(1);
                self.eventCurrentPage(1);
                self.newsCurrentPage(1);
                self.pushBrowserState(self.getBrowserParms('submit'));

                var snpParams = self.getSnpParms('submit');

                var productSnpParams = JSON.parse(JSON.stringify(snpParms));
                productSnpParams.sp_k = 'pentair_products';

                var blogSnpParams = JSON.parse(JSON.stringify(snpParms));
                blogSnpParams.sp_k = 'pentair_blogs';

                var eventSnpParams = JSON.parse(JSON.stringify(snpParms));
                eventSnpParams.sp_k = 'pentair_events';

                var newsSnpParams = JSON.parse(JSON.stringify(snpParms));
                newsSnpParams.sp_k = 'pentair_news';
                self.doSiteSearch(snpParams, 'submit');
                self.getProducts(productSnpParams, 'submit');
                self.getBlogs(blogSnpParams, 'submit');
                self.getEvents(eventSnpParams, 'submit');
                self.getNews(newsSnpParams, 'submit');
            }
        } else {
            console.warn('Search attempted with no term. Cancelled.');
        }
    };

    self.getBrowserParms = function(type) {
        var queryParms = {};
        queryParms['q'] = self.keyword();

        /*debug local*/
        // queryParms['wcmmode'] = 'disabled';

        return queryParms;
    };
    /* Start: Makes S&P calls with provided params and updates the values */

    self.getProducts = function(snpParams, type) {
        self.toggleLoader(true);
        $.ajax({
            dataType: "jsonp",
            url: self.defaults.snpBaseUrl,
            data: snpParams
        }).success(function(resp) {
            self.updateProductSeachResults(resp);

            if(resp && resp.general && resp.general.total) {
                self.productTotalResultsCount(resp.general.total);
                self.productResultsStarts(resp.general.page_lower);
                self.productResultsEnds(resp.general.page_upper);
            }
            //update pagination only if type is not page click
            if("pageClick" !== type) {
                self.productUpdatePagination();
            }
            //destroy the pagination when total pages 1
            if(resp && resp.general && resp.general.page_total) {
                var pageTotal = resp.general.page_total;
                if(pageTotal <= 1) {
                    self.destroyProductPagination();
                }
            }
            ////////////////////////////////////////////////////////
            //// building data analytics layer object start ///////
            //////////////////////////////////////////////////////
            try {
                if(digitalData.search) {
                    digitalData.search.searchType = "internal search";
                    digitalData.search.searchLocation = window.location.pathname;
                    digitalData.search.searchQuery = self.keyword();
//                    digitalData.search.resultsNumber = self.productTotalResultsCount();
                    digitalData.search.searchFilter = self.type();
                }
                if(digitalData.event) {
                    var eventData = {};

                    if(type === 'onload') {
                        eventData.type = "initial";
                    } else {
                        eventData.type = "refine";
                    }
                    digitalData.event.eventName = "site search";
                    //search or null search, search if more than 1 search result is listed, null if 0 search results are listed
                    if(self.productTotalResultsCount() === 0) {
                        eventData.eventAction = null;
                    } else {
                        eventData.eventAction = "search";
                    }

                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }
            } catch(err) {
                console.log(err);
            }

        }).done(function() {
            if("activeElement" in document)
                document.activeElement.blur(); //removes focus from input on search for mobile
            self.toggleLoader(false);
            $('.owl-carousel').trigger('refresh.owl.carousel');
        }).error(function() {});
    };
    self.getBlogs = function(snpParams, type) {
        self.toggleLoader(true);
        $.ajax({
            dataType: "jsonp",
            url: self.defaults.snpBaseUrl,
            data: snpParams
        }).success(function(resp) {
            self.updateBlogSeachResults(resp);

            if(resp && resp.general && resp.general.total) {
                self.blogTotalResultsCount(resp.general.total);
                self.blogResultsStarts(resp.general.page_lower);
                self.blogResultsEnds(resp.general.page_upper);
            }
            //update pagination only if type is not page click
            if("pageClick" !== type) {
                self.blogUpdatePagination();
            }
            //destroy the pagination when total pages 1
            if(resp && resp.general && resp.general.page_total) {
                var pageTotal = resp.general.page_total;
                if(pageTotal <= 1) {
                    self.destroyBlogPagination();
                }
            }
            ////////////////////////////////////////////////////////
            //// building data analytics layer object start ///////
            //////////////////////////////////////////////////////
            try {
                if(digitalData.search) {
                    digitalData.search.searchType = "internal search";
                    digitalData.search.searchLocation = window.location.pathname;
                    digitalData.search.searchQuery = self.keyword();
//                    digitalData.search.resultsNumber = self.blogTotalResultsCount();
                    digitalData.search.searchFilter = self.type();
                }
                if(digitalData.event) {
                    var eventData = {};

                    if(type === 'onload') {
                        eventData.type = "initial";
                    } else {
                        eventData.type = "refine";
                    }
                    digitalData.event.eventName = "site search";
                    //search or null search, search if more than 1 search result is listed, null if 0 search results are listed
                    if(self.blogTotalResultsCount() === 0) {
                        eventData.eventAction = null;
                    } else {
                        eventData.eventAction = "search";
                    }

                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }
            } catch(err) {
                console.log(err);
            }

        }).done(function() {
            if("activeElement" in document)
                document.activeElement.blur(); //removes focus from input on search for mobile
            self.toggleLoader(false);
            $('.owl-carousel').trigger('refresh.owl.carousel');
        }).error(function() {});
    };
    self.getEvents = function(snpParams, type) {
        self.toggleLoader(true);
        $.ajax({
            dataType: "jsonp",
            url: self.defaults.snpBaseUrl,
            data: snpParams
        }).success(function(resp) {
            self.updateEventSeachResults(resp);

            if(resp && resp.general && resp.general.total) {
                self.eventTotalResultsCount(resp.general.total);
                self.eventResultsStarts(resp.general.page_lower);
                self.eventResultsEnds(resp.general.page_upper);
            }
            //update pagination only if type is not page click
            if("pageClick" !== type) {
                self.eventUpdatePagination();
            }
            //destroy the pagination when total pages 1
            if(resp && resp.general && resp.general.page_total) {
                var pageTotal = resp.general.page_total;
                if(pageTotal <= 1) {
                    self.destroyEventPagination();
                }
            }
            ////////////////////////////////////////////////////////
            //// building data analytics layer object start ///////
            //////////////////////////////////////////////////////
            try {
                if(digitalData.search) {
                    digitalData.search.searchType = "internal search";
                    digitalData.search.searchLocation = window.location.pathname;
                    digitalData.search.searchQuery = self.keyword();
//                    digitalData.search.resultsNumber = self.eventTotalResultsCount();
                    digitalData.search.searchFilter = self.type();
                }
                if(digitalData.event) {
                    var eventData = {};

                    if(type === 'onload') {
                        eventData.type = "initial";
                    } else {
                        eventData.type = "refine";
                    }
                    digitalData.event.eventName = "site search";
                    //search or null search, search if more than 1 search result is listed, null if 0 search results are listed
                    if(self.eventTotalResultsCount() === 0) {
                        eventData.eventAction = null;
                    } else {
                        eventData.eventAction = "search";
                    }

                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }
            } catch(err) {
                console.log(err);
            }

        }).done(function() {
            if("activeElement" in document)
                document.activeElement.blur(); //removes focus from input on search for mobile
            self.toggleLoader(false);
            $('.owl-carousel').trigger('refresh.owl.carousel');
        }).error(function() {
            console.log("done");
        });
    };
    self.getNews = function(snpParams, type) {
        self.toggleLoader(true);
        $.ajax({
            dataType: "jsonp",
            url: self.defaults.snpBaseUrl,
            data: snpParams
        }).success(function(resp) {
            self.updateNewsSeachResults(resp);

            if(resp && resp.general && resp.general.total) {
                self.newsTotalResultsCount(resp.general.total);
                self.newsResultsStarts(resp.general.page_lower);
                self.newsResultsEnds(resp.general.page_upper);
            }
            //update pagination only if type is not page click
            if("pageClick" !== type) {
                self.newsUpdatePagination();
            }
            //destroy the pagination when total pages 1
            if(resp && resp.general && resp.general.page_total) {
                var pageTotal = resp.general.page_total;
                if(pageTotal <= 1) {
                    self.destroyNewsPagination();
                }
            }
            ////////////////////////////////////////////////////////
            //// building data analytics layer object start ///////
            //////////////////////////////////////////////////////
            try {
                if(digitalData.search) {
                    digitalData.search.searchType = "internal search";
                    digitalData.search.searchLocation = window.location.pathname;
                    digitalData.search.searchQuery = self.keyword();
//                    digitalData.search.resultsNumber = self.newsTotalResultsCount();
                    digitalData.search.searchFilter = self.type();
                }
                if(digitalData.event) {
                    var eventData = {};

                    if(type === 'onload') {
                        eventData.type = "initial";
                    } else {
                        eventData.type = "refine";
                    }
                    digitalData.event.eventName = "site search";
                    //search or null search, search if more than 1 search result is listed, null if 0 search results are listed
                    if(self.newsTotalResultsCount() === 0) {
                        eventData.eventAction = null;
                    } else {
                        eventData.eventAction = "search";
                    }

                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }
            } catch(err) {
                console.log(err);
            }

        }).done(function() {
            if("activeElement" in document)
                document.activeElement.blur(); //removes focus from input on search for mobile
            self.toggleLoader(false);
            $('.owl-carousel').trigger('refresh.owl.carousel');
        }).error(function() {
            console.log("done");
        });
    };

    self.doDidYouMean = function() {
        self.keyword(self.suggestedTerm());
        self.doSearch();
    };

    self.doSiteSearch = function(snpParams, type) {
        self.toggleLoader(true);
        $.ajax({
            dataType: "jsonp",
            url: self.defaults.snpBaseUrl,
            data: snpParams
        }).success(function(resp) {

            self.updateSiteSeachResults(resp);
            self.showDidYouMean(false);

            if(resp && resp.general && resp.general.total) {
                self.totalResultsCount(resp.general.total);
                self.resultsStarts(resp.general.page_lower);
                self.resultsEnds(resp.general.page_upper);
            }
            //update pagination only if type is not page click
            if("pageClick" !== type) {
                self.allUpdatePagination();
            }
            //destroy the pagination when total pages 1
            if(resp && resp.general && resp.general.page_total) {
                var pageTotal = resp.general.page_total;
                if(pageTotal <= 1) {
                    self.destroyPagination();
                }
            }

            if(resp && resp.general && resp.general.suggestions && self.keyword() !== '') {
                /* The suggestions object returns as follows:

                    suggestions [
                        {
                            word: 'pool',
                            link: '?...........'
                        },
                        ...
                    ]
                */
                var suggestions = resp.general.suggestions;
                if(suggestions.length > 0) {
                    var firstSuggestion = suggestions[0];
                    if(firstSuggestion.word != null) {
                        var firstSuggestionWord = firstSuggestion.word;
                        self.suggestedTerm(firstSuggestionWord);
                        self.showDidYouMean(true);
                    }
                }
            }

            ////////////////////////////////////////////////////////
            //// building data analytics layer object start ///////
            //////////////////////////////////////////////////////
            try {
                if(digitalData.search) {
                    digitalData.search.searchType = "internal search";
                    digitalData.search.searchLocation = window.location.pathname;
                    digitalData.search.searchQuery = self.keyword();
                    digitalData.search.resultsNumber = self.totalResultsCount();
                    digitalData.search.searchFilter = self.type();
                }
                if(digitalData.event) {
                    var eventData = {};

                    if(type === 'onload') {
                        eventData.type = "initial";
                    } else {
                        eventData.type = "refine";
                    }
                    digitalData.event.eventName = "site search";
                    //search or null search, search if more than 1 search result is listed, null if 0 search results are listed
                    if(self.totalResultsCount() === 0) {
                        eventData.eventAction = null;
                    } else {
                        eventData.eventAction = "search";
                    }

                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }
            } catch(err) {
                console.log(err);
            }
            ////////////////////////////////////////////////////////
            ///// building data analytics layer object end  ///////
            //////////////////////////////////////////////////////

        }).done(function() {
            if("activeElement" in document)
                document.activeElement.blur(); //removes focus from input on search for mobile
            self.toggleLoader(false);
            $('.owl-carousel').trigger('refresh.owl.carousel');
        }).error(function() {
            console.log("done");
        });
    };
    /* End: Makes S&P calls with provided params and updates the values */

    /*Start: getSnpParms */
    self.getSnpParms = function(type) {

        var params = {};
        if(type === 'onload') {
            var onloadParms = $.deparam.querystring(window.location.href);
            if(onloadParms.page) {
                self.currentPage(onloadParms.page);
            }
            if(onloadParms.type) {
                self.type(onloadParms.type);
                $elem.find('.search-type').val(onloadParms.type).trigger('chosen:updated');
            }
            if(onloadParms.q) {
                self.keyword(onloadParms.q);
            }
            if(!onloadParms.type && !onloadParms.q && !onloadParms.page) {
                self.pushBrowserState(self.getBrowserParms());
            }
        }

        params['pageApp'] = 'pentair_site_search';
        if(self.type() !== 'all') {
            params['sp_k'] = self.defaults.collections[self.type()];
        }

        // allows for tabbed search results
        switch(type) {
            case 'force-product':
                params.sp_k = self.defaults.collections['products'];
                params['page'] = self.productCurrentPage();
                break;
            case 'force-blog':
                params.sp_k = self.defaults.collections['blogs'];
                params['page'] = self.blogCurrentPage();
                break;
            case 'force-event':
                params.sp_k = self.defaults.collections['events'];
                params['page'] = self.eventCurrentPage();
                break;
            case 'force-news':
                params.sp_k = self.defaults.collections['news'];
                params['page'] = self.newsCurrentPage();
                break;
            default:
                params.sp_k = self.defaults.collections['all'];
                params['page'] = self.currentPage();
                break;
        }

        self.newKeyword = ko.observable('');
        self.newKeyword(defineQueryString());
        params['q'] = defineQueryString() || '';
        params['count'] = self.defaults.itemsPerPage;
        return params;
    };
    /*End: getSnpParms */

    function defineQueryString() {
        /* Makes the querystring and handles quoted phrases as well as wildcard searches */
        var queryString = '';
        var match = self.keyword().match(/(?:[^\s"]+|"[^"]*")+/g);  // quoted phrase match
        if(match) {
            match.forEach(function(item) {
                if(item) {
                    var space = queryString ? ' ' : '';
                    if(item.indexOf('"') === -1) {
                        var asterisk = '*';
                        queryString += space + asterisk + item.replace(new RegExp(" ", "g"), '+') + asterisk;
                    } else {
                        queryString += space + item.replace(new RegExp(" ", "g"), '+');
                    }
                }
            });
            queryString.replace(new RegExp('"', "g"), '%22');
        } else {
            console.warn('No search terms.');
        }
        return queryString;
    }

    /*Start: updateProducts */
    self.updateSiteSeachResults = function(snpResp) {
        self.searchResults([]);
        if(snpResp !== null) {
            var results = snpResp.resultsets[0]['results'];
            for(var i = 0; i < results.length; i++) {
                self.searchResults.push(new SiteSearchModel(results[i], isEditMode));
            }
        }
        if(self.searchResults().length > 0) {
            self.allNoResults(false);
        } else {
            self.allNoResults(true);
        }
    };

    self.updateProductSeachResults = function(snpResp) {
        self.productSearchResults([]);
        if(snpResp !== null) {
            var results = snpResp.resultsets[0]['results'];
            for(var i = 0; i < results.length; i++) {
                self.productSearchResults.push(new SiteSearchModel(results[i], isEditMode));
            }
        }
        if(self.productSearchResults().length > 0) {
            self.productNoResults(false);
        } else {
            self.productNoResults(true);
        }
    };

    self.updateBlogSeachResults = function(snpResp) {
        self.blogSearchResults([]);
        if(snpResp !== null) {
            var results = snpResp.resultsets[0]['results'];
            for(var i = 0; i < results.length; i++) {
                self.blogSearchResults.push(new SiteSearchModel(results[i], isEditMode));
            }
        }
        if(self.blogSearchResults().length > 0) {
            self.blogNoResults(false);
        } else {
            self.blogNoResults(true);
        }
    };

    self.updateEventSeachResults = function(snpResp) {
        self.eventSearchResults([]);
        if(snpResp !== null) {
            var results = snpResp.resultsets[0]['results'];
            for(var i = 0; i < results.length; i++) {
                self.eventSearchResults.push(new SiteSearchModel(results[i], isEditMode));
            }
        }
        if(self.eventSearchResults().length > 0) {
            self.eventNoResults(false);
        } else {
            self.eventNoResults(true);
        }
    };

    self.updateNewsSeachResults = function(snpResp) {
        self.newsSearchResults([]);
        if(snpResp !== null) {
            var results = snpResp.resultsets[0]['results'];
            for(var i = 0; i < results.length; i++) {
                self.newsSearchResults.push(new SiteSearchModel(results[i], isEditMode));
            }
        }
        if(self.newsSearchResults().length > 0) {
            self.newsNoResults(false);
        } else {
            self.newsNoResults(true);
        }
    };
    /*End: updateProducts  */

    /*Start: allUpdatePagination */
    self.allUpdatePagination = function(page) {
        $allPaginationWrapper.removeClass('hide');
        $hintText.removeClass('hide');
        $allPagination.pagination({
            items: self.totalResultsCount(),
            displayedPages: self.defaults.displayedPages,
            itemsOnPage: self.defaults.itemsPerPage,
            currentPage: self.currentPage(),
            edges: 0,
            useAnchors: true,
            ellipsePageSet: false,
            hrefTextPrefix: '#',
            prevText: ' ',
            nextText: ' ',
            onPageClick: function(pageIndex) {
                self.currentPage(pageIndex);
                self.pushBrowserState(self.getBrowserParms('submit'));
                self.doSiteSearch(self.getSnpParms(), 'pageClick');
                try {
                    $('html, body').stop().animate({scrollTop: $('.site-search-form').offset().top - 150}, 500);
                    //$('html, body').scrollTop($('.grid').offset().top - 150)
                } catch(e) {
                }
            }
        });
    };
    self.productUpdatePagination = function(page) {
        $productPaginationWrapper.removeClass('hide');
        $hintText.removeClass('hide');
        $productPagination.pagination({
            items: self.productTotalResultsCount(),
            displayedPages: self.defaults.displayedPages,
            itemsOnPage: self.defaults.itemsPerPage,
            currentPage: self.productCurrentPage(),
            edges: 0,
            useAnchors: true,
            ellipsePageSet: false,
            hrefTextPrefix: '#',
            prevText: ' ',
            nextText: ' ',
            onPageClick: function(pageIndex) {
                self.productCurrentPage(pageIndex);
                self.pushBrowserState(self.getBrowserParms('submit'));
                self.getProducts(self.getSnpParms('force-product'), 'pageClick');
                try {
                    $('html, body').stop().animate({scrollTop: $('.site-search-form').offset().top - 150}, 500);
                } catch(e) {
                }
            }
        });
    };
    self.blogUpdatePagination = function(page) {
        $blogPaginationWrapper.removeClass('hide');
        $hintText.removeClass('hide');
        $blogPagination.pagination({
            items: self.blogTotalResultsCount(),
            displayedPages: self.defaults.displayedPages,
            itemsOnPage: self.defaults.itemsPerPage,
            currentPage: self.blogCurrentPage(),
            edges: 0,
            useAnchors: true,
            ellipsePageSet: false,
            hrefTextPrefix: '#',
            prevText: ' ',
            nextText: ' ',
            onPageClick: function(pageIndex) {
                self.blogCurrentPage(pageIndex);
                self.pushBrowserState(self.getBrowserParms('submit'));
                self.getblogs(self.getSnpParms('force-blog'), 'pageClick');
                try {
                    $('html, body').stop().animate({scrollTop: $('.site-search-form').offset().top - 150}, 500);
                } catch(e) {
                }
            }
        });
    };
    self.eventUpdatePagination = function(page) {
        $eventPaginationWrapper.removeClass('hide');
        $hintText.removeClass('hide');
        $eventPagination.pagination({
            items: self.eventTotalResultsCount(),
            displayedPages: self.defaults.displayedPages,
            itemsOnPage: self.defaults.itemsPerPage,
            currentPage: self.eventCurrentPage(),
            edges: 0,
            useAnchors: true,
            ellipsePageSet: false,
            hrefTextPrefix: '#',
            prevText: ' ',
            nextText: ' ',
            onPageClick: function(pageIndex) {
                self.eventCurrentPage(pageIndex);
                self.pushBrowserState(self.getBrowserParms('submit'));
                self.getevents(self.getSnpParms('force-event'), 'pageClick');
                try {
                    $('html, body').stop().animate({scrollTop: $('.site-search-form').offset().top - 150}, 500);
                } catch(e) {
                }
            }
        });
    };
    self.newsUpdatePagination = function(page) {
        $newsPaginationWrapper.removeClass('hide');
        $hintText.removeClass('hide');
        $newsPagination.pagination({
            items: self.newsTotalResultsCount(),
            displayedPages: self.defaults.displayedPages,
            itemsOnPage: self.defaults.itemsPerPage,
            currentPage: self.newsCurrentPage(),
            edges: 0,
            useAnchors: true,
            ellipsePageSet: false,
            hrefTextPrefix: '#',
            prevText: ' ',
            nextText: ' ',
            onPageClick: function(pageIndex) {
                self.newsCurrentPage(pageIndex);
                self.pushBrowserState(self.getBrowserParms('submit'));
                self.getnewss(self.getSnpParms('force-news'), 'pageClick');
                try {
                    $('html, body').stop().animate({scrollTop: $('.site-search-form').offset().top - 150}, 500);
                } catch(e) {
                }
            }
        });
    };
    /*End: allUpdatePagination */

    /*Start: destroyPagination */
    self.destroyPagination = function() {
        $allPagination.pagination('destroy');
        $allPaginationWrapper.addClass('hide');
    };
    self.destroyProductPagination = function() {
        $productPagination.pagination('destroy');
        $productPaginationWrapper.addClass('hide');
    };
    self.destroyBlogPagination = function() {
        $blogPagination.pagination('destroy');
        $blogPaginationWrapper.addClass('hide');
    };
    self.destroyEventPagination = function() {
        $eventPagination.pagination('destroy');
        $eventPaginationWrapper.addClass('hide');
    };
    self.destroyNewsPagination = function() {
        $newsPagination.pagination('destroy');
        $newsPaginationWrapper.addClass('hide');
    };
    /*End: destroyPagination */

    /* Start : Loader Functionality */
    self.toggleLoader = function(show) {
        var $resultBlockElement = $('.result-block');
        if(show) {
            $(".loader").removeClass('hide');
            $('ko-site-search').addClass('loading');
            var resultBlockHt = $(window).height() - ($resultBlockElement.offset().top - $(window).scrollTop());
            $resultBlockElement.css('maxHeight', resultBlockHt).addClass('results-loading');
        } else {
            $(".loader").addClass('hide');
            $('ko-site-search').removeClass('loading');
            $resultBlockElement.css('maxHeight', '').removeClass('results-loading');
        }
    };
    /* End : Loader Functionality */

    /* Start: Init Method that starts the component */
    self.init = function() {
        self.initVariables();
        initOwlEvents();
    };
    /* End: Init Method that starts the component */

    function initOwlEvents(){
        // Init count change on tab switch.
        elem.on('changed.owl.carousel', function(event) {
            var currentSlide = $(event.target).find(".owl-item").eq(event.item.index).children();
            var currentSlideCount = currentSlide.data('count');
            var currentFilter = currentSlide.data('filter');
            digitalData.search.searchFilter = currentFilter;
            digitalData.search.resultsNumber = currentSlideCount;
        });
    };

    self.init();
};

$(document).ready(function() {
    $('.ko-site-search').closest('.section').append($('.loader-wrapper'));
    $('.ko-site-search.component').each(function() {
        try {
            ko.applyBindings(new SiteSearchViewModel($(this)), this);
        } catch(e) {
            console.log(e);
        }
    });
});

//view models
var SiteSearchModel = function(object, wcmmode) {
    // any manipulation towards the keys and values have to be done here;

    var result = {};
    result['body'] = object['body'];
    if("edit" === wcmmode) {
        if(object['url'] !== "" && object['url'].indexOf('/content/pentair') === -1) {
            object['url'] = "/content/pentair" + object['url'];
        }
    }
    result['url'] = object['url'];
    return object;
};

var PENTAIR = PENTAIR || {};
PENTAIR.Water = PENTAIR.Water || {};
PENTAIR.Water.mapStyle = PENTAIR.Water.mapStyle || 
  [
    {
        "featureType": "administrative",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#444444"
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "all",
        "stylers": [
            {
                "color": "#f2f2f2"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": 45
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "labels.icon",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "all",
        "stylers": [
            {
                "color": "#46bcec"
            },
            {
                "visibility": "on"
            }
        ]
    }
];
  
PENTAIR.Water.MapHelper = function(mapElement){
  var self = this;
  var zipCodeRadius;
  var MetersPerMile = 1609.34;
  var MaxDistanceInMeters = MetersPerMile * 25;
  var iconLocation;
  self.mapElement = mapElement;
  self.initComplete = ko.observable(false);
  self.allMarkers = ko.observableArray().extend({ rateLimit: 100 });
  self.markerHtmlCallback = (function(item){return ''});
  self.zipMarkers = ko.computed(function(){
    var markersWithinZip = self.allMarkers().filter(function(elem, index){
      return self.markerIndexesWithinDistance().indexOf(index) !== -1;
    });
    return markersWithinZip;
  });

  self.mapData = ko.observableArray();
  self.markerIndexesWithinDistance = ko.observableArray().extend({ rateLimit: 500 });

  function getMapIconLocation() {
    var mapContainer = $('.map.where-content')[0].classList;
    if(!!mapContainer) {
      if (mapContainer.contains('pentair-bright-blue')) {
        return '/etc.clientlibs/settings/wcm/designs/pentair/clientlib-site/resources/img/map-pin-pentair-bright-blue.png';
      } else if (mapContainer.contains('pentair-blue')) {
        return '/etc.clientlibs/settings/wcm/designs/pentair/clientlib-site/resources/img/map-pin-pentair-blue.png';
      } else if (mapContainer.contains('green')) {
        return '/etc.clientlibs/settings/wcm/designs/pentair/clientlib-site/resources/img/map-pin-green.png';
      }
    }
    return '/etc.clientlibs/settings/wcm/designs/pentair/clientlib-site/resources/img/curve-green.png';
  }

  function setInitComplete(){
    self.setInitComplete = self.allMarkers.subscribe(function(newValue){
      var nonEmptyLength = newValue.filter(function(elem){
        return !!elem;
      }).length;
      if(newValue.length === self.totalMarkers()){
        self.initComplete(true);
        updateZoom(self.map);
      }
      self.setInitComplete.dispose();
    });
  }
  
  self.totalMarkers = ko.observable(0);
  
  self.showPins = function(indexArray){
    $(self.allMarkers()).each(function(index, elem){
      if(elem && indexArray.indexOf(index) !== -1){
        elem.setMap(self.map);
      } else if(elem){          // avoids case where elem is empty because the address wasnt found.
        elem.setMap(null);
      }
    });
    updateZoom(self.map);
  };

  // Only call once - add a re-init.
  function initMap(mapData, callback) {
    self.map = new google.maps.Map(self.mapElement[0], {
      center: new google.maps.LatLng(-34.397, 150.644),
      zoom: 1,
      minZoom: 1,
      mapTypeId: 'pentairWater'
    });

    self.infowindow = new google.maps.InfoWindow();

    self.geocoder = new google.maps.Geocoder();
    self.totalMarkers(mapData.length);
    self.mapData(mapData);
    self.allMarkers([]);
    self.map.mapTypes.set('pentairWater', new google.maps.StyledMapType(PENTAIR.Water.mapStyle, { name: 'Pentair Water' }));
    if(callback){
      callbackAfterInit(callback);
    }

    setInitComplete();
    mapData.forEach(function(elem, index){
      var hasLatLong = elem.latitude && elem.longitude;
      if(hasLatLong){
        addLatLongAddress(elem);
      } else addGeocodeAddress(elem);
    });

    return self.allMarkers;
  };

  function callbackAfterInit(callback){
    self.callBackAfterInit = self.allMarkers.subscribe(function(newValue){
      if(newValue.length === self.totalMarkers()){
        callback();
      }
      self.callBackAfterInit.dispose();
    });
  };

  function getMarkersWithinZip(zipCode){
    self.geocoder.geocode({
      'address': zipCode
    }, function(results, status) {
      if (status === google.maps.GeocoderStatus.OK) {
        var markerIndexesWithinDistance = [];
        var latLong = results[0].geometry.location;
        self.markerIndexesWithinDistance(self.allMarkers().reduce(function(acc, elem, index){
          var metersBetween = google.maps.geometry.spherical.computeDistanceBetween(latLong, elem.position);
          if(metersBetween < MaxDistanceInMeters){ acc.push(index); }
          return acc;
        }, []));
      } else {
        console.warn('Geocode was not successful for the following reason: ' + status);
      }
    });
  };

  function addInfoWindowEvent(eventName, callback){
    google.maps.event.addDomListener(self.mapElement[0], eventName, callback);
  }

  // tha call back is an anonymouse function that takes an item param
  function setMarkerHtmlCallback(callback){
    self.markerHtmlCallback = callback;
  }

  self.openMarker = function (index) {
    self.infowindow.setContent(self.markerHtmlCallback(self.mapData()[index]));
    self.infowindow.open(self.map, self.allMarkers()[index]);
  };

  self.closeMarker = function () {
    self.infowindow.close();
  };

  function addMarker(position, item){
    if(!item.hideAddress){
      var marker = new google.maps.Marker({
        map: self.map,
        position: position,
        icon: getMapIconLocation()
      });

      google.maps.event.addListener(marker, 'click', function() {
        self.infowindow.setContent(self.markerHtmlCallback(item));
        self.infowindow.open(self.map, marker);
      });

      var markers = self.allMarkers();
      markers[item.index] = marker;
      self.allMarkers(markers);
    }
  };

  function addLatLongAddress(item) {
    var latLong = new google.maps.LatLng(parseFloat(item.latitude,10), parseFloat(item.longitude,10));
    self.map.setCenter(latLong);
    addMarker(latLong, item);
  }

  function addGeocodeAddress(item){
    if(item && item.address){
      self.geocoder.geocode({
        'address': item.address
      }, function(results, status) {
        if (status === google.maps.GeocoderStatus.OK) {
          var latLong = results[0].geometry.location;
          item.formatted_address = results[0].formatted_address;
          addMarker(latLong, item);
        } else {
          console.warn('Geocode was not successful for the following reason: ' + status);
          console.warn('Check address for \"' + item.name + '\"');
          console.warn(item);
        }
      });
    }
  };

  function updateZoom() {
    var visibleMarkers = self.allMarkers().filter(function(elem){
      return !!elem.map;
    });
    if(visibleMarkers.length > 1){
      var bounds = new google.maps.LatLngBounds();
      for (i = 0; i < visibleMarkers.length; i++) {
          bounds.extend(visibleMarkers[i].getPosition());
      }
      self.map.fitBounds(bounds);
    } else if(visibleMarkers.length === 1){
      self.map.setCenter(visibleMarkers[0].getPosition());
      self.map.setZoom(15);
    }
  };

  function setCenter(latLong){
    if (self.map) {
      self.map.setCenter(latLong);
      self.map.setZoom(15);
    } else {
      initMap([]);
    }
  }

  return {
    initMap: initMap,
    addMarker: addMarker, 
    addLatLongAddress: addLatLongAddress, 
    addGeocodeAddress: addGeocodeAddress, 
    updateZoom: updateZoom,
    addInfoWindowEvent : addInfoWindowEvent,
    setMarkerHtmlCallback: setMarkerHtmlCallback,
    openMarker: self.openMarker,
    closeMarker: self.closeMarker,
    getMarkersWithinZip: getMarkersWithinZip,
    markerIndexesWithinDistance: self.markerIndexesWithinDistance,
    showPins: self.showPins,
    initComplete: self.initComplete,
    setCenter: setCenter
  }
};
// for analytics
var digitalData = {
    page: {
        attributes: {
            analytics: {}
        }
    },
    event: [],
    product: {},
    productItem: [],
    internalCampaign: {},
    search: {},
    resource: {},
    form: {},
    findDealer: {}
};

document.addEventListener('DOMContentLoaded', function() {
    // analytics page name
    var pageName = 'pentair';
    var pagePath = window.location.pathname;

    // sanitize page path
    pagePath = pagePath.replace(/\s/g, ''); // remove whitespace
    pagePath = pagePath.replace(/\.[^/.]+$/, ''); // remove extension
    pagePath = pagePath.replace(/\|/g, '-'); // replace all pipes with hyphens
    pagePath = pagePath.replace(/\//g, '|'); // replace all forward slashes with pipes

    // logic for when to use 'homepage' or just the page path
    if(window.location.pathname === '/content/pentair/en-us.html') {
        pageName += '|homepage';
    } else {
        pageName += pagePath;
    }

    // inject pagename into the data layer for analytics
    digitalData.page.attributes.analytics.pageName = pageName;
    digitalData.page.attributes.analytics.pageURL = window.location.href;
    digitalData.page.attributes.analytics.pagePath = window.location.pathname;
    digitalData.page.attributes.analytics.hostname = window.location.host;
    digitalData.page.attributes.analytics.pageCanonical = window.location.href;

    //////////////////////////////////////////////////////////////
    //// Product page view data analytics layer object start ////
    ////////////////////////////////////////////////////////////
    var isProductPage = $('main.product-page');
    if(isProductPage.length > 0) {
        updateProductDetails();
    }

    function updateProductDetails() {
        try {
            if(digitalData) {

                if(digitalData.product) {
                    digitalData.product.productName = $('h1').text();
                }
                if(digitalData.event) {
                    var eventData = {};
                    eventData.eventName = "detailed product view";
                    eventData.eventAction = "product view";
                    eventData.type = "shopping";
                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }
            }

        } catch(err) {
            console.log(err);
        }

    }

    //////////////////////////////////////////////////////////////
    //// Product page view data analytics layer object end //////
    ////////////////////////////////////////////////////////////
});

var payloadQueue = [];

// Start the queue
handleAnalyticsEventQueuing();

/**
 * Passes the analytics payload to adobe analytics trackEvent if its defined on the page
 * If trackEvent is not defined yet due a timing issue, it will queue up the event and fire it when
 * trackEvent has been detected on the page
 * @param payload of the event
 */
function trackEventWithQueue(payload) {
    if(typeof trackEvent !== 'undefined') {
        trackEvent(payload);
    } else {
        payloadQueue.push(payload);
    }
}

/**
 * Will check if any events have been queued up before trackEvent was loaded onto the page withing a time period
 * If trackEvent becomes available and we have events that were queued up, empty the queue and track their contents
 * Otherwise, the page likely doesn't have analytics enabled
 */
function handleAnalyticsEventQueuing() {
    var millisecondsPassed = 0;
    var timerId = setInterval(() => {
        millisecondsPassed += 1000; // 1 second interval
        if (payloadQueue.length > 0 && typeof trackEvent !== 'undefined') {
            trackAndClearPayloadQueue();
            clearInterval(timerId);
        }

        if (millisecondsPassed === 5000) { // 5 second limit
            clearInterval(timerId);
            if (typeof trackEvent === 'undefined') {
                console.warn("Analytics is not enabled on this page");
            }
        }
    }, 1000); // 1 second interval
}

/**
 * Loops through the payload queue and tracks all events that were present in it
 */
function trackAndClearPayloadQueue() {
    while (payloadQueue.length > 0) {
        var payload = payloadQueue.shift();
        trackEvent(payload);
    }
}

/**
 * Gets the Business Unit ID from the page head meta elements.
 * @returns Business Unit ID string
 */
function getBusinessUnitID() {
    var businessUnitIDMetaData = document.head.querySelector('meta[name="businessUnitID"]');
    if (businessUnitIDMetaData && businessUnitIDMetaData.content) {
        return businessUnitIDMetaData.content;
    }
    return "";
}

/**
 * Gets the Pentair Customer ID from the cookie.
 * @returns Pentair Customer ID string
 */
function getPentairCustomerID() {
    return getCookie("cif.sfContactId");
}

/**
 * Gets the Dealer ID from the page head meta elements.
 * @returns Dealer ID string
 */
function getDealerID() {
    var dealerIDMetaData = document.head.querySelector('meta[name="dealerID"]');
    if (dealerIDMetaData && dealerIDMetaData.content) {
        return dealerIDMetaData.content;
    }
    return "";
}

/**
 * Gets the Distributor ID from the page head meta elements.
 * @returns Distributor ID string
 */
 function getDistributorID() {
    var distributorIDMetaData = document.head.querySelector('meta[name="distributorID"]');
    if (distributorIDMetaData && distributorIDMetaData.content) {
        return distributorIDMetaData.content;
    }
    return "";
}

/**
 * Sets a session cookie with the given name and value.
 * @param name cookie name
 * @param value cookie value
 * @returns the set session cookie
 */
function setSessionCookie(name, value) {
    return document.cookie = name + "=" + value + "; expires=; path=/";
}

/**
 * Get the value of a cookie.
 * @param  {String} name name of the cookie
 * @return {String} cookie value if exists, otherwise undefined
 */
function getCookie(name) {
    var parts = document.cookie.split(';');
    for (var i = 0; i < parts.length; i++) {
        var trimmedPart = parts[i].trim();
        if (trimmedPart.startsWith(name + '=')) {
            var startIndex = trimmedPart.indexOf(name + '=') + name.length + 1;
            return trimmedPart.substring(startIndex);
        }
    }
    return "";
}
// Payload for base page view event
var eventPageViewPayload = {
    eventName: 'page view',
    eventType: 'pageview',
    attributes: {
        visitor:  {
            pentairCustomerID: undefined, //if this is available
            dealerID: undefined //if this is available
        },
        page: {
            pageCanonical: undefined,
            pageName: undefined,
            pagePath: undefined,
            pageType: undefined, //this will map to content type
            pageURL: undefined,
            pageTitle: undefined, // this is the value in the <title> tag
            pageSEOTags: undefined, // if this is available this will be a list of tags delimited by a comma driven by what the author puts in the 'tags'
            businessUnitID: undefined, // if this is available
            subBrand: undefined, // if this is available
            language: undefined, //if this is available
            author: undefined //if this is available
        }
    }
}

/**
 * Gets the page attribute from the eventPageViewPayload if it exists.
 * @param {string} attribute page attribute to get
 * @returns the page attribute if it exists
 */
function getPageViewPageAttribute(attribute) {
    if (!eventPageViewPayload || !eventPageViewPayload.attributes || !eventPageViewPayload.attributes.page) {
        return undefined;
    }
    return eventPageViewPayload.attributes.page[attribute];
}

/**
 * Gets the product attribute from the eventPageViewPayload if it exists.
 * @param {string} attribute product attribute to get
 * @returns the product attribute if it exists
 */
function getPageViewProductAttribute(attribute) {
    if (!eventPageViewPayload || !eventPageViewPayload.attributes || !eventPageViewPayload.attributes.product) {
        return undefined;
    }
    return eventPageViewPayload.attributes.product[attribute];
}

// Fire the page load event when the page is loaded
window.addEventListener('load', function() {

    // PageView for search page is handled in /pentair-commons/components/content/search/clientlib/js/search.js
    // due to race conditions between this files window onload and search.js's callback of the search results.
    if (isSearchPage()) {
        return;
    }

    initBasePageViewPayload();

    // Add any additional attributes for specific page view types
    if (isProductPage()) {
        eventPageViewPayload = getProductViewPayload(eventPageViewPayload);
    }
    if (isWhereToBuyPage()) {
        var wheretoBuyResultsList = document.querySelector('.where-to-buy-new .loading-container .scroll-list');
        // Don't track the pageview yet, wait until where-to-buy component it is done loading
        var whereToBuyComponent = document.querySelector('.where-to-buy-new.component');
        if (whereToBuyComponent) {
            whereToBuyComponent.addEventListener('pageViewDealerListLoaded', function(e) {
                var eventWTBPageViewPayload = getWTBPageViewPayload(eventPageViewPayload, e.detail.wtbSearch);
                trackEventWithQueue(eventWTBPageViewPayload);
            });
            if (!wheretoBuyResultsList) {
                // this is to fire the pageview event with the launchEvents attribute when where to buy component doesn't perform a dealer search.
                trackEventWithQueue(eventPageViewPayload);
            }
        }
    } else if (isWhereToBuyNewDistComponent()) {
        const wheretoBuyNewDistResultsList = document.querySelector('.where-to-buy-new-distributor .loading-container .scroll-list');
        const whereToBuyNewDistComponent = document.querySelector('.where-to-buy-new-distributor.component');
        whereToBuyNewDistComponent.addEventListener('pageViewDistributorListLoaded', function(e) {
            var eventWTBPageViewPayload = getWTBPageViewPayload(eventPageViewPayload, e.detail.wtbSearch);
            trackEventWithQueue(eventWTBPageViewPayload);
        });
        if (!wheretoBuyNewDistResultsList) {
            trackEventWithQueue(eventPageViewPayload);
        }
    } else {
        trackEventWithQueue(eventPageViewPayload);
    }
});
/**
 * Initializes the base page view payload.
 */
function initBasePageViewPayload() {
    var pageCanonical,
        pageName,
        pagePath,
        pageType,
        pageURL,
        pageTitle,
        pageSEOTags,
        subBrand,
        language,
        author;
    if (digitalData) {
        pageName = digitalData.page.attributes.analytics.pageName;
        pagePath = digitalData.page.attributes.analytics.pagePath;
        pageURL = digitalData.page.attributes.analytics.pageURL;
        pageType = digitalData.page.attributes.analytics.pageType;
    }
    pageCanonical = document.head.querySelector('link[rel="canonical"]')
        ? document.head.querySelector('link[rel="canonical"]').href
        : undefined;
    pageTitle = document.head.querySelector('title')
        ? document.head.querySelector('title').text
        : undefined;
    pageSEOTags = document.head.querySelector('meta[name="pageSEOTags"]')
        ? document.head.querySelector('meta[name="pageSEOTags"]').content
        : undefined;
    var subBrandTagsArray = document.head.querySelector('meta[name="brands"]')
        ? document.head.querySelector('meta[name="brands"]').content.split('|')
        : undefined;
    if (subBrandTagsArray) {
        subBrand = [];
        for (var index = 0; index < subBrandTagsArray.length; index++) {
            var element = subBrandTagsArray[index].split(',');
            subBrand.push(element[1]); // get just the brand title
        }
        subBrand = subBrand.join();
    }
    language = document.head.querySelector('meta[name="pageLocale"]')
        ? document.head.querySelector('meta[name="pageLocale"]').content
        : undefined;
    author = document.head.querySelector('meta[name="authorName"]')
        ? document.head.querySelector('meta[name="authorName"]').content
        : undefined;

    // Payload for page view event
    eventPageViewPayload = {
        eventName: 'page view',
        eventType: 'pageview',
        attributes: {
            visitor:  {
                pentairCustomerID: getPentairCustomerID(), //if this is available
                dealerID: getDealerID() //if this is available
            },
            page: {
                pageCanonical: pageCanonical,
                pageName: pageName,
                pagePath: pagePath,
                pageType: pageType,  //this will map to content type
                pageURL: pageURL,
                pageTitle: pageTitle, // this is the value in the <title> tag
                pageSEOTags: pageSEOTags, // if this is available this will be a list of tags delimited by a comma driven by what the author puts in the 'tags'
                businessUnitID: getBusinessUnitID(), // if this is available
                subBrand: subBrand, // if this is available
                language: language, //if this is available
                author: author //if this is available
            }
        }
    }
}

/**
 * Returns true if the page is a product page.
 * @returns {boolean} true/false if the page is a product page
 */
function isProductPage() {
    var mainSection = document.querySelector('main');
    return mainSection ? mainSection.classList.contains('product-page') : false;
}

/**
 * Returns true if the page is a Where To Buy page.
 * Where To Buy pages either have the 'where-to-buy' class on the main section
 * or contain the "where-to-buy-new" component in the main section.
 * @returns {boolean} true/false if the page is a where to buy page
 */
function isWhereToBuyPage() {
    var mainSection = document.querySelector('main');
    if (!mainSection) {
        return false;
    }
    if (mainSection.classList.contains('where-to-buy') || document.querySelectorAll('#storelocatormodal')) {
        return true;
    }
    var whereToBuyComponent = mainSection.querySelector('.component.where-to-buy-new');
    return whereToBuyComponent ? true : false;
}
function isWhereToBuyNewDistComponent() {
    var mainSection = document.querySelector('main');
    var whereToBuyNewDistComponent = mainSection.querySelector('.component.where-to-buy-new-distributor');
    return whereToBuyNewDistComponent ? true : false;
}

/**
 * Returns true if the page is using the search page component.
 * @returns {boolean} true/false if the page is a search page
 */
function isSearchPage() {
    var templateType = document.querySelector('meta[name="pageType"]');
    return templateType ? templateType.content === "pentair/components/page/search" : false;
}

/**
 * Gets the full product view payload reusing the current eventPageViewPayload.
 * @param eventPageViewPayload the current eventPageViewPayload
 * @returns product page view payload object
 */
function getProductViewPayload(eventPageViewPayload) {
    var productInfoSection = document.querySelector('.component.product-information');
    if (!productInfoSection) {
        return eventPageViewPayload;
    }
    // Get product category from the document head because "data-categories" from the product-information component
    // is the wtbCategories which is used for the WTB search component.
    var categoriesMetaElem = document.querySelector('meta[name="categories.lvl1"]');
    var eventProductViewPayload = {
        eventName: 'product view',
        eventType: eventPageViewPayload.eventType,
        attributes: {
            product: {
                category: categoriesMetaElem ? categoriesMetaElem.content : '',
                installation: productInfoSection.dataset.installationSku,
                productFindingMethod: getCookie("productFindingMethod"),
                productName: productInfoSection.dataset.productName,
                quantity: productInfoSection.dataset.stock,
                skuID: productInfoSection.dataset.productSku,
                type: productInfoSection.dataset.channel,
                unitPrice: productInfoSection.dataset.minimalPrice
            },
            cart: {
                cartID: getCookiesCartId(), //if this is available
            },
            visitor: eventPageViewPayload.attributes.visitor,
            page: eventPageViewPayload.attributes.page
        }
    }
    return eventProductViewPayload;
}

/**
 * Gets the full Where to Buy page view payload reusing the current eventPageViewPayload.
 * @param eventPageViewPayload the current eventPageViewPayload
 * @param wtbSearchAttr the where to buy search results custom event attributes
 *                      wtbSearchAttr: { wtbBrands: "Pentair",
 *                                       wtbCategories: "Pool & Spa Equipment",
 *                                       wtbDealerID: "1234,12345,123456",
 *                                       wtbNumberResults: 3,
 *                                       wtbSearchZip: "28374" }
 * @returns product page view payload object
 */
 function getWTBPageViewPayload(eventPageViewPayload, wtbSearchAttr) {
    if (!wtbSearchAttr) {
        return eventPageViewPayload;
    }
    var eventName = wtbSearchAttr.wtbNumberResults > 0 ? 'WTB page view' : 'WTB page view zero results';
    var eventWTBPageViewPayload = {
        eventName: eventName,
        eventType: eventPageViewPayload.eventType,
        attributes: {
            visitor: eventPageViewPayload.attributes.visitor,
            page: eventPageViewPayload.attributes.page,
            wtbSearch: {
                wtbBrands: wtbSearchAttr.wtbBrands,
                wtbCategories: wtbSearchAttr.wtbCategories,
                wtbDealerID: wtbSearchAttr.wtbDealerID,
                wtbNumberResults: wtbSearchAttr.wtbNumberResults,
                wtbSearchZip: wtbSearchAttr.wtbSearchZip
            }
        }
    }
    return eventWTBPageViewPayload;
}

/**
 * Constructs and tracks the Search Page view payload.
 * @param searchComponent the search component
 * @param currentTab search index name of the current tab
 * @param resultTotal number of results
 * @param queryID query ID(s) of the search
 */
function trackSearchPageViewPayload(searchComponent, currentTab, resultTotal, queryID) {
    initBasePageViewPayload();
    if (!searchComponent) {
        trackEventWithQueue(eventPageViewPayload);
        return;
    }
    var algoliaQueryID;
    var activeTabTitle;

    // Get the cookie that was saved on the previous page as part of header.js self.doSearch
    var searchCookie = getCookie('pentairSearch');
    var searchAttributes = searchCookie ? JSON.parse(searchCookie) : {};
    // Consume/Clear the cookie for 'pentairSearch'
    setSessionCookie('pentairSearch', '');

    var searchTerm = searchAttributes.searchTerm;

    // If the searchAttributes.searchTerm is undefined, try to find it in the URL query params
    if (!searchTerm && window.location.search) {
        var urlQueryParamsMap = Object.fromEntries(window.location.search
            .slice(1)
            .split('&')
            .map(function(item) {
                return item.split('=');
            }));
        searchTerm = decodeURIComponent(urlQueryParamsMap.q ? urlQueryParamsMap.q : '').replace(/\+/g, ' ');
    }

    // Get the active tab header
    var activeTabHeader = searchComponent.querySelector('[class="site-search-results"] [class~="' + currentTab + '"]');

    // Get the tab name and result count
    if (activeTabHeader) {
        // Tab title format is "TabName (ResultsCount)" e.g. "Products (123)"
        var splitTabTitle = activeTabHeader.textContent.trim().split(' ');
        activeTabTitle = splitTabTitle[0];
    }

    // If the queryID param is missing/null try to get the query IDs from the page
    if (queryID) {
        algoliaQueryID = queryID;
    } else if (activeTabHeader && (currentTab === "all" || activeTabTitle === "All")) {
        //get all 5 query ids
        var allTabContent = searchComponent.querySelector('div[class="all-tab"]');
        var allTabQueryIds = allTabContent ? allTabContent.querySelectorAll("[data-query-id]") : [];
        var uniqueQueryIds = Array.from(allTabQueryIds).map(function (item) {
            // Get only the query IDs from the elements
            return item.dataset.queryId;
        }).filter(function(queryID, index, self) {
            // Only get the first occurrence of the queryID
            return self.indexOf(queryID) === index;
        }).join(); // Join into a single string
        algoliaQueryID = uniqueQueryIds ? uniqueQueryIds : '';
    } else if (activeTabHeader) {
        // get the active tab
        var activeTabContent = searchComponent.querySelector('[class~="tab-search-content"] [class~="active"]');
        algoliaQueryID = activeTabContent ? activeTabContent.querySelector('[data-query-ID]').dataset.queryId : '';
    }

    var eventSearchConductedPayload = {
        eventName: resultTotal > 0 ? 'search conducted' : 'search conducted zero results',
        eventType: 'page view',
        attributes: {
            search: {
                searchTerm: searchTerm,
                numberResults: resultTotal,
                algoliaQueryID: algoliaQueryID,
                searchType: searchAttributes.searchType,
                priorPageURL: searchAttributes.priorPageURL
            },
            visitor: eventPageViewPayload.attributes.visitor,
            page: {
                pageCanonical: eventPageViewPayload.attributes.page.pageCanonical,
                pageName: eventPageViewPayload.attributes.page.pageName,
                pagePath: eventPageViewPayload.attributes.page.pagePath,
                pageType: eventPageViewPayload.attributes.page.pageType,
                pageURL: eventPageViewPayload.attributes.page.pageURL,
                language: eventPageViewPayload.attributes.page.language
            }
        }
    }
    trackEventWithQueue(eventSearchConductedPayload);
}

// Needs to be on load rather than $(document).ready so that enough time is given
//  for dialogtech.js to programatically add the tel links.
window.addEventListener('load', function () {
    var phoneLinks = document.querySelectorAll('a[href^="tel:"]');
    for (var i = 0; i < phoneLinks.length; i++) {
        phoneLinks[i].addEventListener('click', trackPhoneLinkClick);
    }

    function trackPhoneLinkClick(clickEvent) {
        var eventClickToCallPayload = {
            eventName: 'click to call',
            eventType: 'event',
            attributes: {
                visitor: {
                    pentairCustomerID: getPentairCustomerID(), //if this is available
                    dealerID: getDealerID() //if this is available
                },
                page: {
                    pageCanonical: getPageViewPageAttribute("pageCanonical"),
                    pageName: getPageViewPageAttribute("pageName"),
                    pagePath: getPageViewPageAttribute("pagePath"),
                    pageType: getPageViewPageAttribute("pageType"),
                    pageURL: getPageViewPageAttribute("pageURL"),
                    pageTitle: getPageViewPageAttribute("pageTitle"),
                    pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                    businessUnitID: getPageViewPageAttribute("businessUnitID"),
                    subBrand: getPageViewPageAttribute("subBrand"),
                    language: getPageViewPageAttribute("language"),
                    author: getPageViewPageAttribute("author"),
                },
                clickToCall: {
                    numberClicked: clickEvent.target.text
                },
                product: {
                    productName: getPageViewProductAttribute("productName"), // if on a product page and sku is available
                    skuID: getPageViewProductAttribute("skuID"), // if on a product page and sku is available
                    type: getPageViewProductAttribute("type") // if on a product page and sku is available
                }
            }
        }
        trackEventWithQueue(eventClickToCallPayload);
    }
});

// Adobe analytics event payload tracking for clicking on rebate form links and submit rebate online CTAs.
// The analytics will be tracked based on these assumptions:
//    - The rebate form link href will contain "rebate-form" and end with ".pdf".
//    - The rebate submit CTA link will have the class "btn" and the href will
//       contain "https://www.pentairpartners.com/register".
window.addEventListener('load', function () {

    // Get the links to pdf files that have 'rebate-form' in the path.
    var rebateFormLinks = document.querySelectorAll('a[href*="rebate-form"][href$=".pdf"]');
    for (var i = 0; i < rebateFormLinks.length; i++) {
        rebateFormLinks[i].addEventListener('click', trackRebateFormLinkClick);
    }

    // Get the CTA(s) for submitting a rebate form online
    var rebateSubmitCtas = document.querySelectorAll('a[class*="btn"][href*="https://www.pentairpartners.com/register"]');
    for (var i = 0; i < rebateFormLinks.length; i++) {
        rebateSubmitCtas[i].addEventListener('click', trackRebateSubmitClick);
    }

    /**
     * Constructs and tracks the rebate click event payload.
     * @param clickEvent the click event captured
     */
    function trackRebateFormLinkClick(clickEvent) {
        var eventRebateClickPayload = {
            eventName: 'click for rebate info',
            eventType: 'event',
            attributes: {
                visitor: {
                    pentairCustomerID: getPentairCustomerID(),
                    dealerID: getDealerID()
                },
                page: {
                    pageCanonical: getPageViewPageAttribute("pageCanonical"),
                    pageName: getPageViewPageAttribute("pageName"),
                    pagePath: getPageViewPageAttribute("pagePath"),
                    pageType: getPageViewPageAttribute("pageType"),
                    pageURL: getPageViewPageAttribute("pageURL"),
                    pageTitle: getPageViewPageAttribute("pageTitle"),
                    pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                    businessUnitID: getPageViewPageAttribute("businessUnitID"),
                    subBrand: getPageViewPageAttribute("subBrand"),
                    language: getPageViewPageAttribute("language"),
                    author: getPageViewPageAttribute("author"),
                },
                rebate: {
                    rebateLinkClicked: clickEvent.target.text
                }
            }
        }
        trackEventWithQueue(eventRebateClickPayload);
    }

    /**
     * Constructs and tracks the rebate submit CTA click event payload.
     */
    function trackRebateSubmitClick() {
        var eventRebateSubmitPayload = {
            eventName: 'click for rebate submit',
            eventType: 'event',
            attributes: {
                visitor: {
                    pentairCustomerID: getPentairCustomerID(),
                    dealerID: getDealerID()
                },
                page: {
                    pageCanonical: getPageViewPageAttribute("pageCanonical"),
                    pageName: getPageViewPageAttribute("pageName"),
                    pagePath: getPageViewPageAttribute("pagePath"),
                    pageType: getPageViewPageAttribute("pageType"),
                    pageURL: getPageViewPageAttribute("pageURL"),
                    pageTitle: getPageViewPageAttribute("pageTitle"),
                    pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                    businessUnitID: getPageViewPageAttribute("businessUnitID"),
                    subBrand: getPageViewPageAttribute("subBrand"),
                    language: getPageViewPageAttribute("language"),
                    author: getPageViewPageAttribute("author"),
                }
            }
        }
        trackEventWithQueue(eventRebateSubmitPayload);
    }
});

/**
 * Adobe analytics event payload tracking for clicking on "download app" image links.
 * The analytics will be tracked based on these assumptions:
 *    - Download app links will start with
 *        - "https://apps.apple.com/" for Apple app store and
 *        - "https://play.google.com/store/apps/" for Google play store.
 *    - "Commercial IQ" app link will contain
 *        - "commercial-iq/id1432873020" for Apple and
 *        - "id=com.pe_commercial_app" for Google play.
 *    - "Pentair Home" app link will contain
 *        - "pentair-home/id1448665466" for Apple and
 *        - "id=com.pentair.pentairhome" for Google play.
 *    - If the app URL does not contain the previous IDs, the link URL will
 *      be used in the payload for the app name instead.
 */
window.addEventListener('load', function () {

    var ANDROID_DEVICE = 'Android';
    var APPLE_DEVICE = 'Apple';
    var COMMERICAL_IQ_GOOGLE_ID = 'id=com.pe_commercial_app';
    var COMMERICAL_IQ_APPLE_ID = 'commercial-iq/id1432873020';
    var PENTAIR_HOME_GOOGLE_ID = 'id=com.pentair.pentairhome';
    var PENTAIR_HOME_APPLE_ID = 'pentair-home/id1448665466';

    // Get links to Google play store
    var googlePlayLinks = document.querySelectorAll('a[href*="https://play.google.com/store/apps/"]');
    for (var i = 0; i < googlePlayLinks.length; i++) {
        googlePlayLinks[i].addEventListener('click', function(clickEvent) {
            var appName = getAppName(ANDROID_DEVICE, clickEvent.currentTarget.href);
            trackDownloadAppLinkClick(appName);
        });
    }

    // Get the links to Apple app store
    var appleAppStoreLinks = document.querySelectorAll('a[href*="https://apps.apple.com/"]');
    for (var i = 0; i < appleAppStoreLinks.length; i++) {
        appleAppStoreLinks[i].addEventListener('click', function(clickEvent) {
            var appName = getAppName(APPLE_DEVICE, clickEvent.currentTarget.href);
            trackDownloadAppLinkClick(appName);
        });
    }

    /**
     * Gets the full appName property for the Download App click event payload.
     * The appName property is the device OS plus the app name seperated by a '|'.
     *   Example: "Android | Pentair Home"
     *
     * If the app url is not for Commercial IQ or Pentair Home, the full url will be
     * used in place of the app title.
     *
     * @param {string} deviceOsString device OS string, i.e. Android, Apple
     * @param {string} url URL of the download link
     * @returns appName property string
     */
    function getAppName(deviceOsString, url) {
        if (url.includes(COMMERICAL_IQ_APPLE_ID) || url.includes(COMMERICAL_IQ_GOOGLE_ID)) {
            return deviceOsString + " | Commercial IQ";
        } else if (url.includes(PENTAIR_HOME_APPLE_ID) || url.includes(PENTAIR_HOME_GOOGLE_ID)) {
            return deviceOsString + " | Pentair Home";
        } else {
            return deviceOsString + " | " + url;
        }
    }

    /**
     * Constructs and tracks the Download App link click event payload.
     * @param {string} appName the device OS and the name of the app clicked e.g. "Android | Commercial IQ"
     */
    function trackDownloadAppLinkClick(appName) {
        var eventDownloadAppPayload = {
            eventName: 'click to download app',
            eventType: 'event',
            attributes: {
                visitor: {
                    pentairCustomerID: getPentairCustomerID(),
                    dealerID: getDealerID()
                },
                page: {
                    pageCanonical: getPageViewPageAttribute("pageCanonical"),
                    pageName: getPageViewPageAttribute("pageName"),
                    pagePath: getPageViewPageAttribute("pagePath"),
                    pageType: getPageViewPageAttribute("pageType"),
                    pageURL: getPageViewPageAttribute("pageURL"),
                    pageTitle: getPageViewPageAttribute("pageTitle"),
                    pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                    businessUnitID: getPageViewPageAttribute("businessUnitID"),
                    subBrand: getPageViewPageAttribute("subBrand"),
                    language: getPageViewPageAttribute("language"),
                    author: getPageViewPageAttribute("author"),
                },
                clickDownloadApp: {
                    appName: appName
                }
            }
        }
        trackEventWithQueue(eventDownloadAppPayload);
    }
});

/**
 * Adds single item to cart. Intended for use when no quantity, subscription, etc are provided.
 */
function setupGenericAddToCartClickListeners() {
    const skuAddToCartBtns = $('.product-carousel__container .sku-add-to-cart-btn'); // Right now just handle for carousel, refactor docready as use cases increase
    skuAddToCartBtns.each(function (index, addToCartBtnElement) {
        $(addToCartBtnElement).on('click', function (e) {
            // Prevent add to cart btn click from going to sku page
            e.preventDefault();

            if (!window.CIF || !window.CIF.CommerceGraphqlApi) {
                return;
            }

            var skuId = $(addToCartBtnElement).data('sku-id');
            if (!skuId) {
                return;
            }

            // Called from cart.js
            var cartId = getCookiesCartId();
            if (cartId) {
                addToCart(cartId, 1, skuId, addToCartBtnElement);
            } else {
                addToEmptyCart(1, skuId, addToCartBtnElement);
            }
        });
    });
}

function addToEmptyCart(number, sku, addToCartBtnElement) {
    return window.CIF.CommerceGraphqlApi.createEmptyCart(function (data) {
        setCookiesCartId(data);
        var cart_id = getCookiesCartId() || data.createEmptyCart;
        addToCart(cart_id, number, sku, addToCartBtnElement);
    });
}

function addToCart(cart_id, quantity, sku, addToCartBtnElement) {
    var installation = false;
    var subscriptionId = '';
    var subscriptionValueString = '';
    var subscriptionDate = '';

    var zipcode = localStorage.getItem('zipcode') || '[Unable get your zipcode]';

    return window.CIF.CommerceGraphqlApi.addToCart(cart_id, quantity, sku, installation, subscriptionId, subscriptionValueString, subscriptionDate, zipcode,
        function (data) {
            if (data && data.addSimpleProductsToCart) {
                showCartNumber(data.addSimpleProductsToCart);
                if (data.addSimpleProductsToCart.cart && data.addSimpleProductsToCart.cart.items) {

                    // Adobe analytics track add to cart event payloads
                    if (quantity == data.addSimpleProductsToCart.cart.total_quantity) {
                        // If the number/qty that was added == total cart quantity then the cart was empty
                        trackAddToCartAnalyticsEvent(sku, data.addSimpleProductsToCart.cart.id, true);
                    } else {
                        trackAddToCartAnalyticsEvent(sku, data.addSimpleProductsToCart.cart.id, false);
                    }

                    //Show item added text for 5 seconds
                    $(addToCartBtnElement).text('ADDED !');
                   if( $('.icon-cart').length > 0) {
                       $('.icon-cart')[0].click()
                   }

                    setTimeout(function() {
                        $(addToCartBtnElement).text('ADD TO CART');
                    }, 5000);

                }
            }
        }, function (errorMsg) {
            console.error('Failed to add to cart');
        }
    );
}

function constructAlgoliaAnalyticsAddtoCartObject() {
    var queryParams = window.location.href.indexOf('?') !== -1;
    if (queryParams) {
        var search = window.location.search.substring(1);
        var params = JSON.parse('{"' + decodeURI(search).replace(/&/g, '","').replace(/=/g, '":"') + '"}');
        var objectID = window.location.href;
        if (params.hasOwnProperty('queryID') && params.hasOwnProperty('indexName')) {
            var userToken = '';
            if (typeof _satellite !== undefined && _satellite != null) {
                userToken = _satellite.getVisitorId().getMarketingCloudVisitorID();
            }
            // attach to window object with conversion tracking details
            aa('convertedObjectIDsAfterSearch', {
                userToken: userToken,
                eventName: 'Add_To_Cart',
                index: params.indexName,
                queryID: params.queryID,
                objectIDs: [objectID],
            });
        }
    }
    return true;
}
/**
 * Track the payload for add to cart button click event in Adobe analytics.
 * @param sku of the product being added to cart
 * @param cart_id id of the cart
 * @param {boolean} addedToEmptyCart true/false if the cart was empty
 */
function TrackCarouselATCClick(sku, cart_id, addedToEmptyCart) {
    var eventAddToCartPayload = {
        eventName: addedToEmptyCart ? 'cart open' : 'add to cart',
        eventType: 'custom',
        attributes: {
            product: {
                skuID: sku,
            },
            cart: {
                cartID: cart_id,
            },
            visitor: {
                pentairCustomerID: getPentairCustomerID(), //if this is available
                dealerID: getDealerID(), //if this is available
            },
        },
    };
    trackEventWithQueue(eventAddToCartPayload);
}

$(document).ready(function() {
    setupGenericAddToCartClickListeners();
})

$(function() {

    $(document).ready(function() {
        const $prodPageV2Data = $('main.product-page-v2');
        if ($prodPageV2Data.length) {
            const isSkuPage = $prodPageV2Data.data('is-sku-page');
            if (isSkuPage) {
                const $breadcrumbsLinks = $('section.bread-section ul.breadcrumbs li a');
                const productFamilyName = $prodPageV2Data.data('product-family-name');
                if ($breadcrumbsLinks.length && productFamilyName) {
                    $breadcrumbsLinks.last().text(productFamilyName);
                }
            }
        }
    });
});

$(function() {
    /* Once the Product Page SEO Markup Object is constructed - append to the <head> */
    function setProductPageSEOMarkup(data) {
    var productPageSEOScript = $('#productJDId');
    $(productPageSEOScript).text(JSON.stringify(data, null, 4));
}

function setProductRatingSchema(productName, ratingValue, reviewCount) {
    setTimeout(
        function() {
            var ratingNode = $(".product-page.content").find("[data-bv-show='rating_summary']")[0];
            var reviewNode = $(".product-page.content").find("[data-bv-show='reviews']")[0];
            var bestRating = "";
            if (ratingNode && reviewNode) {
                ratingElement = $(ratingNode).find("div[itemprop='ratingValue']")[0];
                reviewElement = $(ratingNode).find("meta[itemprop='reviewCount']")[0];
                bestRatingElement = $(ratingNode).find("meta[itemprop='bestRating']")[0];
                ratingValue = ratingElement ? ratingElement.innerText : '';
                reviewCount = reviewElement ? reviewElement.content : '';
                bestRating = bestRatingElement ? bestRatingElement.content : '';
                data = {
                        "@context": "https://schema.org/",
                        "@type": "Product",
                        "name": productName,
                        "aggregateRating": {
                            "@type": "AggregateRating",
                            "ratingValue": ratingValue,
                            "reviewCount": reviewCount
                        }
                    };
                $("#productRating").html(JSON.stringify(data));
                let jsonLdScript = document.querySelector('#productJDId');
                let jsonld = JSON.parse(jsonLdScript.innerText);
                jsonld.review.ratingValue = ratingValue;
                jsonld.review.bestRating = bestRating;
                $("#productJDId").html(JSON.stringify(jsonld));
                }
            }, 5000);
    }

    function formatJsonStringValue(value) {
        return value ? value.replace(/\r/g, "").replace(/\n/g, "") : "";
    }

    /* Construct the necessary SEO Product Page details and dynamically inject into the <head> */
    function constructProductPageSEOMarkup(page) {
        var productDescription = $(page).data('productDescription');
        if ($('#productJDId') && $('#productJDId').text()) {
            var productData = JSON.parse(formatJsonStringValue($('#productJDId').text()));
            productData.description = formatJsonStringValue(productDescription);
            // setup Mutation Observer to watch for changes to Product Page, specifically for BV components to render
            var ratingNode = $(".product-page.content").find("[data-bv-show='rating_summary']")[0];
            var reviewNode = $(".product-page.content").find("[data-bv-show='reviews']")[0];

            if (ratingNode && reviewNode) {
            // Options for the observer (which mutations to observe)
                var config = { childList: true, subtree: true };
                // Callback function to execute when mutations are observed
                var bestRating = "", ratingValue = "", reviewCount = "", reviews = [];
                var callback = function(mutationsList, observer) {
                    mutationsList.forEach(function(mutation) {
                        if (mutation.type === 'childList') {
                            bestRating = $(ratingNode).find("meta[itemprop='bestRating']")[0].content;
                            ratingValue = $(ratingNode).find("div[itemprop='ratingValue']")[0].innerText;
                            reviewCount = $(ratingNode).find("meta[itemprop='reviewCount']")[0].content;
                            var ratingMeta = $(reviewNode).find(".bv-content-header-meta");
                            for (var i = 0; i < ratingMeta.length; i++) {
                                var currentContainer = $(ratingMeta[i]).find(".bv-rating-stars-container");
                                var ratingStr = currentContainer.find(".bv-off-screen").text();
                                var rating = ratingStr.substring(0, 1);
                                reviews.push(rating);
                            }
                    }
                });
            };

                // Create an observer instance linked to the callback function
                var observer = new MutationObserver(callback);

                // Start observing the target node(s) for configured mutations
                observer.observe(ratingNode, config);
                observer.observe(reviewNode, config);

                // stop observing
                observer.disconnect();
                productData.review = (function() {
                    if (reviews.length > 1) {
                        var reviewsArr = [];
                        for (var i = 0; i < reviews.length; i++) {
                            reviewsArr.push({
                                "@type": "Rating",
                                "ratingValue": reviews[i],
                                "bestRating": bestRating
                        });
                    }
                        return reviewsArr;
                    } else {
                        var reviewsObj = {
                            "@type": "Rating",
                            "ratingValue": (typeof reviews[0] !== "undefined") ? reviews[0] : "",
                            "bestRating": bestRating
                        };
                            return reviewsObj;
                    }
            })();
                if (productData && productData.aggregateRating && productData.aggregateRating.ratingValue) {
                    productData.aggregateRating.ratingValue = (typeof ratingValue !== "undefined") ? ratingValue : "";
                }
                if (productData && productData.aggregateRating && productData.aggregateRating.reviewCount) {
                    productData.aggregateRating.reviewCount = (typeof reviewCount !== "undefined") ? reviewCount : "";
                }

                setProductPageSEOMarkup(productData);
                var productName = $(page).data('productName');
                setProductRatingSchema(productName, ratingValue, reviewCount);
            } else {
                setProductPageSEOMarkup(productData);
            }
        }
    }

    $(document).ready(function() {
        var productPage = $(".product-page.content");
        if (productPage) {
            constructProductPageSEOMarkup(productPage);
        }
    });
});

//search bar analytic
$(document).ready(function(){
  $('.icon-search').on('click',function(){
    try{
        if( digitalData){
          if( digitalData.event ){
            var eventData = {};
            eventData.eventName = "search bar"
            eventData.eventAction = "initiate";
            eventData.type = "default";
            eventData.timeStamp = new Date();
            digitalData.event.push(eventData);
          }
        }
      }catch(err) {
        console.log(err)
      }
  });

  var backToTop = document.querySelector('a[class~="back-to-top"]');
  var shareComponent = document.querySelector('.share');
  var mainContentWrapper = document.querySelector('[role="main"]');
  var dialogtechComp = document.querySelector('.dialogtech');
  var desktopChat = document.querySelector('.message-desktop');

  if (desktopChat && mainContentWrapper) {
    var mainDOMRect = mainContentWrapper.getBoundingClientRect();
    if (mainDOMRect.width >= 1440) {
          desktopChat.style.right = `${mainDOMRect.left + 220}px`;
    }
  }
    setTimeout(function(){
      $('.chat-icon-long').hide();
      $('.chat-icon-circle').show();
    }
    , 5000);

  if (backToTop && mainContentWrapper) {
    window.addEventListener('scroll', function() {
      if (document.body.scrollTop > 0 || document.documentElement.scrollTop > 0) {
        var mainDOMRect = mainContentWrapper.getBoundingClientRect();
        if (mainDOMRect.width >= 1440) {
          backToTop.style.right = `${mainDOMRect.left + 20}px`;
        } else {
          backToTop.style.right = '';
        }
        dialogtechComp ? backToTop.classList.add("back-to-top--active-with-call-us")
          : shareComponent ? backToTop.classList.add("back-to-top--active-with-share")
          : backToTop.classList.add("back-to-top--active");
      } else {
        backToTop.classList.remove("back-to-top--active");
        backToTop.classList.remove("back-to-top--active-with-share");
        backToTop.classList.remove("back-to-top--active-with-call-us");
        backToTop.style.right = '';
      }
    });
  }

});


'use strict';

window.CIF = window.CIF || {};
var CIF_CART_CONST = "cif.cart.data";
var CART_ID_CONST = "cif.cart";

var CART_QUERY_CONST = "{ id prices { subtotal_with_discount_excluding_tax { currency value } } items { id prices { price { value currency } row_total { value currency } } product { name sku stock_status __typename } quantity } total_quantity }";

function CommerceGraphqlApi(props) {
    if (!props || !props.endpoint || !props.storeView) {
        throw new Error(
            'The commerce API is not properly initialized. A required property is missing from the initialization object'
        );
    }
    this.endpoint = props.endpoint;
    this.storeView = props.storeView;
}
function _fetchGraphql(endpoint, query, callbackSuccess, callbackError) {
	console.log("query = " + query);
    var param = { "query": query };
    $.ajax({
        type: "POST",
        data: JSON.stringify(param),
        url: endpoint,
        dataType: "json",
        crossDomain: true,
        contentType: "application/json",

        success: function (response) {
            if (callbackError && response.errors && response.errors.length > 0) {
                callbackError(response.errors[0].message);
            } else if (callbackSuccess) {
                callbackSuccess(response.data);
            }

        },
        error: function (error) {
            var message = "Error when processing";
            console.error(message, error);
            if (error.status == 502) {
                message = "The server encountered a temporary error and could not complete your request"
            }
            if (callbackError) {
                callbackError(message);
            }

        }
    })
};

CommerceGraphqlApi.prototype.createEmptyCart = function (callback,callbackError) {
    var query = 'mutation { createEmptyCart }';
    _fetchGraphql(this.endpoint, query, callback,callbackError);
};


CommerceGraphqlApi.prototype.createCartHaveId = function (cart_id, callback, callbackErr) {
    var query = 'mutation { createEmptyCart (input: { cart_id: "' + cart_id + '" })}';
    _fetchGraphql(this.endpoint, query, callback, callbackErr);
};

CommerceGraphqlApi.prototype.getCifCart = function (cart_id, callback, callbackErr) {
    var query = '{ cart (cart_id: "' + cart_id + '") ' + CART_QUERY_CONST + ' }';
    _fetchGraphql(this.endpoint, query, callback, callbackErr);
};

CommerceGraphqlApi.prototype.addToCart = function (cart_id, quantity, sku_id, installation, subscriptionId, subscriptionValueString,subscriptionDate,zipcode, success, error) {
    var query = '';
    if (subscriptionId != '' && subscriptionValueString != '' && subscriptionValueString != 'onetimepurchase') {
    	if(installation){
    		query = 'mutation { addSimpleProductsToCart ( input: { cart_id: "' + cart_id + '" cart_items: [ { data: { quantity: ' + quantity + ' is_to_add_install_service: ' + installation + ' sku:  "' + sku_id + '" anniversary_date: "'+ subscriptionDate +'" }, customizable_options: [{ id: ' + subscriptionId + ' value_string: "' + subscriptionValueString + '" }] } ]  postcode: "' + zipcode + '" } ) { cart ' + CART_QUERY_CONST + '}}';
    	}
    	else{
    		query = 'mutation { addSimpleProductsToCart ( input: { cart_id: "' + cart_id + '" cart_items: [ { data: { quantity: ' + quantity + ' is_to_add_install_service: ' + installation + ' sku:  "' + sku_id + '" anniversary_date: "'+ subscriptionDate +'" }, customizable_options: [{ id: ' + subscriptionId + ' value_string: "' + subscriptionValueString + '" }] } ] } ) { cart ' + CART_QUERY_CONST + '}}';
    	}

    }
    else{
    	if(installation){
    		query = 'mutation { addSimpleProductsToCart ( input: { cart_id: "' + cart_id + '" cart_items: [ { data: { quantity: ' + quantity + ' is_to_add_install_service: ' + installation + ' sku:  "' + sku_id + '" } } ]   postcode: "' + zipcode + '"  } ) { cart ' + CART_QUERY_CONST + '}}';
    	}
    	else{
    		query = 'mutation { addSimpleProductsToCart ( input: { cart_id: "' + cart_id + '" cart_items: [ { data: { quantity: ' + quantity + ' is_to_add_install_service: ' + installation + ' sku:  "' + sku_id + '" } } ] } ) { cart ' + CART_QUERY_CONST + '}}';
    	}
    }
    _fetchGraphql(this.endpoint, query, success, error);

};

CommerceGraphqlApi.prototype.serviceableGeography = function (zipcode, quantity, sku_id, success, error) {
    var query = '{ serviceableGeography(products: [{sku:"' + sku_id + '", qty:' + quantity + '}], postalCode:"' + zipcode + '"){isEligible cost{ currency value}} }';
    _fetchGraphql(this.endpoint, query, success, error);
};

CommerceGraphqlApi.prototype.subscriptionOptions = function (sku_id, success, error) {
    var query = '{ products(filter: { sku: { eq: "' + sku_id + '" } }) { items { sku ... on CustomizableProductInterface { options { title required sort_order option_id __typename ... on CustomizableDropDownOption { value { option_type_id price price_type title sku sort_order } } } } } } } ';
    _fetchGraphql(this.endpoint, query, success, error);
};

CommerceGraphqlApi.prototype.cartPageUrl = function () {
    return this.endpoint ? this.endpoint.replace("graphql", "checkoutcart") : '';
};

$(document).ready(function () {
    var dataset = document.querySelector('body').dataset;
    if(dataset.enableCommerce == 'true'){
        var hostname = window.location.hostname;
        if (hostname.indexOf("localhost") !== -1 || hostname.indexOf("my.pentair.com") !== -1) {
            window.CIF.CommerceGraphqlApi = new CommerceGraphqlApi({ endpoint: "https://qa-shop.pentair.com/graphql", storeView: dataset.storeView });
        }
        else {
            window.CIF.CommerceGraphqlApi = new CommerceGraphqlApi({ endpoint: dataset.graphqlEndpoint, storeView: dataset.storeView });
        }
    }
});


function setCookiesCartId(data) {
    if (data && data.createEmptyCart) {
        Cookies.set(CART_ID_CONST, data.createEmptyCart, {expires: 90, domain: getDomain()});
    }
}

function getCookiesCartId() {
    return Cookies.get(CART_ID_CONST, { domain: getDomain() });
}

function getDomain() {
    const hostnameArray = window.location.hostname.split('.')
    const numberOfSubdomains = hostnameArray.length - 2
    return hostnameArray.length === 2 ? window.location.hostname : hostnameArray.slice(numberOfSubdomains).join('.')
}

function showPreviewWindow(cartItems, number, total_quantity, subtotalNum, $container) {
    $("section.component article").css("z-index", "unset");
    if ($container === undefined) {
        $container = $("body");
    }
    var subtotal = (subtotalNum).toLocaleString('en-US', {
        style: 'currency',
        currency: 'USD'
    });
    var addToCartSubtotalElement = $container.find(".add-to-cart-preview .add-to-cart-preview__subtotal");
    if (addToCartSubtotalElement.length > 0) {
        addToCartSubtotalElement.html(subtotal);
    }
    var cartQuantityNumber = $container.find(".add-to-cart-preview .add-to-cart-quantity"); // Item qty
    if (cartQuantityNumber.length > 0) {
        cartQuantityNumber.html(number);
    }
    var totalItemInCartElement = $container.find(".add-to-cart-preview .add-to-cart-preview__cart-count");
    if (totalItemInCartElement.length > 0) {
        totalItemInCartElement.html(total_quantity);
    }

    // Set top position of the preview modal
    var headerHeight = $("header.header").height() || 0;
    var promoInheritedXfHeight = $('.promobar-xpf').height() || 0;
    var promoXfHeight = $('.xf-content-height').height() || 0;
    var mobileJumpNavHeight = $('.sticky-jump-nav.mobile').height() || 0;
    var breadSectionTop = $(".bread-section").position().top;
    var topHeight = headerHeight + promoXfHeight + mobileJumpNavHeight + promoInheritedXfHeight;

    // Adjust z-index of sticky nav on mobile
    var stickyJumpNav = $(".sticky-jump-nav.mobile");
    if (stickyJumpNav) {
        stickyJumpNav.css("z-index", "5");
    }

    // Adjust z-index of Breadcrumbs Section
    var breadcrumbsSection = $("section.component.bread-section");
    if (breadcrumbsSection) {
        breadcrumbsSection.css("z-index", "5");
    }

    // Show preview modal with right to left animation
    $container.find(".add-to-cart-preview").removeClass("hide").animate({
        right: "0%"
    }, "fast");
    $container.find(".add-to-cart-preview-page-dimmer").removeClass("hide");

    // Set scroll for preview modal
    var cartPreviewElement = $('.add-to-cart-preview');
    var cartPreviewHeight = cartPreviewElement.height();
    var dialogtechMobileButtonHeight = $('.dialogtech-mobi').height() || 0;
    var screenHeight = screen.height;
    if (cartPreviewHeight + topHeight + dialogtechMobileButtonHeight > screenHeight) {
        cartPreviewElement.css('max-height', screenHeight - topHeight - dialogtechMobileButtonHeight);
    }

    setTimeout(function() {
        $("body").addClass("add-to-cart-body--scroll-locked");
    }, 150);
}

function postClosePreviewButton($container) {
    $(".add-to-cart-preview").addClass("hide");
    $(".add-to-cart-preview-page-dimmer").addClass("hide");
    $("body").removeClass("add-to-cart-body--scroll-locked");
    if ($(window).width() > 767) {
        $(".add-to-cart-preview").css("right", "-40%");
    } else {
        $(".add-to-cart-preview").css("right", "-80%");
    }

    var stickyJumpNav = $(".sticky-jump-nav.mobile");
    if (stickyJumpNav) {
        stickyJumpNav.css("z-index", "10");
    }

    var breadcrumbsSection = $("section.component.bread-section");
    if (breadcrumbsSection) {
        breadcrumbsSection.css("z-index", "10");
    }

    var loadingElement = $('.cart-loading');
    if (loadingElement.length > 0 && !loadingElement.hasClass('hide')) {
        loadingElement.addClass('hide');
    }
}

// View Cart from Add to Cart Preview modal
function viewCartFromAddToCartPreview() {
    var viewCartBtn = $(".add-to-cart-preview .add-to-cart-preview__btn-view-cart");

    viewCartBtn.click(function (e) {
        var checkoutPageUrl = $('li.cart-checkout a').attr('href');
        if (checkoutPageUrl != undefined) {
            window.location.href = checkoutPageUrl;
        }
    });

    if (viewCartBtn.length && $('a.my-account__nav-link').length) {
        var url = new URL($('a.my-account__nav-link').attr('href'));
        var urlHref = url.href;
        var path = url.pathname;
        var indexOfPath = urlHref.indexOf(path);
        var targetLocation = urlHref.substring(0, indexOfPath) + '/checkout/#shipping';
        $(".add-to-cart-preview .add-to-cart-preview__btn-checkout").click(function (e) {
            window.location.href = targetLocation;
        });
    }
}

// set Add to Cart Preview modal top position on page resize
function resizeAddToCartPreview() {
    let headerHeight = $("header.header.component").outerHeight();
    let stickyNavHeight = $(".sticky-jump-nav").height();
    $(".add-to-cart-preview-page-dimmer").css("padding-top", headerHeight + stickyNavHeight + "px");
    $(".add-to-cart-preview").css("top", headerHeight + "px");
}

// Close Add to cart preview modal
function closeAddToCartPreview($container) {
    var closeAddToCartPreviewbtn = $(".add-to-cart-preview__close");
    var continueShoppingBtn = $(".add-to-cart-preview__btn-continue--button");

    closeAddToCartPreviewbtn.click(function (e) {
        postClosePreviewButton();
    });
    continueShoppingBtn.click(function (e) {
        postClosePreviewButton();
    });
    $(document).keyup(function (e) {
        if (e.key !=="Escape") {
            return;
        }

        var activeModal = $(".add-to-cart-preview").not(".hide");
        if (activeModal) {
            postClosePreviewButton();
        }
    });
    $(".add-to-cart-preview-page-dimmer").click(function (e) {
        postClosePreviewButton();
    });
}

$(document).ready(function() {
    closeAddToCartPreview();
    resizeAddToCartPreview();
    viewCartFromAddToCartPreview();
});

$(window).resize(function() {
    resizeAddToCartPreview();
});


function showCartNumber(data) {
    if (data && data.cart) {
        Cookies.set(CIF_CART_CONST, JSON.stringify(data.cart), { expires: 90 });
        localStorage.setItem(CIF_CART_CONST, JSON.stringify(data.cart));
        var total = data.cart.total_quantity;
        var cartPage = window.CIF.CommerceGraphqlApi.cartPageUrl();
        if (total > 0) {
            total = total < 100 ? total : "99<sup>+</sup>";
            $('.icon-cart').each(function(){
                $(this).find('.badge').remove();
                $(this).closest("a").attr("href", cartPage);
                $(this).append('<span id="lblCartCount" class="badge">'+total+'</span>');
            });
        }
    }
}

function getCartTotal(cart_id) {
    return window.CIF.CommerceGraphqlApi.getCifCart(cart_id, showCartNumber, function () {
        return window.CIF.CommerceGraphqlApi.createCartHaveId(cart_id, setCookiesCartId, function () {
            Cookies.remove(CART_ID_CONST, { domain: getDomain() });
        });
    })
}

function createEmptyCart() {
    return window.CIF.CommerceGraphqlApi.createEmptyCart(setCookiesCartId)
}

(function () {
    function onDocumentReady() {
        var dataset = document.querySelector('body').dataset;
        if (dataset.enableCommerce == 'true') {
            if (!window.CIF || !window.CIF.CommerceGraphqlApi) {
                console.log('Error in loading CIF for Cart ..');
                return;
            }
            /*var cart_id = Cookies.get(CART_ID_CONST);
            if (cart_id) {
                getCartTotal(cart_id)
            } else {
                createEmptyCart();
            }*/
    	}

    }

    if (document.readyState !== 'loading') {
        onDocumentReady();
    } else {
        document.addEventListener('DOMContentLoaded', onDocumentReady);
    }
})();

$(document).ready(function(){
    $('a[href*="#"]').click( function() {
        const hrefValue = $(this).attr('href');
        if($(hrefValue).length && $(hrefValue).hasClass('modal')) {
            $(hrefValue).modal('show');
        }
    });
});

/* global $ */
/* global jQuery */
/* global modal  */

var PENTAIR = PENTAIR || {};
    /***************************/
    /* SEO Schema Video Markup */
    /***************************/
    function setSEOVideoMarkup(data) {
        var seoScript = $('<script type="application/ld+json"></script>');
        $(seoScript).html(JSON.stringify(data));
        $("head").append(seoScript);
    }
    var hostname = window.location.hostname;
    var mediaComponents = $(".video-media-common.component");
    if (mediaComponents.length) {
        mediaComponents.each(function(index, element) {
            // Video Data
            var videoType = $(this).find("button.play-vid").attr("data-vidtype");
            var videoURL = $(this).find("button.play-vid").attr("data-vidid");
            var videoTitle = $(this).find("button.play-vid").attr("data-video-title");
            var videoDescription = $(this).find("input[name=videoDescription]").val();
            var videoThumbnailSrc = $(this).find(".imagevideo-callout img").attr("src");
            var thumbnailUrl = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + videoThumbnailSrc;
            var contentUrl = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + videoURL;

            // Google API Key to fetch YouTube Data
            var API_KEY = $(this).find("input[name=gKey]").val();

            // Video Markup Data
            var videoMarkup = {
                "@context": "https://schema.org",
                "@type": "VideoObject",
                "name": "",
                "description": "",
                "thumbnailUrl": "",
                "duration": "",
                "contentUrl": ""
            };

            videoMarkup["name"] = videoTitle;
            videoMarkup["description"] = videoDescription;
            videoMarkup["thumbnailUrl"] = [thumbnailUrl];

            // Get duration of Media Source (DAM, YouTube, Vimeo) with respect to their API's
            if (videoType == "dam") {
                var videoEl = $('<video src="" controls="true"></video>');
                videoEl.attr("src", videoURL);
                $(videoEl).on("loadedmetadata", function(e) {
                    var duration = $(videoEl).get(0).duration;
                    var minutes = parseInt(duration / 60, 10);
                    var seconds = parseInt(duration % 60, 10);
                    if (typeof duration != undefined || !isNaN(duration)) {
                        var durationTime = "PT" + minutes + "M" + seconds + "S";
                        videoMarkup["duration"] = durationTime;
                    }
                    var contentUrl = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + videoURL;
                    videoMarkup["contentUrl"] = contentUrl;
                    setSEOVideoMarkup(videoMarkup);
                });
            } 
        });
    }

function initPlayButton() {
    const mediaComponents = $('.video-media-common.component');
    mediaComponents.each(function(idx, mediaComponent) {
        const videoWrapper = $(mediaComponent).find('.video-wrap');
        const $vidModal = $('#videoModal');
        const $videoModalClose = $vidModal.find('.icon-close');
        const damVideo = videoWrapper.find('video');
        const damVideoSrc = damVideo.children("source").attr("src");
        const playButton = videoWrapper.find('button.play-vid');
        const vimeoWrap = videoWrapper.find('.video.vimeo');
        const vimeoIframeWidth = videoWrapper.find('.video.vimeo iframe').width();
        const vimeoIframeHeight = (vimeoIframeWidth / (4/3));
        const youtubeWrap = videoWrapper.find('.video.youtube');
        const youtubeIframeWidth = videoWrapper.find('.video.youtube iframe').width();
        const youtubeIframeHeight = (youtubeIframeWidth / (4/3));

        function deployDamAsset() {
            $vidModal.find('iframe').hide();
            $vidModal.find('video').show();
            $vidModal.find('video').attr('src', damVideoSrc);
            $vidModal.modal('show');
            $vidModal.find('video').trigger('play');  
        };
          
        function killVideo() {
            $vidModal.hide();
            $vidModal.find('iframe').attr('src', '');
            $vidModal.find('video').get(0).pause();
            $vidModal.find('video').attr('src', '');
            $vidModal.find('iframe').hide();
            $vidModal.find('video').hide();
        };
        // IFRAME SIZING 
        if (vimeoIframeWidth) {
            vimeoWrap.css("height", (vimeoIframeHeight + "px"));
        }  
        if (youtubeIframeWidth) {
            youtubeWrap.css("height", (youtubeIframeHeight + "px"));
        }    
        // DAM PLAY BUTTON FUNCTION
        playButton.click(function() {
        if ((damVideo.hasClass('inline'))) {
            $(this).hide();
            damVideo.trigger('play');
            damVideo.attr('controls',true);
        } else {
                deployDamAsset();
            };
        });
         // THUMBNAIL INIT MODAL/INLINE 
        $(function(){
            $('.youtube-overlay.no-thumbnail').click(function(){
                var youtubeSrc = $(this).siblings('iframe.youtube-iframe').attr('src');
                var youtubeSrcAuto = youtubeSrc += '&autoplay=1'; 
                $vidModal.find('iframe').show();
                $vidModal.find('video').hide();
                $vidModal.find('iframe').attr('src', youtubeSrcAuto);
                $vidModal.modal('show');
            })

            $('.youtube-overlay').click(function(){
                if ($(this).hasClass('inline-thumbnail')) {
                    $(this).hide();
                    $(this).siblings('iframe.youtube-iframe')[0].src += "&autoplay=1";
                } else if ($(this).hasClass('modal-thumbnail')) {
    				var youtubeSrc = $(this).siblings('iframe.youtube-iframe').attr('src');
                    var youtubeSrcAuto = youtubeSrc += '&autoplay=1'; 
					$vidModal.find('iframe').show();
            		$vidModal.find('video').hide();
    				$vidModal.find('iframe').attr('src', youtubeSrcAuto);
            		$vidModal.modal('show');
                }
            })

            $('.vimeo-overlay.no-thumbnail').click(function(){
                 var vimeoSrc = $(this).siblings('iframe').attr('src');
                 var vimeoSrcAuto = vimeoSrc += '&autoplay=1'; 
				 $vidModal.find('iframe').show();
            	 $vidModal.find('video').hide();
    			 $vidModal.find('iframe').attr('src', vimeoSrcAuto);
            	 $vidModal.modal('show');
            })

            $('.vimeo-overlay').click(function(){
                if ($(this).hasClass('inline-thumbnail')) {
                    $(this).hide();
                    $(this).siblings('iframe')[0].src += "&autoplay=1";
                } else if ($(this).hasClass('modal-thumbnail')) {
                    var vimeoSrc = $(this).siblings('iframe.vimeo').attr('src');
                    var vimeoSrcAuto = vimeoSrc += '&autoplay=1'; 
					$vidModal.find('iframe').show();
            		$vidModal.find('video').hide();
    				$vidModal.find('iframe').attr('src', vimeoSrcAuto);
            		$vidModal.modal('show');
                }
            })
        });
    
        $videoModalClose.on('click', function () {
            killVideo();
        });

        $(document).keyup(function(e) {
            if (e.keyCode == 27) { 
                killVideo();
            } 
        });

        setInterval(_ => {
            if (document.activeElement.tagName === "IFRAME") {
                $vidModal.focus();
            }
        }, 100);

        $vidModal.on('click', function (e) {
            /* Stop video playback when clicking the darkened background */
            var clickedOnBackground = $(e.target).hasClass('modal in');
            return !clickedOnBackground ? false : killVideo();
        });
    })
};

(function() {
    /**
     * Uses data attributes for authored height and width.
     * If iframe doesnt exist, no custom values should be applied.
     * Wrapper addinng-bottom should match iframe height value.
     */
    function setVideoDimensions() {
        const mediaComponents = $('.video-media-common.component');
        mediaComponents.each(function(idx, mediaComponent) {
            const videoWrapper = $(mediaComponent).find('.video-wrap');
            const iframe = $(videoWrapper).find('iframe');
            if (iframe.length == 0) { return; }
            const iframeWidth = $(iframe).data('width');
            const iframeHeight = $(iframe).data('height');
            if (iframeWidth) {
                $(iframe).css('width', iframeWidth + 'px');
            }
            if (iframeHeight) {
                $(iframe).css('height', iframeHeight + 'px');
                $(videoWrapper).css('padding-bottom', iframeHeight + 'px');
                $(videoWrapper).css('padding-top', '0px');
            }
        });
    };
    $(document).ready(function() {
        setVideoDimensions();
        initPlayButton();
    });
})();

$(document).ready(function(){
    var $toolbarComponent = $('.toolbar.component');
    var eventName;

    if($toolbarComponent.length) {
        $toolbarComponent.each(function(){
            var numIcons = $(this).find('a').length;
            if (numIcons == 3 || numIcons == 2){
                $(this).addClass('three-items');
            }
        });

        $toolbarComponent.on('click', '.toolbar-icons [data-toolbar-link]', function(e) {
            eventName = e.currentTarget.querySelector('span').innerText.toLocaleLowerCase();
            updateDataLayerObj(eventName);
        });
    }

    $('.toolbar img[src$=".svg"]').each(function() {
        var $img = jQuery(this);
        var imgURL = $img.attr('src');
        var attributes = $img.prop("attributes");

        $.get(imgURL, function(data) {
            // Get the SVG tag, ignore the rest
            var $svg = $(data).find('svg');

            // Remove any invalid XML tags
            $svg = $svg.removeAttr('xmlns:a');

            // Loop through IMG attributes and apply on SVG
            $.each(attributes, function() {
                $svg.attr(this.name, this.value);
            });

            // Replace IMG with SVG
            $img.replaceWith($svg);
            $svg.get(0).setAttribute('preserveAspectRatio','xMaxYMin meet');
        }, 'xml');
    });
});

function updateDataLayerObj(eventName) {
    var eventAction = 'icon toolbar click';
    var eventType = 'icon toolbar';

    try {
        if(digitalData) {
            if(digitalData.event) {
                digitalData.event.eventAction = 'icon toolbar click';
                digitalData.event.eventName = eventName;
                digitalData.event.type = "icon toolbar";
                digitalData.event.timeStamp = new Date();
            }
        }
    } catch(err) {
        console.log(err);
    }
}
$(document).ready(function() {
    /* Intranet - Adding Email Share to Internal News/Blogs Pages - Update href with page URL */
    var internalNewsPage = $(".internal-news-page");
    var internalBlogPage = $(".blog-details-wrapper");
    if (internalNewsPage.length || internalBlogPage.length) {
        var internalShare = internalNewsPage.length ? internalNewsPage.find(".internal-news-blog-share") : internalBlogPage.find(".internal-news-blog-share");
        var emailShare = internalShare.find(".email-share");
        var shareLink = "mailto:?subject=Check out what I found on mypentair.com&body=" + window.location.href;
        emailShare.attr("href", shareLink);
    }
});

$(document).ready(function() {

    $('.tile-callouts-tile a').hover(function(){
       $(this).find('div > div').stop().slideDown('fast');
    }, function(){
        $(this).find('div > div').stop().slideUp('fast');
    });

    var initCalloutsCarousel = function(calloutsComponent) {
        var carousel = calloutsComponent.find(".wrap");
        var totalSlides = carousel.find(".tile-callouts-tile").length;
        var currentSlide = 0;

        var addLeadingZero = function (numString) {
            return (parseInt(numString, 10) < 10) ? '0' + numString : numString;
        };

        var update = function(){
            setTimeout(function(){
                var activeDot = carousel.find('.owl-dot.active');
                currentSlide = carousel.find('.owl-dot').index(activeDot) + 1;
                calloutsComponent.find('.owl-custom-nav .current').text(addLeadingZero(currentSlide));
            }, 10);
        };

        calloutsComponent.find('.owl-custom-nav .total').text(addLeadingZero(totalSlides));

        carousel.on('initialized.owl.carousel changed.owl.carousel resized.owl.carousel', function(e) {
            update();
        });

        calloutsComponent.find('.owl-custom-nav .owl-next').on('click', function (e) {
            carousel.trigger('next.owl.carousel');
        });

        calloutsComponent.find('.owl-custom-nav .owl-prev').on('click', function (e) {
            carousel.trigger('prev.owl.carousel');
        });

        carousel.owlCarousel({
            loop: true,
            center: true,
            items: 1,
            animateIn: 'fadeIn',
            animateOut: 'fadeOut',
            dots: true,
            nav: false
        });
    };

    var tileCalloutsComponents = $(".tile-callouts.component");

    if (tileCalloutsComponents.length) {
        var owlCarousels = tileCalloutsComponents.find(".wrap");

        if (owlCarousels.length) {
            tileCalloutsComponents.each(function(index,elem) {
                initCalloutsCarousel($(elem));
            });
        }
    }
});

$(document).ready(function(){
    //readmore
    $('.text .readmore').each(function(){
        if ($('.edit-mode').length === 0){
            var $this = $(this);
            var $thisParent = $this.parent();
            var $removedReadmore = $this.parent().html().replace('<span class="readmore"></span>', '');
            $(this).parent().nextAll().wrapAll('<div class="readmore-text"></div>');
            $(this).closest('.text').find('.readmore-text').after($this);
            if ($removedReadmore==='&nbsp;') {
                $thisParent.remove();
            }
        }
    });

    $('.pnt-hero-interior .readmore').each(function(){
        if ($('.edit-mode').length === 0){
            var $this = $(this);
            var $thisParent = $this.parent();
            var $removedReadmore = $this.parent().html().replace('<span class="readmore"></span>', '');
            $(this).parent().nextAll().wrapAll('<div class="readmore-text"></div>');
            $(this).closest('.pnt-hero-interior').find('.readmore-text').after($this);
            if ($removedReadmore==='&nbsp;') {
                $thisParent.remove();
            }
        }
    });

    $('.readmore').on('click',function(){
        $(this).prev('.readmore-text').stop().slideToggle('fast');
        $(this).toggleClass('open');
    });

    //add line to intro paragraph text, done this way to allow for centering of the line via text-align center
    $('.text .intro').each(function(){
       $(this).append('<span aria-hidden="true"></span>');
    });

    //add line to intro paragraph text, done this way to allow for centering of the line via text-align center
    $('.pnt-hero-interior .intro').each(function(){
       $(this).append('<span aria-hidden="true"></span>');
    });

    //tooltip text
    $('.text .tip').attr('tabindex','0').wrapInner( "<span></span>");
    $('.pnt-hero-interior .tip').attr('tabindex','0').wrapInner( "<span></span>");
    var el = document.getElementsByTagName("body")[0];
    el.addEventListener("touchstart", touchedStart, false);
    function touchedStart() {
        $('.tip').blur();
    }
    checkTipEdge(); //also runs on resize. adds class to prevent tooltip from going off the edge of the screen
    function checkTipEdge(){
        $('.tip').each(function(){
            var $this = $(this);
            var offNum = 110;
            var leftEdge = $this.offset().left;
            var rightEdge = $this.offset().left + $this.width();
            var screenWidth = $(window).width();
            if ( screenWidth-rightEdge < offNum) {
                $this.addClass('near-right').removeClass('near-left');
            } else  if (leftEdge < offNum) {
                $this.addClass('near-left').removeClass('near-right');
            } else {
                $this.removeClass('near-left near-right');
            }
        });

    }
    // Text Arrow class re-assignment
    $('.text .text-arrow-link, .text .text-arrow-link-white').each(function(i, el) {
        var cls = $(el).attr('class');

        $(el).removeAttr('class');
        $(el).parent().addClass(cls);
    });

    $(".text a[href^='#']").on("click", function(e) {
        var hash = this.hash;
        var header = $("body").find("header").outerHeight();
        var stickyJumpNav = $("body").find(".sticky-jump-nav");
        var targetExists = $(hash).length > 0;

        e.preventDefault();
        if (targetExists) {
            var offset = $(hash).offset().top - header;

            if (stickyJumpNav.length) {
                offset -= (stickyJumpNav.hasClass("stuck") ? stickyJumpNav.outerHeight() : stickyJumpNav.outerHeight(true) );
            }

            $('html, body').animate({
                scrollTop: offset
            }, 250);
        }
    });
});
$(document).ready(function(){

    var initTabCarousel = function(carouselComponent){
        var tabCarousel = carouselComponent.find('.tab-name.owl-carousel');
        var contentCarousel = carouselComponent.find('.tab-content.owl-carousel');
        var currentSlide = 0;
        var totalSlides = carouselComponent.find('.tab-name .item').length;

        contentCarousel.owlCarousel({
            nav:false,
            dots:false,
            mouseDrag: false,
            autoHeight: false,
            items: 1
            // center: true,
        }).on('initialized.owl.carousel changed.owl.carousel resized.owl.carousel', function(event) {
            tabCarousel.trigger('to.owl.carousel', [event.item.index, 300, true]);
            tabCarousel.find('.current').removeClass('current');
            tabCarousel.find('.owl-item .item').eq(event.item.index).addClass('current');
            update();
        });

        tabCarousel.owlCarousel({
            nav: false,
            dots:false,
            mouseDrag: false,
            dragMove: false,
            // center: true,
            // onDragged: function(e){console.log('drg', e)},
            responsive: {
                0: {
                    items: Math.min(totalSlides, 3),
                    autoWidth:true
                },
                768: {
                    items: Math.min(totalSlides, 5)
                }
            }
        }).on('click', '.owl-item', function(event) {
            var targetIndex = $(event.target).parents('.owl-item').index();
            var dist = targetIndex - tabCarousel.find('.current').parent().index();
            var direction = (dist < 0) ? 'prev.owl.carousel' : 'next.owl.carousel';
            dist = Math.abs(dist);
            for(var i = 0; i < dist; i++){
                contentCarousel.trigger(direction);
            }
        });

        tabCarousel.on('dragged.owl.carousel', function (event) {
            var dragDirection = event.relatedTarget['_drag']['direction'];
            if(dragDirection === 'left'){
                contentCarousel.trigger('next.owl.carousel');
            } else if(dragDirection === 'right'){
                contentCarousel.trigger('prev.owl.carousel');
            }
        });

        //add titles to tab content areas for print view & position bottom carrot to tab
        tabCarousels.each(function(){
            var tabName = $(this);
            var tabItem = tabName.find('.item h5');
            var tabContent = $(this).find('.tab-content');

            for (j = 0; j < tabContent.find('.item').length; j++){
                tabContent.find('.item:eq('+j+')').attr('data-title',tabItem.eq(j).text());
            }

            var activeTabHeight = $(this).find(".owl-item.active").height();
            if (activeTabHeight > 61 && activeTabHeight < 82) {
                $(this).find('.icon-caret-down').addClass('wrap-2');
            }
            if (activeTabHeight > 81 && activeTabHeight < 101) {
                $(this).find('.icon-caret-down').addClass('wrap-3');
            }
            if (activeTabHeight > 100) {
                $(this).find('.icon-caret-down').addClass('wrap-4');
            }
        });

        var update = function () {
            // If there's more items to the right that are hidden, add white overlay.
            
            var addRightOverlay = (tabCarousel.find('.owl-item.active').first().nextAll('.owl-item').length > 2);

            if(addRightOverlay){
                tabCarousel.addClass('right-overlay');
            } else {
                tabCarousel.removeClass('right-overlay');
            }
        }

        update();
    };

    var tabCarousels = $('.tabs.component');

    if(tabCarousels.length){
        var mode = tabCarousels.first().data('isedit');
        if (mode === 'noedit') {
            $(function(){
                tabCarousels.each(function(index, elem){
                    initTabCarousel($(elem));
                });
            });
        }
    }

});
$(document).ready(function() {
    var tableRTE = $(".table-rte.component");
    var tableRows = tableRTE.find("tbody > tr").not(":first-child");
    var tableRowCells = tableRows.find("td");
    tableRowCells.each(function() {
        var textCount = $(this).text().trim().length;
        var thisIndex = $(this).index();
        var thisTable = $(this).closest('table');
        if (textCount <= 25) {
            thisTable.find('tbody tr:first-child td:eq(' + thisIndex + ')').addClass("small-width");
            $.fn.matchHeight._update();
        }
        else if (textCount > 25 && textCount < 75){
            thisTable.find('tbody tr:first-child td:eq(' + thisIndex + ')').addClass("medium-width");
            $.fn.matchHeight._update();
        } else if (textCount >= 75){
            thisTable.find('tbody tr:first-child td:eq(' + thisIndex + ')').addClass("large-width");
            $.fn.matchHeight._update();
        }
    });
});
var CQ = CQ || {};


$(document).ready(function(){
	var $body = $('body');

    //set up carousel variables
    var sync1Selector = '.solutions.component .image-carousel.owl-carousel',
    	sync2Selector = '.solutions.component .text-carousel.owl-carousel',
    	sync3Selector = '.solutions.component .nav-carousel.owl-carousel';

    var sync1 = $(sync1Selector),
        sync2 = $(sync2Selector),
        sync3 = $(sync3Selector);

    var totalSlides = sync3.find('.item').length;
    var useNav = totalSlides > 5;
    var isCarouselStyle = !!$('.solutions.component.carousel-option').length;

    function checkTypeSlides(){
        if ($('.solutions.component').hasClass('carousel-option')){
            if (totalSlides > 5){
                return true;
            } else{
                return false;
            }
        } else{
            return true;
        }
    }

    function bindSolutionsToTiles() {
        var categoryList = $('.solutions.component .text-carousel.owl-carousel .owl-item');

        var activeCategory;

        categoryList.each(function(i,elem) {
            if ($(elem).hasClass('active')) {
                activeCategory = $(elem).find('h3').attr('data-category').toLowerCase();
                var bodySolution = $body.attr('data-solution');
                if (activeCategory != bodySolution) {
                	$body.attr('data-solution', activeCategory);
                }
            }
        });

        if (CQ && CQ.setTileCategory) {
            CQ.setTileCategory();
        }

    }

    sync3.find('.item').hover(function(){
    	if(CQ && !CQ.isOnMobile) {
            if (!$(this).parent().hasClass('on')){
                $(this).parent('.owl-item').addClass('showing').removeClass('not-showing');
            }
        }
    }, function(){
        if (!$(this).parent().hasClass('on')) {
            $(this).parent('.owl-item').removeClass('showing').addClass('not-showing');
        }
    });

    var update = function(eventType){
    	sync3.find('.owl-item.showing').removeClass('showing').removeClass('on').addClass('not-showing');
    	var activeClickElem = sync3.find('.owl-item.active .item[data-index="' + currentIndex + '"]').parent();
    	var activeDragElem = sync3.find('.owl-item.active').eq(0);
	    var current = eventType === 'click' ? activeClickElem : activeDragElem;
	    current.addClass('showing').removeClass('not-showing').addClass('on');
    };

    var moveNav = function(){
    	if(checkTypeSlides()){
	    	sync3.find('.owl-prev').appendTo(sync3.parent().find('.nav-carousel-arrows')).removeClass('disabled');
	    	sync3.find('.owl-next').appendTo(sync3.parent().find('.nav-carousel-arrows')).removeClass('disabled');
            sync3.find('.owl-nav').removeClass('disabled');
            sync3.on('changed.owl.carousel', function(event) {
                sync3.find('.owl-nav').removeClass('disabled');
            });
    	}
    	setTimeout(function(){
    		bindSolutionsToTiles();
	    },0);

    };

    var addLeadingZero = function (numString) {
        return (parseInt(numString, 10) < 10) ? '0' + numString : numString;
    };

    $('.nav-carousel-arrows').on('click', '> div', function(){
        if (!useNav){
            if (isNaN(currentIndex)){
                if ($(this).hasClass('owl-prev')) {
                    sync2.trigger('prev.owl.carousel');
                    currentIndex = totalSlides-1;
                } else {
                    sync2.trigger('next.owl.carousel');
                    currentIndex = 1;
                }
            } else{
                if ($(this).hasClass('owl-prev')) {
                    sync2.trigger('prev.owl.carousel');
                    if (currentIndex > 0) {
                        currentIndex--;
                    } else{
                        currentIndex = totalSlides-1;
                    }
                } else{
                    sync2.trigger('next.owl.carousel');
                    if (currentIndex < totalSlides-1){
                        currentIndex++;
                    } else{
                        currentIndex = 0;
                    }
                }
            }
            sync1.trigger('to.owl.carousel', [currentIndex]);
            sync3.trigger('to.owl.carousel', [currentIndex]);
            update('click');
            bindSolutionsToTiles();
        }
    });

    var currentIndex;

    // Start Carousel
    if(sync1.length) {
	    sync1.owlCarousel({
		    loop: true,
		    items : 1,
		    mouseDrag: false,
		    touchDrag: false,
		    margin:0,
		    nav : false,
		    dots: false,
		    animateOut: 'fadeOut',
		    linked: sync3Selector
	    });
    }

    if(sync2.length) {
	    sync2.owlCarousel({
		    loop: true,
		    items : 1,
		    mouseDrag: false,
		    touchDrag: false,
		    margin:5,
		    nav: false,
		    dots: false,
		    autoHeight: true,
		    linked: sync3Selector
        });
    }

    if(sync3.length) {
	    sync3.owlCarousel({
		    margin:0,
		    nav: checkTypeSlides(),
		    navText: ["<div class='icon-nav-left'></div>","<div class='icon-nav-right'></div>"],
		    dots: false,
		    linked: sync1Selector + ', ' + sync2Selector,
		    onInitialized: moveNav,
		    responsive : {
			    0 : {
				    loop: true,
				    touchDrag: true,
				    mouseDrag: true,
				    margin: isCarouselStyle ? 10 : 0, 
				    items: isCarouselStyle ? 3 : 4
			    },
			    768 : {
				    loop: useNav,
				    touchDrag: false,
				    mouseDrag: false,
				    items: isCarouselStyle ? 3 : 5
			    },
			    992 : {
				    loop: useNav,
				    touchDrag: false,
				    mouseDrag: false,
				    items: isCarouselStyle ? 4 : 5
			    },
			    1200 : {
			    	loop: useNav,
				    touchDrag: false,
				    mouseDrag: false,
			    	items: 5
			    }
		    }
	    }).on('click', '.owl-item' , function(event) {
			var sync3Data = sync3.data('owl.carousel');
			currentIndex = sync3Data.relative($(this).index());
			sync3.trigger('to.owl.carousel', [currentIndex]);	// Order of the triggers matters here. Avoids a carousel sync bug where desktop user clicks 3rd item with more than 5 total items in desktop & image carousel displays incorrect slide.
			sync1.trigger('to.owl.carousel', [currentIndex]);
			sync2.trigger('to.owl.carousel', [currentIndex]);
			update('click');
            bindSolutionsToTiles();
	    }).on('initialized.owl.carousel linked.to.owl.carousel', function(event) {
		    update('drag');
		});

    }




    //set first owl-dot to active
    sync3.find('.owl-item').addClass('not-showing');
    sync3.find('.active:first').addClass('showing').addClass('on').removeClass('not-showing');
    $('.solutions.component.carousel-option').find('span.number').each(function(index, elem){
    	var finalNum = addLeadingZero($(this).text());
    	$(this).text(finalNum);
    });

    //svg conversion
    $('.solutions.component img[src$=".svg"]').each(function() {
        var $img = jQuery(this);
        var imgURL = $img.attr('src');
        var attributes = $img.prop("attributes");

        $.get(imgURL, function(data) {
            // Get the SVG tag, ignore the rest
            var $svg = $(data).find('svg');

            // Remove any invalid XML tags
            $svg = $svg.removeAttr('xmlns:a');

            // Loop through IMG attributes and apply on SVG
            $.each(attributes, function() {
                $svg.attr(this.name, this.value);
            });

            // Replace IMG with SVG
            $img.replaceWith($svg);
            $svg.get(0).setAttribute('preserveAspectRatio','xMidYMin meet');
        }, 'xml');
    });
});

var PENTAIR = PENTAIR || {};
PENTAIR.SHARE = PENTAIR.SHARE || {};
PENTAIR.SHARE.URLPARAMS = PENTAIR.SHARE.URLPARAMS || {};

$(function(){
    /** Primary objective of the share component view model is to bind the dynamic query parameters, if they exist, to the various social media buttons. */
    var ShareViewModel = function ShareViewModel() {
        var self = this;
        var currentPageTitle = PENTAIR.SHARE.currentPageTitle ? PENTAIR.SHARE.currentPageTitle : '';
        var host = PENTAIR.SHARE.host ? PENTAIR.SHARE.host : '';
        var titleKey = '&title=';

        /** KO Observable Variables */
        self.queryParamString = ko.observable('');
        self.mailingLink = ko.observable('');
        self.modifiedTwitterLink = ko.observable('');
        self.modifiedFbLink = ko.observable('');
        self.modifiedLinkedInLink = ko.observable('');

        function setQueryString() {
            var query = window.location.href;
            var hasQueryString = query.indexOf('?');
            if(hasQueryString !== -1) {
                self.queryParamString('?' + window.location.href.split('?')[1]);
            }
        }

        function getEncodedUrl(url) {
            if(self.queryParamString() !== '') {
                return url + encodeURIComponent(self.queryParamString());
            } else {
                return url;
            }
        }

        function createMailToLink() {
            var mailToBase = 'mailto:?subject=';
            var bodyKey = '&body=';
            var mailToString = mailToBase + currentPageTitle + bodyKey + getEncodedUrl(host);
            self.mailingLink(mailToString);
        }

        function createTwitterLink() {
            var twitterBase = 'http://twitter.com/intent/tweet?url=';
            var twitterUrl = twitterBase + getEncodedUrl(host) + '&text=' + currentPageTitle;
            self.modifiedTwitterLink(twitterUrl);
        }

        function createFacebookLink() {
            var fbLinkBase = 'http://www.facebook.com/sharer/sharer.php?u=';
            var fbUrl = fbLinkBase + getEncodedUrl(host) + titleKey + currentPageTitle;
            self.modifiedFbLink(fbUrl);
        }

        function createLinkedInLink() {
            var linkedInBase = 'http://www.linkedin.com/shareArticle?mini=true&url=';
            var liSourceParam = '&source=http://www.pentair.com';
            var linkedInUrl = linkedInBase + getEncodedUrl(host) + titleKey + currentPageTitle + liSourceParam;
            self.modifiedLinkedInLink(linkedInUrl);
        }

        function updateShareLinks() {
            setQueryString();
            createMailToLink();
            createTwitterLink();
            createFacebookLink();
            createLinkedInLink();
        }

        /** Since the url is dynamic on Download center pages, we need to check the query parameters every time the mouse moves towards the share links. */
        $('.share.component')
            .on('mouseenter', function() {
                updateShareLinks();
            });

        /** Initialize the links on load */
        updateShareLinks();

    };

    $(document).ready(function() {
        $('.share.component').each(function() {
            try {
                ko.applyBindings(new ShareViewModel($(this)), this);
            } catch (koError) {
                console.log('Knockout JS error detected on the Share Component ==> ', koError);
            }
        });
    });

});
$(document).ready(function(){
    var $secNav = $('.section-navigation select');
    $secNav.change( function(){
        var url = $(this).val();
            // target = $(this).find(":selected").attr('data-target');

        window.location.href = url;

    });
});
$(document).ready(function(){

    var initTabCarousel = function(carouselComponent){
        var tabCarousel = carouselComponent.find('.tab-search-name.owl-carousel'); // click event & drag event
        var contentCarousel = carouselComponent.find('.tab-search-content.owl-carousel'); // drag event
        var currentSlide = 0;
        var totalSlides = carouselComponent.find('.tab-search-name .item').length;

        contentCarousel.owlCarousel({
            nav:false,
            dots:false,
            mouseDrag: false,
            autoHeight: false,
            items: 1
            // center: true,
        }).on('initialized.owl.carousel changed.owl.carousel resized.owl.carousel', function(event) {
            tabCarousel.trigger('to.owl.carousel', [event.item.index, 300, true]);
            tabCarousel.find('.current').removeClass('current');
            tabCarousel.find('.owl-item .item').eq(event.item.index).addClass('current');
            update();
        });

        tabCarousel.owlCarousel({
            nav: false,
            dots:false,
            mouseDrag: false,
            dragMove: false,
            // center: true,
            // onDragged: function(e){console.log('drg', e)},
            responsive: {
                0: {
                    items: Math.min(totalSlides, 3),
                    autoWidth:true
                },
                768: {
                    items: Math.min(totalSlides, 10)
                }
            }
        }).on('click', '.owl-item', function(event) {
            var targetIndex = $(event.target).parents('.owl-item').index();
            var dist = targetIndex - tabCarousel.find('.current').parent().index();
            var direction = (dist < 0) ? 'prev.owl.carousel' : 'next.owl.carousel';
            dist = Math.abs(dist);
            for(var i = 0; i < dist; i++){
                contentCarousel.trigger(direction);
            }
        });

        tabCarousel.on('dragged.owl.carousel', function (event) {
            var dragDirection = event.relatedTarget['_drag']['direction'];
            if(dragDirection === 'left'){
                contentCarousel.trigger('next.owl.carousel');
            } else if(dragDirection === 'right'){
                contentCarousel.trigger('prev.owl.carousel');
            }
        });

        //add titles to tab content areas for print view
        tabCarousels.each(function(){
            var tabName = $(this);
            var tabItem = tabName.find('.item h5');
            var tabContent = $(this).find('.tab-search-content');

            for (j = 0; j < tabContent.find('.item').length; j++){
                tabContent.find('.item:eq('+j+')').attr('data-title',tabItem.eq(j).text());
            }
        });

        var update = function () {
            // If there's more items to the right that are hidden, add white overlay.
            
            var addRightOverlay = (tabCarousel.find('.owl-item.active').first().nextAll('.owl-item').length > 1);

            if(addRightOverlay){
                tabCarousel.addClass('right-overlay');
            } else {
                tabCarousel.removeClass('right-overlay');
            }
        }

        update();
    };

    var tabCarousels = $('.search.component .tabs');

    if(tabCarousels.length){
        var mode = tabCarousels.first().data('isedit');
        if (mode === 'noedit') {
            $(function(){
                tabCarousels.each(function(index, elem){
                    initTabCarousel($(elem));
                });
            });
        }
    }

});
var PENTAIR = PENTAIR || {};

// Contains methods that define how search results appear in all tab for each index.
PENTAIR.AlgoliaAllTabSearchWidgets = {
    pentair_pages: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets
            .index({ indexName: indexName })
            .addWidgets([
                instantsearch.widgets.stats({
                    container: containerElem.parent().find('.results-count')[0],
                    templates: {
                        text: '{{#hasOneResult}}1 result{{/hasOneResult}}{{#hasManyResults}}{{nbHits}} results{{/hasManyResults}}'
                    }
                }),
                instantsearch.widgets.configure({
                    clickAnalytics: true,
                    hitsPerPage: 4
                }),
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function(hit, bindEvent) {
                            const target = PENTAIR.AlgoliaHelpers.getTarget(hit.url);
                            const breadcrumb = hit.breadcrumb && hit.breadcrumb.trim() ? hit.breadcrumb.trim() : '';
                            const hitContent = hit.content ?
                                `<div class="content">${instantsearch.snippet({
                                        attribute: "content",
                                        hit: hit,
                                        highlightedTagName: "mark"
                                    })}
                                </div>` : '';

                            return `${breadcrumb}
                                <a onclick="searchResultClickAnalytic('${hit.title}', 1)" href="${hit.url}" ${target} ${bindEvent('click', hit, 'Search Results: All Tab Page Click')} data-query-ID="${hit.__queryID}">
                                    <div class="title-text">${instantsearch.highlight({
                                                attribute: "title",
                                                hit: hit,
                                                highlightedTagName: "mark"
                                            })}
                                    </div>
                                    ${hitContent}
                                </a>`;
                        },
                        empty: 'No page results{{#query}} for "{{query}}"{{/query}}'
                    }
                })
            ])
        ])
    },
    mypentair_pages: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets
            .index({ indexName: indexName })
            .addWidgets([
                instantsearch.widgets.stats({
                    container: containerElem.parent().find('.results-count')[0],
                    templates: {
                        text: '{{#hasOneResult}}1 result{{/hasOneResult}}{{#hasManyResults}}{{nbHits}} results{{/hasManyResults}}'
                    }
                }),
                instantsearch.widgets.configure({
                    clickAnalytics: true,
                    hitsPerPage: 4
                }),
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function(hit, bindEvent) {
                            var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.url);
                            var html = ((hit.breadcrumb && hit.breadcrumb.trim()) ? hit.breadcrumb.trim() : '') +
                                '<a onclick="searchResultClickAnalytic(' + '\'' + hit.title + '\',1)" href="' + hit.url + '" ' + $target + bindEvent('click', hit, 'Search Results: All Tab Page Click') + '" data-query-ID="' + hit.__queryID + '"' + '>' +
                                '<div class="title-text">' + instantsearch.highlight({ attribute: "title", hit: hit, highlightedTagName: "mark" }) + '</div>' +
                                (hit.content ? ('<div class="content">' + instantsearch.snippet({ attribute: "content", hit: hit, highlightedTagName: "mark" }) + '</div>') : '') +
                                '</a>';
                            return html;
                        },
                        empty: 'No page results{{#query}} for "{{query}}"{{/query}}'
                    }
                })
            ])
        ])
    },
    pentair_products: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets
            .index({ indexName: indexName })
            .addWidgets([
                instantsearch.widgets.stats({
                    container: containerElem.parent().find('.results-count')[0],
                    templates: {
                        text: '{{#hasOneResult}}1 result{{/hasOneResult}}{{#hasManyResults}}{{nbHits}} results{{/hasManyResults}}',
                    }
                }),
                instantsearch.widgets.configure({
                    clickAnalytics: true,
                    hitsPerPage: 4
                }),
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function(hit, bindEvent) {
                            var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.url);
                            var productRating = hit.productRating ? $('<span class="rating"></span>').text(hit.productRating)[0].outerHTML : '';
                            var stars = $('<span class="stars"></span>').text(hit.productRating);
                            stars = stars.stars();
                            stars = hit.productRating ? stars[0].outerHTML : '';
                            var ratingHtml = (productRating && stars) ? '<div class="ratings-container">' + stars + productRating + '</div>' : '';
                            return '<a onclick="searchResultClickAnalytic(' + '\'' + (hit.productName || hit.title) + '\',1)" href="' + hit.url + '?queryID='+ hit.__queryID +'&objectID='+ hit.objectID +'&indexName='+ indexName +'" aria-label="Link to ' + (hit.productName || hit.title) + '" ' + bindEvent('click', hit, 'Search Results: All Tab Product Click') + $target + 'data-query-ID="' + hit.__queryID + '"' + '>'
                            + '<div class="top-image contain">' + (hit.productThumbnail ? ('<img loading="lazy" src="' + hit.productThumbnail + '.thumb.319.319.png" alt="Product Image"/>') : ('<img loading="lazy" src="/content/dam/extranet/product-related/product-photo/Placeholder Image.png.thumb.319.319.png" alt="Product Image"/>')) + '</div>'
                            + '<div class="title title-text">' + (instantsearch.snippet({ "attribute": "productName", "highlightedTagName": "mark", "hit": hit }) || instantsearch.snippet({ "attribute": "title", "highlightedTagName": "mark", "hit": hit })) + '</div>'
                            + ratingHtml + (hit.discontinueBanner == "true" ? '<div class="ribbon ribbon-top-left"><span>Discontinued</span></div>' : '') + '</a>';
                        },
                        empty: 'No product results{{#query}} for "{{query}}"{{/query}}'
                    }
                })
            ])
        ]);
    },
    pentair_news: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets
            .index({ indexName: indexName })
            .addWidgets([
                instantsearch.widgets.stats({
                    container: containerElem.parent().find('.results-count')[0],
                    templates: {
                        text: '{{#hasOneResult}}1 result{{/hasOneResult}}{{#hasManyResults}}{{nbHits}} results{{/hasManyResults}}'
                    }
                }),
                instantsearch.widgets.configure({
                    clickAnalytics: true,
                    hitsPerPage: 4
                }),
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function(hit, bindEvent) {
                            var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.pagePath);
                            return '<a onclick="searchResultClickAnalytic(' + '\'' + hit.title + '\',1)" href="' + hit.pagePath + '.html" ' + $target + bindEvent('click', hit, 'Search Results: All Tab News Click') + '" data-query-ID="' + hit.__queryID + '"' + '>' +
                                '<div class="content-padding">' +
                                '<div class="info">' +
                                '<div class="date">' + hit.displayDate + '</div>' +
                                '</div>' +
                                '<div class="title title-text">' + instantsearch.highlight({ "attribute": "title", "highlightedTagName": "mark", "hit": hit }) + '</div>' +
                                (hit.content ? ('<div class="content">' + instantsearch.snippet({ "attribute": "content", "highlightedTagName": "mark", "hit": hit }) + '</div>') : '') +
                                '</div>' +
                                '</a>'
                        },
                        empty: 'No news results{{#query}} for "{{query}}"{{/query}}'
                    }
                })
            ])
        ])
    },
    mypentair_news: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets
            .index({ indexName: indexName })
            .addWidgets([
                instantsearch.widgets.stats({
                    container: containerElem.parent().find('.results-count')[0],
                    templates: {
                        text: '{{#hasOneResult}}1 result{{/hasOneResult}}{{#hasManyResults}}{{nbHits}} results{{/hasManyResults}}'
                    }
                }),
                instantsearch.widgets.configure({
                    clickAnalytics: true,
                    hitsPerPage: 4
                }),
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function(hit, bindEvent) {
                            var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.pagePath);
                            return '<a onclick="searchResultClickAnalytic(' + '\'' + hit.title + '\',1)" href="' + hit.pagePath + '.html" ' + $target + bindEvent('click', hit, 'Search Results: All Tab News Click') + '" data-query-ID="' + hit.__queryID + '"' + '>' +
                                '<div class="content-padding">' +
                                '<div class="info">' +
                                '<div class="date">' + hit.displayDate + '</div>' +
                                '</div>' +
                                '<div class="title title-text">' + instantsearch.highlight({ "attribute": "title", "highlightedTagName": "mark", "hit": hit }) + '</div>' +
                                (hit.content ? ('<div class="content">' + instantsearch.snippet({ "attribute": "content", "highlightedTagName": "mark", "hit": hit }) + '</div>') : '') +
                                '</div>' +
                                '</a>'
                        },
                        empty: 'No news results{{#query}} for "{{query}}"{{/query}}'
                    }
                })
            ])
        ])
    },
    pentair_events: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets
            .index({ indexName: indexName })
            .addWidgets([
                instantsearch.widgets.stats({
                    container: containerElem.parent().find('.results-count')[0],
                    templates: {
                        text: '{{#hasOneResult}}1 result{{/hasOneResult}}{{#hasManyResults}}{{nbHits}} results{{/hasManyResults}}',
                    }
                }),
                instantsearch.widgets.configure({
                    clickAnalytics: true,
                    hitsPerPage: 4
                }),
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function(hit, bindEvent) {
                            var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.eventPagePath);
                            return '<a onclick="searchResultClickAnalytic(' + '\'' + hit.eventTitle + '\',1)" href="' + hit.eventPagePath + '" ' + $target + bindEvent('click', hit, 'Search Results: All Tab Event Click') + '" data-query-ID="' + hit.__queryID + '"' + '>' +
                                '<div class="content-padding">' +
                                '<div class="top">' +
                                '<div class="event-date title-text">' + hit.prettyDateRange + '</div>' +
                                '<div class="info">' +
                                '<div>' + hit.eventLocation + '</div>' +
                                '</div>' +
                                '</div>' +
                                '<div class="bottom">' +
                                '<div class="title title-text">' + instantsearch.highlight({ "attribute": "eventTitle", "highlightedTagName": "mark", "hit": hit }) + '</div>' +
                                (hit.eventDescription ? ('<div class="content">' + instantsearch.snippet({ "attribute": "eventDescription", "highlightedTagName": "mark", "hit": hit }) + '</div>') : '') +
                                '</div>' +
                                '</div>' +
                                '</a>';
                        },
                        empty: 'No events results{{#query}} for "{{query}}"{{/query}}'
                    }
                }),
            ])
        ])
    },
    pentair_blog: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets
            .index({ indexName: indexName })
            .addWidgets([
                instantsearch.widgets.stats({
                    container: containerElem.parent().find('.results-count')[0],
                    templates: {
                        text: '{{#hasOneResult}}1 result{{/hasOneResult}}{{#hasManyResults}}{{nbHits}} results{{/hasManyResults}}',
                    }
                }),
                instantsearch.widgets.configure({
                    clickAnalytics: true,
                    hitsPerPage: 4
                }),
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function(hit, bindEvent) {
                            const target = PENTAIR.AlgoliaHelpers.getTarget(hit.bnePagePath);
                            const bneImage = hit.bneImgPath ? `<div class="top-image cover"><img loading="lazy" src="${hit.bneImgPath}.thumb.319.319.png" alt="Article Image"/></div>` : '';
                            const blogName = hit.blogName ? `<div>${hit.blogName}</div>` : '';
                            const content = hit.content ? `<div class="content">${instantsearch.snippet({ "attribute": "content", "highlightedTagName": "mark", "hit": hit})}</div>` : '';
                            const bneAuthorImage = hit.bneAuthorImage ? `<div class="author-img-wrapper"><img loading="lazy" class="author-img" src="${hit.bneAuthorImage}.thumb.48.48.png" alt="Image of Author"/></div>` : '';


                            return `<a onclick="searchResultClickAnalytic('${hit.bneTitle}',1)" href="${hit.bnePagePath}" ${target} ${bindEvent('click', hit, 'Search Results: All Tab Blog Click')} data-query-ID="${hit.__queryID}">
                                ${bneImage}
                                <div class="content-padding">
                                    <div class="info">
                                        ${blogName}
                                        <div class="date">${hit.bneDate}</div>
                                    </div>
                                    <div class="title title-text">${instantsearch.highlight({ "attribute": "bneTitle", "highlightedTagName": "mark", "hit": hit})}</div>
                                    ${content}
                                    <div class="flex-row left">
                                        ${bneAuthorImage}
                                        <div class="author-name">${hit.bneAuthorNm}</div>
                                    </div>
                                </div>
                            </a>`;
                        },
                        empty: 'No blog results{{#query}} for "{{query}}"{{/query}}'
                    }
                })
            ])
        ])
    },
    pentair_resources: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets
            .index({ indexName: indexName })
            .addWidgets([
                instantsearch.widgets.stats({
                    container: containerElem.parent().find('.results-count')[0],
                    templates: {
                        text: '{{#hasOneResult}}1 result{{/hasOneResult}}{{#hasManyResults}}{{nbHits}} results{{/hasManyResults}}'
                    }
                }),
                instantsearch.widgets.configure({
                    clickAnalytics: true,
                    hitsPerPage: 4
                }),
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function(hit, bindEvent) {
                            return `<a onclick="searchResultClickAnalytic('${hit.title}', 1)" href="${hit.path}#page=${hit.page + 1})" ${bindEvent('click', hit, 'Search Results: All Tab Resource Click')} data-query-ID="${hit.__queryID}">
                                    <div class="content-padding">
                                        <div class="title title-text">${instantsearch.highlight({ attribute: 'title', hit: hit, highlightedTagName: 'mark' })}</div>
                                        <div class="content">${instantsearch.snippet({ attribute: 'content', hit: hit, highlightedTagName: 'mark' })}</div>
                                    </div>
                                </a>`;
                        },
                        empty: 'No resource results{{#query}} for "{{query}}"{{/query}}'
                    }
                })
            ])
        ])
    }
};

// Contains methods that define how search results appear in other (not 'all') search tabs for each index.
PENTAIR.AlgoliaTabSearchWidgets = {
    pentair_pages: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 results/page', value: 12, default: true },
                    { label: '24 results/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No page results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                        '{{#hasOneResult}}1 page result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                        '{{#hasManyResults}}{{nbHits}} page results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    },
                }
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.url);
                        const breadcrumb = ((hit.breadcrumb && hit.breadcrumb.trim()) ? hit.breadcrumb.trim() : '');
                        let hitContent = '';
                        if (hit.content) {
                            hitContent = `<div class="content"> ${instantsearch.snippet({ attribute: "content", hit: hit, highlightedTagName: "mark" })} </div>`;
                        }
                        return `${breadcrumb}
                                <a onclick="searchResultClickAnalytic('${hit.title}', '${search.helper.state.page + 1}')"
                                    href="${hit.url}"
                                    ${$target}
                                    ${bindEvent('click', hit, 'Search Results: Page Tab Page Click')}
                                    data-query-ID="${hit.__queryID}">
                                    <div class="title-text">${instantsearch.highlight({
                                            attribute: "title",
                                            hit: hit,
                                            highlightedTagName: "mark"
                                        })}
                                    </div>
                                    ${hitContent}
                                </a>`;
                    },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        search.addWidgets([
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: $('#searchFilterModal [data-index=' + indexName + '] .hits-per-page')[0],
                items: [{ label: '12 results/page', value: 12, default: true },
                    { label: '24 results/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: $('#searchFilterModal [data-index=' + indexName + '] .sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            instantsearch.widgets.dynamicWidgets({
                container: window.matchMedia('(max-width: 767px)').matches ? $('#searchFilterModal .dynamic-widgets-for-pages-filters')[0] : $('.dynamic-widgets-for-pages-filters')[0],
                widgets: [
                    container =>
                        PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Depth', 'depth')({
                            container,
                            attribute: 'depth',
                        }),
                ],
            })
        ]);
    },
    pentair_products: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            PENTAIR.CustomAlgoliaWidgets.clearRefinements()({
                container: containerElem.find('.filters .clear-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.currentRefinements()({
                container: containerElem.find('.filters .current-refinements')[0]
            }),
            instantsearch.widgets.dynamicWidgets({
                container: window.matchMedia('(max-width: 767px)').matches ? $('#searchFilterModal .dynamic-widgets')[0] : $('.dynamic-widgets')[0],
                widgets: [
                    container =>
                        PENTAIR.CustomAlgoliaWidgets.dynamicHierarchicalMenu()({
                            container: container,
                            limit: 20,
                            cssClasses: {
                                root: 'categories'
                            },
                            sortBy: ['count:desc'],
                            attributes: [
                                'categories.lvl0',
                                'categories.lvl1'
                            ]
                        }),
                    container =>
                        PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Product Type', 'channel')({
                            container,
                            attribute: 'channel',
                            templates: {
                                item: function(item) {
                                    var splitLabel = item.label.split(",")[1],
                                        slugLbl = String(splitLabel+"_products").toLowerCase().replace(/ /g,"_");
                                    return '<label for="'+slugLbl+'">' +
                                        '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                                        '<span>' + splitLabel + '</span>'+
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'
                                }
                            }
                        }),
                    container =>
                        PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Brands', 'brands')({
                            container,
                            attribute: 'brands',
                            showMore: true,
                            showMoreLimit: 100,
                            templates: {
                                showMoreText: '{{#isShowingMore}}Show less{{/isShowingMore}}{{^isShowingMore}}Show more{{/isShowingMore}}',
                                item: function(item) {
                                    var splitLabel = item.label.split(",")[1],
                                        slugLbl = String(splitLabel+"_products").toLowerCase().replace(/ /g,"_");
                                    return '<label for="'+slugLbl+'">' +
                                        '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                                        '<span>' + splitLabel + '</span>'+
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'
                                }
                            }
                        }),
                ],
            }),
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 products/page', value: 12, default: true },
                    { label: '24 products/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No product results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                '{{#hasOneResult}}1 product result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                '{{#hasManyResults}}{{nbHits}} product results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    },
                }
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.url);
                        var productRating = hit.productRating ? ($('<span class="rating"></span>').text(hit.productRating)[0].outerHTML) : '';
                        var stars = $('<span class="stars"></span>').text(hit.productRating);
                        stars = stars.stars();
                        stars = hit.productRating ? stars[0].outerHTML : '';
                        var ratingHtml = ((productRating && stars) ? ('<div class="ratings-container">' + stars + productRating + '</div>') : '');
                        return '<a onclick="searchResultClickAnalytic(' + '\'' + (hit.productName || hit.title) + '\',' + (search.helper.state.page + 1) + ')" href="' + hit.url + '?queryID='+ hit.__queryID +'&objectID='+ hit.objectID +'&indexName='+ indexName +'" aria-label="Link to ' + (hit.productName || hit.title) + '" ' + bindEvent('click', hit, 'Search Results: Product Tab Product Click') + $target + 'data-query-ID="' + hit.__queryID + '"' + '>'
                        + '<div class="top-image contain">' + (hit.productThumbnail ? ('<img loading="lazy" src="' + hit.productThumbnail + '.thumb.319.319.png" alt="Product Image"/>') : ('<img loading="lazy" src="/content/dam/extranet/product-related/product-photo/Placeholder Image.png.thumb.319.319.png" alt="Product Image"/>')) + '</div>'
                        + '<div class="title title-text">' + (instantsearch.snippet({ "attribute": "productName", "highlightedTagName": "mark", "hit": hit }) || instantsearch.snippet({ "attribute": "title", "highlightedTagName": "mark", "hit": hit })) + '</div>'
                        + ratingHtml + (hit.discontinueBanner == "true" ? '<div class="ribbon ribbon-top-left"><span>Discontinued</span></div>' : '') + '</a>';
                    },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        // For filter modal
        search.addWidgets([
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: $('#searchFilterModal [data-index=' + indexName + '] .hits-per-page')[0],
                items: [{ label: '12 products/page', value: 12, default: true },
                    { label: '24 products/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: $('#searchFilterModal [data-index=' + indexName + '] .sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            })
        ]);
    },
    pentair_news: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            PENTAIR.CustomAlgoliaWidgets.clearRefinements()({
                container: containerElem.find('.filters .clear-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.currentRefinements()({
                container: containerElem.find('.filters .current-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
                container: containerElem.find('.filters .categories')[0],
                limit: 5,
                sortBy: ['count:desc'],
                attributes: ['categoryTitles']
            }),
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 news articles/page', value: 12, default: true },
                    { label: '24 news articles/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ],
                attributes: ['attri-butt']
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Author', 'authorName')({
                container: containerElem.find('.filters .authors')[0],
                attribute: 'authorName',
                templates: {
                    item: function(item) {
                        slugLbl = String(item.label+"_news").toLowerCase().replace(/ /g,"_");
                        return '<label for="'+slugLbl+'">' +
                        '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
             PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'dateFilter')({
                container: containerElem.find('.filters .date')[0],
                attribute: 'dateFilter',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_news").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('News Type', 'type')({
                container: containerElem.find('.filters .type')[0],
                attribute: 'type',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1];
                        var slugLbl = String(splitLabel+"_news_type").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No news results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                '{{#hasOneResult}}1 news result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                '{{#hasManyResults}}{{nbHits}} news results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    },
                }
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.pagePath);
                        return '<a onclick="searchResultClickAnalytic(' + '\'' + hit.title + '\',\'' + (search.helper.state.page + 1) + '\')" href="' + hit.pagePath + '.html' + '" ' + $target + bindEvent('click', hit, 'Search Results: News Tab Article Click') + '" data-query-ID="' + hit.__queryID + '"' + '>' +
                            '<div class="content-padding">' +
                            '<div class="info">' +
                                '<div class="date">' + hit.displayDate + '</div>' +
                            '</div>' +
                            '<div class="title title-text">' + instantsearch.highlight({ "attribute": "title", "highlightedTagName": "mark", "hit": hit }) + '</div>' +
                            (hit.content ? ('<div class="content">' + instantsearch.snippet({ "attribute": "content", "highlightedTagName": "mark", "hit": hit }) + '</div>') : '') +
                            '</div>' +
                            '</a>'
                    },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        search.addWidgets([
            PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .categories')[0],
                limit: 5,
                sortBy: ['count:desc'],
                attributes: ['categoryTitles']
            }),
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: $('#searchFilterModal [data-index=' + indexName + '] .hits-per-page')[0],
                items: [{ label: '12 news articles/page', value: 12, default: true },
                    { label: '24 news articles/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: $('#searchFilterModal [data-index=' + indexName + '] .sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Author', 'authorName')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .authors')[0],
                attribute: 'authorName',
                templates: {
                    item: function(item) {
                        slugLbl = String(item.label+"_news_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'dateFilter')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .date')[0],
                attribute: 'dateFilter',
                templates: {
                    item: function(item) {
                        slugLbl = String(item.label+"_news_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('News Type', 'type')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .type')[0],
                attribute: 'type',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1];
                        var slugLbl = String(splitLabel+"_news_type_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
        ]);
    },
    pentair_events: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 events/page', value: 12, default: true },
                    { label: '24 events/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.clearRefinements()({
                container: containerElem.find('.filters .clear-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.currentRefinements()({
                container: containerElem.find('.filters .current-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
                container: containerElem.find('.filters .categories')[0],
                limit: 5,
                sortBy: ['count:desc'],
                attributes: [
                    'eventCategories'
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'bneDateFacet')({
                container: containerElem.find('.filters .date')[0],
                attribute: 'bneDateFacet',
                templates: {
                    item: function(item) {
                        slugLbl = String(item.label+"_event").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Region', 'region')({
                container: containerElem.find('.filters .region')[0],
                attribute: 'region',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1],
                            slugLbl = String(splitLabel+"_event").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Brands', 'brands')({
                container: containerElem.find('.filters .brands')[0],
                attribute: 'brands',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1],
                            slugLbl = String(splitLabel+"_event").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Event Type', 'type')({
                container: containerElem.find('.filters .event-type')[0],
                attribute: 'type',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1],
                            slugLbl = String(splitLabel+"_event_type").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No events results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                '{{#hasOneResult}}1 events result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                '{{#hasManyResults}}{{nbHits}} events results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    },
                }
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.eventPagePath);
                        return '<a onclick="searchResultClickAnalytic(' + '\'' + hit.eventTitle + '\',\'' + (search.helper.state.page + 1) + '\')" href="' + hit.eventPagePath + '" ' + $target + bindEvent('click', hit, 'Search Results: Event Tab Event Click') + '" data-query-ID="' + hit.__queryID + '"' + '>' +
                            '<div class="content-padding">' +
                            '<div class="top">' +
                            '<div class="event-date title-text">' + hit.prettyDateRange + '</div>' +
                            '<div class="info">' +
                            '<div>' + hit.eventLocation + '</div>' +
                            '</div>' +
                            '</div>' +
                            '<div class="bottom">' +
                            '<div class="title title-text">' + instantsearch.highlight({ "attribute": "eventTitle", "highlightedTagName": "mark", "hit": hit }) + '</div>' +
                            (hit.eventDescription ? ('<div class="content">' + instantsearch.snippet({ "attribute": "eventDescription", "highlightedTagName": "mark", "hit": hit }) + '</div>') : '') +
                            '</div>' +
                            '</div>' +
                            '</a>';
                    },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        search.addWidgets([
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: $('#searchFilterModal [data-index=' + indexName + '] .hits-per-page')[0],
                items: [{ label: '12 events/page', value: 12, default: true },
                    { label: '24 events/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: $('#searchFilterModal [data-index=' + indexName + '] .sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .categories')[0],
                limit: 5,
                sortBy: ['count:desc'],
                attributes: [
                    'eventCategories'
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'bneDateFacet')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .date')[0],
                attribute: 'bneDateFacet',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_event_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Region', 'region')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .region')[0],
                attribute: 'region',
                templates: {
                    item: function(item) {
                        var eventRegion = item.label.split("|")[1];
                            slugLbl = String(eventRegion+"_event_region_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + eventRegion + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Brands', 'brands')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .brands')[0],
                attribute: 'brands',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1];
                            slugLbl = String(splitLabel+"_brands_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Event Type', 'type')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .event-type')[0],
                attribute: 'type',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1];
                            slugLbl = String(splitLabel+"_type_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
    },
    pentair_blog: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No blog results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                '{{#hasOneResult}}1 blog result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                '{{#hasManyResults}}{{nbHits}} blog results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.clearRefinements()({
                container: containerElem.find('.filters .clear-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.currentRefinements()({
                container: containerElem.find('.filters .current-refinements')[0]
            }),
            // PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
            //     container: containerElem.find('.filters .categories')[0],
            //     limit: 5,
            //     sortBy: ['count:desc'],
            //     attributes: ['categories']
            // }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Categories', 'categoriesTitles')({
              container: containerElem.find('.filter-container.category')[0],
              attribute: 'categoriesTitles',
              templates: {
                item: function(item) {
                    var slugLbl = String(item.label+"_blog").toLowerCase().replace(/ /g,"_");

                    return '<label for="'+slugLbl+'">' +
                        '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                        '<span>' + item.label + '</span>'+
                        '<span class="item-count">' + item.count + '</span>' +
                        '<span class="sr-only">Filter</span>' +
                    '</label>'
                }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Authors', 'bneAuthorNm')({
                container: containerElem.find('.filter-container.authors')[0],
                attribute: 'bneAuthorNm',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_blog").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Blog Type', 'type')({
                container: containerElem.find('.filter-container.type')[0],
                attribute: 'type',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1];
                        var slugLbl = String(splitLabel+"_blog_type").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'filterDate')({
                container: containerElem.find('.filter-container.date')[0],
                attribute: 'filterDate',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_blog").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    },
                }
            }),
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 blogs/page', value: 12, default: true },
                    { label: '24 blogs/page', value: 24 }
                ],
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        // Add target attr if site is mypentair
                        const target = PENTAIR.AlgoliaHelpers.getTarget(hit.bnePagePath);
                        const bneImage = hit.bneImgPath ? `<div class="top-image cover"><img loading="lazy" src="${hit.bneImgPath}.thumb.319.319.png" alt="Article Image"/></div>` : '';
                        const blogName = hit.blogName ? `<div>${hit.blogName}</div>` : '';
                        const content = hit.content ? `<div class="content">${instantsearch.snippet({ "attribute": "content", "highlightedTagName": "mark", "hit": hit})}</div>` : '';
                        const bneAuthorImage = hit.bneAuthorImage ? `<div class="author-img-wrapper"><img loading="lazy" class="author-img" src="${hit.bneAuthorImage}.thumb.48.48.png" alt="Image of Author"/></div>` : '';

                        return `<a onclick="searchResultClickAnalytic('${hit.bneTitle}','${search.helper.state.page + 1}')" href="${hit.bnePagePath}" ${target} ${bindEvent('click', hit, 'Search Results: Blog Tab Blog Article Click')} data-query-ID="${hit.__queryID}">
                                    ${bneImage}
                                    <div class="content-padding">
                                        <div class="info">
                                            ${blogName}
                                            <div class="date">${hit.bneDate}</div>
                                        </div>
                                        <div class="title title-text">${instantsearch.highlight({ "attribute": "bneTitle", "highlightedTagName": "mark", "hit": hit})}</div>
                                        ${content}
                                        <div class="flex-row left">
                                            ${bneAuthorImage}
                                            <div class="author-name">${hit.bneAuthorNm}</div>
                                        </div>
                                    </div>
                                </a>`;
                    },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        search.addWidgets([
            // PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
            //     container: $('#searchFilterModal [data-index=' + indexName + '] .filters .categories')[0],
            //     limit: 5,
            //     sortBy: ['count:desc'],
            //     attributes: ['categories']
            // }),
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: $('#searchFilterModal [data-index=' + indexName + '] .hits-per-page')[0],
                items: [{ label: '12 blogs/page', value: 12, default: true },
                    { label: '24 blogs/page', value: 24 }
                ],
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Categories', 'categoriesTitles')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filter-container.category')[0],
                attribute: 'categoriesTitles',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_categories_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Author', 'bneAuthorNm')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filter-container.authors')[0],
                attribute: 'bneAuthorNm',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_author_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'filterDate')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filter-container.date')[0],
                attribute: 'filterDate',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_date_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Blog Type', 'type')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filter-container.type')[0],
                attribute: 'type',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1];
                        var slugLbl = String(splitLabel+"_blog_type_modal").toLowerCase().replace(/ /g,"_");

                        return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                        '<label for="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
        ]);

    },
    pentair_resources: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 resources/page', value: 12, default: true },
                    { label: '24 resources/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No resource results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                '{{#hasOneResult}}1 resource result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                '{{#hasManyResults}}{{nbHits}} resource results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    }
                }
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        var target = PENTAIR.AlgoliaHelpers.getTarget(hit.path);
                        return `<a onclick="searchResultClickAnalytic('${hit.title}','${search.helper.state.page + 1}')" href="${hit.path + '#page=' + (hit.page + 1)}" ${target} ${bindEvent('click', hit, 'Search Results: Resource Tab Resource Click')} data-query-ID="${hit.__queryID}">
                                <div class="content-padding">
                                    <div class="title title-text">${instantsearch.highlight({ attribute: 'title', hit: hit, highlightedTagName: 'mark' })}</div>
                                    <div class="content">${instantsearch.snippet({ attribute: 'content', hit: hit, highlightedTagName: 'mark' })}</div>
                                </div>
                            </a>`
                        },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        search.addWidgets([
            instantsearch.widgets.hitsPerPage({
                attribute: "hpp",
                container: $('#searchFilterModal [data-index=' + indexName + '] .hits-per-page')[0],
                items: [{ label: '12 resources/page', value: 12, default: true },
                    { label: '24 resources/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: $('#searchFilterModal [data-index=' + indexName + '] .sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
        ]);
    },
    mypentair_news: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            PENTAIR.CustomAlgoliaWidgets.clearRefinements()({
                container: containerElem.find('.filters .clear-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.currentRefinements()({
                container: containerElem.find('.filters .current-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
                container: containerElem.find('.filters .categories')[0],
                limit: 5,
                sortBy: ['count:desc'],
                attributes: ['categoryTitles']
            }),
            instantsearch.widgets.hitsPerPage({
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 news articles/page', value: 12, default: true },
                    { label: '24 news articles/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'dateFilter')({
                container: containerElem.find('.filters .date')[0],
                attribute: 'dateFilter',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_date").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('News Type', 'type')({
                container: containerElem.find('.filters .type')[0],
                attribute: 'type',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1];
                        var slugLbl = String(splitLabel+"_news_type").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No news results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                '{{#hasOneResult}}1 news result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                '{{#hasManyResults}}{{nbHits}} news results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    },
                }
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.pagePath);
                        return '<a onclick="searchResultClickAnalytic(' + '\'' + hit.title + '\',\'' + (search.helper.state.page + 1) + '\')" href="' + hit.pagePath + '.html' + '" ' + $target + bindEvent('click', hit, 'Search Results: News Tab Article Click') + '" data-query-ID="' + hit.__queryID + '"' + '>' +
                            '<div class="content-padding">' +
                            '<div class="info">' +
                                '<div class="date">' + hit.displayDate + '</div>' +
                            '</div>' +
                            '<div class="title title-text">' + instantsearch.highlight({ "attribute": "title", "highlightedTagName": "mark", "hit": hit }) + '</div>' +
                            (hit.content ? ('<div class="content">' + instantsearch.snippet({ "attribute": "content", "highlightedTagName": "mark", "hit": hit }) + '</div>') : '') +
                            '</div>' +
                            '</a>'
                    },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: '#searchComponent'
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: '#searchComponent'
                }),
            ])
        }
        search.addWidgets([
            PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .categories')[0],
                limit: 5,
                sortBy: ['count:desc'],
                attributes: ['categoryTitles']
            }),
            instantsearch.widgets.hitsPerPage({
                container: $('#searchFilterModal [data-index=' + indexName + '] .hits-per-page')[0],
                items: [{ label: '12 news articles/page', value: 12, default: true },
                    { label: '24 news articles/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: $('#searchFilterModal [data-index=' + indexName + '] .sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'dateFilter')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .date')[0],
                attribute: 'dateFilter',
                templates: {
                    item: function(item) {
                        var slugLbl = String(item.label+"_date_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('News Type', 'type')({
                container: $('#searchFilterModal [data-index=' + indexName + '] .filters .type')[0],
                attribute: 'type',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split("|")[1];
                        var slugLbl = String(splitLabel+"_news_type_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            })
        ]);
    },
    mypentair_pages: function(search, indexName, containerElem) {
        search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            instantsearch.widgets.hitsPerPage({
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 results/page', value: 12, default: true },
                    { label: '24 results/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No page results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                        '{{#hasOneResult}}1 page result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                        '{{#hasManyResults}}{{nbHits}} page results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    },
                }
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        var html = ((hit.breadcrumb && hit.breadcrumb.trim()) ? hit.breadcrumb.trim() : '') +
                            '<a onclick="searchResultClickAnalytic(' + '\'' + hit.title + '\',\'' + (search.helper.state.page + 1) + '\')" href="' + hit.url + '" ' + bindEvent('click', hit, 'Search Results: Page Tab Page Click') + '" data-query-ID="' + hit.__queryID + '"' + '>' +
                            '<div class="title-text">' + instantsearch.highlight({ attribute: "title", hit: hit, highlightedTagName: "mark" }) + '</div>' +
                            (hit.content ? ('<div class="content">' + instantsearch.snippet({ attribute: "content", hit: hit, highlightedTagName: "mark" }) + '</div>') : '') +
                            '</a>';
                        return html;
                    },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()
        ]);
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: '#searchComponent'
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: '#searchComponent'
                }),
            ])
        }
        search.addWidgets([
            instantsearch.widgets.hitsPerPage({
                container: $('#searchFilterModal [data-index=' + indexName + '] .hits-per-page')[0],
                items: [{ label: '12 results/page', value: 12, default: true },
                    { label: '24 results/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: $('#searchFilterModal [data-index=' + indexName + '] .sorting')[0],
                items: [
                    { value: indexName, label: 'Sort by Relevance' },
                    { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
                    { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
                ]
            })
        ]);
    }
};

PENTAIR.CustomAlgoliaWidgets = {
    accordionFilterPanel: function(accordionTitle, facetAttribute){    // Used for filters
        return instantsearch.widgets.panel({
          hidden: function (search) {
              return !search.results.disjunctiveFacets.filter(function(item){return item.name == facetAttribute}).length;
          },
          templates: {
            header: '<span data-filter-attribute="' + facetAttribute + '" data-filter-title="' + accordionTitle + '">' + accordionTitle + '</span>'
          }
        })(instantsearch.widgets.refinementList);
    },
    dynamicAccordionFilterPanel: function(accordionTitle, facetAttribute){    // Used for dynamic widget
        let rootClasses = ['algolia-accordion-panel'];
        if (!window.matchMedia('(max-width: 767px)').matches) {
            rootClasses.push('open');
        }
        return instantsearch.widgets.panel({
          hidden: function (search) {
              return !search.results.disjunctiveFacets.filter(function(item){return item.name == facetAttribute}).length;
          },
          cssClasses: {
              root: rootClasses
          },
          templates: {
            header: '<span data-filter-attribute="' + facetAttribute + '" data-filter-title="' + accordionTitle + '">' + accordionTitle + '</span>'
          }
        })(instantsearch.widgets.refinementList);
    },
    ratingFilterPanel: function(ratingTitle, facetAttribute){    // Used for filters
        return instantsearch.widgets.panel({
            hidden: function (search) {
                return !search.results.disjunctiveFacets.filter(function(item){return item.name == facetAttribute}).length;
            },
            templates: {
                header: '<span data-filter-attribute="' + facetAttribute + '" data-filter-title="' + ratingTitle + '">' + ratingTitle + '</span>'
            }
        })(instantsearch.widgets.ratingMenu);
    },
    clearRefinements: function(hiddenAttributes) {
        var hiddenAttributes = hiddenAttributes || [];  // List of attibutes to ignore for rendering. Used for product grid to hide prefilters.

        const renderClearRefinements = function(renderOptions, isFirstRender) {

            if (isFirstRender) {
                const label = document.createElement('label');
                const anchor = $('<a href="#">Clear all</a>');
                label.textContent = 'Filtered by:'

                anchor.on('click', function(){
                    renderOptions.refine();
                    return false;
                });

                renderOptions.widgetParams.container.appendChild(label);
                $(renderOptions.widgetParams.container).append(anchor);
            }
            let disjunctiveFacetsRefinements = renderOptions.instantSearchInstance.helper &&
                                    renderOptions.instantSearchInstance.helper.state.disjunctiveFacetsRefinements;
            let hierarchicalFacetsRefinements = renderOptions.instantSearchInstance.helper &&
                                    renderOptions.instantSearchInstance.helper.state.hierarchicalFacetsRefinements;
            let currentRefinements = {...disjunctiveFacetsRefinements, ...hierarchicalFacetsRefinements};
            var hasOnlyHiddenRefinements = (hiddenAttributes.length > 0) && currentRefinements &&
                _.keys(currentRefinements)
                .filter(function(elem){ return currentRefinements[elem].length && (hiddenAttributes.indexOf(elem) == -1)}).length == 0;

            $(renderOptions.widgetParams.container).parent().removeClass('hidden').addClass((!renderOptions.hasRefinements || hasOnlyHiddenRefinements) ? 'hidden' : '');
        };

        return instantsearch.connectors.connectClearRefinements(
            renderClearRefinements
        );
    },
    currentRefinements: function(hiddenAttributes) {
        var hiddenAttributes = hiddenAttributes || [];  // List of attibutes to ignore for rendering. Used for product grid to hide prefilters.

        // Create the render function
        const createDataAttributes = function(refinement){
            return Object.keys(refinement)
                        .map(function(key){return 'data-' + key + '="' + refinement[key] + '"'})
                        .join(' ')
        };

        var getSplitLabel = function(label, attribute){
            var splitLabels = ['brands','channel','type','region','applications'];
            if(splitLabels.indexOf(attribute) != -1){
                return label.split(",")[1] || label.split("|")[1];
            } else {
                return label;
            }
        };

        const renderListItem = function(item){
            return item.refinements.map(
              function(refinement){
                return '<li>' +
                            '<button ' + (createDataAttributes(refinement)) + '></button>' +
                            getSplitLabel(refinement.label, refinement.attribute) +
                        '</li>';
                }
            )
            .join('');
        };

        const renderCurrentRefinements = function(renderOptions, isFirstRender) {
            renderOptions.widgetParams.container.innerHTML = (renderOptions.items.length ? ('<ul>' +
                    renderOptions.items.filter(function(elem){
                        return (hiddenAttributes.indexOf(elem.attribute) == -1)
                    }).map(renderListItem).join('') + '</ul>') : '');

            $(renderOptions.widgetParams.container).find('button').each(function(index, element){
                element.addEventListener('click', function(event) {
                    const item = Object.keys(event.currentTarget.dataset).reduce(
                        function(acc, key) {
                            var newObj = {};
                            newObj[key] = event.currentTarget.dataset[key];
                            return $.extend(acc, newObj)
                        }, {});
                    renderOptions.refine(item);
                });
            });
        };

        // Create the custom widget
        return instantsearch.connectors.connectCurrentRefinements(
            renderCurrentRefinements
        );
    },
    dynamicAccordianWidgets: function(accordionWidgetOptions){
        var widgetFilters = [];
        accordionWidgetOptions.forEach(function(widgetOptions){
            var filterPanel = PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel(widgetOptions.name, widgetOptions.attribute)({
                container: widgetOptions.containerElem,
                attribute: widgetOptions.attribute,
                templates: {
                    item: function(item) {
                        var slugLbl = String(widgetOptions.prefix + widgetOptions.attribute + '_' + item.label).toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + item.label + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            })
            widgetFilters.push(filterPanel);
        });
        return widgetFilters;
    },
    hierarchicalMenu: function() {
        // Create the render function
        const renderList = function(renderOptions) {
          return '<ul>' +
            renderOptions.items.map( function(item){
                return '<li ' + (item.isRefined ? 'class="refined"' : '') + '>' +
                    '<a href="'+ renderOptions.createURL(item.value) + '" data-value="' + encodeURI(item.value) + '" style="font-weight: ' + (item.isRefined ? 'bold' : '') + '">' +
                        item.label + ' <span class="count">' + item.count + '</span>'+
                    '</a>' +
                    (item.data ? renderList({ items: item.data, createURL: renderOptions.createURL }) : '') +
                  '</li>'
              })
              .join('') +
          '</ul>'
        };

        const renderHierarchicalMenu = function (renderOptions, isFirstRender) {

            const {items, isShowingMore, toggleShowMore, createURL} = renderOptions;
            const container = renderOptions.widgetParams.container;

            if (isFirstRender) {
                const list = $('<label>Categories</label><div></div>');
                $(container).append(list);

                const button = document.createElement('button');
                button.addEventListener('click', () => {
                    toggleShowMore();
                });
                container.append(button);
            }

            const children = renderList({ items: items, createURL: createURL });

            container.querySelector('div').innerHTML = children;

            const showMoreButton = container.querySelector('button');
            if (items && (items.length < renderOptions.widgetParams.limit)) {
                showMoreButton.className = 'hidden';
            } else {
                showMoreButton.className = 'ais-RefinementList-showMore';
            }
            // TODO: this is the temporary fix to hide 'show more'. Remove after PAWMS-966 is completed
            showMoreButton.className = 'hidden';

            showMoreButton.textContent = isShowingMore
                ? 'Show less'
                : 'Show more';

            $(container).find('a').each(function(index, element){
                element.addEventListener('click', function(event) {
                    event.preventDefault();
                    renderOptions.refine(decodeURI($(event.target).closest('a')[0].dataset.value));
                });
            });

            $(container).find('ul').first().children('li').addClass('arrow');

            $(container).parent().removeClass('hidden');

            if (!items.length) {
                $(container).parent().addClass('hidden');
            }
        };

        // Create the custom widget
        return instantsearch.connectors.connectHierarchicalMenu(
            renderHierarchicalMenu
        );
    },
    dynamicHierarchicalMenu: function() {
        // Create the render function
        const renderList = function(renderOptions) {
            return '<div class="ais-Refinements ais-Refinements--showLess"><ul>' +
            renderOptions.items.map( function(item, index){
                const isExtraRefinement = index >= renderOptions.limit;
                return `<li class="${item.isRefined ? 'refined ' : ''} ${isExtraRefinement ? 'ais-Refinement-extra' : ''}">` +
                    '<a href="'+ renderOptions.createURL(item.value) + '" data-value="' + encodeURI(item.value) + '" style="font-weight: ' + (item.isRefined ? 'bold' : '') + '">' +
                        item.label + ' <span class="count">' + item.count + '</span>'+
                    '</a>' +
                    (item.data ? renderList({ items: item.data, createURL: renderOptions.createURL, limit: renderOptions.limit }) : '') +
                  '</li>'
              })
              .join('') +
            '</ul>' +
            `${
                renderOptions.items.length > renderOptions.limit
                  ? `<button class="ais-RefinementList-showMore ais-Refinement-toggle">Show More</button>`
                  : ''
            }
            </div>`
        };

        const renderHierarchicalMenu = function (renderOptions, isFirstRender) {

            const {items, createURL} = renderOptions;
            const container = renderOptions.widgetParams.container;

            if (isFirstRender) {
                const list = $('<label>Categories</label><div></div>');
                $(container).append(list);

                const cssClasses = renderOptions.widgetParams.cssClasses;
                if (cssClasses && cssClasses.root) {
                    $(container).addClass(cssClasses.root);
                }
            }

            // The limit is the number of items to display when showing less
            const children = renderList({ items: items, createURL: createURL, limit : 5 });

            container.querySelector('div').innerHTML = children;

            $(container).find('a').each(function(index, element){
                element.addEventListener('click', function(event) {
                    event.preventDefault();
                    renderOptions.refine(decodeURI($(event.target).closest('a')[0].dataset.value));
                });
            });

            $(container).find('ul').first().children('li').addClass('arrow');

            $(container).parent().removeClass('hidden');

            if (!items.length) {
                $(container).parent().addClass('hidden');
            }

            [
                ...renderOptions.widgetParams.container.querySelectorAll('.ais-Refinement-toggle'),
            ].forEach((element) => {
                element.addEventListener('click', () => {
                    element
                        .closest('.ais-Refinements')
                        .classList.toggle('ais-Refinements--showLess');
                    element.textContent === 'Show More' ? element.textContent = 'Show Less' : element.textContent = 'Show More';
                });
            });
        };

        // Create the custom widget
        return instantsearch.connectors.connectHierarchicalMenu(
            renderHierarchicalMenu
        );
    },
    virtualSearchBox: function(){ return instantsearch.connectors.connectSearchBox(function(){return null;})();},
    virtualRefinementList: function(options){ return instantsearch.connectors.connectRefinementList(function(){return null;})(options);}
};

PENTAIR.AlgoliaHelpers = {
    initResizeCarouselHeightEvent: function(containerElem) {
        containerElem.on('change', function() {
            setTimeout(function() {
                containerElem.parents('.tab-search-content').trigger('refresh.owl.carousel');
            }, 250);
        });
    },
    getTarget: function(url){
        var testLink = $('<a href=\"' + url + '\"></a>');
        var openInNewWindow = !((testLink[0].protocol === window.location.protocol) && (testLink[0].host === window.location.host));
        return openInNewWindow ? " target=\"_blank\" " : "";
    }
};

// jquery helper to render the ratings
$(function() {
    $.fn.stars = function() {
        return $(this).each(function() {
            var val = parseFloat($(this).html());
            var size = Math.max(0, (Math.min(5, val))) * 18;
            var $span = $('<span />').width(size);
            $(this).html($span);
        });
    }
    setTimeout(function() {
        $('select').each(function(i, el) {
            if($(el).hasClass('ais-HitsPerPage-select') === true) {
                $(el).attr('aria-label', 'Hits per page')
            }
            if($(el).hasClass('ais-SortBy-select') === true) {
                $(el).attr('aria-label', 'Sort By')
            }
        });
        $('[id]').each(function(i, el) {
            var idz = $("[id='"+this.id+"']");
            if(idz.length > 1) {
                for(var i = 0; i <= idz.length; i++) {
                    var id = $(idz).eq(i).attr('id');
                    $(idz).eq(i).attr('id', id+"_"+i);
                }
                return;
            }
        });
    }, 1250);
})

$(function(){
  ko.bindingHandlers.focusIn = {
    init: function(element, valueAccessor) {
        $(element).on('focusin', function() {
            var value = valueAccessor();
            value(true);
        });
        $(element).on('focusout', function() {
            var value = valueAccessor();
            value(false);
        });
    },
    update: function(element, valueAccessor) {
        var value = valueAccessor();
        if(value() == false){
          $(element).focusout();
        }
        // This binding is one-way.
    }
  };

  ko.bindingHandlers.captureEvent = {
    init: function (element, valueAccessor) {
        var arg = valueAccessor();
        for (var eventName in arg) {
            element.addEventListener(eventName, arg[eventName], true);
        }
    }
  };

});

var SearchViewModel = function(componentElement) {
    var self = this;

    self.userToken = HeaderUtil.getCloudVisitorId();
    self.applicationId = componentElement.data('applicationId');

    self.searchApiKey = componentElement.data('searchApiKey');
    self.indexEnvironment = componentElement.data('indexEnvironment');
    self.tabIndexes = ko.observableArray(componentElement.data('tabIndexes'));
    self.searchClient = algoliasearch(self.applicationId, self.searchApiKey);
    self.dropdownSearchObjects = {
      productSuggestions: null,
      categorySuggestions: null,
      querySuggestions: null,
      popularPages: null
    };
    self.allTabSearch = null;
    self.tabSearchObjects = [];
    self.inputSearchQuery = ko.observable(getParams().q ? decodeURIComponent(getParams().q).replace(/\+/g, ' ') : ''); // Note: This binding is one-way since its rendered from algolia.

    self.suggestionCount = ko.observable(0);
    self.pagesCount = ko.observable(0);
    self.categoriesCount = ko.observable(0);
    self.searchBoxFocus = ko.observable(false);
    self.showDropdown = ko.computed(function(){
      return !($('.pentair').length) && self.searchBoxFocus();
    }).extend({ rateLimit: 50 });
    self.currentTab = ko.observable();

    self.totals = ko.observable({});
    self.allTotal = ko.computed(function(){
      return _.reduce(self.totals(), function(last, current){return last+current}, 0);
    }).extend({ rateLimit: 150 });

    self.instantsearchWidgets = {};

    self.isMobile = ko.observable(window.matchMedia('(max-width: 767px)').matches);
    self.isFilterOpen = ko.observable(!self.isMobile()); // true for desktop

    self.filterIndex = ko.observable('');

    // URL param names used for algolia search component
    self.algoliaURLParams = ["perPage", "index", "tab", "q"];
    // URL params suffixes used to identify algolia search refinements
    self.algoliaURLParamIdentifiers = [".disjunctive", ".hierarchical"];

    var queryIDList = [];

    // Analytics setup
    var insightsMiddleware = instantsearch.middlewares.createInsightsMiddleware({
      insightsClient: window.aa
    });

    if(self.userToken){
      aa('setUserToken', self.userToken);
    }

    self.paramsFromCurrentState = function(){
      var refinements = {};
      var paramRefinements = {};
      var currentTabResults = {};

      if(self.currentTab() && self.currentTab() != 'all' && self.instantsearchWidgets[self.currentTab()] && self.instantsearchWidgets[self.currentTab()].helper && self.instantsearchWidgets[self.currentTab()].helper.lastResults){
        currentTabResults = self.instantsearchWidgets[self.currentTab()].helper.lastResults;
        refinements = currentTabResults.getRefinements();
      }

      paramRefinements =  _.chain(refinements).groupBy(function (entity) {
            return entity.attributeName;
        })
        .map(function (vals, key) {
            return [key + '.' + vals[0].type, _.pluck(vals, 'name').join(';')]
        })
        .object()
        .value();

      if(currentTabResults){
        var otherOptions = {
          page: (currentTabResults.page > 0) ? (currentTabResults.page + 1) : null,  // Only pass if not page 1
          index: currentTabResults.index != self.currentTab() ? currentTabResults.index : null, // Only pass if sorted
          q: self.inputSearchQuery() ? self.inputSearchQuery() : null,
          perPage: currentTabResults.hitsPerPage != 12 ? currentTabResults.hitsPerPage : null,
          tab : self.currentTab() != 'all' ? self.currentTab() : null
        };

       otherOptions = _.chain(otherOptions).pairs().filter(function(elem){return !!elem[1]}).object().value()
        // page, sortby, per page
      }

      return $.extend(paramRefinements, otherOptions);
    };

    self.displayResultTotalByIndex = function (indexName) {
      if(indexName === 'all'){
        return ' (' + self.allTotal() + ')';
      }
      return self.totals()[indexName] ? ' (' + self.totals()[indexName] + ')' : ' (0)';
    };

    self.resultTotalByIndex = function (indexName) {
      if(indexName === 'all'){
        return self.allTotal();
      }
      return self.totals()[indexName] ? self.totals()[indexName] : '0';
    };

    self.hasResults = function (indexName) {
      if(indexName === 'all') {
        return !!self.allTotal();
      }
      return self.totals()[indexName] ? !!self.totals()[indexName] : false;
    };

    self.clearRefinements = function (indexName) {
      self.instantsearchWidgets[indexName].helper.clearRefinements();
      self.instantsearchWidgets[indexName].helper.search();
      return false;
    };

    self.setFilterIndex = function (indexName) {
      self.filterIndex(indexName);
    };

    self.filterClick = function (event) {
      var isFilterClick = $(event.target).closest('li.ais-RefinementList-item').length > 0;
      var isCategoryFilterClick = $(event.target).parents('.categories').length > 0;
      var debouncedUpdateAnalytics = _.debounce(updateAnalytics, 500);
      var isButtonClick = $(event.target).is('button');

      if(isFilterClick || isCategoryFilterClick){
        self.instantsearchWidgets[self.currentTab()].once('render', function(){
          debouncedUpdateAnalytics('refine', 'filter');
        });
      }

      if(isButtonClick){
        event.preventDefault();
      }

      return true;
    };

    // "Suggested Searches"
    self.dropdownSuggestionClick = function (context, event) {
      // PAAS - Adobe Analytics
      var searchTerm = self.inputSearchQuery();
      var linkClicked = event.target.closest('a');
      var suggestedSearchTerm = linkClicked ? linkClicked.textContent.trim() : '';
      var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
      trackSuggestedSearchClickPayload(searchTerm, suggestedSearchTerm, queryID, false);

      var captureElem = $(event.target).closest('a');
      componentElement.find('.search-box input').val(captureElem.data('query'));
      self.inputSearchQuery(decodeURIComponent(captureElem.data('query')));
      self.searchBoxFocus(false);
      self.doTabSearch();

      if(!!window._satellite){
        _satellite.track('query result click', {
            query: self.inputSearchQuery(),
            resultLink: 'Suggestion|' + (captureElem.closest('li').index()+1) + '|' + captureElem.text().trim()
        });
      }

      var eventObj = {
        userToken: self.userToken,
        eventName: 'Search Bar: Dropdown Query Suggestion Click',
        index: captureElem.closest('.suggestions').data('index'),
        objectIDs: [captureElem.data('query')],
        queryID:queryID,
        positions: captureElem.data('position') && [captureElem.data('position')]

      };

      var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

      if(hasRequired){
        aa('clickedObjectIDs', eventObj);
      }

      return false;
    }

    // "Product Type"
    self.dropdownChannelClick = function (context, event) {
      var captureElem = $(event.target).closest('a');
      var productIndex = $(event.target).closest('.channel').data('productTabIndex');

      // PAAS - Adobe Analytics
      var searchTerm = self.inputSearchQuery();
      var linkClicked = event.target.closest('a');
      var suggestedSearchTerm = linkClicked ? linkClicked.textContent.trim() : '';
      var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
      trackSuggestedSearchClickPayload(searchTerm, suggestedSearchTerm, queryID, false);

      componentElement.find('.tab-search-name .item' + '.' + productIndex).click();
      self.searchBoxFocus(false);
      var channel = $(event.target).closest('a').data('channel');
      self.instantsearchWidgets[productIndex].helper.clearRefinements();
      self.instantsearchWidgets[productIndex].helper.addDisjunctiveFacetRefinement('channel', channel);

      if(!!window._satellite){
        _satellite.track('query result click', {
            query: self.inputSearchQuery(),
            resultLink: "Product Type|"+(captureElem.closest('li').index()+1)+"|"+captureElem.text().trim()
        });
      }

      var eventObj = {
        userToken: self.userToken,
        eventName: 'Search Bar: Dropdown Product Type Click',
        index: productIndex,
        filters: ['channel:' + captureElem.data('channel')]
      };

      var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

      if(hasRequired){
        aa('clickedFilters', eventObj);
      }

      self.doTabSearch();
      return false;
    }

    // "Popular Categories"
    self.dropdownCategoryClick = function (context, event) {

      var captureElem = $(event.target).closest('a');
      var productIndex = $(event.target).closest('.categories').data('productTabIndex');
      var searchQuery = self.inputSearchQuery();

      // PAAS - Adobe Analytics
      var linkClicked = event.target.closest('a');
      var suggestedSearchTerm = linkClicked ? linkClicked.textContent.trim() : '';
      var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
      trackSuggestedSearchClickPayload(searchQuery, suggestedSearchTerm, queryID, false);

      componentElement.find('.tab-search-name .item' + '.' + productIndex).click();
      self.searchBoxFocus(false);
      self.inputSearchQuery('');
      $(componentElement).find('.search-input-wrap input').val('');
      var category = $(event.target).closest('a').data('category');
      self.instantsearchWidgets[productIndex].helper.clearRefinements();
      self.instantsearchWidgets[productIndex].helper.addHierarchicalFacetRefinement('categories.lvl0', category);

      if(!!window._satellite){
        _satellite.track('query result click', {
            query: searchQuery,
            resultLink: "Categories|"+(captureElem.closest('li').index()+1)+"|"+captureElem.data('category')
        });
      }

      var eventObj = {
        userToken: self.userToken,
        eventName: 'Search Bar: Dropdown Category Click',
        index: productIndex,
        filters: ['categories:' + captureElem.data('category')],
        queryID:  captureElem.data('queryId'),
        positions: captureElem.data('position') && [captureElem.data('position')]
      };

      var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

      if(hasRequired){
        aa('clickedFilters', eventObj);
      }

      self.doTabSearch();
      return false;
    }

    // "Popular Pages"
    self.dropdownSearchPopularPagesClick = function(context, event) {
      var captureElem = $(event.target).closest('a');
      if(!!window._satellite){
        _satellite.track('query result click', {
            query: self.inputSearchQuery(),
            resultLink: "Page Result|"+(captureElem.closest('li').index()+1)+"|"+captureElem.text().trim()
        });
      }

      var eventObj = {
        userToken: self.userToken,
        eventName: 'Search Bar: Dropdown Popular Pages Click',
        index: $(event.target).closest('.popular-pages').data('index'),
        objectIDs: captureElem.data('objectId') && [captureElem.data('objectId')],
        queryID:  captureElem.data('queryId'),
        positions: captureElem.data('position') && [captureElem.data('position')]
      };

      var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

      if(hasRequired){
        aa('clickedObjectIDs', eventObj);
      }

      // PAAS - Adobe Analytics
      var searchTerm = self.inputSearchQuery();
      var linkClicked = event.target.closest('a');
      var suggestedSearchResult = linkClicked ? linkClicked.textContent.trim() : '';
      var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
      trackSuggestedSearchClickPayload(searchTerm, suggestedSearchResult, queryID, true);

      return true;
    }

    // "Popular Products"
    self.dropdownSearchProductClick = function(context, event) {
      self.userToken = HeaderUtil.getCloudVisitorId();
      var captureElem = $(event.target).closest('a');
      if(!!window._satellite){
        _satellite.track('query result click', {
            query: self.inputSearchQuery(),
            resultLink: "Product Result|"+(captureElem.closest('li').index()+1)+"|"+captureElem.text().trim()
        });
      }

      var eventObj = {
        userToken: self.userToken,
        eventName: 'Search Bar: Dropdown Product Click',
        index: $(event.target).closest('.products').data('index'),
        objectIDs: captureElem.data('objectId') && [captureElem.data('objectId')],
        queryID:  captureElem.data('queryId'),
        positions: captureElem.data('position') && [captureElem.data('position')],
      };

      var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

      if(hasRequired){
        aa('clickedObjectIDs', eventObj);
      }

      // PAAS - Adobe Analytics
      var searchTerm = self.inputSearchQuery();
      var linkClicked = event.target.closest('a');
      var suggestedSearchResult = linkClicked ? linkClicked.textContent.trim() : '';
      var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
      trackSuggestedSearchClickPayload(searchTerm, suggestedSearchResult, queryID, true);

      return true;
    }

    self.dropdownSearchProductCountClick = function(context, event) {
      var captureElem = $(event.target).closest('a');
      var productIndex = $(event.target).closest('.products-count').data('productTabIndex');
      componentElement.find('.tab-search-name .item' + '.' + productIndex).click();
      self.searchBoxFocus(false);
      self.doTabSearch();
      return false;
    }

    self.inputEnter = function(context, event) {
      var captureElem = $(event.target).closest('input');
      if (event.which == 13) {
          $(event.target).focusout();
          _.values(self.instantsearchWidgets).forEach(function(search){
            search.helper.clearRefinements();
          });
          self.doTabSearch();
      }
      return true;
    }

    self.getTabName = function (indexName) {
      var index = self.tabIndexes().filter(function(index){return index.indexName === indexName});
      return index.length > 0 ? index[0]['tabName'] : '';
    }

    self.classFromIndex = function(indexName){
      return indexName.slice(indexName.indexOf('_') + 1) .replace('_', '-');
    };

    self.doTabSearch = function () {
      initRenderAnalyticsEvent()

      self.allTabSearch.helper.setQuery(self.inputSearchQuery());
      self.allTabSearch.helper.search();
      $(self.tabSearchObjects).each(function (index, algoliaSearch) {
        algoliaSearch.helper.setQuery(self.inputSearchQuery());
        algoliaSearch.helper.search();
      });

      self.searchBoxFocus(false);
      var tabCarousels = $('.search.component .tabs.component');
      var tabCarousel = tabCarousels.find('.tab-search-name.owl-carousel');
      var contentCarousel = tabCarousels.find('.tab-search-content.owl-carousel');
    };

    self.closeModal = function () {
      $(event.currentTarget).parents('figure').find('.icon-close').click()
    };

    function initRenderAnalyticsEvent(){
      var debouncedUpdateAnalytics = _.debounce(updateAnalytics, 500); // Ensures totals are set before this is triggered.

      if(self.currentTab() == 'all'){
        self.allTabSearch.once('render',function(){
          debouncedUpdateAnalytics('initial');
        });
      } else {
        self.instantsearchWidgets[self.currentTab()].once('render',function(){
          debouncedUpdateAnalytics('initial');
        });
      }
    };

    /**
     * Adds the click event handler to the dynamic accordian panel widgets.
     * @param filterContainer container for the filter widgets
     */
    function initDynamicWidgetAccordianPanel(filterContainer) {
        const dynamicWidgets = filterContainer.find('div[class*=ais-DynamicWidgets-widget]');
        if (dynamicWidgets.length > 0) {
            dynamicWidgets.each(function (index, elem) {
                let observer = new MutationObserver(function(mutations, observer) {
                    // Fired when a mutation occurs. In our case it is addition of dynamic widget content.
                    $(elem).find('[class*=algolia-accordion-panel]').on('click', function(clickEvent) {
                        self.openFilter('', clickEvent);
                    });
                    if (window.matchMedia('(max-width: 767px)').matches) {
                        $(elem).find('.ais-Panel-body').hide();
                    }
                    observer.disconnect();
                });
                observer.observe(elem, {
                    childList: true
                })
            });
        }
    }

    self.openFilter = function(context, event){ // for toggling open/closed state
      var headerClick = $(event.target).closest('.ais-Panel-header').length;
        if(headerClick){
          $(event.currentTarget).toggleClass("open");

          if($(event.currentTarget).hasClass("open")){
            $(event.currentTarget).find('.ais-Panel-body').slideDown('fast');
          } else {
            $(event.currentTarget).find('.ais-Panel-body').slideUp('fast');
          }
        }
        return true;
    };

    self.openTab = function (tabIndex, initialLoad) {
      componentElement.find('.tab-search-name .' + tabIndex).click();
      return false;
    };

    self.renderRefinementList = function(renderOptions, isFirstRender) {
        var container = componentElement.find('.search-input-container .categories')[0];

        if (isFirstRender) {
          var ul = document.createElement('ul');
          container.appendChild(ul);
        }

        container.querySelector('ul').innerHTML = renderOptions.items
          .map(function(item){
            return '<li>' +
                '<a href="#" data-value="' + item.value + '" style="font-weight: ' + item.isRefined ? 'bold' : '' + '">' +
                  item.label + '(' + item.count + ')' +
                '</a>' +
              '</li>';
          })
          .join('');
      };

    self.initAlgoliaSearchBox = function (searchClient, indexName, containerElem) {

      self.dropdownSearchObjects['querySuggestions'] = instantsearch({
        indexName: containerElem.find('.suggestions').data('index'),
        searchClient: searchClient,
        clickAnalytics: true
      });

      self.dropdownSearchObjects['popularPages'] = instantsearch({
          indexName: containerElem.find(".dropdown-container .popular-pages").data('index'),
          searchClient: searchClient,
          clickAnalytics: true
      });

      self.dropdownSearchObjects['categorySuggestions'] = instantsearch({
        indexName: containerElem.find('.categories').data('index'),
        searchClient: searchClient,
        clickAnalytics: true
      });

      var querySuggestionAutocomplete = instantsearch.connectors.connectAutocomplete(
          function(renderOptions, isFirstRendering){
            renderOptions.widgetParams.container.html('<ul></ul)');
            renderOptions.indices.forEach(function(index){
              self.suggestionCount(index.results.hits.length);
              var results = index.results;
              index.results.hits.slice(0,6).forEach(function(hit, index) {
                var queryID = results.queryID ? results.queryID : queryID;
                return renderOptions.widgetParams.container.find('ul').append($('<li><a href="#" aria-label="Search for Suggested Query"'
                    + ' data-query="' + hit.query + '" data-query-id="' + queryID + '"'  + '"data-position="' +hit.__position +
                    '">' + hit._highlightResult.query.value + '</a></li>'));
              });
          });
        }
      );

      var popularPagesAutocomplete = instantsearch.connectors.connectAutocomplete(
          function(renderOptions, isFirstRendering){
              renderOptions.widgetParams.container.html('<ul></ul)');
              renderOptions.indices.forEach(function(index){
                  self.pagesCount(index.results.hits.length);
                  var results = index.results;
                  index.results.hits.slice(0,6).forEach(function(hit, index) {
                    var queryID = results.queryID ? results.queryID : queryID;
                    return renderOptions.widgetParams.container.find('ul').append($('<li><a href="' + hit.url
                        + '" aria-label="Search for Popular Page ' + hit.title
                        + '" data-query="' + hit.title
                        + '" data-object-id="' + hit.objectID
                        + '" data-query-id="' + queryID  + '"'  + '"data-position="' +hit.__position +
                         '">'+hit._highlightResult.title.value +'</a></li>'));
                  });
              });
          }
      );

      var categorySuggestionAutocomplete = instantsearch.connectors.connectAutocomplete(
          function(renderOptions, isFirstRendering) {
            renderOptions.widgetParams.container.html('<ul></ul)');
            renderOptions.indices.forEach(function(index) {
              self.categoriesCount(index.results.hits ? index.results.hits.length : 0);
              var results = index.results;
              index.results.hits.forEach(function(hit, index){
                if(hit._highlightResult && hit._highlightResult.categoryName){
                  var queryID = results.queryID ? results.queryID : queryID;
                  renderOptions.widgetParams.container.find('ul').append('<li>'
                    + '<a href="#" aria-label="' + hit.categoryName +' "'
                    + 'data-category="'+ hit.categoryName +'"'
                    + 'data-query-id="' + queryID + '"'
                     + '"data-position="' +hit.__position +'">'
                    + hit._highlightResult.categoryName.value + '</a></li>');
                }
              });
          });
        }
      );

      self.dropdownSearchObjects['categorySuggestions'].addWidgets([
        instantsearch.widgets.configure({
          hitsPerPage: 3,
          clickAnalytics: true
        }),
        categorySuggestionAutocomplete({
          clickAnalytics: true,
          container: containerElem.find('.categories')
        }),
      ]);

      self.dropdownSearchObjects['querySuggestions'].addWidgets([
        instantsearch.widgets.configure({
          hitsPerPage: 3,
          clickAnalytics: true
        }),
        querySuggestionAutocomplete({
          container: containerElem.find('.suggestions')
        })
      ]);

      self.dropdownSearchObjects['popularPages'].addWidgets([
          instantsearch.widgets.configure({
              hitsPerPage: 3,
              clickAnalytics: true
          }),
          popularPagesAutocomplete({
              container: containerElem.find(".dropdown-container .popular-pages")
          })
      ]);

      self.dropdownSearchObjects['productSuggestions'] = instantsearch({
          indexName: indexName,
          searchClient: searchClient,
          clickAnalytics: true,
          searchFunction: function(helper) {
              self.inputSearchQuery(decodeURIComponent(helper.getQuery().query));
              helper.search();
              self.dropdownSearchObjects['querySuggestions'].helper.setQuery(helper.getQuery().query);
              self.dropdownSearchObjects['querySuggestions'].helper.search();
              self.dropdownSearchObjects['popularPages'].helper.setQuery(helper.getQuery().query);
              self.dropdownSearchObjects['popularPages'].helper.search();
              self.dropdownSearchObjects['categorySuggestions'].helper.setQuery(helper.getQuery().query);
              self.dropdownSearchObjects['categorySuggestions'].helper.search();
            }
        });

      var customRefinementList = instantsearch.connectors.connectRefinementList(
        self.renderRefinementList
      );

      var renderProductDropdownStats = function(renderOptions, isFirstRender) {

        if(renderOptions.nbHits > 1){
          renderOptions.widgetParams.container.html('<a href="#" aria-label="See all product results">' + ('View ' + renderOptions.nbHits + ' product results') + '</a>');
        } else {
          renderOptions.widgetParams.container.html('');
        }
      };

      var renderSearchBox = function(renderOptions, isFirstRender) {
        var clear = renderOptions;
        var container = renderOptions.widgetParams.container;

        if (isFirstRender) {
          var searchIcon = $('<span class="search-icon glyphicon-search"></span>');
          var input = $('<input class="input-box" aria-label="Search" placeholder="' + (containerElem.parent('.component.search').data('place-holder') || 'Search') + '"></input>');
          var removeBtn = $('<button class="ais-SearchBox-reset">X</button>');

          input[0].addEventListener('input', function(event) {
            renderOptions.refine(event.target.value);
          });

          renderOptions.refine(self.inputSearchQuery());

          if(window.matchMedia('(max-width: 768px)').matches){
            removeBtn.on('click',function(){
              clear.clear();
              $('.ais-SearchBox-reset').hide();
              $('.all-search').hide();
              self.doTabSearch();
            });
            input.on('focus', function () {
              $('.ais-SearchBox-reset').show();
              $('.all-search').show();
              self.searchBoxFocus(true);
            });
            input.on('blur', function () {
              self.searchBoxFocus(false);
            });
            $('.all-search').on('click',function(){
              setTimeout(function(){
                $('.all-search').hide();
                $('.ais-SearchBox-reset').hide();
              }, 1000);
            })
            container.appendChild(searchIcon[0]);
            container.appendChild(removeBtn[0]);
            container.appendChild(input[0]);
          }
          else {
            input.on('focus', function () {
              self.searchBoxFocus(true);
            });
            input.on('blur', function () {
              setTimeout(function(){
                self.searchBoxFocus(false);
              }, 100);
            });
            container.appendChild(input[0]);
          }
        }

        container.querySelector('input').value = renderOptions.query;
      };

      var customSearchBox = instantsearch.connectors.connectSearchBox(
        renderSearchBox
      );

      if(!window.document.documentMode){ //  Disable in IE
        self.dropdownSearchObjects['categorySuggestions'].use(insightsMiddleware);
        self.dropdownSearchObjects['querySuggestions'].use(insightsMiddleware);
        self.dropdownSearchObjects['popularPages'].use(insightsMiddleware);
        self.dropdownSearchObjects['productSuggestions'].use(insightsMiddleware);
      }

      var productDropdownStats = instantsearch.connectors.connectStats(
        renderProductDropdownStats
      );
      userinputAnalytic = function(elem){
        try{
          if(typeof digitalData !== 'undefined' && digitalData){
            if(digitalData.event){
              var events = {};
              events.eventName="search bar";
              events.eventAction="query result click";
              events.type="user Input";
              events.timeStamp = new Date();
              digitalData.event.push(events);
            }
            digitalData.searchBar = {};
            if(digitalData.searchBar){
              var query = $('.search-box input').val();
              digitalData.searchBar.searchQuery = query;
              digitalData.searchBar.searchResultDetails ="Product Result|"+(elem.closest('.ais-Hits-item').index()+1)+"|"+elem.text();
            }
          }
        }
        catch(err){
          console.log(err)
        }
      }
      self.dropdownSearchObjects['productSuggestions'].addWidgets([

        customSearchBox({
          container: containerElem.find('.search-box')[0],
          placeholder: 'Search'
        }),

        instantsearch.widgets.configure({
          hitsPerPage: 4,
          clickAnalytics: true
        }),

        instantsearch.widgets.hits({
          container: containerElem.find('.products')[0],
          hitsPerPage: 4,
          templates: {
            item: function(hit){
              return '<div class="flex-container">' +
                '<div class="image-container">' +
                (hit.productThumbnail ? ('<img loading="lazy" src="' + hit.productThumbnail + '.thumb.319.319.png" alt="Product Image"/>') : ('<img loading="lazy" src="/content/dam/extranet/product-related/product-photo/Placeholder Image.png.thumb.319.319.png" alt="Product Image"/>')) +
                '</div>' + '<div class="link-container"><a href="' + hit.url +
                '"'+ 'aria-label="Link to ' + hit.productName + '" ' +
                ' data-object-id ="' + hit.objectID + '" ' + ' data-query-id ="' + hit.__queryID + '" ' + 'data-position="' +hit.__position +
                '"/>' + instantsearch.highlight({ attribute: "productName", hit: hit, highlightedTagName: "mark" }) + '</a></div>' +
              '</div>'
            }
          }
        }),

        productDropdownStats({
          container: containerElem.find('.products-count')
        })

      ]);

      self.dropdownSearchObjects['categorySuggestions'].start();
      self.dropdownSearchObjects['querySuggestions'].start();
      self.dropdownSearchObjects['popularPages'].start();
      self.dropdownSearchObjects['productSuggestions'].start();

    }

    self.initAlgoliaTab = function (searchClient, indexName, containerElem) {

        var params = getParams();

        var initialUiState = {};
        initialUiState[indexName] = {query: self.inputSearchQuery()}; // UI State for non selected tabs.

        if(self.currentTab() === indexName){  // UI state for selected tabs.
          initialUiState[self.currentTab()] = {
              query: self.inputSearchQuery(),
              page: params.page,
              hitsPerPage: params.perPage,
              hierarchicalMenu: getRefinements(search).hierarchical,
              refinementList: getRefinements(search).disjunctive,
              sortBy: params.index
            }
        }

        var search = instantsearch({
          indexName: indexName,
          searchClient: searchClient,
          clickAnalytics: true,
          initialUiState: initialUiState,
          searchFunction: function(helper) {
            var currentPage = !!search.ignorePageParam ? helper.getPage() : ((parseInt(params.page, 10) - 1) || 0); // Use param for first render.
            if(self.currentTab() === indexName){
              helper.setPage(currentPage) // Note: If this is first render, we need to make sure page is reset to param. (setting refinments resets it to page 1)
            }
            helper.search();
            search.ignorePageParam = search.ignorePageParam || true;
          }
        });

        var indexWithoutEnvironment = indexName.split('_').slice(1).join('_');

        if(PENTAIR.AlgoliaTabSearchWidgets[indexWithoutEnvironment]){
          PENTAIR.AlgoliaTabSearchWidgets[indexWithoutEnvironment](search, indexName, containerElem);
        }

        search.on('render', function(){
          var totals = self.totals();

          if(this.helper.lastResults) {
            totals[this.indexName] = this.helper.lastResults.nbHits;
            self.totals(totals);
            if (self.currentTab() === "all" && isInitialPageViewSearch && !queryIDList.includes(search.helper.lastResults.queryID)) {
                queryIDList.push(search.helper.lastResults.queryID);
            }
          }

          if(self.currentTab() === indexName && search.helper.lastResults){
            self.setBrowserState(self.paramsFromCurrentState())
          }

          setTimeout(function(){componentElement.find('.tab-search-content').trigger( 'refresh.owl.carousel' );
          }, 1000);

        });


        if(!window.document.documentMode){ //  Disable in IE
            search.use(insightsMiddleware);
        }

        self.tabSearchObjects.push(search);

        search.start();

        return search;
    };

    function initAlgoliaAllTab() {
      var allTabElements = componentElement.find('.all-tab').find('[data-index]');

      var initialUiState = {};
      allTabElements.each(function(elem){
        initialUiState[$(this).data('index')] = {query: self.inputSearchQuery()};
      });

      self.allTabSearch = instantsearch({
        indexName: allTabElements.first().data('index'),
        searchClient: self.searchClient,
        clickAnalytics: true,
        initialUiState : initialUiState
      });

      self.allTabSearch.addWidgets([PENTAIR.CustomAlgoliaWidgets.virtualSearchBox()]);

      if(!window.document.documentMode){ // Disable in IE
          self.allTabSearch.use(insightsMiddleware);
      }

      allTabElements.each(function(index, elem){
        self.initAlgoliaAllTabIndex(self.allTabSearch, $(this).data('index'), $(this));
      });

      self.allTabSearch.on('render', function(){
        if(self.currentTab() === 'all'){
          self.setBrowserState(self.paramsFromCurrentState());
        }
      });

      self.allTabSearch.start();

    }

    function getParams() {
      // gets url parameters and builds an object
      return _.chain(location.search.slice(1).split('&'))
             .map(function (item) { if (item) { return item.split('='); } })
             .compact()
             .object()
             .value();
    }

    function getRefinements(search){
      var params = getParams();

      var refinementHelper = function(refinementType){
        return _.reduce(params, function(acc, value, key) {
          var hierarchical = key.split('.' + refinementType);
          var returnObj = {};
          if(hierarchical.length > 1){
            returnObj[hierarchical[0]] = decodeURIComponent(value.replace(/\+/gm,"%20")).split(';');
          }
          return $.extend(acc, returnObj);
        }, {});
      };

      var hierarchical = refinementHelper('hierarchical');
      var disjunctive = refinementHelper('disjunctive');

      return {hierarchical: hierarchical, disjunctive: disjunctive};
    }

    function getSearchConfiguration(search){
      var params = getParams();
      var configObject = {};

      var paramMap = {
        page: params.page ? (params.page - 1) + "" : null,
        query: params.q,
        hitsPerPage: params.perPage
      };

      _.each(paramMap, function(value, key){if(!!value){configObject[key]=value}})

      return configObject;
    };

    self.initAlgoliaAllTabIndex = function (search, indexName, containerElem) {

      var indexWithoutEnvironment = indexName.split('_').slice(1).join('_');

      if(PENTAIR.AlgoliaAllTabSearchWidgets[indexWithoutEnvironment]){
        PENTAIR.AlgoliaAllTabSearchWidgets[indexWithoutEnvironment](search, indexName, containerElem);
      }
    };

    self.setBrowserState = function(params) {
        //maintain wcmmode=disabled for author view-as-published mode
        // and other url params e.g. params used for tracking media performance in analytics solutions
        var nonAlgoliaURLParams = _.chain(getParams())
            .pairs()
            .filter(function(entry) {
                var paramName = entry[0];
                var partialMatch = self.algoliaURLParamIdentifiers.some(function(identifier) {
                    return paramName.includes(identifier);
                });
                var exactMatch = self.algoliaURLParams.includes(paramName);
                return !partialMatch && !exactMatch;
            })
            .object()
            .value();
        $.extend(params, nonAlgoliaURLParams);
        var url = $.param.querystring(window.location.href, params, 2);
        window.history.replaceState(params, null, url);
    };

    self.MobileFilterViewModel = function(containerElem, SearchViewModel){
      var self = this;
      self.searchView = SearchViewModel;
      self.openFilter = SearchViewModel.openFilter;
      self.filterClick = SearchViewModel.filterClick;
      self.hasResults = SearchViewModel.hasResults;
      self.classFromIndex = SearchViewModel.classFromIndex;
      self.displayResultTotalByIndex = SearchViewModel.displayResultTotalByIndex;
      self.isFilterOpen = function(){
        if(!SearchViewModel.isFilterOpen()){
          $(this).find('.ais-Panel-body').hide();
        }
        return SearchViewModel.isFilterOpen();
      };
    }

    self.init = function() {
        reorderTabsForMobile();
        initUiState();

        //Init stand-alone tabs
        componentElement.find('.tab-search-content .item:not(".all")').each(function(index, elem){
          self.instantsearchWidgets[$(this).data('index')] = self.initAlgoliaTab(self.searchClient, $(this).data('index'), $(this));
          self.instantsearchWidgets[$(this).data('index')].firstRender = true;
        });

        self.initAlgoliaSearchBox(self.searchClient, componentElement.find('.search-input-container').data('index'), componentElement.find('.search-input-container'));

        initAlgoliaAllTab();

        var debouncedUpdateAnalytics = _.debounce(updateAnalytics, 500);

        self.allTabSearch.once('render', function(){  // Fire event on first load.
          self.allTabSearch.once('render',function(){
            debouncedUpdateAnalytics('initial');
            var contentElem = componentElement.find('.tab-search-content');
            contentElem.trigger( 'refresh.owl.carousel' );
          });
        });

        initMobileFilters();
        initOwlEvents();
        initDynamicWidgetAccordianPanel(componentElement.closest('#search-root').find('.dynamic-widgets'));
    };

    function initMobileFilters(){
      ko.applyBindings(new self.MobileFilterViewModel($('#searchFilterModal'), self), $('#searchFilterModal')[0]);
    };

    function reorderTabsForMobile(){
      isMobile = window.matchMedia('(max-width: 767px)').matches;
      var mobileOrder = componentElement.data('mobileIndexes');
      if(isMobile && mobileOrder.length){
        var reorderedTabNames = $('<div></div>');
        mobileOrder.forEach(function(elem){
          var elem = componentElement.find('.tab-search-name.owl-carousel' + ' .item.' + elem.indexName);
          reorderedTabNames.append(elem);
        });
        componentElement.find('.tab-search-name.owl-carousel').html(reorderedTabNames.html());

        var reorderedContentNames = $('<div></div>');
        mobileOrder.forEach(function(elem){
          var elem = componentElement.find('.tab-search-content' + ' .item' + '[data-index=' + elem.indexName + ']');
          reorderedContentNames.append(elem);
        });
        componentElement.find('.tab-search-content.owl-carousel').html(reorderedContentNames.html());
      }

    };

    function initUiState(){
      var paramObj = _.object(_.compact(_.map(location.search.slice(1).split('&'), function(item) {  if (item) return item.split('='); })));
      var firstTabInMobile = componentElement.data('mobile-indexes')[0].indexName;
      var defaultTab = self.isMobile() ? firstTabInMobile : 'all';
      self.currentTab(!!paramObj.tab ? paramObj.tab : defaultTab);

      componentElement.on('initialize.owl.carousel', function (event) {  // Updates tab if tab param exists
        $(function(){self.openTab(self.currentTab(), true);})
      });
    };

    function initOwlEvents(){
      var debouncedCarouselChange = _.debounce(carouselChange, 500); // Prevents it from firing multiple times.

      $(window).load(function() {
        var contentElem = componentElement.find('.tab-search-content');
        contentElem.data('owl.carousel').options.autoHeight = true;
        contentElem.trigger( 'refresh.owl.carousel' );
        componentElement.on('changed.owl.carousel', function(event) {
          var currentSlide = $(event.target).find(".owl-item").eq(event.item.index).children();
          var slideIndex = currentSlide.data('index');
          self.currentTab(slideIndex);
          debouncedCarouselChange(slideIndex);
        });
      });

      // Analytics Refinement Events
      $(window).load(function() {
        var tabCarousel = componentElement.find('.tabs .tab-search-name.owl-carousel');
        var contentCarousel = componentElement.find('.tabs .tab-search-content.owl-carousel');
        tabCarousel.on('click', '.owl-item', function(event) {
          if(event.hasOwnProperty('originalEvent')){   // Distinguish from programmatic click events such as dropdownChannelClick - they have their own AA events.
            updateAnalytics('refine');
          }
        });
        tabCarousel.on('dragged.owl.carousel', function () {
          updateAnalytics('refine');
        });
        contentCarousel.on('dragged.owl.carousel', function () {
          updateAnalytics('refine');
        });
      });

    };

    function carouselChange(slideIndex){
      self.setBrowserState(self.paramsFromCurrentState());
    };

    var isInitialPageViewSearch = true;

    function updateAnalytics(eventType, eventAction) {
      var total = self.currentTab() != 'all' ? self.totals()[self.currentTab()] : self.allTotal();
      var refinements = [];
      var lastResults;
      if(self.currentTab() != 'all'){
        lastResults = self.tabSearchObjects.filter(function(elem){return elem.indexName === self.currentTab()})[0].helper.lastResults;

        refinements = lastResults ? lastResults.getRefinements() : [];
        var filterContainer = componentElement.find('.tab-search-content .item:not(".all")[data-index='+ self.currentTab() +'] .algolia-filter-container');

        var cleanRefinements = _.chain(refinements).groupBy('attributeName').map(function(value, key) {

          filterName = (filterContainer.find('[data-filter-attribute="' + key +'"]').data('filterTitle') || 'Categories') + ':'; // Title Case

          return filterName + value.reduce(function(acc, elem, index) {
            var attributeName = elem.name.split(',').slice(-1)[0];
            attributeName = attributeName.split('|').slice(-1)[0];
            return acc + attributeName + ((index < value.length - 1) ? '^' : '')
          }, "")
        }).value();

      }

      if(typeof digitalData !== 'undefined' && digitalData && digitalData.event){
        var eventArr = {};
        eventArr.eventName = "site search";
        eventArr.eventAction = eventAction || (total ? "search" : "null");
        eventArr.type = eventType;
        eventArr.timeStamp = new Date();
        digitalData.event.push(eventArr);
      }

      if(typeof digitalData !== 'undefined' && digitalData && digitalData.search){
        digitalData.search.searchType = "internal search";
        digitalData.search.searchQuery = self.inputSearchQuery();
        digitalData.search.searchFilter = self.currentTab().split('_').slice(-1)[0];
        digitalData.search.resultsNumber = parseInt(total);
        digitalData.search.searchFacet = refinements.length ? cleanRefinements.join('|') : "";
      }

      // PAAS - Adobe Analytics Implementation
      var searchComponent = document.querySelector('#searchComponent');
      if (searchComponent && isInitialPageViewSearch) {
        isInitialPageViewSearch = false;
        var queryID = self.currentTab() !== 'all' && lastResults ? lastResults.queryID : queryIDList.join(',');
        // Track the page view event, handled in clientlib-site/js/analytics/pageView.js
        trackSearchPageViewPayload(searchComponent, self.currentTab(), total, queryID);
      }
    };

    /**
     * Tracks the suggested search term/result click event payload.
     * @param searchTerm term typed in the box
     * @param suggestedSearchText term or result text in suggested area clicked on
     * @param queryID algolia query ID
     * @param isDirectResult true/false if the link clicked on was a suggested result linking directly to a page or product
     */
    function trackSuggestedSearchClickPayload(searchTerm, suggestedSearchText, queryID, isDirectResult) {
      var eventSearchSuggestedTermClickPayload = {
        eventName: isDirectResult ? 'search suggested result clicked' : 'search suggested term clicked',
        eventType: 'event',
        attributes: {
          search: {
            searchTerm: searchTerm,
            algoliaQueryID: queryID,
            searchType: "suggested search",
          },
          visitor: {
            pentairCustomerID: getPentairCustomerID(), //if this is available
            dealerID: getDealerID() //if this is available
          },
          page: {
            pageCanonical: getPageViewPageAttribute("pageCanonical"),
            pageName: getPageViewPageAttribute("pageName"),
            pagePath: getPageViewPageAttribute("pagePath"),
            pageType: getPageViewPageAttribute("pageType"),
            pageURL: getPageViewPageAttribute("pageURL"),
            language: getPageViewPageAttribute("language")
          }
        }
      }
      // Only add one of the keys; suggestedSearchTerm or suggestedSearchResult
      // This is done after inital creation of the object bc ternary operators can't be done with property id names
      var searchTextAttrName = isDirectResult ? 'suggestedSearchResult' : 'suggestedSearchTerm';
      eventSearchSuggestedTermClickPayload.attributes.search[searchTextAttrName] = suggestedSearchText;
      trackEventWithQueue(eventSearchSuggestedTermClickPayload);
    }

    self.init();
};

$(document).ready(function() {
    $('.search.component').each(function() {
      ko.applyBindings(new SearchViewModel($(this)), this);
    });
});

$(document).ready(function(){
  //View product click analytic
  $('.products-count').click(function(){
    try{
        if(typeof digitalData !== 'undefined' && digitalData){
          digitalData.searchBar = {};
          var query = $('.search-box input').val();
          if(digitalData.event){
            var eventData = {};
            eventData.eventName = "search bar"
            eventData.eventAction = "view product";
            eventData.type = "user Input";
            eventData.timeStamp = new Date();
            digitalData.event.push(eventData);
          }
          if(digitalData.searchBar){
            digitalData.searchBar.searchQuery = query;
          }
        }
      }catch(err) {
        console.log(err)
      }
    })

    $('header a.icon-search').on('click', function () {
      searchBarInitiate();
    });

    function searchBarInitiate(){
      if(typeof digitalData !== 'undefined' && digitalData && digitalData.event){
          var eventData = {};
          eventData.eventName = "search bar"
          eventData.eventAction = "initiate";
          eventData.type = "default";
          eventData.timeStamp = new Date();
          digitalData.event.push(eventData);
        }
    }

    searchResultClickAnalytic = function(title, pageDepth){
      if(window._satellite){
        _satellite.track('search page result click', {searchPageResultLink: title, searchPageResultDepth: pageDepth});
      }

      // PAAS - Adobe Analytics
      var queryID;
      var hitItem;
      if (event.currentTarget) {
        if (event.currentTarget.dataset) {
          queryID = event.currentTarget.dataset.queryId;
        }
        hitItem = $(event.currentTarget).closest(".ais-Hits-item");
      }
      var hitsListElem = hitItem ? hitItem.closest(".ais-Hits-list") : '';
      var hitsList = hitsListElem ? Array.from(hitsListElem.children) : [];
      // Hit index should start at 1 for analytics not 0
      var hitIndex = hitsList.includes(hitItem) ? hitsList.indexOf(hitItem) + 1 : -1;

      // Default search term and active tab
      var searchTerm = '';
      var activeTab = 'all';

      // Get search term and active tab from url query params if exists
      if (window.location.search) {
        var urlQueryParamsMap = Object.fromEntries(window.location.search
            .slice(1)
            .split('&')
            .map(function(item) {
              return item.split('=');
            }));
        searchTerm = decodeURIComponent(urlQueryParamsMap.q ? urlQueryParamsMap.q : '').replace(/\+/g, ' ');
        var tabParam = decodeURIComponent(urlQueryParamsMap.tab ? urlQueryParamsMap.tab : '').replace(/\+/g, ' ');
        activeTab = tabParam.includes('_')
            ? tabParam.slice(tabParam.indexOf('_') + 1) // Take off the environment from the index name
            : tabParam ? tabParam : 'all'; // Default to 'all' if tabParam is undefined/empty/null
      }

      var eventSearchResultClickPayload = {
        eventName: 'search result clicked',
        eventType: 'event',
        attributes: {
          search: {
            searchTerm: searchTerm,
            searchResultClicked: title,
            searchResultIndex: activeTab + '|page' + pageDepth + '|index' + hitIndex,
            algoliaQueryID: queryID
          },
          visitor: {
            pentairCustomerID: getPentairCustomerID(),
            dealerID: getDealerID()
          }
        }
      }
      trackEventWithQueue(eventSearchResultClickPayload);
    }
});

var TweetOb = function (options) {
    var self = this;
    self.body = options.body;
    self.author = options.author;
    self.avatar = options.avatar;
    self.link = options.link;
    self.tweetId = options.tweetId || '';
}

var RecentTweetModel = function (elem) {
    var self = this;
    var $tweetEl = $(elem),
        siteId = $tweetEl.attr('data-site-id'),
        domain = $tweetEl.attr('data-domain'),
        compId = $tweetEl.attr('data-competitor-id'),
        artId = $tweetEl.attr('data-article-id'),
        $selfTweets = $tweetEl.find('.pentair-tweets'),
        $extTweets = $tweetEl.find('.external-tweets'),
        maxTweetsLimit = 6,
        isTouch = "ontouchstart" in window,
        fetchTimeout = 300000,
        pentairObj = {
            articleId: artId,
            eventId: null,
            limit: maxTweetsLimit,
            type: 'own'
        },
        competitorObj = {
            articleId: compId,
            eventId: null,
            limit: maxTweetsLimit,
            type: 'external'
        },
        jqueryTruncateOpts = { 
            length: 150, 
            noBreaks: true, 
            words: true
        },
        $window = $(window);

    var networkName = domain ? domain.split(".")[0] : null;

    /* initializes the variables */
    self.initVariables = function(){
        self.tweets = ko.observableArray([]);
        self.competitorTweets = ko.observableArray([]);

        pentairObj.arr = self.tweets;
        competitorObj.arr = self.competitorTweets;
    }

    /* Adds tweet to an array */
    self.addTweet = function(arr, options) {
        arr.push(new TweetOb(options));        
    }

    /* aligns carousel */
    self.alignCarousel = function(type) {
        var $tweetsContainer = (type === 'external') ? $extTweets : $selfTweets,
            $carouselItems = $tweetsContainer.find('.int-carousel-item'),
            $itemsWrapper = $tweetsContainer.find('.int-carousel-item-wrapper'),
            eachItemWidth = $tweetsContainer.width(),
            totalWidth = eachItemWidth * $carouselItems.length;

        $itemsWrapper.width(totalWidth).css('left', '0');
        $carouselItems.width(eachItemWidth);
        self.moveCarouselToInd(0, $tweetsContainer);
        if ( isTouch ) {
            self.makeIndicatorActive(0, $tweetsContainer);
        }
    }

    /* makes indicator active */
    self.makeIndicatorActive = function(ind, $carousel) {
        $carousel.find('.int-carousel-dot').removeClass('active prev-ind next-ind');
        $carousel.find('.int-carousel-dot[data-ind="' + ind + '"]').addClass('active');
        $carousel.find('.int-carousel-dot[data-ind="' + ( ind - 1 )+ '"]').addClass('prev-ind');
        $carousel.find('.int-carousel-dot[data-ind="' + ( ind + 1 )+ '"]').addClass('next-ind');
    }

    /* from the data received from the ajax call, extracts and adds the needed displayable information */
    self.processTweetData = function(obj, data) {
        try {
            if (obj.eventId != data.collectionSettings.event) {
                obj.eventId = data.collectionSettings.event;     
                var headDoc = data.headDocument;
                var count = 0;
                for ( var i = 0; i < headDoc.content.length; i++ ) {
                    var doc = headDoc.content[i];
                    if (doc && doc.vis == 1) {
                        var authorOb = headDoc.authors[doc.content.authorId],
                            tweetDataObj = {
                                body: jQuery.truncate(doc.content.bodyHtml, jqueryTruncateOpts),
                                author: authorOb.displayName,
                                avatar: authorOb.avatar,
                                link: authorOb.profileUrl,
                                tweetId: ''
                            }

                        if ( obj.type === 'own' 
                            && doc.content.annotations
                            && doc.content.annotations.tweetMeta
                            && doc.content.annotations.tweetMeta.tweetIdStr ) {
                            tweetDataObj.tweetId = doc.content.annotations.tweetMeta.tweetIdStr
                        }

                        if ( i === 0 ) {
                            obj.arr.removeAll();
                            //self.addTweet(obj.arr, tweetDataObj);
                        }
                        self.addTweet(obj.arr, tweetDataObj);
                        count ++;
                        if (count == obj.limit) {
                        		break;
                        }
                    }
                }
                self.alignCarousel(obj.type);
            }
        } catch(e) {
            console.log(e);
        }
    }

    /* AJAX call to get the new tweets. Calls itself once the ajax call is completed */
    self.pullTweets = function (obj) {
        $.ajax({
            type: "GET",
            url: '//' + networkName + '.bootstrap.fyre.co/bs3/v3.1/' + domain + '/' + siteId + '/' + obj.articleId + '/init?transform=true',
            success: function(data) {
                self.processTweetData(obj, data);
            },
            complete: function(){
                if ( obj.type === 'own' ) {
                    if ( obj.arr().length > 1 ) {
                        $selfTweets.find('.int-carousel-control').removeClass('hide');
                    } else {
                        $selfTweets.find('.int-carousel-control').addClass('hide');
                    }
                } else if ( obj.type !== 'own') {
                    if ( obj.arr().length > 1 ) {
                        $selfTweets.find('.int-carousel-control').removeClass('hide');
                    } else {
                        $extTweets.find('.int-carousel-control').addClass('hide');
                    }
                }
                setTimeout(function(){
                    self.pullTweets(obj);
                }, fetchTimeout);
            }
        });
    }

    self.moveCarouselToInd = function(toInd, $carousel) {
        var $carouselItemWrapper = $carousel.find('.int-carousel-item-wrapper'),
            count = $carousel.find('.int-carousel-item').length,
            $carouselControlWrapper = $carousel.find('.int-carousel-control-wrap'),
            $carouselPrev = $carousel.find('.int-carousel-prev'),
            $carouselNext = $carousel.find('.int-carousel-next');

        if ( toInd >= 0 && toInd < count ) {
            if ( toInd > 0 && $carouselPrev.hasClass('disabled')) {
                $carouselPrev.removeClass('disabled');
            }

            if ( toInd === 0 &&  !$carouselPrev.hasClass('disabled') ) {
                $carouselPrev.addClass('disabled');
            }

            if ( toInd === count - 1 && !$carouselNext.hasClass('disabled')) {
                $carouselNext.addClass('disabled');
            }

            if ( toInd < count - 1 && $carouselNext.hasClass('disabled')) {
                $carouselNext.removeClass('disabled');
            }

            $carouselControlWrapper.attr('data-active-ind', toInd);
            self.makeIndicatorActive(toInd, $carousel);
            $carouselItemWrapper.stop().animate({
                left: '-' + (toInd * 100) + '%'
            }, 400);
        }
    }

    /* code that executes on swipe right */
    self.slideRight = function(el){
        el.closest('.int-carousel-container').find('.int-carousel-control[data-ind="next"]').trigger('click');
    }

    /* code that executes on swipe left */
    self.slideLeft = function(el){
        el.closest('.int-carousel-container').find('.int-carousel-control[data-ind="prev"]').trigger('click');
    }

    /* Binds events to scroll through the carousel */
    self.bindCarouselEvents = function(){
        $tweetEl.on('click', '.int-carousel-control', function(e) {
            e.preventDefault();
            var $this = $(this),
                clickedInd = $this.attr('data-ind'),
                activeInd,
                toInd;

            var $carousel = $this.closest('.int-carousel-container'),
                $carouselControlWrapper = $carousel.find('.int-carousel-control-wrap'),
                activeInd = +$carouselControlWrapper.attr('data-active-ind') || 0

            if ( $this.hasClass('active') || $this.hasClass('disabled') ) {
                return;
            }

            if ( clickedInd === 'prev' ) {
                toInd = activeInd - 1;
            } else if ( clickedInd === 'next' ) {
                toInd = activeInd + 1;
            } else {
                toInd = clickedInd;
            }

            self.moveCarouselToInd(toInd, $carousel);
        });

        $window.on('resize', function(){
            self.alignCarousel('own');
            self.alignCarousel('external');
        });

        if("ontouchstart" in window) {
            $tweetEl.on('touchstart', '.int-carousel-item-wrapper', function(evt){
                var touchEvents = evt.changedTouches || evt.originalEvent.changedTouches
                var startTime = (new Date()).getTime();
                var startX = touchEvents[0].pageX;
                var $this = $(this);
                $(document).on('touchend.carouselTouch', function(evt){
                    var touchEvents = evt.changedTouches || evt.originalEvent.changedTouches;
                    $(document).off('touchend.carouselTouch');
                    var diffX = touchEvents[0].pageX - startX;
                    var elapsed = (new Date()).getTime() - startTime;
                    if(elapsed > 50 && Math.abs(diffX) > 50) {
                        ( diffX < 0 ) ? self.slideRight($this) : self.slideLeft($this);
                    }
                });
            });
        }
    }

    /* Add necessary variables and populates tweets */
    self.init = function(){
        self.initVariables();
        self.pullTweets(pentairObj);
        self.pullTweets(competitorObj);
        self.bindCarouselEvents();
    }

    /* initialize the tweet component */
    if ( networkName && siteId && artId && compId ) { 
        self.init();
    }
}

$(document).ready(function(){
    $('.recent-tweets-section').each(function(index, elem) {
        try {
            ko.applyBindings(new RecentTweetModel(this), this);
        } catch(e) {

        }
    });
});
$(document).ready(function () {
    // document.querySelectorAll('.product-grid-carousel').forEach(function() {
    $('.product-grid-carousel').owlCarousel({
        autoplay: false,
        lazyLoad: true,
        /*
        animateOut: 'fadeOut',
        animateIn: 'fadeIn',
        */
        /* responsiveClass: true,
            autoHeight: true,
            autoplayTimeout: 7000,
            smartSpeed: 800,*/
        nav: true,
        touchDrag: true,
        rewind: true,
        navText: true,
        autoWidth: true,

        responsive: {
            0: {
                items: 1,
                margin: 10,
            },
            600: {
                items: 2,
                margin: 15,
            },
            992: {
                items: 3,
                margin: 20,
            },
        },
    });

    self.carouselAtcAnalytics = function () {
        TrackCarouselATCClick();
        constructAlgoliaAnalyticsAddtoCartObject();
        return true;
    };
});

// });

PENTAIR.AlgoliaProductGridSearchWidgets = {
    pentair_products: function(search, indexName, containerElem, hiddenFilterAttributes, gridItemType,freeShipingPriceLimit) {

        function renderSKUHits(hit, bindEvent) {
            console.debug('sku hit: ', hit);
            var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.url);
            var productRating = hit.productRating ? ($('<span class="rating"></span>').text(hit.productRating)[0].outerHTML) : '';
            var stars = $('<span class="stars"></span>').text(hit.productRating);
            var reviewCountHtml = hit.productReviewCount ? ('<span class="review-count">(' + hit.productReviewCount + ' reviews)</span>') : '';
            stars = stars.stars();
            var displayStartPrice = hit.startingPrice ? hit.startingPrice : '';
            stars = hit.productRating ? stars[0].outerHTML : '';
            var ratingHtml = ((productRating && stars) ? ('<div class="ratings-container">' + stars + productRating + ' ' + reviewCountHtml + '</div>') : '');
            var title = hit.productName;
            var fullDescription = hit.skuDescription || '';
            const descriptionRegex = new RegExp("</?[a-z][^>]*>", "g");
            var description = fullDescription ? fullDescription.replace(descriptionRegex, " ") : "";
            var isInStock = hit.stockStatus === 'IN STOCK';
            var notInStock = hit.stockStatus === 'OUT OF STOCK';
            var skuId = hit.skuId || '';
            var hitThumbnail = hit.productThumbnail;
            var thumbExtension = hitThumbnail && (hitThumbnail.indexOf('/content/dam') == 0) && (hitThumbnail.indexOf('thumb.319.319') >= 0) ? '.thumb.319.319.png' : '';
            var displayPrice =hit.salePrice?hit.salePrice:'';
            var displayPriceToCompare = displayPrice ? displayPrice : displayStartPrice;
            freeShipingPriceLimit = freeShipingPriceLimit ? freeShipingPriceLimit : 49;
            var freeShippingHtml = "";
            priceToCompare = displayPriceToCompare ? Number(displayPriceToCompare.replace(/[^0-9.-]+/g,"")) : -1; // -1 indicates invalid price value
            if ((priceToCompare > 0) && (priceToCompare > freeShipingPriceLimit)) {
                freeShippingHtml = '<div class="free-shipping-container">'
                + '<img class="free-shipping-container_icon" src="/content/dam/extranet/enterprise/images/icons/shipping.svg"></img>'
                + '<span class="free-shipping-container_text">Free Shipping!</span></div>';
            }
            return '<a class="sku-item" data-page="'+ (search.helper.state.page + 1) +'" href="' + hit.url + '?queryID='+ hit.__queryID +'&objectID='+ hit.objectID +'&indexName='+ indexName +'" aria-label="Link to ' + (hit.productName || hit.title) + '" ' + bindEvent('click', hit, 'Product Grid: Product SKU Click') + $target + '>'
                //+ '<div class="quickview" data-sku-page="' + hit.url + '" data-sku-title="' + title + '"><span class="icon-eye"></span><span>QUICKVIEW</span></div>'
                + '<div class="top-image contain">' + (hitThumbnail ? ('<img loading="lazy" src="' + hitThumbnail + thumbExtension + '" alt="Product Image"/>') : ('<img loading="lazy" src="/content/dam/extranet/product-related/product-photo/Placeholder Image.png.thumb.319.319.png" alt="Product Image"/>')) + '</div>'
                + '<div class="title title-text">' + title + '</div>'
                + '<div class="model-number">SKU #:' + ' <strong>' + skuId + '</strong></div>'
                + '<span class="description description-text">' + description + '</span>'
                + ratingHtml
                + '<div class="card-footer">'
                +   '<div class="price-container">'
                +       (displayPrice ? ('<span class="sale-price">' + displayPrice + '</span>'+'<span class="starting-price-strike">' + displayStartPrice +'</span>') : ('<span class="starting-price">'+ displayStartPrice +'</span>'))
                +   '</div>'
                +   freeShippingHtml
                +   (isInStock &&  !(hit.hasOwnProperty("skuStatus") && hit.skuStatus.toLowerCase() === 'discontinued')  ? '<button class="sku-view-product-btn sku-atc-btn-impact-green" data-sku-id="' + skuId + '" ' + bindEvent('conversion', hit, 'Product Grid: View Product Button Click') + $target + '>' + 'VIEW PRODUCT' + '</button>' : '')
                +   (notInStock &&  !(hit.hasOwnProperty("skuStatus") && hit.skuStatus.toLowerCase() === 'discontinued') ? '<button class="sku-out-of-stock-btn" data-sku-id="' + skuId + '">' + 'OUT OF STOCK' + '</button>' : '')
                +   (hit.hasOwnProperty("skuStatus") && hit.skuStatus.toLowerCase() === 'discontinued' ? '<button class="sku-out-of-stock-btn" disabled data-sku-id="' + skuId + '">' + 'DISCONTINUED' + '</button>' : '')
                + '</div>'
                + (hit.discontinueBanner == "true"||  (hit.hasOwnProperty("skuStatus") && hit.skuStatus.toLowerCase() === 'discontinued') ? '' :
                    hit.hasOwnProperty("skuStatus") && hit.skuStatus.toLowerCase() === 'featured' ?
                        '<div class="ribbon ribbon-top-left featured-color"><span>Featured</span>':
                        hit.hasOwnProperty("skuStatus") && hit.skuStatus.toLowerCase() === 'recommended' ?
                            '<div class="ribbon ribbon-top-left recommended-color"><span>Recommended</span>': '') + '</a>';
        };

        // Displays a link to go back to the product grid when there are no results. Adds classes for styling.
        function displayBackLink() {
            let $resultsElement = $(document.getElementsByClassName('results-count')[0]);
            let $resultsTextElement = $resultsElement ? $resultsElement.find('.ais-Stats-text') : null;
            if ($resultsTextElement && $resultsTextElement.html() === "No product results") {
                $resultsElement.addClass('results-count__no-results');
                $resultsTextElement.addClass('results-count__no-results--text');
                $('<div class="results-count__no-results--link"><a href="' + window.location.href + '"><span>Return to previous page</span></a></div>').insertAfter($resultsTextElement);
            }
        }

        let sortByItems = [
            { value: indexName, label: 'Sort by Relevance' },
            { value: indexName + '_price_asc', label: 'Price low to high' },
            { value: indexName + '_price_dsc', label: 'Price high to low' },
            { value: indexName + '_sort_alpha_asc', label: 'A-Z' },
            { value: indexName + '_sort_alpha_dsc', label: 'Z-A' }
        ];

        if (gridItemType !== 'sku') {
            sortByItems = sortByItems.filter(item => !item.value.includes('_price'));
        }

            search.addWidgets([
            instantsearch.widgets.configure({
                clickAnalytics: true
            }),
            PENTAIR.CustomAlgoliaWidgets.clearRefinements(hiddenFilterAttributes)({
                container: containerElem.find('.filters .clear-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.currentRefinements(hiddenFilterAttributes)({
                container: containerElem.find('.filters .current-refinements')[0]
            }),
            PENTAIR.CustomAlgoliaWidgets.dynamicHierarchicalMenu()({
                container: containerElem.find('.filters .categories')[0],
                limit: 20,
                sortBy: ['count:desc'],
                attributes: [
                    'categories.lvl0',
                    'categories.lvl1'
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Product Type', 'channel')({
                    container: containerElem.find('.filters .channel')[0],
                    attribute: 'channel',
                    templates: {
                        item: function(item) {
                            var splitLabel = item.label.split(",")[1],
                                slugLbl = String(splitLabel+"_products").toLowerCase().replace(/ /g,"_");
                            return '<label for="'+slugLbl+'">' +
                                '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                                '<span>' + splitLabel + '</span>'+
                                '<span class="item-count">' + item.count + '</span>' +
                                '<span class="sr-only">Filter</span>' +
                            '</label>'
                        }
                    }
                }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Brands', 'brands')({
                container: containerElem.find('.filters .brands')[0],
                attribute: 'brands',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split(",")[1],
                            slugLbl = String(splitLabel+"_products").toLowerCase().replace(/ /g,"_");
                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Applications', 'applications')({
                container: containerElem.find('.filters .applications')[0],
                attribute: 'applications',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split(",")[1],
                            slugLbl = String(splitLabel+"_products").toLowerCase().replace(/ /g,"_");
                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.ratingFilterPanel('Average Customer Rating', 'productRating')({
                container: '.filters .rating.filter-container',
                attribute: 'productRating',
                templates: {
                    item: `
                      {{#count}}
                        <a class="{{cssClasses.link}}" aria-label="{{value}} & up" href="{{url}}">
                      {{/count}}
                      {{^count}}
                        <div class="{{cssClasses.link}}" aria-label="{{value}} & up" disabled>
                      {{/count}}
                      {{#stars}}
                        <svg
                          class="{{cssClasses.starIcon}} {{#.}}{{cssClasses.fullStarIcon}}{{/.}}{{^.}}{{cssClasses.emptyStarIcon}}{{/.}}"
                          aria-hidden="true"
                          width="24"
                          height="24"
                        >
                          {{#.}}<use xlink:href="#ais-RatingMenu-starSymbol_0"></use>{{/.}}
                          {{^.}}<use xlink:href="#ais-RatingMenu-starEmptySymbol_0"></use>{{/.}}
                        </svg>
                      {{/stars}}
                      <span class="{{cssClasses.label}}">&amp; Up</span>
                      {{#count}}
                        <span class="{{cssClasses.count}}">{{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}}</span>
                      {{/count}}
                      {{#count}}
                        </a>
                      {{/count}}
                      {{^count}}
                        </div>
                      {{/count}}
                    `,
                }
            }),
            instantsearch.widgets.hitsPerPage({
                container: containerElem.find('.hits-per-page')[0],
                items: [{ label: '12 products/page', value: 12, default: true },
                    { label: '24 products/page', value: 24 },
                    { label: 'View All', value: 1000 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: containerElem.find('.sorting')[0],
                items: sortByItems
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.results-count')[0],
                templates: {
                    text: '{{#hasNoResults}}No product results{{#query}} for "{{query}}"{{/query}}{{/hasNoResults}}' +
                '{{#hasOneResult}}1 product result{{#query}} for "{{query}}"{{/query}}{{/hasOneResult}}' +
                '{{#hasManyResults}}{{nbHits}} product results{{#query}} for "{{query}}"{{/query}}{{/hasManyResults}}'
                }
            }),
            instantsearch.widgets.stats({
                container: containerElem.find('.pagination-message')[0],
                templates: {
                    text: function(result) {
                        displayBackLink(); // Need to call when filter results update
                        var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                        var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                        return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                    },
                }
            }),
            instantsearch.widgets.hits({
                container: containerElem.find('.results')[0],
                templates: {
                    item: function(hit, bindEvent) {
                        if (gridItemType == 'sku') {
                            return renderSKUHits(hit, bindEvent);
                        }
                        var $target = PENTAIR.AlgoliaHelpers.getTarget(hit.url);
                        var productRating = hit.productRating ? ($('<span class="rating"></span>').text(hit.productRating)[0].outerHTML) : '';
                        var stars = $('<span class="stars"></span>').text(hit.productRating);
                        stars = stars.stars();
                        stars = hit.productRating ? stars[0].outerHTML : '';
                        var ratingHtml = ((productRating && stars) ? ('<div class="ratings-container">' + stars + productRating + '</div>') : '');
                        var title = (instantsearch.snippet({ "attribute": "productName", "highlightedTagName": "mark", "hit": hit }) || instantsearch.snippet({ "attribute": "title", "highlightedTagName": "mark", "hit": hit }));
                        title = (title.length < 64) ? title : (title.substring(0,60) + '...');
                        return '<a class="product-item" data-page="'+ (search.helper.state.page + 1) +'" href="' + hit.url + '?queryID='+ hit.__queryID +'&objectID='+ hit.objectID +'&indexName='+ indexName +'" aria-label="Link to ' + (hit.productName || hit.title) + '" ' + bindEvent('click', hit, 'Product Grid: Product Click') + $target + '>'
                        + '<div class="top-image contain">' + (hit.productThumbnail ? ('<img loading="lazy" src="' + hit.productThumbnail + '.thumb.319.319.png" alt="Product Image"/>') : ('<img loading="lazy" src="/content/dam/extranet/product-related/product-photo/Placeholder Image.png.thumb.319.319.png" alt="Product Image"/>')) + '</div>'
                        + '<div class="title title-text">' + title + '</div>'
                        + ratingHtml + (hit.discontinueBanner == "true" ? '<div class="ribbon ribbon-top-left"><span>Discontinued</span></div>' : '') + '</a>';
                    },
                    empty: ''
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.virtualSearchBox(),
            PENTAIR.CustomAlgoliaWidgets.virtualRefinementList({attribute: 'microApplications'}),
            PENTAIR.CustomAlgoliaWidgets.virtualRefinementList({attribute: 'channel'}),
            PENTAIR.CustomAlgoliaWidgets.virtualRefinementList({attribute: 'brands'}),
            PENTAIR.CustomAlgoliaWidgets.virtualRefinementList({attribute: 'applications'}),
            PENTAIR.CustomAlgoliaWidgets.virtualRefinementList({attribute: 'flatCategories'})
        	].concat(PENTAIR.AlgoliaProductGridSearchWidgets.getDynamicFilterWidgets(search, indexName, containerElem))// Add dynamic filters
        ); // Add dynamic filters

        // // For filter modal
        search.addWidgets(PENTAIR.AlgoliaProductGridSearchWidgets.getDynamicFilterWidgets(search, indexName, $('#productGridModal'), 'modal_'));

        // For filter modal
        search.addWidgets([
            PENTAIR.CustomAlgoliaWidgets.dynamicHierarchicalMenu()({
                container: $('#productGridModal .filters .categories')[0],
                limit: 20,
                sortBy: ['count:desc'],
                attributes: [
                    'categories.lvl0',
                    'categories.lvl1'
                ]
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Product Type', 'channel')({
                container: $('#productGridModal .filters .channel')[0],
                attribute: 'channel',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split(",")[1],
                            slugLbl = String(splitLabel+"_products_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Brands', 'brands')({
                container: $('#productGridModal .filters .brands')[0],
                attribute: 'brands',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split(",")[1],
                            slugLbl = String(splitLabel+"_products_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Applications', 'applications')({
                container: $('#productGridModal .filters .applications')[0],
                attribute: 'applications',
                templates: {
                    item: function(item) {
                        var splitLabel = item.label.split(",")[1],
                            slugLbl = String(splitLabel+"_products_modal").toLowerCase().replace(/ /g,"_");

                        return '<label for="'+slugLbl+'">' +
                            '<input type="checkbox"' + (item.isRefined ? 'checked' : '')  + ' id="'+slugLbl+'" name="'+slugLbl+'">' +
                            '<span>' + splitLabel + '</span>'+
                            '<span class="item-count">' + item.count + '</span>' +
                            '<span class="sr-only">Filter</span>' +
                        '</label>'
                    }
                }
            }),
            PENTAIR.CustomAlgoliaWidgets.ratingFilterPanel('Average Customer Rating', 'productRating')({
                container: '#productGridModal .rating.filter-container',
                attribute: 'productRating',
                templates: {
                    item: `
                      {{#count}}
                        <a class="{{cssClasses.link}}" aria-label="{{value}} & up" href="{{url}}">
                      {{/count}}
                      {{^count}}
                        <div class="{{cssClasses.link}}" aria-label="{{value}} & up" disabled>
                      {{/count}}
                      {{#stars}}
                        <svg
                          class="{{cssClasses.starIcon}} {{#.}}{{cssClasses.fullStarIcon}}{{/.}}{{^.}}{{cssClasses.emptyStarIcon}}{{/.}}"
                          aria-hidden="true"
                          width="24"
                          height="24"
                        >
                          {{#.}}<use xlink:href="#ais-RatingMenu-starSymbol_0"></use>{{/.}}
                          {{^.}}<use xlink:href="#ais-RatingMenu-starEmptySymbol_0"></use>{{/.}}
                        </svg>
                      {{/stars}}
                      <span class="{{cssClasses.label}}">&amp; Up</span>
                      {{#count}}
                        <span class="{{cssClasses.count}}">{{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}}</span>
                      {{/count}}
                      {{#count}}
                        </a>
                      {{/count}}
                      {{^count}}
                        </div>
                      {{/count}}
                    `,
                }
            }),
            instantsearch.widgets.hitsPerPage({
                container: $('#productGridModal .hits-per-page')[0],
                items: [{ label: '12 products/page', value: 12, default: true },
                    { label: '24 products/page', value: 24 }
                ]
            }),
            instantsearch.widgets.sortBy({
                container: $('#productGridModal .sorting')[0],
                items: sortByItems
            })
        ]);

        search.on('render', function() {
            closeAddToCartPreview();
            resizeAddToCartPreview();
            viewCartFromAddToCartPreview();
        });

        // Pagination
        if(window.matchMedia('(max-width: 767px)').matches){
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    scrollTo: containerElem[0]
                }),
            ])
        }
        else{
            search.addWidgets([
                instantsearch.widgets.pagination({
                    container: containerElem.find('.algolia-pagination')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 2,
                    templates: {
                        next: '',
                        previous: ''
                    }
                }),
            ])
        }
    },
    getDynamicFilterWidgets: function(search, indexName, containerElem, prefix) {
    	var dynamicFilters = $('#productGridComponent').data('attrFilters') || [];
        var dynamicLabels = $('#productGridComponent').data('attrLabels') || {};

		var dynamicAccordianWidgetOptions = dynamicFilters.map(function(attributeName){
            var attributeLabel = dynamicLabels[attributeName+'_label'] ? dynamicLabels[attributeName+'_label'] : attributeName.split('_')[1].replace('_', ' ');
			return {name: attributeLabel, attribute: attributeName, containerElem: containerElem.find('.filters .' + attributeName)[0], prefix: prefix || ""}
		});

        return PENTAIR.CustomAlgoliaWidgets.dynamicAccordianWidgets(dynamicAccordianWidgetOptions);
    },
}

function addToEmptyCart(number, sku, addToCartBtnElement) {
    return window.CIF.CommerceGraphqlApi.createEmptyCart(function (data) {
        setCookiesCartId(data);
        var cart_id = getCookiesCartId() || data.createEmptyCart;
        addToCart(cart_id, number, sku, addToCartBtnElement);
    });
}
// set Add to Cart Preview modal position on page resize
function addToCart(cart_id, quantity, sku, addToCartBtnElement) {
    var installation = false;
    var subscriptionId = '';
    var subscriptionValueString = '';
    var subscriptionDate = '';

    var zipcode = localStorage.getItem('zipcode') || '[Unable get your zipcode]';

    return window.CIF.CommerceGraphqlApi.addToCart(cart_id, quantity, sku, installation, subscriptionId, subscriptionValueString, subscriptionDate, zipcode,
        function (data) {
            if (data && data.addSimpleProductsToCart) {
                showCartNumber(data.addSimpleProductsToCart);
                if (data.addSimpleProductsToCart.cart && data.addSimpleProductsToCart.cart.items) {

                    // Adobe analytics track add to cart event payloads
                    if (quantity == data.addSimpleProductsToCart.cart.total_quantity) {
                        // If the number/qty that was added == total cart quantity then the cart was empty
                        trackAddToCartAnalyticsEvent(sku, data.addSimpleProductsToCart.cart.id, true);
                    } else {
                        trackAddToCartAnalyticsEvent(sku, data.addSimpleProductsToCart.cart.id, false);
                    }
                    var addSimpleProductsToCartObj = data.addSimpleProductsToCart;
                    var items = addSimpleProductsToCartObj.cart.items;
                    var subtotal = data.addSimpleProductsToCart.cart.prices.subtotal_with_discount_excluding_tax.value;
                    showPreviewWindow(items, quantity, addSimpleProductsToCartObj.cart.total_quantity, subtotal, $(addToCartBtnElement).closest('.ais-Hits-item'));


                    //Show item added text for 5 seconds
                    $(addToCartBtnElement).text('ADDED !');
                    /* if( $('.icon-cart').length > 0) {
                         $('.icon-cart')[0].click()
                     }*/

                    setTimeout(function() {
                        $(addToCartBtnElement).text('ADD TO CART');
                    }, 5000);

                }
            }
        }, function (errorMsg) {
            console.error('Failed to add to cart');
        }
    );
}


/**
 * Track the payload for add to cart button click event in Adobe analytics.
 * @param sku of the product being added to cart
 * @param cart_id id of the cart
 * @param {boolean} addedToEmptyCart true/false if the cart was empty
 */
function trackAddToCartAnalyticsEvent(sku, cart_id, addedToEmptyCart) {
    var eventAddToCartPayload = {
        eventName: addedToEmptyCart ? 'cart open' : 'add to cart',
        eventType: 'custom',
        attributes: {
            product: {
                skuID: sku
            },
            cart: {
                cartID: cart_id
            },
            visitor:  {
                pentairCustomerID: getPentairCustomerID(), //if this is available
                dealerID: getDealerID() //if this is available
            }
        }
    };
    trackEventWithQueue(eventAddToCartPayload);
}

function setupAddToCartClickListeners() {
    const skuAddToCartBtns = $('.sku-add-to-cart-btn');
    skuAddToCartBtns.each(function (index, addToCartBtnElement) {
        $(addToCartBtnElement).on('click', function (e) {
            // Prevent add to cart btn click from going to sku page
            e.preventDefault();

            if (!window.CIF || !window.CIF.CommerceGraphqlApi) {
                return;
            }

            var skuId = $(addToCartBtnElement).data('sku-id');
            if (!skuId) {
                return;
            }

            // Called from cart.js
            var cartId = getCookiesCartId();
            if (cartId) {
                addToCart(cartId, 1, skuId, addToCartBtnElement);
            } else {
                addToEmptyCart(1, skuId, addToCartBtnElement);
            }
        });
    });
}

function setupQuickviewClickListeners() {
    const quickviewBtns = $('.quickview');
    quickviewBtns.each(function (index, quickviewBtnElement) {
        $(quickviewBtnElement).on('click', function (e) {
            // Prevent add to cart btn click from going to sku page
            e.preventDefault();

            var skuPage = $(quickviewBtnElement).data('sku-page');
            if (!skuPage) {
                return;
            }

            requestAndBuildQuickview(skuPage);
        });
    });
}

// This function is similar to the one from product-information, but modified to reload within the modal
function changeSku(keyname, oldSkuPage, oldSku, isConfigurable) {
    if(keyname !== '' && keyname != 'undefined'){
        var keyArr = keyname.split("#");
        if(keyArr.length == 2){
            var skuid = keyArr[1];
            var productFindingMethod = localStorage.getItem("productFindingMethodTemp");

            // Set productFindingMethod for Analytics
            localStorage.setItem("productFindingMethod", productFindingMethod);
            document.cookie="productFindingMethod=" + productFindingMethod +"; domain=.pentair.com; path=/";

            oldSkuPage = oldSkuPage.replace(oldSku, skuid);
            requestAndBuildQuickview(oldSkuPage, '');
        }
    }
}

// This function will make a request to the specified skuPage, and append the skuTitle at the top to complete the quick view experience
function requestAndBuildQuickview(skuPage) {
    var $skuQuickviewModal = $('#skuQuickviewModal');
    var $modalDom = $skuQuickviewModal.find('.sku-data .quick-view');

    if($skuQuickviewModal.length && $modalDom.length) {
        // Add loading spinner while we build the quickview. This will allow instant feedback to the user while AJAX request processes.
        $modalDom.find('.quick-view-product-information').empty();
        $modalDom.find('.quick-view-overview').empty();
        $modalDom.append('<div class="loader-wrapper loader"><div class="results-loader"></div></div>');
        $skuQuickviewModal.modal();

        $.ajax({
            url: skuPage,
            type:'GET',
            success: function(data){
                var $productInformationContainer = $(data).find('.component.product-information');
                var $productOverviewContainer = $(data).find('.product-overview');

                if ($productInformationContainer.length > 0) {
                    $modalDom.find('.quick-view-product-information').html($productInformationContainer[0].outerHTML);
                    new ProductBuyCard($('#skuQuickviewModal .component.product-information'));
                }
                if ($productOverviewContainer) $modalDom.find('.quick-view-overview').html($productOverviewContainer.html());

                var $productSku = $modalDom.find('.prod-sku');
                var skuTitle = $modalDom.find('.component.product-information').data("product-name");
                if ($productSku && skuTitle) $productSku.before('<h3>' + skuTitle + '</h3>');

                var $productBuyCard = $modalDom.find('.product-buy-card');
                if($productBuyCard) {
                    $productBuyCard.after('<div class="view-full-details"><a href="' + skuPage + '" class="btn btn-secondary" target="_blank">VIEW FULL DETAILS</a></div>');
                }

                var outOfStock = $modalDom.find('.component.product-information').data("stock") === "OUT_OF_STOCK";
                if(outOfStock) {
                    $modalDom.find('.stock').addClass('out-of-stock');
                    $productBuyCard.find('.buttons').html('<div class="out-of-stock"><a class="btn btn-disabled" target="_blank">OUT OF STOCK</a></div>');
                }

               var $skuSelector = $modalDom.find('.skuselector');
               $skuSelector.on('click', 'div.values', function () {
                  var keyname = $(this).attr("data-keyname");
                  var isConfigurable = $modalDom.find('.component.product-information').data("product-configurable");
                  var oldSku = $modalDom.find('.component.product-information').data("product-sku");
                  changeSku(keyname, skuPage, oldSku, isConfigurable);
               });

               // Refire the load event, which will allow owl carousel to rebuild itself
               // I don't think this should cause issues, but if so we can alter the component itself and move the logic to a function I can call again
               dispatchEvent(new Event('load'));

               // Remove loading spinner once ready.
               $skuQuickviewModal.find('.loader-wrapper').remove();
            },
            error: function(data){
               $modalDom.find('.quick-view-product-information').empty().html('<div class="error-message">An error occurred when processing the request.</div>');

               // Remove loading spinner once ready.
               $skuQuickviewModal.find('.loader-wrapper').remove();
            }
        });
    }
}

var ProductGridViewModel = function(componentElement) {
    var self = this;

    self.userToken = HeaderUtil.getCloudVisitorId();
    self.applicationId = componentElement.data('applicationId');
    self.searchApiKey = componentElement.data('searchApiKey');
    self.indexEnvironment = componentElement.data('indexEnvironment');
    self.tabIndexes = ko.observableArray(componentElement.data('tabIndexes'));
    self.searchClient = algoliasearch(self.applicationId, self.searchApiKey);
    // URL param names used for algolia search
    self.algoliaURLParams = ["perPage", "index", "tab", "q"];
    // URL params suffixes used to identify algolia search refinements
    self.algoliaURLParamIdentifiers = [".disjunctive", ".hierarchical"];

    self.preFilters = ko.observable($(componentElement).data('preFilters'));
    self.hideAllFilters = ko.observable($(componentElement).data('hideAllFilters'));
    self.hiddenFilterAttributes = ko.computed(function(){
      var alwaysHiddenAttributes = ['microApplications'];
      var preFilterKeys = _.uniq(_.keys(self.preFilters()).filter(function(key){return self.preFilters()[key].prefilter})); // If prefilter option is true, hide the filter dropdown.
      if(preFilterKeys.indexOf('flatCategories') != -1){
        preFilterKeys.push('categories');
      }
      return preFilterKeys.concat(alwaysHiddenAttributes);
    });

    self.hasFilter = ko.observable(false);

    self.showFilters = ko.computed(function(){return self.hasFilter() && !self.hideAllFilters();});

    self.tabSearchObjects = [];

    // Set whether to search for skus or product pages
    self.productIndex = ko.observable(componentElement.data('products-index'));
    self.skuIndex = ko.observable(componentElement.data('skus-index'));
    var gridItemType = componentElement.data('grid-item-type');
    var indexToSearch = gridItemType === 'sku' ? self.skuIndex() : self.productIndex();
    self.currentTab = ko.observable(indexToSearch);
    console.log('indexToSearch: ', indexToSearch);

    self.totals = ko.observable({});

    self.instantsearchWidgets = {};

    self.isMobile = ko.observable(window.matchMedia('(max-width: 767px)').matches);
    self.isFilterOpen = ko.observable(false); // closed by default for product grid

    self.filterIndex = ko.observable('');

    self.isFilterVisible = function(attributeName){
      return self.hiddenFilterAttributes().indexOf(attributeName) == -1; // If attribute is not in hidden filter list, return true.
    };

    self.shouldShowMobileFilterModal = function() {
        return self.currentTab() == self.skuIndex() || self.currentTab() == self.productIndex();
    }

    let isPaginationWasClicked = false;

    // Analytics setup
    var insightsMiddleware = instantsearch.middlewares.createInsightsMiddleware({
      insightsClient: aa
    });

    if(self.userToken){
      aa('setUserToken', self.userToken);
    }

    self.paramsFromCurrentState = function(){
      var refinements = {};
      var paramRefinements = {};
      var currentTabResults = {};

      if(self.currentTab() && self.currentTab() != 'all' && self.instantsearchWidgets[self.currentTab()] && self.instantsearchWidgets[self.currentTab()].helper && self.instantsearchWidgets[self.currentTab()].helper.lastResults){
        currentTabResults = self.instantsearchWidgets[self.currentTab()].helper.lastResults;
        refinements = currentTabResults.getRefinements();
      }

      var ignoreAttributes = _.chain(self.preFilters()).keys().reduce(function(acc, attribute){ // For ignoring attributes that are prefilters.
          acc.push(self.preFilters()[attribute]['name'].length ? attribute : '');
          return acc;
        }, []).compact().value();

      paramRefinements =  _.chain(refinements).filter(function(elem){
          return ignoreAttributes.indexOf(elem.attributeName) == -1
        }).groupBy(function (entity) {
            return entity.attributeName;
        }).map(function (vals, key) {
            return [key + '.' + vals[0].type, _.pluck(vals, 'name').join(';')]
        }).object().value();

      if(currentTabResults){
        var otherOptions = {
          page: (currentTabResults.page > 0) ? (currentTabResults.page + 1) : null,  // Only pass if not page 1
          index: currentTabResults.index != self.currentTab() ? currentTabResults.index : null,
          perPage: currentTabResults.hitsPerPage != 12 ? currentTabResults.hitsPerPage : null
        };

       otherOptions = _.chain(otherOptions).pairs().filter(function(elem){return !!elem[1]}).object().value()
        // page, sortby, per page
      }

      return $.extend(paramRefinements, otherOptions);
    };

    self.displayResultTotalByIndex = function (indexName) {
      return self.totals()[indexName] ? ' (' + self.totals()[indexName] + ')' : ' (0)';
    };

    self.resultTotalByIndex = function (indexName) {
      return self.totals()[indexName] ? self.totals()[indexName] : '0';
    };

    self.hasResults = function (indexName) {
      return self.totals()[indexName] ? !!self.totals()[indexName] : false;
    };

    self.clearRefinements = function (indexName) {
      self.instantsearchWidgets[indexName].helper.clearRefinements();
      self.instantsearchWidgets[indexName].helper.search();
      return false;
    };

    self.setFilterIndex = function (indexName) {
      self.filterIndex(indexName);
    };

    self.filterClick = function (event) {
      var isFilterClick = $(event.target).is('input');
      var isCategoryFilterClick = $(event.target).parents('.categories').length > 0;
      var debouncedUpdateAnalytics = _.debounce(updateAnalytics, 500);
      if(isFilterClick || isCategoryFilterClick){
        self.instantsearchWidgets[self.currentTab()].once('render', function(){
          debouncedUpdateAnalytics('refine', 'filter');
        });
      }
      return false;
    };

    self.getTabName = function (indexName) {
      var index = self.tabIndexes().filter(function(index){return index.indexName === indexName});
      return index.length > 0 ? index[0]['tabName'] : '';
    }

    self.classFromIndex = function(indexName){
      return indexName.slice(indexName.indexOf('_') + 1) .replace('_', '-');
    };

    self.closeModal = function () {
      $(event.currentTarget).parents('figure').find('.icon-close').click()
    };

    self.openFilter = function(context, event){ // for toggling open/closed state
      var headerClick = $(event.target).closest('.ais-Panel-header').length;
      if(headerClick){
        $(event.currentTarget).toggleClass("open");

        if($(event.currentTarget).hasClass("open")){
          $(event.currentTarget).find('.ais-Panel-body').slideDown('fast');
        } else {
          $(event.currentTarget).find('.ais-Panel-body').slideUp('fast');
        }
      }
      return true;
    };

    self.openTab = function (tabIndex, initialLoad) {
      componentElement.find('.tab-search-name .' + tabIndex).click();
      return false;
    };

    self.renderRefinementList = function(renderOptions, isFirstRender) {
        var container = componentElement.find('.search-input-container .categories')[0];

        if (isFirstRender) {
          var ul = document.createElement('ul');
          container.appendChild(ul);
        }

        container.querySelector('ul').innerHTML = renderOptions.items
          .map(function(item){
            return '<li>' +
                '<a href="#" data-value="' + item.value + '" style="font-weight: ' + item.isRefined ? 'bold' : '' + '">' +
                  item.label + '(' + item.count + ')' +
                '</a>' +
              '</li>';
          })
          .join('');
      };

    self.initAlgoliaTab = function (searchClient, indexName, containerElem) {

        var params = getParams();

        var initialUiState = {};

        if(self.currentTab() === indexName){  // UI state for selected tabs.
          initialUiState[self.currentTab()] = {
              hitsPerPage: params.perPage,
              hierarchicalMenu: getRefinements(search).hierarchical,
              refinementList: getRefinements(search).disjunctive,
              //sortBy: params.index
            }
        }

        var search = instantsearch({
          indexName: indexName,
          searchClient: searchClient,
          clickAnalytics: true,
          initialUiState: initialUiState,
          searchFunction: function(helper) {
            var preFilterList = ['flatCategories', 'brands', 'channel', 'microApplications', 'applications'];
            var currentPage = !!search.ignorePageParam ? helper.getPage() : ((parseInt(params.page, 10) - 1) || 0); // Use param for first render.
            preFilterList.forEach(function(preFilterName){
              if(self.preFilters()[preFilterName] && self.preFilters()[preFilterName].name && self.preFilters()[preFilterName].prefilter && helper.state.disjunctiveFacets.indexOf(preFilterName) > -1){
                self.preFilters()[preFilterName].name.forEach(function(categoryName, index){
                  helper.addDisjunctiveFacetRefinement(preFilterName, categoryName);
                });
            }
            });
            helper.setPage(currentPage).search(); // Note: addDisjunctiveFacetRefinement resets page to firstPage, so if this is first render, we need to make sure page is reset to param.
            search.ignorePageParam = helper.ignorePageParam || true;
          }
        });

        // TODO: Fix this
        var indexWithoutEnvironment = 'pentair_products' //indexName.split('_').slice(1).join('_');

        var gridItemType = componentElement.data('grid-item-type');
        var freeShipingPriceLimit = componentElement.data('freeshipingpricelimit');
        console.log('Hidden attributes: ', self.hiddenFilterAttributes());

        if(PENTAIR.AlgoliaProductGridSearchWidgets[indexWithoutEnvironment]){
          PENTAIR.AlgoliaProductGridSearchWidgets[indexWithoutEnvironment](search, indexName, containerElem,self.hiddenFilterAttributes(), gridItemType,freeShipingPriceLimit);
        }

        search.once('render',function(){
          var categoryList = componentElement.find('.category-container ul').first();
          var autoExpandCategory = (categoryList.children().length == 1) && (categoryList.children().first().not('.refined').length == 1);

          if(autoExpandCategory){
            var categoryVal = categoryList.children().first().find('a').data('value');
            var decodedCategoryVal = categoryVal ? decodeURI(categoryVal) : categoryVal;
            this.helper.addHierarchicalFacetRefinement('categories.lvl0', decodedCategoryVal);
            search.ignorePageParam = false;
            this.helper.search();
          }

          containerElem.find('.algolia-filter-container .ais-Panel-body').each(function(){
            $(this).hide();
          });
        });

        search.on('render', function(){
          var totals = self.totals();

          if(this.helper.lastResults) {
            self.hasFilter(containerElem.find('.algolia-filter-container .ais-Panel').not('.ais-Panel--noRefinement').length > 0);
            totals[this.indexName] = this.helper.lastResults.nbHits;
            self.totals(totals);
          }

          if(self.currentTab() === indexName && search.helper.lastResults){
            self.setBrowserState(self.paramsFromCurrentState())
          }

          productGridResultClickAnalyticInit();

          if (gridItemType === 'sku') {
              setupAddToCartClickListeners();
              setupQuickviewClickListeners();
          }

          if (isPaginationWasClicked) {
              const firstItem = componentElement.find(".product-results a").first();
              if (firstItem) {
                  firstItem.focus();
              }
          }
        });

        if (!window.document.documentMode) { //  Disable in IE
            search.use(insightsMiddleware);
        }

        self.tabSearchObjects.push(search);

        search.start();

        return search;
    };

    // Product Grid Result Item Click Analytics
    function productGridResultClickAnalyticInit() {
        componentElement.find(".product-item").on("click", function() {
            var microApplicationTag = componentElement.data("microAppTag");
            var linkName = $(this).find(".title").text();
            var linkPage = $(this).data("page");
            if(!_.isUndefined(window._satellite)){
                _satellite.track('productGridResultClick', {pgType: microApplicationTag, pgLinkName: linkName, pgPosition: linkPage} );
            }
        });
    }

    function getParams() {
      // gets url parameters and builds an object
      return _.chain(location.search.slice(1).split('&'))
             .map(function (item) { if (item) { return item.split('='); } })
             .compact()
             .object()
             .value();
    }

    function getRefinements(search){
      var params = getParams();

      var refinementHelper = function(refinementType){
        return _.reduce(params, function(acc, value, key) {
          var hierarchical = key.split('.' + refinementType);
          var returnObj = {};
          if(hierarchical.length > 1){
            returnObj[hierarchical[0]] = decodeURIComponent(value.replace(/\+/gm,"%20")).split(';');
          }
          return $.extend(acc, returnObj);
        }, {});
      };

      var hierarchical = refinementHelper('hierarchical');
      var disjunctive = refinementHelper('disjunctive');

      return {hierarchical: hierarchical, disjunctive: disjunctive};
    }

    function getSearchConfiguration(search){
      var params = getParams();
      var configObject = {};

      var paramMap = {
        page: params.page ? (params.page - 1) + "" : null,
        query: params.q,
        hitsPerPage: params.perPage
      };

      _.each(paramMap, function(value, key){if(!!value){configObject[key]=value}})

      return configObject;
    };

    self.setBrowserState = function(params) {
        //maintain wcmmode=disabled for author view-as-published mode
        // and other url params e.g. params used for tracking media performance in analytics solutions
        var nonAlgoliaURLParams = _.chain(getParams())
            .pairs()
            .filter(function(entry) {
                var paramName = entry[0];
                var partialMatch = self.algoliaURLParamIdentifiers.some(function(identifier) {
                    return paramName.includes(identifier);
                });
                var exactMatch = self.algoliaURLParams.includes(paramName);
                return !partialMatch && !exactMatch;
            })
            .object()
            .value();
        $.extend(params, nonAlgoliaURLParams);
        var url = $.param.querystring(window.location.href, params, 2);
        window.history.replaceState(params, null, url);
    };

    self.MobileFilterViewModel = function(containerElem, ProductGridViewModel){
      var self = this;
      self.searchView = ProductGridViewModel;
      self.openFilter = ProductGridViewModel.openFilter;
      self.isFilterVisible = ProductGridViewModel.isFilterVisible;
      self.filterClick = ProductGridViewModel.filterClick;
      self.hasResults = ProductGridViewModel.hasResults;
      self.classFromIndex = ProductGridViewModel.classFromIndex;
      self.displayResultTotalByIndex = ProductGridViewModel.displayResultTotalByIndex;
      self.isFilterOpen = function(){
        if(!ProductGridViewModel.isFilterOpen()){
          $(this).find('.ais-Panel-body').hide();
        }
        return ProductGridViewModel.isFilterOpen();
      };
    }

    self.scrollToTopContainer = function () {
        isPaginationWasClicked = true;

        var componentElementPosition = componentElement.offset().top;
        var headerHeight = $(".header.component").height();
        var stickyJumpNav = $("#stickyJumpNav");
        var position = componentElementPosition - headerHeight;
        if (stickyJumpNav.length) {
            position -= stickyJumpNav.height();
        }
        window.scrollTo(0, position);
    };

    self.init = function() {
        var indexToSearch = self.currentTab();

        //Init stand-alone tabs
        componentElement.find('.item').each(function(index, elem){
          self.instantsearchWidgets[indexToSearch] = self.initAlgoliaTab(self.searchClient, indexToSearch, $(this));
        });

        initMobileFilters();
    };

    function initMobileFilters(){
      ko.applyBindings(new self.MobileFilterViewModel($('#productGridModal'), self), $('#productGridModal')[0]);
    };

    function updateAnalytics(eventType, eventAction) {
      var total = self.totals()[self.currentTab()];
      var refinements = [];
      var filterNameValue = "";
      if(self.currentTab() != 'all'){
        var lastResults = self.tabSearchObjects.filter(function(elem){return elem.indexName === self.currentTab()})[0].helper.lastResults;

        refinements = lastResults ? lastResults.getRefinements().filter(function(filter){return filter.attributeName != 'microApplications'}) : [];

        var filterContainer = componentElement.find('.algolia-filter-container');

        var cleanRefinements = _.chain(refinements).groupBy('attributeName').map(function(value, key) {

          filterName = (filterContainer.find('[data-filter-attribute="' + key +'"]').data('filterTitle') || 'Categories') + ':'; // Title Case
          filterNameValue = filterName;

          return filterName + value.reduce(function(acc, elem, index) {
            var attributeName = elem.name.split(',').slice(-1)[0];
            attributeName = attributeName.split('|').slice(-1)[0];
            return acc + attributeName + ((index < value.length - 1) ? '^' : '')
          }, "")
        }).value();
      }

      if(digitalData && digitalData.event){
        var eventArr = {};
        eventArr.eventName = "product filter";
        eventArr.eventAction = eventAction || (total ? "search" : "null");
        eventArr.type = eventType;
        eventArr.timeStamp = new Date();
        digitalData.event.push(eventArr);
      }

      digitalData.productGrid = digitalData.productGrid || {};

      var hasMicroFilters = !!self.preFilters()['microApplications'].name.length

      if(digitalData && digitalData.productGrid){
        digitalData.productGrid.type = hasMicroFilters ? self.preFilters()['microApplications'].name[0].split(',')[1] : '';
        var refinementValues = [];
        for (var i = 0; i < cleanRefinements.length; i++) {
            var filterTitle = cleanRefinements[i].split(":")[0];
            var filterTitleUpperCase = filterTitle.charAt(0).toUpperCase() + filterTitle.slice(1);
            if (cleanRefinements[i].indexOf("^") > 0) {
                var filterItems = cleanRefinements[i].split(":")[1];
                var filterItemsSplit = filterItems.split("^");
                for (var j = 0; j < filterItemsSplit.length; j++) {
                    var filterItem = filterTitleUpperCase + ":" + filterItemsSplit[j];
                    refinementValues.push(filterItem);
                }
            } else {
                var filterItem = filterTitleUpperCase + ":" + cleanRefinements[i].split(":")[1];
                refinementValues.push(filterItem);
            }
        }

        digitalData.productGrid.filterValues = refinements.length ? refinementValues.join("|") : "";
      }
    };

    self.init();
};

$(document).ready(function() {
    $('.product-grid.component').each(function() {
      ko.applyBindings(new ProductGridViewModel($(this)), this);
    });
});

$(document).ready(function() {

    var PressListCarouselModel = function(pressListComponent) {

        var self = this;

        self.pressListCarousel = pressListComponent.find('.owl-carousel');
        self.pagination = pressListComponent.find('.pagination');
        self.currentSlide = 0;

        self.pressListCarousel.owlCarousel({
            nav: false,
            dots: true,
            mouseDrag: false,
            items: 1,
            autoHeight: true
        }).on('initialized.owl.carousel changed.owl.carousel resized.owl.carousel', function(event) {
            self.paginator.paginationItems(self.paginationItems());
            self.update();
        });

        // How many pagination buttons to display depends on screen size.
        self.paginationItems = function() {
            if(matchMedia('(max-width: 991px)').matches) {
                return 3 + "";
            }
            return 5 + "";
        };

        self.update = function() {
            setTimeout(function() {
                var activeDot = self.pressListCarousel.find('.owl-dot.active');
                self.currentSlide = self.pressListCarousel.find('.owl-dot').index(activeDot) + 1;
                self.paginator.currentPage(self.currentSlide);
                reInitEvents();
            }, 10);
        };

        var reInitEvents = function() {
            self.pagination.find('a').on('click', function(e) {
                e.preventDefault();
            });

            self.pagination.find('li a').on('click', function(e) {
                var targetPage = $(e.target).text();
                var targetIndex = targetPage - 1;
                var dist = targetPage - self.paginator.currentPage();
                var direction = (dist < 0) ? 'prev.owl.carousel' : 'next.owl.carousel';
                dist = Math.abs(dist);
                for(var i = 0; i < dist; i++) {
                    self.pressListCarousel.trigger(direction);
                }
                self.paginator.currentPage(targetPage);
            });
        };

        self.prevPage = function prevPage() {
            if(self.paginator.previousPageExists()) {
                var currentPage = self.paginator.currentPage();
                self.paginator.currentPage(currentPage - 1);
                self.pressListCarousel.trigger('prev.owl.carousel');
            }
        };

        self.nextPage = function nextPage() {
            if(self.paginator.nextPageExists()) {
                var currentPage = self.paginator.currentPage();
                self.paginator.currentPage(currentPage + 1);
                self.pressListCarousel.trigger('next.owl.carousel');
            }
        };

        self.init = function() {
            self.totalItems = pressListComponent.find('.owl-item .press-item').length;
            self.itemsPerPage = pressListComponent.find('.active.owl-item .press-item').length;
            self.paginator = new PaginationViewModel(self.totalItems, self.itemsPerPage, self.paginationItems());
            self.paginator.init(self.totalItems);
            self.update();
        };

        self.init();
    };

    var pressListCarousels = $('.press-list.component:not(.edit)');
    if(pressListCarousels.length) {
        $(function() {
            pressListCarousels.each(function() {
                ko.applyBindings(new PressListCarouselModel($(this)), this);
            });
        });
    }
});

$(function(){

    function initModalComponent(instance) {
        var showModalOnPageLoad = $(instance).data("showOnPageLoad");
        var modalDelaySpeed = $(instance).data("modalDelay");
        showModalOnPageLoad === true ? setTimeout(function(){$(instance).modal("show");}, modalDelaySpeed) : $(instance).modal("hide");
    }

    $(document).ready(function() {
        var modalComponents = $(".modal-component.component");
        if (modalComponents.length) {
            modalComponents.each(function() {
                initModalComponent(this);
            });
        }
    });

});
$(document).ready(function(){
    setTimeout(socialWallAdjust, 1000);

    $('.mediawall a').on('click','.content-source-logo', function(e){
        e.preventDefault();
    });


    //open youtube link when play is clicked
    $('.mediawall div').on('click','.content-attachment-controls-play', function(){
        var theLink = $(this).closest('.content').find('.content-body-title').attr('href');
        window.open('https://www.youtube.com/watch?v=' + YouTubeGetID(theLink), '_blank');
        e.stopImmediatePropagation();
    });

    function YouTubeGetID(url){
        var ID = '';
        url = url.replace(/(>|<)/gi,'').split(/(vi\/|v=|\/v\/|youtu\.be\/|\/embed\/)/);
        if(url[2] !== undefined) {
            ID = url[2].split(/[^0-9a-z_\-]/i);
            ID = ID[0];
        }
        else {
            ID = url;
        }
        return ID;
    }

    var mediawallLoadMoreButton = $('.hub-list-more');
    if(mediawallLoadMoreButton.length > 0) {
        var buttonContent = '<span>' + mediawallLoadMoreButton.text() + '</span>';
        mediawallLoadMoreButton.text('');
        mediawallLoadMoreButton.append(buttonContent);
    }

});


//called in main.hbs after wall has loaded
function socialWallAdjust(){
    setTimeout(updateWall, 1000); //runs on delay to let content come in


    function updateWall(){
        $('.mediawall .hub-content-container article').each(function(){
            var theType = $(this).attr('data-content-id');

            if (theType.indexOf("youtube") >= 0){
                $(this).addClass('content-youtube');
            } else if (theType.indexOf("pinterest") >= 0){
                $(this).addClass('content-pinterest');
            }
        });
        if ($('.mediawall').find('.hub-list-more span').length == 0){
            $('.mediawall').find('.hub-list-more').wrapInner('<span></span>');
        }


        $('.mediawall').find('.content.spectrum-content').each(function(){
            var firstItem = $(this).find(' > div');
            var secondItem = $(this).find(' > .content-header');
            secondItem.after(firstItem);
        });

        $('.mediawall .hub-list-more').click(function(e){
            socialWallAdjust();
        });
    }
}
/* global $ */
/* global jQuery */
/* global modal  */

var PENTAIR = PENTAIR || {};

function hostedVid() {
    var vidWrap = $('.media-common.component figure.video');

    vidWrap.each(function(i, el) {
        var poster = $(el).find('video').attr('poster');
        $(el).prepend('<img loading="lazy" src="'+poster+'">');
        $(el).prepend('<button class="play-vid"><span class="play-icon"><svg class="dot" version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M32 16q0 4.354-2.146 8.031t-5.823 5.823-8.031 2.146-8.031-2.146-5.823-5.823-2.146-8.031 2.146-8.031 5.823-5.823 8.031-2.146 8.031 2.146 5.823 5.823 2.146 8.031z"></path></svg><svg class="pla" version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M4.8 30.4c-0.3 0-0.7-0.1-1-0.3-0.6-0.4-1-1-1-1.7v-24.8c0-0.7 0.4-1.4 1-1.7 0.6-0.4 1.4-0.3 2 0l20.6 12.4c0.6 0.4 1 1 1 1.7s-0.4 1.4-1 1.7l-20.5 12.4c-0.4 0.2-0.7 0.3-1.1 0.3zM4.8 2.6c-0.2 0-0.3 0-0.5 0.1-0.3 0.3-0.5 0.6-0.5 0.9v24.7c0 0.4 0.2 0.7 0.5 0.9s0.7 0.2 1 0l20.7-12.3c0.3-0.2 0.5-0.5 0.5-0.9s-0.2-0.7-0.5-0.9l-20.7-12.3c-0.1-0.1-0.3-0.2-0.5-0.2z"></path></svg></span></button>');

        $(el).find('button').on('click touch', function(e) {
            var trgt = $(e.currentTarget),
                img = trgt.parent().find('img'),
                vid = trgt.parent().find('video');

            trgt.animate({
                'opacity': 0
            }, 250, function() {
                trgt.remove();
            });
            img.animate({
                'opacity': 0
            }, 250, function() {
                img.remove();
            });
            $(vid).trigger('play');
        })
    })
};

$(function () {
    var $vidModal = $('#videoModal');
    var $videoModalClose = $vidModal.find('.icon-close');

    var isIE = /*@cc_on!@*/false || !!document.documentMode; // Internet Explorer 6-11
    if(isIE) {
        $('.imagevideo-callout.component .play-vid > img').addClass('is-ie');
    }

    if($('figure.video').length > 0) {
        hostedVid();
    }
    function deployYoutubeClip(videoID) {
        var videoURL = 'https://www.youtube.com/embed/' + videoID +'?rel=0&showinfo=0';
        $vidModal.find('iframe').show();
        $vidModal.find('video').hide();
        $vidModal.find('iframe').attr('src', videoURL);
        $vidModal.modal('show');
    }

    function deployVimeoClip(videoID) {
        var videoURL = 'https://player.vimeo.com/video/' + videoID;
        $vidModal.find('iframe').show();
        $vidModal.find('video').hide();
        $vidModal.find('iframe').attr('src', videoURL);
        $vidModal.modal('show');
    }

    function deployDamAsset(videoUrl, s7VideoUrl) {
        $vidModal.find('iframe').hide();
        $vidModal.find('video').show();
        if (typeof s7VideoUrl === "undefined" || s7VideoUrl === null) {
            $vidModal.find('video').attr('src', videoUrl);
        } else {
            $vidModal.find('video').attr('src', s7VideoUrl);
        }
        $vidModal.modal('show');
    }

    function killVideo() {
        $vidModal.hide();
        $vidModal.find('iframe').attr('src', '');
        $vidModal.find('video').get(0).pause();
        $vidModal.find('video').attr('src', '');
        $vidModal.find('iframe').hide();
        $vidModal.find('video').hide();
    }

    var videoOptions = {
        youtube: function (id) {
            deployYoutubeClip(id);
        },
        vimeo: function (id) {
            deployVimeoClip(id);
        },
        dam: function (id, s7VideoUrl) {
            deployDamAsset(id, s7VideoUrl);
        }
    };

    $('.media-common button.play-vid').on('click', function(e){
        e.preventDefault();
        var vidID = $(this).attr('data-vidid');
        var vidType = $(this).attr('data-vidtype');
        var s7Url = $(this).attr('data-s7-enabled');
        videoOptions[vidType](vidID, s7Url);

    });


    $videoModalClose.on('click', function () {
        killVideo();
    });

    $vidModal.on('click', function (e) {
        /* Stop video playback when clicking the darkened background */
        var clickedOnBackground = $(e.target).hasClass('modal in');
        return !clickedOnBackground ? false : killVideo();
    });

    /***************************/
    /* SEO Schema Video Markup */
    /***************************/
    function setSEOVideoMarkup(data) {
        var seoScript = $('<script type="application/ld+json"></script>');
        $(seoScript).html(JSON.stringify(data));
        $("head").append(seoScript);
    }
    var hostname = window.location.hostname;
    var mediaComponents = $(".media-common.component");
    if (mediaComponents.length) {
        mediaComponents.each(function(index, element) {
            // Video Data
            var videoType = $(this).find("button.play-vid").attr("data-vidtype");
            var videoURL = $(this).find("button.play-vid").attr("data-vidid");
            var videoTitle = $(this).find("button.play-vid").attr("data-video-title");
            var videoDescription = $(this).find("input[name=videoDescription]").val();
            var videoThumbnailSrc = $(this).find(".imagevideo-callout.component img").attr("src");
            var thumbnailUrl = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + videoThumbnailSrc;
            var contentUrl = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + videoURL;

            // Google API Key to fetch YouTube Data
            var API_KEY = $(this).find("input[name=gKey]").val();

            // Video Markup Data
            var videoMarkup = {
                "@context": "https://schema.org",
                "@type": "VideoObject",
                "name": "",
                "description": "",
                "thumbnailUrl": "",
                "duration": "",
                "contentUrl": ""
            };

            videoMarkup["name"] = videoTitle;
            videoMarkup["description"] = videoDescription;
            videoMarkup["thumbnailUrl"] = [thumbnailUrl];

            // Get duration of Media Source (DAM, YouTube, Vimeo) with respect to their API's
            if (videoType == "dam") {
                var videoEl = $('<video src="" controls="true"></video>');
                videoEl.attr("src", videoURL);
                $(videoEl).on("loadedmetadata", function(e) {
                    var duration = $(videoEl).get(0).duration;
                    var minutes = parseInt(duration / 60, 10);
                    var seconds = parseInt(duration % 60, 10);
                    if (typeof duration != undefined || !isNaN(duration)) {
                        var durationTime = "PT" + minutes + "M" + seconds + "S";
                        videoMarkup["duration"] = durationTime;
                    }
                    var contentUrl = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + videoURL;
                    videoMarkup["contentUrl"] = contentUrl;
                    setSEOVideoMarkup(videoMarkup);
                });
            } else if (videoType == "youtube") {
                var contentUrl = "https://www.youtube.com/watch?v=" + videoURL;
                $.ajax({
                    type: 'GET',
                    url: 'https://www.googleapis.com/youtube/v3/videos',
                    data: {
                        key: API_KEY,
                        id: videoURL,
                        part: 'contentDetails',
                    },
                    success: function(data){
                        videoMarkup["duration"] = data.items[0].contentDetails.duration;
                        videoMarkup["contentUrl"] = contentUrl;
                        setSEOVideoMarkup(videoMarkup);
                    },
                    error: function(response){
                        console.log("Request Failed - " + response);
                    }
                });
            } else if (videoType == "vimeo") {
                var CLIENT_ID = "c9b7197ce3aeb6fcbc2338800800a7f568570524";
                var requestURL = "https://api.vimeo.com/videos/" + videoURL + "?client_id=${CLIENT_ID}";
                var contentUrl = "https://vimeo.com/" + videoURL;
                $.ajax({
                    type: 'GET',
                    url: requestURL,
                    headers : {
                        'Authorization' : 'Bearer 675be8cb881b96be57b413c506fa9098',
                    },
                    success: function(data){
                        var duration = data.duration;
                        var minutes = parseInt(duration / 60, 10);
                        var seconds = parseInt(duration % 60, 10);
                        var durationTime = "PT" + minutes + "M" + seconds + "S";
                        videoMarkup["duration"] = durationTime;
                        videoMarkup["contentUrl"] = contentUrl;
                        setSEOVideoMarkup(videoMarkup);
                    },
                    error: function(response){
                        console.log("Request Failed - " + response);
                    }
                });
            }
        });
    }
});

(function() {
    /**
     * Uses data attributes for authored height and width.
     * If iframe doesnt exist, no custom values should be applied.
     * Wrapper addinng-bottom should match iframe height value.
     */
    function setVideoDimensions() {
        var mediaComponents = $('.media-common.component');
        $(mediaComponents).each(function(idx, mediaComponent) {
            var videoWrapper = $(mediaComponent).find('.videoWrapper');
            var iframe = $(videoWrapper).find('iframe');
            if (iframe.length == 0) { return; }

            var iframeWidth = $(iframe).data('width');
            var iframeHeight = $(iframe).data('height');
            if (iframeWidth) {
                $(iframe).css('width', iframeWidth + 'px');
            }
            if (iframeHeight) {
                $(iframe).css('height', iframeHeight + 'px');
                $(videoWrapper).css('padding-bottom', iframeHeight + 'px');
                $(videoWrapper).css('padding-top', '0px');
            }
        });
    }

    $(document).ready(function() {
        setVideoDimensions();
    });
})();

var PENTAIR = PENTAIR || {};
PENTAIR.Water = PENTAIR.Water || {};
PENTAIR.Water.mapStyle = PENTAIR.Water.mapStyle || [{
        "featureType": "administrative",
        "elementType": "labels.text.fill",
        "stylers": [{
            "color": "#444444"
        }]
    },
    {
        "featureType": "landscape",
        "elementType": "all",
        "stylers": [{
            "color": "#f2f2f2"
        }]
    },
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [{
            "visibility": "off"
        }]
    },
    {
        "featureType": "road",
        "elementType": "all",
        "stylers": [{
                "saturation": -100
            },
            {
                "lightness": 45
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "all",
        "stylers": [{
            "visibility": "simplified"
        }]
    },
    {
        "featureType": "road.arterial",
        "elementType": "labels.icon",
        "stylers": [{
            "visibility": "off"
        }]
    },
    {
        "featureType": "transit",
        "elementType": "all",
        "stylers": [{
            "visibility": "off"
        }]
    },
    {
        "featureType": "water",
        "elementType": "all",
        "stylers": [{
                "color": "#46bcec"
            },
            {
                "visibility": "on"
            }
        ]
    }
];

$(function() {
    $(window).load(function() {

        var map;
        var geocoder;
        var markers = [];
        var infowindow;

        var iconLocation;

        function getMapIconLocation(elem) {
            if (elem) {
                if (elem === 'pentair-bright-blue') {
                    return '/etc.clientlibs/settings/wcm/designs/pentair/clientlib-site/resources/img/map-pin-pentair-bright-blue.png';
                } else if (elem === 'pentair-blue') {
                    return '/etc.clientlibs/settings/wcm/designs/pentair/clientlib-site/resources/img/map-pin-pentair-blue.png';
                } else if (elem === 'green') {
                    return '/etc.clientlibs/settings/wcm/designs/pentair/clientlib-site/resources/img/map-pin-green.png';
                }
            }
            return '/etc.clientlibs/settings/wcm/designs/pentair/clientlib-site/resources/img/curve-green.png';
        }

        function isJsonString(str) {
            try {
                JSON.parse(str);
            } catch (e) {
                return false;
            }
            return true;
        }

        function initMap(i, elem) {
            iconLocation = getMapIconLocation(elem);
            var map = new google.maps.Map(elem.find('.map-container')[0], {
                center: new google.maps.LatLng(-34.397, 150.644),
                zoom: 1,
                minZoom: 1,
                mapTypeId: 'pentairWater'
            });

            infowindow = new google.maps.InfoWindow();
            geocoder = new google.maps.Geocoder();

            // window.Pentair = window.Pentair || {};
            // window.Pentair.Maps = window.Pentair.Maps || {};
            // window.Pentair.Maps.mapJSON = window.Pentair.Maps.mapJSON || [];
            var mapData = mps[i];
            // console.log(mapData[0]);
            // console.log(mps[i]);
            // console.log(mapData);
            mapData.forEach(function(elem) {
                geocodeAddress(elem, geocoder, map);
            });

            map.mapTypes.set('pentairWater', new google.maps.StyledMapType(PENTAIR.Water.mapStyle, { name: 'Pentair Water' }));
        }

        function getMarkerHtml(item) {
            var infoHtml = $('<div>').addClass('marker');
            if (item.name) {
                infoHtml.append($('<p>').addClass('location-name').html(item.name));
            }
            if (item.formatted_address) {
                infoHtml.append($('<p>').html(item.formatted_address.split(',')[0] + '<br>' + item.formatted_address.split(',').slice(1).join(',')));
            }
            if (item.phoneOne) {
                infoHtml.append($('<p>').addClass('phone-one').append('<span class="icon-phone" aria-hidden="true"></span>').append($('<a>').attr('href', 'tel:' + item.phoneOne).html(item.phoneOne)));
            }
            if (item.phoneTwo) {
                infoHtml.append($('<p>').addClass('phone-two').append('<span class="icon-phone" aria-hidden="true"></span>').append($('<a>').attr('href', 'tel:' + item.phoneTwo).html(item.phoneTwo)));
            }
            if (item.linkText && item.linkLocation) {

                /*  under normal circumstances the dispatcher will clean the url.
                 *   However in this case since the link is being sent to the application in the form of JSON we need
                 *   to strip out /content/pentair from relative paths.  ** EXCEPT when on AUTHOR
                 *
                 *   homepage: href="/"
                 *   pages under homepage: href="/en-us/path/under/homepage.html"
                 *
                 * */
                var updatedLink = item.linkLocation;
                var location = window.location.hostname;
                var authorInstances = ['dev.pentair.com', 'localhost', 'aem-stage.pentair.com', 'aem.pentair.com', 'pentair-author.r2iadobe.com'];
                var isAuth = authorInstances.indexOf(location);
                if (isAuth === -1) {
                    var regExpression = /\/content\/(pentair|intranet|pentair-microsite)\//i;
                    updatedLink = (item.linkLocation).replace(regExpression, '/');
                    if (updatedLink === '/en-us.html') {
                        updatedLink = '/';
                    }
                }
                infoHtml.append($('<div class="map-cta"><a href="' + (updatedLink) + '" target="' + (item.target ? '_blank' : '_self') + '">' + (item.linkText) + '</a></div>'));
            }
            return infoHtml[0].outerHTML;
        }

        function addMarker(resultsMap, position, item) {
            var marker = new google.maps.Marker({
                map: resultsMap,
                position: position,
                icon: getMapIconLocation(item.pinColor)
            });

            google.maps.event.addListener(marker, 'click', function() {
                infowindow.setContent(getMarkerHtml(item));
                infowindow.open(map, marker);
            });

            markers.push(marker);
        }

        function geocodeAddress(item, geocoder, resultsMap) {
            geocoder.geocode({
                'address': item.address
            }, function(results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                    var latLong = results[0].geometry.location;
                    item.formatted_address = results[0].formatted_address;
                    resultsMap.setCenter(latLong);
                    addMarker(resultsMap, latLong, item);
                    updateZoom(resultsMap);
                } else {
                    console.warn('Geocode was not successful for the following reason: ' + status);
                }
            });
        }

        function updateZoom(resultsMap) {
            var bounds = new google.maps.LatLngBounds();
            for (i = 0; i < markers.length; i++) {
                bounds.extend(markers[i].getPosition());
            }

            resultsMap.fitBounds(bounds);
        }

        var mapComponents = $('.map.component');
        if (mapComponents.length) {
            mapComponents.each(function(index, elem) {
                initMap(index, $(elem));
            });
        }
    });
});
$(document).ready(function() {

    var largeImageHotspot = $(".large-image-hotspot.component");

    if (largeImageHotspot.length) {

        var $mbSpotList = $('.large-image-hotspot .spots .mobile-list'),
            $spotList = $('.large-image-hotspot .spots .spot-list'),
            $mbSpots = $('.large-image-hotspot .mobile-spots'),
            thsSpotList,
            thsmbSpotList,
            thsmbSpots;

        $('.large-image-hotspot .spots .mobile-list, .large-image-hotspot .mobile-spots, .large-image-hotspot .spots .spot-list').find('li').on('click', function() {
            var index = $(this).index(),
                deskRent = $(this).parent().parent().parent(),
                mobileRent = $(this).parent().parent(),
                rent = "";

            if (mobileRent.hasClass('large-image-hotspot') === true) {
                rent = mobileRent;
            } else if (deskRent.hasClass('large-image-hotspot') === true) {
                rent = deskRent;
            }
            thsSpotList = $(rent).find('.spots .spot-list');
            thsmbSpotList = $(rent).find('.spots .mobile-list');
            thsmbSpots = $(rent).find('.mobile-spots');

            if ((!thsSpotList.find('.spots .spot-list').hasClass('spot-modal-open') && !thsmbSpots.find('li').hasClass('open')) || $(this).closest('ul').hasClass('mobile-list')) {
                if (!$(this).hasClass('active')) {
                    thsSpotList.slideUp('fast', function() {
                        thsmbSpotList.find('.active').removeClass('active');
                        thsmbSpots.find('.active').removeClass('active');
                        thsSpotList.find('.active').removeClass('active').hide().find('.spot-modal').removeClass('open');

                        thsSpotList.find('li').eq(index).addClass('active').show().find('.spot-modal').addClass('open');
                        thsmbSpots.find('li').eq(index).addClass('active');
                        thsmbSpotList.find('li').eq(index).addClass('active');

                        thsSpotList.slideDown('fast');
                        thsSpotList.addClass('spot-modal-open');
                    });
                } else {
                    thsmbSpots.find('li').removeClass('active');
                    thsmbSpotList.find('li').removeClass('active');
                    thsSpotList.find('li').removeClass('active').slideUp('fast').find('.spot-modal').removeClass('open');
                    thsSpotList.removeClass('spot-modal-open');
                }
            }
        });

        $('.spot-modal > a').on('click', function(e) {
            e.preventDefault();
            thsmbSpots.find('li').removeClass('active');
            thsmbSpotList.find('li').removeClass('active');
            thsmbSpotList.find('.spot-modal').removeClass('open');
            thsSpotList.removeClass('spot-modal-open').find('.spot-modal').removeClass('open');
        });

        $spotList.find('.spot-anchor').on('click', function(e) {
            e.preventDefault();
        });


        $(document).mouseup(function(e) {
            var container = $('.large-image-hotspot .spots .spot-list, .large-image-hotspot .spots .mobile-list');
            if (!container.is(e.target) && container.has(e.target).length === 0) {
                if (thsmbSpots) {
                    thsmbSpots.find('li').removeClass('active');
                }
                if (thsmbSpotList) {
                    thsmbSpotList.find('li').removeClass('active')
                }
                if (thsSpotList) {
                    thsSpotList.find('li').removeClass('active').slideUp('fast').find('.spot-modal').removeClass('open');
                    thsSpotList.removeClass('spot-modal-open');
                }
            }
        });

        /* [PENW-2949] - Mobile - Pre-select first item in mobile-spots/list */
        if ($(window).width() < 768) {
            if(thsmbSpotList) {
                thsmbSpotList.find("li:first").trigger("click");
            }
        }

    }
});
$(document).ready(function(){

    var targetElem = $('.image-hotspot.component');

    var addLeadingZero = function (numString) {
        return (parseInt(numString, 10) < 10) ? '0' + numString : numString;
    };

    var addNumbers = function (containerId) {
        $('#' + containerId).find('.s7imagemapeffect .s7icon').each(function(index, elem){
            $(elem).text(addLeadingZero(index + 1));
        });
    }
    var initViewer = function (componentElem, containerId, assetPath) {
        var s7interactiveimageviewer = new s7viewers.InteractiveImage({
        "containerId" : containerId,
        "params" : {
            "serverurl" : "https://s7d2.scene7.com/is/image/",
            "contenturl" : "https://s7d2.scene7.com/is/content/",
            "asset" : assetPath }
        });
        
        s7interactiveimageviewer.setHandlers({ 
          "quickViewActivate": function(inData) {
            // console.log(inData);
          }, 
          "initComplete" : function () {
            if(componentElem.data('numbers') === true){
                addNumbers(containerId);
            }
          }
        });

        s7interactiveimageviewer.init(); 
    }

    if(targetElem.length > 0){
        targetElem.each(function(index, elem) {
            var assetPath = $(elem).data('assetdjklf') || 'pentairstage/conserve-bg1'; // content/dam/pentair-pool -> pentairstage
            var containerId = 'image-hotspot-container-' + index;
            $(elem).find('.interactive-image-container').attr('id', containerId);
            initViewer($(elem), containerId, assetPath);
        });
    }

});
$(document).ready(function() {
    var ImageComponentLink = function(componentElement) {
    	var self = this;
    	self.copyModalImage = function(){
    		$('#imageModal article').html(componentElement.find('img').clone(false).attr('src', componentElement.data('fileReference')).attr('width', 'auto').attr('height', 'auto'));
            setTimeout(function(){
                $('#imageModal').focus();
            }, 350);
            return true;
    	}
    }

    $('.image-component-link').each(function() {
      ko.applyBindings(new ImageComponentLink($(this)), this);
    });
});
$(function(){
    function checkMenuState(component) {
        var header = component;
        var hasUtilNavItems = component.find(".mobile-menu .utility-nav > ul");
        var hasMainNavItems = component.find(".mobile-menu .top-level-links > li");
        var hasSearchDisabled = component.find(".mobile-menu .top-level-links").hasClass("no-search");
        var mobileMenu = component.find(".mobile-menu .menu");
        if (hasUtilNavItems.length == 0 && hasMainNavItems.length == 0 && hasSearchDisabled) {
            mobileMenu.hide();
        }
    }

    var HeaderModel = function(componentElement) {
        var self = this;
        self.userToken = HeaderUtil.getCloudVisitorId();
        self.applicationId = componentElement.data('applicationId');
        self.searchApiKey = componentElement.data('searchApiKey');
        self.searchClient = algoliasearch(self.applicationId, self.searchApiKey);
        self.dropdownSearchObjects = null;
        self.afterFirstFocusOnSearchBar = false;
        self.hasSuggestions = ko.observable(false);
        self.hasPopularPages = ko.observable(false);
        self.hasCategories = ko.observable(false);
        self.isMobile = ko.observable(window.matchMedia('(max-width: 1259px)').matches);
        self.searchBoxFocus = ko.observable(false);
        self.showDropdown = ko.computed(function(){
            let isOpen = !($('.pentair').length) && self.searchBoxFocus();
            if (!isOpen) {
                $("body").removeClass("menu-open");
            } else {
                $("body").addClass("menu-open");
            }
            return isOpen;
        }).extend({ rateLimit: 50 });
        self.inputSearchQuery = ko.observable(getParams().q ? decodeURIComponent(getParams().q).replace(/\+/g, ' ') : '');
        // Analytics setup
        var insightsMiddleware = instantsearch.middlewares.createInsightsMiddleware({
          insightsClient: window.aa
        });

        // "Popular Categories"
        self.dropdownCategoryClick = function (context, event) {
            self.userToken = HeaderUtil.getCloudVisitorId();
            var captureElem = $(event.target).closest('a');
            var productIndex = $(event.target).closest('.categories').data('productTabIndex');
            var searchQuery = self.inputSearchQuery();
            self.searchBoxFocus(false);
            var category = $(event.target).closest('a').data('category');
            var searchPage = componentElement.find(".header-search-form").data("searchPage");
            var hierarchicalCategoryParams = "?categories.lvl0.hierarchical=" + category.split(" ").join("+");
            var hasAmps = hierarchicalCategoryParams.indexOf("&") !== -1;
            var hierarchicalFinal = hasAmps ? hierarchicalCategoryParams.replace(/&/g,"%26") : hierarchicalCategoryParams;
            var queryWithTabParams = "&q=" + self.inputSearchQuery() + "&tab=" + productIndex;
            var url = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + searchPage + hierarchicalFinal + queryWithTabParams;

            // PAAS - Adobe Analytics
            var linkClicked = event.target.closest('a');
            var suggestedSearchTerm = linkClicked ? linkClicked.textContent.trim() : '';
            var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
            trackSuggestedSearchClickPayload(searchQuery, suggestedSearchTerm, queryID, false);

            window.location.replace(url);

            if(!!window._satellite){
                _satellite.track('query result click', {
                    query: searchQuery,
                    resultLink: "Categories|"+(captureElem.closest('li').index()+1)+"|"+captureElem.data('category')
                });
            }

            var eventObj = {
                userToken: self.userToken,
                eventName: 'Search Bar: Dropdown Category Click',
                index: productIndex,
                filters: ['categories:' + captureElem.data('category')],
                queryID:  captureElem.data('queryId'),
                positions: captureElem.data('position') && [captureElem.data('position')]
            };

            var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

            if(hasRequired){
                aa('clickedFilters', eventObj);
            }

            return false;
        }

        // "Popular Pages"
        self.dropdownSearchPopularPagesClick = function(context, event) {
            self.userToken = HeaderUtil.getCloudVisitorId();
            var captureElem = $(event.target).closest('a');
            if(!!window._satellite){
                _satellite.track('query result click', {
                    query: self.inputSearchQuery(),
                    resultLink: "Page Result|"+(captureElem.closest('li').index()+1)+"|"+captureElem.text().trim()
                });
            }

            var eventObj = {
                userToken: self.userToken,
                eventName: 'Search Bar: Dropdown Popular Pages Click',
                index: $(event.target).closest('.popular-pages').data('index'),
                objectIDs: captureElem.data('objectId') && [captureElem.data('objectId')],
                queryID:  captureElem.data('queryId'),
                positions: captureElem.data('position') && [captureElem.data('position')]
            };

            var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

            if(hasRequired){
                aa('clickedObjectIDs', eventObj);
            }

            // PAAS - Adobe Analytics
            var searchTerm = self.inputSearchQuery();
            var linkClicked = event.target.closest('a');
            var suggestedSearchResult = linkClicked ? linkClicked.textContent.trim() : '';
            var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
            trackSuggestedSearchClickPayload(searchTerm, suggestedSearchResult, queryID, true);

            return true;
        }

        // "Popular Products"
        self.dropdownSearchProductClick = function(context, event) {
            self.userToken = HeaderUtil.getCloudVisitorId();
            var captureElem = $(event.target).closest('a');
            if(!!window._satellite){
                _satellite.track('query result click', {
                    query: self.inputSearchQuery(),
                    resultLink: "Product Result|"+(captureElem.closest('li').index()+1)+"|"+captureElem.text().trim()
                });
            }

            var eventObj = {
                userToken: self.userToken,
                eventName: 'Search Bar: Dropdown Product Click',
                index: $(event.target).closest('.products').data('index'),
                objectIDs: captureElem.data('objectId') && [captureElem.data('objectId')],
                queryID:  captureElem.data('queryId'),
                positions: captureElem.data('position') && [captureElem.data('position')],
            };

            var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

            if(hasRequired){
                aa('clickedObjectIDs', eventObj);
            }

            // PAAS - Adobe Analytics
            var searchTerm = self.inputSearchQuery();
            var linkClicked = event.target.closest('a');
            var suggestedSearchResult = linkClicked ? linkClicked.textContent.trim() : '';
            var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
            trackSuggestedSearchClickPayload(searchTerm, suggestedSearchResult, queryID, true);

            self.searchBoxFocus(false);

            return true;
        }

        // "View _ product results"
        self.dropdownSearchProductCountClick = function(context, event) {
            var productIndex = $(event.target).closest('.products-count').data('productTabIndex');
            var searchPage = componentElement.find(".header-search-form").data("searchPage");
            var queryWithTabParams = "?q=" + self.inputSearchQuery() + "&tab=" + productIndex;
            self.searchBoxFocus(false);
            var url = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + searchPage + queryWithTabParams;
            window.location.replace(url);
            return false;
        }

        // "Suggested Searches"
        self.dropdownSuggestionClick = function (context, event) {
            self.userToken = HeaderUtil.getCloudVisitorId();
            var captureElem = $(event.target).closest('a');
            self.searchBoxFocus(false);
            var searchPage = componentElement.find(".header-search-form").data("searchPage");
            var suggestedQuery = captureElem.data("query").split(" ").join("+")
            var queryParams = "?q=" + suggestedQuery;
            var url = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + searchPage + queryParams;

            // PAAS - Adobe Analytics
            var searchTerm = self.inputSearchQuery();
            var linkClicked = event.target.closest('a');
            var suggestedSearchTerm = linkClicked ? linkClicked.textContent.trim() : '';
            var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
            trackSuggestedSearchClickPayload(searchTerm, suggestedSearchTerm, queryID, false);

            window.location.replace(url);

            if(!!window._satellite){
                _satellite.track('query result click', {
                    query: self.inputSearchQuery(),
                    resultLink: 'Suggestion|' + (captureElem.closest('li').index()+1) + '|' + captureElem.text().trim()
                });
            }

            var eventObj = {
                userToken: self.userToken,
                eventName: 'Search Bar: Dropdown Query Suggestion Click',
                index: captureElem.closest('.suggestions').data('index'),
                objectIDs: [captureElem.data('query')],
                queryID:  captureElem.data('queryId'),
                positions: captureElem.data('position') && [captureElem.data('position')]
            };

            var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

            if(hasRequired){
                aa('clickedObjectIDs', eventObj);
            }

            return false;
        }

        // "Product Type"
        self.dropdownChannelClick = function (context, event) {
            self.userToken = HeaderUtil.getCloudVisitorId();
            var captureElem = $(event.target).closest('a');
            var productIndex = $(event.target).closest('.channel').data('productTabIndex');
            self.searchBoxFocus(false);
            var channel = $(event.target).closest('a').data('channel');
            var searchPage = componentElement.find(".header-search-form").data("searchPage");
            var disjunctiveChannelParams = "?channel.disjunctive=" + channel;
            var hasAmps = disjunctiveChannelParams.indexOf("&") !== -1;
            var disjunctiveChannelFinal = hasAmps ? disjunctiveChannelParams.replace(/&/g,"%26") : disjunctiveChannelParams;
            var queryWithTabParams = "&q=" + self.inputSearchQuery() + "&tab=" + productIndex;
            var url = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + searchPage + disjunctiveChannelFinal + queryWithTabParams;

            // PAAS - Adobe Analytics
            var searchTerm = self.inputSearchQuery();
            var linkClicked = event.target.closest('a');
            var suggestedSearchTerm = linkClicked ? linkClicked.textContent.trim() : '';
            var queryID = linkClicked && linkClicked.dataset.queryId ? event.target.dataset.queryId : '';
            trackSuggestedSearchClickPayload(searchTerm, suggestedSearchTerm, queryID, false);

            window.location.replace(url);

            if(!!window._satellite){
                _satellite.track('query result click', {
                    query: self.inputSearchQuery(),
                    resultLink: "Product Type|"+(captureElem.closest('li').index()+1)+"|"+captureElem.text().trim()
                });
            }

            var eventObj = {
                userToken: self.userToken,
                eventName: 'Search Bar: Dropdown Product Type Click',
                index: productIndex,
                filters: ['channel:' + captureElem.data('channel')]
            };

            var hasRequired = _.values(eventObj).every(function(item){return !_.isEmpty(item)}); // all values must be valid.

            if(hasRequired){
                aa('clickedFilters', eventObj);
            }

            return false;
        }

        self.inputEnter = function(context, event) {
            var captureElem = $(event.target).closest('input');
            if (event.which == 13) {
                $(event.target).focusout();
                self.doSearch(context, event);
            }
            return true;
        }

        self.doSearch = function(context, event) {
            let searchTerm = $(event.currentTarget).closest('.header-search-form').find('.search-box input').val();
            searchTerm = searchTerm ? decodeURIComponent(searchTerm).replace(/\+/g, ' ') : '';

            // Searched from header search bar using enter or by clicking search icon
            var currentPage = document.head.querySelector('link[rel="canonical"]')
                ? document.head.querySelector('link[rel="canonical"]').href
                : document.location.origin + document.location.pathname;
            var pentairSearchJSON = {
                priorPageURL: currentPage,
                searchType: "search bar",
                searchTerm: searchTerm
            };
            setSessionCookie('pentairSearch', JSON.stringify(pentairSearchJSON));
            var searchPage = componentElement.find(".header-search-form").data("searchPage");
            var queryParams = "?q=" + searchTerm;
            var url = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + searchPage + queryParams;
            window.location.replace(url);
        }

        self.initAlgoliaSearchBox = function (searchClient, indexName, containerElem) {
            self.dropdownSearchObjects =  instantsearch({
                indexName: indexName,
                searchClient: searchClient,
                clickAnalytics: true,
                searchFunction: function(helper) {
                    self.inputSearchQuery(decodeURIComponent(helper.getQuery().query));
                    // Prevent the searches on page load
                    // Only search after user has interacted with the search bar in the header
                    if (self.afterFirstFocusOnSearchBar) {
                        helper.search();
                    }
                }
            });

            var renderProductDropdownStats = function(renderOptions, isFirstRender) {
                if(renderOptions.nbHits > 1){
                    renderOptions.widgetParams.container.html('<a href="#" aria-label="See all product results">' + ('View ' + renderOptions.nbHits + ' product results') + '</a>');
                } else {
                    renderOptions.widgetParams.container.html('');
                }
            };

            var renderSearchBox = function(renderOptions, isFirstRender) {
                var clear = renderOptions;
                var container = renderOptions.widgetParams.container;

                if (isFirstRender) {
                    var input = $('<input class="input-box" aria-label="Search" placeholder="Search"><span class="search-icon glyphicon-search"></span></input>');


                    input[0].addEventListener('input', function(event) {
                        renderOptions.refine(event.target.value);
                    });

                    try {
                        renderOptions.refine(self.inputSearchQuery());
                    } catch (error) {
                        console.error('Error rendering search input');
                    }

                    if(window.matchMedia('(max-width: 768px)').matches){
                        input.on('focus', function () {
                            $('.all-search').show();
                            self.searchBoxFocus(true);
                        });
                        input.on('blur', function () {
                            self.searchBoxFocus(false);
                        });
                        $('.all-search').on('click',function(){
                            setTimeout(function(){
                                $('.all-search').hide();
                                $('.ais-SearchBox-reset').hide();
                            }, 1000);
                        });
                        container.appendChild(input[0]);
                    }
                    else {
                        input.on('focus', function () {
                            self.searchBoxFocus(true);
                        });
                        input.on('blur', function (e) {
                            setTimeout(function(){
                                self.searchBoxFocus(false);
                            }, 100);
                        });
                        container.appendChild(input[0]);
                    }
                }
                if (!self.afterFirstFocusOnSearchBar) {
                    container.querySelector('input').addEventListener('focus', self.firstFocusHandler);
                }
            };

            var renderSearchBoxMobile = function(renderOptions, isFirstRender) {
                var container = renderOptions.widgetParams.container;

                if (isFirstRender) {
                    var inputMobile = $('<input class="input-box" aria-label="Search" placeholder="Search"><span class="search-icon glyphicon-search"></span></input>');
                    var removeBtnMobile = $('<button class="ais-SearchBox-reset">X</button>');

                    inputMobile[0].addEventListener('input', function(event) {
                        renderOptions.refine(event.target.value);
                    });

                    try {
                        renderOptions.refine(self.inputSearchQuery());
                    } catch (error) {
                        console.error('Error rendering search input');
                    }

                    if(window.matchMedia('(max-width: 768px)').matches){
                        removeBtnMobile.on('click',function(){
                            clear.clear();
                            $('.all-search').hide();
                            self.doTabSearch();
                        });
                        inputMobile.on('focus', function () {
                            $('.all-search').show();
                            self.searchBoxFocus(true);
                        });
                        inputMobile.on('blur', function () {
                            self.searchBoxFocus(false);
                        });
                        $('.all-search').on('click',function(){
                            setTimeout(function(){
                                $('.all-search').hide();
                            }, 1000);
                        });
                        container.appendChild(inputMobile[0]);
                    }
                    else {
                        inputMobile.on('focus', function () {
                            self.searchBoxFocus(true);
                        });
                        inputMobile.on('blur', function (e) {
                            setTimeout(function(){
                                self.searchBoxFocus(false);
                            }, 100);
                        });
                        container.appendChild(inputMobile[0]);
                    }
                }
                if (!self.afterFirstFocusOnSearchBar) {
                    container.querySelector('input').addEventListener('focus', self.firstFocusHandler);
                }
            };

            function getPlatform() {
                return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? 'mobile' : 'desktop';
            }
            /**
             * Handles the the first focus event on the search bar.
             * Starts the searches in the dropdown and removes the handler.
             * @param event focus event
             */
            self.firstFocusHandler = function(event) {
                self.afterFirstFocusOnSearchBar = true;
                self.dropdownSearchObjects.helper.search();
                event.currentTarget.removeEventListener('focus', self.firstFocusHandler);
            }

            var customSearchBox = instantsearch.connectors.connectSearchBox(
                renderSearchBox
            );
            var customSearchBoxMobile = instantsearch.connectors.connectSearchBox(
                renderSearchBoxMobile
            );

            if(!window.document.documentMode){ //  Disable in IE
                self.dropdownSearchObjects.EXPERIMENTAL_use(insightsMiddleware);
            }

            var productDropdownStats = instantsearch.connectors.connectStats(
                renderProductDropdownStats
            );
            const currentPagePath = window.location.pathname;
            let algoliaRuleContexts = [];
            if (currentPagePath.includes('/en-us/water-softening-filtration')) {
                algoliaRuleContexts.push('_en-us_water-softening-filtration');
            }
            self.dropdownSearchObjects.addWidgets([

                customSearchBox({
                    container: containerElem.find('.search-box')[0],
                    placeholder: 'Search',
                    queryHook: _.debounce(function(query, search) {
                        search(query);
                    }, 400)
                }),
                customSearchBoxMobile({
                    container: containerElem.find('.search-box')[1],
                    placeholder: 'Search',
                    queryHook: _.debounce(function(query, search) {
                        search(query);
                    }, 400)
                }),

                instantsearch.widgets.configure({
                    analyticsTags: [getPlatform()],
                    hitsPerPage: 4,
                    clickAnalytics: true,
                    ruleContexts : algoliaRuleContexts
                }),

                instantsearch.widgets.hits({
                    container: self.isMobile() ? containerElem.find('.products')[1] : containerElem.find('.products')[0],
                    hitsPerPage: 4,
                    templates: {
                        item: function(hit){
                            return '<div class="flex-container">' +
                                '<div class="image-container">' +
                                (hit.productThumbnail ? ('<img src="' + hit.productThumbnail + '.thumb.319.319.png" alt="Product Image"/>') : ('<img src="/content/dam/extranet/product-related/product-photo/Placeholder Image.png.thumb.319.319.png" alt="Product Image"/>')) +
                                '</div>' + '<div class="link-container"><a href="' + hit.url +
                                '"'+ 'aria-label="Link to ' + hit.productName + '" ' +
                                ' data-object-id ="' + hit.objectID + '" ' + ' data-query-id ="' + hit.__queryID + '" '  + 'data-position="' +hit.__position +
                                '"/>'+ instantsearch.highlight({ attribute: "productName", hit: hit, highlightedTagName: "mark" }) + '</a></div>' +
                                '</div>'
                        }
                    }
                }),

                productDropdownStats({
                    container: containerElem.find('.products-count')
                }),

                instantsearch.widgets.index({
                    indexName: containerElem.find(".dropdown-container .categories").data('index')
                }).addWidgets([
                    instantsearch.widgets.configure({
                        analyticsTags: [getPlatform()],
                        hitsPerPage: 3,
                        clickAnalytics: true
                    }),
                    instantsearch.widgets.hits({
                        container: self.isMobile() ? containerElem.find('.dropdown-container .categories')[1] : containerElem.find('.dropdown-container .categories')[0],
                        templates: {
                            empty: function (){
                                self.hasCategories(false);
                            },
                            item: function(hit){
                                self.hasCategories(true);
                                return '<a href="#" aria-label="' + hit.categoryName +' "'
                                    + 'data-category="'+ hit.categoryName +'"'
                                    + 'data-query-id="' + hit.__queryID +'"' + 'data-position="'+hit.__position +'"/>'
                                    + hit._highlightResult.categoryName.value + '</a></li>';

                            }
                        }
                    })
                ]),

                instantsearch.widgets.index({
                    indexName: containerElem.find(".dropdown-container .suggestions").data('index')
                }).addWidgets([
                    instantsearch.widgets.configure({
                        analyticsTags: [getPlatform()],
                        hitsPerPage: 3,
                        clickAnalytics: true
                    }),
                    instantsearch.widgets.hits({
                        container: self.isMobile() ? containerElem.find('.dropdown-container .suggestions')[1] : containerElem.find('.dropdown-container .suggestions')[0],
                        templates: {
                            empty: function (){
                                self.hasSuggestions(false);
                            },
                            item: function(hit){
                                self.hasSuggestions(true);
                                return '<a href="#" aria-label="Search for Suggested Query"'
                                    + ' data-query="' + hit.query + '" data-query-id="' + hit.__queryID +'"'
                                    + 'data-position="'+hit.__position +'"/>' + hit._highlightResult.query.value + '</a>';
                            }
                        }
                    }),
                ]),

                instantsearch.widgets.index({
                    indexName: containerElem.find(".dropdown-container .popular-pages").data('index')
                }).addWidgets([
                    instantsearch.widgets.configure({
                        analyticsTags: [getPlatform()],
                        hitsPerPage: 3,
                        clickAnalytics: true
                    }),
                    instantsearch.widgets.hits({
                        container: self.isMobile() ? containerElem.find('.dropdown-container .popular-pages')[1] : containerElem.find('.dropdown-container .popular-pages')[0],
                        templates: {
                            empty: function (){
                                self.hasPopularPages(false);
                            },
                            item: function(hit){
                                self.hasPopularPages(true);
                                return '<a href="' + hit.url
                                    + '" aria-label="Search for Popular Page ' + hit.title
                                    + '" data-query="' + hit.title
                                    + '" data-object-id="' + hit.objectID
                                    + '" data-query-id="' + hit.__queryID
                                    + '" data-position="'+hit.__position +'"/>'+hit._highlightResult.title.value +'</a>';

                            }
                        }
                    })
                ]),

            ]);

            self.dropdownSearchObjects.start();
        }

        function getParams() {
          return _.chain(location.search.slice(1).split('&'))
                 .map(function (item) { if (item) { return item.split('='); } })
                 .compact()
                 .object()
                 .value();
        }

        self.init = function() {
            self.initAlgoliaSearchBox(self.searchClient, componentElement.find('.search-field-container').data('index'), componentElement.find('.search-field-container'));
        };

        self.init();
    }

    /**
     * Tracks the suggested search term/result click event payload.
     * @param searchTerm term typed in the box
     * @param suggestedSearchText term or result text in suggested area clicked on
     * @param queryID algolia query ID
     * @param isDirectResult true/false if the link clicked on was a suggested result linking directly to a page or product
     */
    function trackSuggestedSearchClickPayload(searchTerm, suggestedSearchText, queryID, isDirectResult) {
        var eventSearchSuggestedTermClickPayload = {
            eventName: isDirectResult ? 'search suggested result clicked' : 'search suggested term clicked',
            eventType: 'event',
            attributes: {
                search: {
                    searchTerm: searchTerm,
                    algoliaQueryID: queryID,
                    searchType: "suggested search",
                },
                visitor: {
                    pentairCustomerID: getPentairCustomerID(), //if this is available
                    dealerID: getDealerID() //if this is available
                },
                page: {
                    pageCanonical: getPageViewPageAttribute("pageCanonical"),
                    pageName: getPageViewPageAttribute("pageName"),
                    pagePath: getPageViewPageAttribute("pagePath"),
                    pageType: getPageViewPageAttribute("pageType"),
                    pageURL: getPageViewPageAttribute("pageURL"),
                    language: getPageViewPageAttribute("language")
                }
            }
        }
        // Only add one of the keys; suggestedSearchTerm or suggestedSearchResult
        // This is done after inital creation of the object bc ternary operators can't be done with property id names
        var searchTextAttrName = isDirectResult ? 'suggestedSearchResult' : 'suggestedSearchTerm';
        eventSearchSuggestedTermClickPayload.attributes.search[searchTextAttrName] = suggestedSearchText;
        trackEventWithQueue(eventSearchSuggestedTermClickPayload);
    }

    /**
     * Opens the my account hamburger menu on mobile and tablet viewports
     * Checks if its open before trying to open, and hides the main mobile nav menu if its open already
     * @param headerComponent - the header element as a jquery object
     * @param mobileHamburgerMenuButton - The mobile hamburger menu button as a jquery object
     * @param mobileHamburgerMenuToggleHandler - function handler used to toggle the main mobile nav opening logic
     */
    function openMyAccountMobileNavDropdown(headerComponent, mobileHamburgerMenuButton, mobileHamburgerMenuToggleHandler) {
        var myAccountMobileNavMenu = $(".mobile-menu .my-account__nav-menu");
        var isMyAccountNavDropdownOpen = myAccountMobileNavMenu.hasClass("my-account__nav-menu--active");

        if (isMyAccountNavDropdownOpen) {
            return;
        }

        var isMobileHamburgerMenuOpen = mobileHamburgerMenuButton.hasClass("icon-close");
        if (isMobileHamburgerMenuOpen) {
            mobileHamburgerMenuToggleHandler();
        }

        mobileHamburgerMenuButton.removeClass("icon-menu").addClass("icon-close");
        $("body").addClass("menu-open");
        myAccountMobileNavMenu.addClass('my-account__nav-menu--active');

        mobileHamburgerMenuButton.off("click", mobileHamburgerMenuToggleHandler);
        mobileHamburgerMenuButton.one("click", function() {
            closeMyAccountMobileNavDropdown(headerComponent, mobileHamburgerMenuButton, mobileHamburgerMenuToggleHandler);
        });
    }

    /**
     * Closes the my account mobile hamburger menu and restores the hamburger button to open the mobile nav menu
     * @param headerComponent - the header element as a jquery object
     * @param mobileHamburgerMenuButton - the mobile hamburger menu button as a jquery object
     * @param mobileHamburgerMenuToggleHandler - function handler used to toggle the main mobile nav opening logic
     */
    function closeMyAccountMobileNavDropdown(headerComponent, mobileHamburgerMenuButton, mobileHamburgerMenuToggleHandler) {
        mobileHamburgerMenuButton.removeClass("icon-close").addClass("icon-menu");
        $("body").removeClass("menu-open");
        $(".mobile-menu .my-account__nav-menu").removeClass('my-account__nav-menu--active');

        mobileHamburgerMenuButton.on("click", mobileHamburgerMenuToggleHandler);
    }

    /**
     * Toggles the main header navigation menu for mobile and tablet devices
     * @param mobileHamburgerMenuButton - the hamburger button element as a jquery object
     */
    function toggleMobileHamburgerMenu(mobileHamburgerMenuButton) {
        mobileHamburgerMenuButton.toggleClass("icon-menu").toggleClass("icon-close");
        mobileHamburgerMenuButton.closest(".mobile-wrap").toggleClass("active");
        $("body").toggleClass("menu-open");
        mobileHamburgerMenuButton.closest(".mobile-wrap").find(".menu-wrap").removeClass("slid");
        mobileHamburgerMenuButton.closest(".mobile-wrap").find(".mobile-slider").removeClass("slide");
    }

    function adjustPaddingAfterElementsWithPositionFixed($stickyJumpNav) {
        const stickyJumpNavHeight = $stickyJumpNav ? $stickyJumpNav.outerHeight() : 0;
        const isMobile = window.matchMedia('(max-width: 767px)').matches;
        const $headerComponent = $('header.header.component');
        const $mainContent = $('main.content');
        if (isMobile) {
            $mainContent?.css('padding-top', ($headerComponent ? $headerComponent.outerHeight() + stickyJumpNavHeight : 0));
        } else {
            $mainContent?.css('padding-top', ($headerComponent ? $headerComponent.outerHeight() : 0));
        }
    }

    // If current page is child of link in tab nav, set tab as active
    function setActiveTabNav(tab) {
        const truncatedTabPath = $(tab).find('.tab-nav__tab--link').attr('href').replace('/content/pentair/', '').replace('.html', '');
        const currentPath = window.location.pathname;
        if (currentPath.includes(truncatedTabPath)) {
            $(tab).addClass('active');
        }
    }

    $(document).ready(function(){
        const mobileWrapToggle = $(".mobile-wrap button")
        mobileWrapToggle.click(function() {
            $('div.header-search-form').toggleClass('hideSearchBar');
        });

        var headerComponent = $(".header.component");
        let isNavStyleSimpleDropdown = false;
        if (headerComponent.length) {
            isNavStyleSimpleDropdown = headerComponent.hasClass('nav-style-simple-dropdown');
            $("body").addClass("header-v2");
        }

        if ($('main.content.generic-interior-page.hide-nav').length) {
            $('.mobile-wrap').addClass('hide-nav');
        };

        var mobileHamburgerMenuButton = headerComponent.find(".mobile-menu .icon-menu");
        var mobileHamburgerMenuToggleHandler = function() {
            toggleMobileHamburgerMenu(mobileHamburgerMenuButton);
        }
        mobileHamburgerMenuButton.on("click", mobileHamburgerMenuToggleHandler);

        var myAccountIcon = headerComponent.find(".mobile-menu .my-account__icon");
        if (myAccountIcon) {
            myAccountIcon.on("click", function() {
                openMyAccountMobileNavDropdown(headerComponent, mobileHamburgerMenuButton, mobileHamburgerMenuToggleHandler);
            });
        }

        var mobileMenu = headerComponent.find(".mobile-menu");
        var topLevelLinks = mobileMenu.find(".top-level-link");

        var mobileMainNav = $(".mobile-menu .main-nav");
        var mobileMenuWrap = $(".mobile-menu .menu-wrap");

        //mobile nav sliding
        $('.mobile-menu .main-nav .icon-angle-right').on('click', function(e){
            var $this = $(this);
            var listItemName = $this.prev("a");
            $this.next(".dropdown").find(".back").eq(0).text(listItemName.attr("aria-label"));
            mobileMenuWrap.addClass('slid');
            $this.closest('li').find('.mobile-slider:first').eq(0).addClass('slide');
            mobileMenuWrap.scrollTop(0);
        });

        //mobile back slide
        $('.mobile-menu .main-nav .back').on('click', function(e){
            var $this = $(this);
            $this.closest('.mobile-slider').removeClass('slide');
            if ($this.next().hasClass('tier-2')){
                mobileMenuWrap.removeClass('slid');
            }
        });

        // check for main navigation component and adjust height of menu
        var mainNavComponent = headerComponent.find(".desktop-menu .main-navigation.component");
        mainNavComponent.each(function(i, el){
            var tier3List = $(el).find(".tier-3");
            var maxTier3Height = 0;
            tier3List.each(function(i, elem) {
                var current = $(elem).height();
                if (current > maxTier3Height) {
                    maxTier3Height = current;
                }
            });

            var tier4List = $(el).find(".tier-4");
            var maxTier4Height = 0;
            tier4List.each(function(i, elem) {
                // need to check if there's more than 8 list items
                // if so add class 'greater' to split into 2 columns per designs
                if ($(elem).find("> li").length > 8) {
                    $(elem).addClass("greater");
                }

                var current = $(elem).height();
                if (current > maxTier4Height) {
                    maxTier4Height = current;
                }
            });

            // do not adjust height for .nav-style-simple-dropdown
            if (!isNavStyleSimpleDropdown) {
                if (maxTier4Height > maxTier3Height) {
                    $(el).find(".tier-2").css("height", maxTier4Height);
                    $(el).find(".tier-3").css("height", maxTier4Height);
                    $(el).find(".tier-4").css("height", maxTier4Height);
                } else {
                    $(el).find(".tier-2").css("height", maxTier3Height);
                    $(el).find(".tier-3").css("height", maxTier3Height);
                    $(el).find(".tier-4").css("height", maxTier3Height);
                }
            }
        });

        $('.header.component').each(function() {
            checkMenuState($(this));
            if ($(this).find(".top-level-links").children().length) {
                ko.applyBindings(new HeaderModel($(this)), this);
            }
        });

        // Updated to check if iparsys promo bar is present and adjust top padding accordingly
        // Quick check to set the main body/content padding-top to the calculated height of the header, to ensure content aligns
        let iparPromoBar = $('.promobar-xpf');
        let $stickyJumpNav = $('.sticky-jump-nav');
        if (!iparPromoBar.length) {
            adjustPaddingAfterElementsWithPositionFixed($stickyJumpNav);
            $(window).on('resize', function () {
                adjustPaddingAfterElementsWithPositionFixed($stickyJumpNav);
            });
        } else if (iparPromoBar.length) {
            $('main.content')?.css('padding-top', 0);
        }

        if ((iparPromoBar.length) && ($stickyJumpNav.length)) {
            $(".promobar-xpf").addClass("promobar-xpf__sticky-nav");
        }

        // Tab Navigation
        const tabNav = $('.tab-nav__tab');
        tabNav.each(function() {
            setActiveTabNav($(this));
        })
    });
});

(function() {
    'use strict';
    window.HeaderUtil = window.HeaderUtil || function () {

        this.getCloudVisitorId = function() {
            if(window._satellite && window._satellite.getVisitorId()){
                return window._satellite.getVisitorId().getMarketingCloudVisitorID();
            }
            return null;
        }
    };
    window.HeaderUtil = new window.HeaderUtil();
}) ();
$(document).ready(function(event) {
    const formRefresh = $('.form-refresh')
        if (!!formRefresh) {
        formRefresh.click(function(){
            location.reload();
        }); 
    }
});



$(document).ready(function() {
    $("select:not(.no-chosen)").chosen({
        disable_search_threshold: 10,
        width: '100%',
        placeholder_text_single: 'Please Select'
    });
});

function setTwoDecimalplaces(elem) {
    if ($(elem).attr('data-decimal') ==='true'){
        elem.value = parseFloat(elem.value).toFixed(2);
    }
}


(function(){
    
    function handleInput(instance, input, values) {
        $(input).on("input change", function(e) {
            if (e.target.tagName === "INPUT") {
                if (e.target.type === "text" || e.target.type === "number") {
                    if (values.indexOf(e.target.value) !== -1) {
                        instance.find(".fcf-content").addClass("active");
                    } else {
                        instance.find(".fcf-content").removeClass("active");
                    }
                } else {
                    if ($(this).is(":checked") && values.indexOf(e.target.value) !== -1) {
                        instance.find(".fcf-content").addClass("active");
                    } else {
                        instance.find(".fcf-content").removeClass("active");
                    }
                }
            } else {
                if (values.indexOf(e.target.value) !== -1) {
                    instance.find(".fcf-content").addClass("active");
                } else {
                    instance.find(".fcf-content").removeClass("active");
                }
            }
        });
    }

    function initFormConditionalField(component) {
        var currComponent = $(component);

        /* grab the values from the Form Conditional Field component and store */
        var storage = {};
        var fields = currComponent.find(".fcf-field");
        for (var i = 0; i < fields.length; i++) {
            var fieldProp = $(fields[i]),
            fieldPropName = fieldProp.attr("data-field"),
            fieldPropValue = fieldProp.val(),
            values = [];

            if (!storage.hasOwnProperty(fieldPropName)) {
                values.push(fieldPropValue);
                storage[fieldPropName] = values;
            } else {
                storage[fieldPropName].push(fieldPropValue);
            }
        }

        /* grab the closest form and its inputs */
        var form = currComponent.closest("form");
        var formElements = [].slice.call(form[0].elements);
        var inputs = formElements.filter(function(item, index) {
            return item.type !== "hidden" && item.type !== "submit";
        });

        /* loop through storage for key and loop through form inputs for specified key */
        for (var key in storage) {
            for (var i = 0; i < inputs.length; i++) {
                var current = $(inputs[i]);
                if (current.attr("name") === key) {
                    handleInput(currComponent, current, storage[key]);
                }
            }
        }
    }

    $(document).ready(function() {
        var formConditionalField = $(".form-conditional-field.component");
        if (formConditionalField.length) {
            formConditionalField.each(function(index, elem) {
                initFormConditionalField(elem);
            });
        }
    });
})();
$(window).load(function() {
    // Honey pot detection
    var spambot = false;
    var h0neyp0t = $('.in-left-field');
    const hiddenForm=$('.form-multi-hidden');

    function getFreeHoney() {
        /**
         *  getFreeHoney() ensures that hidden fields have not been filled out.
         *  when spambot is true the submission breaks and redirects to "/"
         *
         *  */
        if (h0neyp0t.length) {
            h0neyp0t.find('input').each(function(index, element) {
                if (element.type === 'text' && element.value !== '') {
                    spambot = true;
                }
                if (element.type === 'checkbox' && element.checked) {
                    spambot = true;
                }
            });
        }
    }

    function setHiddenParameters(){
             if (typeof _satellite !== undefined && _satellite !== null) {
                 var gclidParam=_satellite.getVar('gclid') ;
                 var fbclidParam=_satellite.getVar('fbclid');
                 if(gclidParam !== 'null') {
    				hiddenForm.find('.hidden-marketingclid').val(gclidParam);
                 } else {
    				hiddenForm.find('.hidden-marketingclid').val(fbclidParam);
                 }
                 hiddenForm.find('.hidden-utmCampaign').val(_satellite.getVar('UTMCampaign') || null);
                 hiddenForm.find('.hidden-cipher').val(_satellite.getVar('campaignCode_PID') || null);
                }

        }
 //call method only when  form multi-hidden component is found
    if(!hiddenForm.length){
        return;
    }else{
        setHiddenParameters();
    }
    
 //datepicker
    $('.datepicker').datepicker({
        autoclose: true
    }).on('hide', function() {
        $(this).parsley().validate();
    });

    //$("select:not(.no-chosen)").chosen();

    /**
     * Sets form element to required if form field matching selector (data-parsley-required-if-target) has value of
     * one of the items in array (data-parsley-required-if-target-equals).
     * Put the following data attributes on a form item to use:
     * data-parsley-validate-if-empty="true"                          // Required for checking empty fields.
     * data-parsley-required-if-target-equals='["Parts", "Service"]'  // Example select drop down values.
     * data-parsley-required-if-target-name="type"                    // Name of other field to check.
     */
    window.Parsley.addValidator("requiredIfTargetName", {
        validateString: function(value, targetName) {
            var targetMatches = arguments[2].$element.data('parsley-required-if-target-equals');
            var targetValue = arguments[2].$element.parents('form').find('[name=' + targetName + ']').val();
            var isString = Object.prototype.toString.call(targetMatches).indexOf('String') !== -1;
            var isArray = Object.prototype.toString.call(targetMatches).indexOf('Array') !== -1;

            if (isString) {
                targetMatches = [targetMatches];
                isArray = true;
            }

            targetMatches = targetMatches.map(function(elem) {
                return elem.value;
            });

            if (isArray && targetMatches.indexOf(targetValue) !== -1) {
                return !!value; // Must have value.
            }

            return true;
        },
        priority: 33
    });

    window.Parsley.addValidator("fileType", {
        validateString: function(value, targetName) {
            var acceptedTypes = ["application/pdf","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document"];
            var acceptedExtensions = ["pdf","doc","docx"];
            var files = arguments[2].element.files;
            var contentTypeValid = false;
            var extensionValid = false;
            if(value && files && files[0] && targetName === 'documents'){
                var contentTypeValid = acceptedTypes.indexOf(files[0].type) != -1;
                var extensionValid = acceptedExtensions.indexOf(value.split('.')[1]) != -1;
                return contentTypeValid && extensionValid;
            }
            return true;
        },
        priority: 34
    });

    //Note: maxFileSize is in MB
    window.Parsley.addValidator("maxFileSize", {
        validateString: function(value, targetName) {
            var files = arguments[2].element.attachments;
            if(value && files && files.length > 0){
                var filesArray = [];
                var accumulatedSize = _(files).reduce(function(arr, elem){
                   return arr + elem.size;
                }, 0);
                var fileSizeCheck = (accumulatedSize / 1000000) <= parseInt(targetName, 10);
                return fileSizeCheck;
            }
            return true;
        },
        priority: 35,
        messages: {
            en: 'File exceeds maximum size of %s MB'
        }
    });

    window.Parsley.on('field:error', function() {
        var field = this.$element[0].id;
        // This global callback will be called for any field that fails validation.
        $('#' + field).parent().addClass('label-error');
        $('#' + field).closest('div.checkbox-wrap').addClass('display-error-message');
        $('#' + field).closest('div.radio-wrap').addClass('display-error-message');
    });
    window.Parsley.on('field:success', function() {
        var field = this.$element[0].id;
        // This global callback will be called for any field that fails validation.
        $('#' + field).parent().removeClass('label-error');
        $('#' + field).closest('div.checkbox-wrap').removeClass('display-error-message');
        $('#' + field).closest('div.radio-wrap').removeClass('display-error-message');
    });

    if($('form.sfdc').length > 0){
    	if($('form.sfdc').find('.hidden-skuid').length > 0 && $('form.sfdc').find('.hidden-skuid').val() == '<SKUID>'){
    		var skuid = localStorage.getItem("SKUID");
    		if(skuid != '' && skuid != null && skuid != 'undefined'){
    			$('form.sfdc').find('.hidden-skuid').val(skuid);
    		}
    	}
    }

    $('.form-submit .btn-submit').on('click',function(e) {

        getFreeHoney();
        if (spambot) {
            window.location = '/';
            return false;
        }

        if (!checkRecaptcha($(this))) {
            $(".captcha-error").slideToggle(250);
            $(".captcha-error").attr("aria-hidden", false);
            return false;
        }

        //get the closest form
        var form = $(this).closest("form");
        var formid = form.attr("id");
        var redirectUrl = form.find('input[name=redirect]').val();

        // Custom field population
        if (typeof _satellite !== undefined && _satellite != null) {
            form.find('.hidden-ecid').attr('value', _satellite.getVisitorId().getMarketingCloudVisitorID());
            form.find('input[name=VisitorID]').attr('value', _satellite.getVisitorId().getMarketingCloudVisitorID());
        }

        var ga = ga || [];
        if (typeof ga !== undefined && ga != null && ga.length > 0) {
            form.find('.hidden-gacid').attr('value', ga.getAll()[0].get('clientId'));
        }

        var gclidValue = readCookie('gclid');
        if (gclidValue !== undefined && gclidValue != null && gclidValue.length > 0) {
            form.find('.hidden-gclid').attr('value', gclidValue);
        } else {
            form.find('.hidden-gclid').attr('disabled', 'disabled');
        }

        // Push value from user 'phone' input into hashednumber field for tracking; including hashCode string function
        String.prototype.hashCode = function() {
          var hash = 0, i, chr;
          if (this.length === 0) return hash;
          for (i = 0; i < this.length; i++) {
            chr   = this.charCodeAt(i);
            hash  = ((hash << 5) - hash) + chr;
            hash |= 0; // Convert to 32bit integer
          }
          return hash;
        };

        var phoneField = form.find("[name*='phone']").val();
        if (phoneField !== undefined && phoneField != null && phoneField.length > 0) {
            form.find('.hidden-hashednumber').attr('value', phoneField.hashCode());
        }


        // Custom leadsource and phone override conditions
        var leadsource = "In-Home: Pentair";

        function getUrlParameter(name) {
            name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
            var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
            var results = regex.exec(location.search);
            return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
        };
        source = getUrlParameter('source');

        // TODO: Commented out conditions until business decides on campaign source IDs
        if (source == "facebook") {
            leadsource = "In-Home: Pentair Facebook";
        } else if (source == "google") {
            leadsource = "In-Home: Pentair Google";
        } else if (source == "programmatic") {
            leadsource = "In-Home: Pentair Programmatic";
        } else if (source == "criteo") {
            leadsource = "In-Home: Pentair Criteo";
        }
        form.find('.hidden-leadsource').attr('value', leadsource);

        parsleyForm = form.parsley();
        parsleyForm.validate();
        if (parsleyForm.isValid()) {
            form.find('.form-submit .btn-submit').prop('disabled', true).text("Sending");
            // Pull Services for Analytics
            // var services = [];
            // var $servicesElements = form.find("[name=services]:checked");
            // $servicesElements.each(function() { services.push($(this).val()); });

            if (form.hasClass('sfdc')) {
                beforeSubmit();
                var salesforceForm = form.find('input[name=00N6100000EMJxE]').val();
                var backupName = $('form.generic-form').data('form-name');
                var eventName = salesforceForm || backupName;
                var userHashedNumber = form.find('.hidden-hashednumber').val();
                updateFormAnalyticsData(eventName, "submit", "form", userHashedNumber);
                // PAAS - Adobe analytics track event payload
                trackEventFormSubmitted(eventName);
                setTimeout(function() {
                    form.submit();
                },0);
            } else if (form.hasClass('bronto')) {
                beforeSubmit();
                var brontoForm = form.find('input[name=campaignId]').val();
                var eventName = brontoForm;
                updateFormAnalyticsData(eventName, "submit", "form", null);
                // PAAS - Adobe analytics track event payload
                if (!eventName && form.length > 0 && form.get(0) != null) {
                    trackEventFormSubmitted(form.get(0).dataset.formName);
                } else {
                    trackEventFormSubmitted(eventName);
                }
                setTimeout(function() {
                    form.submit();
                },0);
            } else if (form.hasClass('spectrum')) {
                beforeSubmit();

                // PAAS - Adobe analytics track event payload
                if (form.length > 0 && form.get(0) != null) {
                    trackEventFormSubmitted(form.get(0).dataset.formName);
                }

                // Cannot set form input values to variables as jquery will pass them as objects in url params
                updateFormAnalyticsData((form.find('input[name=spectrumCampaignId]').val() || _satellite.getVar('campaign') || ''), "submit", "form", null);

                form.attr('action', form.attr('action') + "?Campaign=" + (form.find('input[name=spectrumCampaignId]').val() || _satellite.getVar('campaign') || ''));
                form.attr('action', form.attr('action') + "&ParticipantID=" + (form.find('input[name=ParticipantID]').val() || ''));
                form.attr('action', form.attr('action') + "&VisitorID=" + (form.find('input[name=VisitorID]').val() || ''));
                form.attr('action', form.attr('action') + "&SourceID=" + (form.find('input[name=SourceID]').val() || ''));
                form.attr('action', form.attr('action') + "&OptIn=" + (form.find('input[name=OptIn]').val() || '0'));
                if (form.find('input[name=OptIn]') != null && form.find('input[name=OptIn]').val() == '1') {
                    form.attr('action', form.attr('action') + "&Redirect=0");
                } else {
                    form.attr('action', form.attr('action') + "&Redirect=1");
                }
                setTimeout(function() {
                    form.submit();
                }, 0);
            } else if (form.hasClass('pump-calculator')) {
                const formType = form.find('select.chosen-select').val();
                const submitText = $('.btn-submit').val();
                const calculatedResult = calculateCost(formType, form);
                $('.pump-calculator-result').html(`<div class="pump-results">Total Cost of Pump: ${calculatedResult}</div>`);
                $('.pump-calculator-result').addClass('display-results');
                form.find('.form-submit .btn-submit').removeAttr('disabled').text(submitText);
                e.preventDefault();
                return;
            }
            else {
                e.preventDefault();

                addFileLoader();

                var formData = new FormData(form[0]);

                $('.inputfile input').each(function() {
                    if (this.attachments) {
                        $.each(this.attachments, function (index, file) {
                            formData.append('attachments[]', file);
                        });
                    }
                });

                $.ajax({
                    url: form.attr("action"),
                    data: formData,
                    type: form.attr('method'),
                    cache: false,
                    contentType: false,
                    processData: false
                })
                    .done(function(resp) {
                        console.log(resp);
                        form.find("input, textarea, select").val("");
                        beforeSubmit();
                        ////////////////////////////////////////////////////////
                        ////Analytics data layer for form successful submit ///
                        //////////////////////////////////////////////////////

                        // Adobe analytics track event payload
                        if (form.length > 0 && form.get(0) != null) {
                            trackEventFormSubmitted(form.get(0).dataset.formName);
                        }
                        try {
                            var eventName = '';
                            var customFormVal = form.find('input[name=subject]').val();
                            eventName = customFormVal;
                            updateFormAnalyticsData(eventName, "submit", "form", null);
                        } catch (err) {
                            console.log(err);
                        }

                        ////////////////////////////////////////////////////////
                        ////Analytics data layer for form successful submit ///
                        //////////////////////////////////////////////////////

                        /* Gated Asset Functionality - PENW-3174 */
                        if ($("main").hasClass("gated")) {
                            var gatedAssets = readCookie('gated_assets');
                            var path = window.location.pathname;
                            if (gatedAssets !== undefined && gatedAssets != null && gatedAssets.length > 0) {
                                // cookie exists
                                if (path.indexOf("/content/dam") !== -1) {
                                    var cookieStr = gatedAssets.replace(/[\[\]]+/g,'');
                                    var cookieArr = cookieStr.split(",");
                                    if (cookieArr.indexOf(path) === -1) {
                                        cookieArr.push(path);
                                        setCookie("gated_assets", "["+ cookieArr.join(",") +"]", 30);
                                        var url = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + cookieArr.pop();
                                        window.location.replace(url);
                                    }
                                }
                            } else {
                                // cookie does not exist
                                if (path.indexOf("/content/dam") !== -1) {
                                    setCookie("gated_assets", "["+ path +"]", 30);
                                    var url = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + path;
                                    window.location.replace(url);
                                }
                            }
                        }

                        if (redirectUrl.length > 0)
                            window.location = redirectUrl;

                        // Trigger Analytics Event
                        //               form.attr("data-services-selected", services.join(','));
                        //               form.triggerNative("FormSuccess");
                        form.find('.form-submit .form-loader-wrapper').remove();
                    })
                    .fail(function(resp) {
                        console.log(resp);
                        form.find('.hidden-gclid').removeAttr('disabled');
                        form.find('.form-submit .btn-submit').prop('disabled', false).text("Submit");
                        form.find(".error.text-right").show();
                    });
            }
        } else {
            var firstError = $(".parsley-error").eq(0);
            $('html, body').animate({
                scrollTop: firstError.offset().top - 180
            }, 500, function() {
                setTimeout(function() {
                    firstError.focus();
                }, 100);
            });
        }
        /**
           * Constructs and tracks the pump-calculator form submitted and returns formulate.
           * @param formName name of the form
           */
        function calculateCost(formType, form) {
            var totalCost = 0;
            var data;
            switch (formType) {
                case "cobalt":
                    data = {
                        pump_model: parseFloat(form.find('input[name=cobaltPumpCost]').val()) || 0,
                        fittings: parseFloat(form.find('input[name=cobaltFittingsCouplersCost]').val()) || 0,
                        projected_useful_life: parseFloat(form.find('input[name=cobaltProjectedLife]').val()) || 0,
                        frequency: parseFloat(form.find('input[name=cobaltSealReplacementFrequency]').val()) || 0,
                        cost: parseFloat(form.find('input[name=cobaltSealReplacementCost]').val()) || 0,
                    }
                    totalCost = eval(data.pump_model + data.fittings + (data.projected_useful_life * (12 / data.frequency) * data.cost));
                    break;
                case "forcefield":
                    data = {
                        forcefield_equivalent: parseFloat(form.find('input[name=forceFieldPumpCost]').val()) || 0,
                        projected_useful_life: parseFloat(form.find('input[name=forceFieldProjectedLife]').val()) || 0,
                        frequency: parseFloat(form.find('input[name=forceFieldSealReplacementFrequency]').val()) || 0,
                        material_cost: parseFloat(form.find('input[name=forceFieldSealReplacementCost]').val()) || 0,
                        hourly_labor_rate: parseFloat(form.find('input[name=forceFieldSealReplacementLaborRate]').val()) || 0,
                        time_to_service: parseFloat(form.find('input[name=forceFieldSealReplacementTimeToService]').val()) || 0,
                    }
                    totalCost = eval(data.forcefield_equivalent + (data.projected_useful_life * ((12 / data.frequency) * (data.material_cost + (data.hourly_labor_rate * data.time_to_service)))));
                    break;
                case "centrifugal":
                    data = {
                        centrifugal_pump_model: parseFloat(form.find('input[name=centrifugalPumpCost]').val()) || 0,
                        projected_useful_life: parseFloat(form.find('input[name=centrifugalProjectedLife]').val()) || 0,
                        frequency: parseFloat(form.find('input[name=centrifugalSealReplacementFrequency]').val()) || 0,
                        material_cost: parseFloat(form.find('input[name=centrifugalSealReplacementCost]').val()) || 0,
                        hourly_labor_rate: parseFloat(form.find('input[name=centrifugalSealReplacementLaborRate]').val()) || 0,
                        time_to_service: parseFloat(form.find('input[name=centrifugalSealReplacementTimeToService]').val()) || 0,
                    }
                    totalCost = eval(data.centrifugal_pump_model + (data.projected_useful_life * ((12 / data.frequency) * (data.material_cost + (data.hourly_labor_rate * data.time_to_service)))));
                    break;
                case "diaphragm":
                    data = {
                        current_pump_cost: parseFloat(form.find('input[name=diaphragmPumpCost]').val()) || 0,
                        motor_adapter_kit: parseFloat(form.find('input[name=diaphragmMotorAdapterCost]').val()) || 0,
                        motor_cost: parseFloat(form.find('input[name=diaphgramMotorCost]').val()) || 0,
                        installation_labor_cost: parseFloat(form.find('input[name=diaphragmMotorInstallationLaborCost]').val()) || 0,
                        projected_useful_life: parseFloat(form.find('input[name=diaphragmProjectedLife]').val()) || 0,
                        diaphragm_replacement_cost: parseFloat(form.find('input[name=diaphragmReplacementCost]').val()) || 0,
                        diaphragm_replacement_frequency: parseFloat(form.find('input[name=diaphragmReplacementFrequency]').val()) || 0,
                        valve_seal_replacement_frequency: parseFloat(form.find('input[name=diaphragmSealReplacementFrequency]').val()) || 0,
                        valve_seal_replacement_cost: parseFloat(form.find('input[name=diaphragmSealReplacementCost]').val()) || 0,
                        oil_change_frequency: parseFloat(form.find('input[name=diaphragmOilChangeFrequency]').val()) || 0,
                        oil_change_cost: parseFloat(form.find('input[name=diaphragmOilChangeCost]').val()) || 0,
                        gearbox_oil_change_frequency: parseFloat(form.find('input[name=diaphragmGearboxOilChangeFrequency]').val()) || 0,
                        gearbox_oil_change_cost: parseFloat(form.find('input[name=diaphragmGearboxOilChangeCost]').val()) || 0,
                        //below two fields are optional and part of installation cost
                        relief_valve_plumbing_cost: parseFloat(form.find('input[name=diaphragmReliefValveCost]').val()) || 0,
                        fittings_couplers_cost: parseFloat(form.find('input[name=diagphragmFittingsCouplersCost]').val()) || 0,
                    }
                    totalCost = eval((data.current_pump_cost + data.relief_valve_plumbing_cost + data.fittings_couplers_cost + data.motor_adapter_kit + data.motor_cost + data.installation_labor_cost) + (data.projected_useful_life * ((data.diaphragm_replacement_frequency / 12) * data.diaphragm_replacement_cost) + ((data.valve_seal_replacement_frequency / 12) * data.valve_seal_replacement_cost) + ((12 / data.oil_change_frequency) * data.oil_change_cost) + ((data.gearbox_oil_change_frequency / 12) * data.gearbox_oil_change_cost)));
                    break;
            }
            return totalCost;

        }
        /**
         * Constructs and tracks the form submitted event payload.
         * @param formName name of the form
         */
        function trackEventFormSubmitted(formName) {
            var eventFormSubmittedPayload = {
                eventName: 'form submitted',
                eventType: 'event',
                attributes: {
                    visitor: {
                        pentairCustomerID: getPentairCustomerID(),
                        dealerID: getDealerID()
                    },
                    page: {
                        pageCanonical: getPageViewPageAttribute("pageCanonical"),
                        pageName: getPageViewPageAttribute("pageName"),
                        pagePath: getPageViewPageAttribute("pagePath"),
                        pageType: getPageViewPageAttribute("pageType"),
                        pageURL: getPageViewPageAttribute("pageURL"),
                        pageTitle: getPageViewPageAttribute("pageTitle"),
                        pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                        businessUnitID: getPageViewPageAttribute("businessUnitID"),
                        subBrand: getPageViewPageAttribute("subBrand"),
                        language: getPageViewPageAttribute("language"),
                        author: getPageViewPageAttribute("author"),
                    },
                    form: {
                        formName: formName
                    }
                }
            }
            trackEventWithQueue(eventFormSubmittedPayload);
        }

        function beforeSubmit() {
            form.find('.form-submit .btn-submit').text("Sent");
            $(".form-thanks").slideToggle(250);
            $(".form-thanks").attr("aria-hidden", false);
            form.find(".captcha-error").hide();
            form.find(".error .text-right").hide();

            var hideOnSubmit = $('form').closest('.form.component').data('hideonsubmit');
            if (hideOnSubmit) {
                form.find('button').hide();
                form.find("div[class*='form-input']").hide();
                $('html, body').animate({
                    scrollTop: form.offset().top - 180
                }, 500, function() {
                });
            }
        }

        function addFileLoader() {
            if(form.find('.inputfile').siblings('.message.has-file').length > 0){
                var loader = '<div class="form-loader-wrapper loader"><div class="results-loader"><p class="loading-text">Uploading...</p></div></div>';
                form.find('.form-submit .btn-submit').after(loader);
            }
        };

    });

    function checkRecaptcha(submitButton) {
        recaptchaResponse = submitButton.closest('form').find('.g-recaptcha-response').val();
        var hasCaptcha = submitButton.closest('form').find('.form-captcha').length > 0;
        if (hasCaptcha && (recaptchaResponse == "" || recaptchaResponse == undefined || recaptchaResponse.length == 0)) {
            return false;
        } else {
            return true;
        }
    }

    function overridePhone(number) {
        if (number.length > 0) {
            $('span#number').each(function() {
                if($(this).parent().hasClass('utility-dialogtech') === false) {
                    $(this).html(number);
                }
            });
        }
    }

    $('.inputfile input').each(function(index, inputElem) {
        var message    = $(this).parent().siblings('.message'),
            label = $(this).parent();
        $(inputElem)[0].attachments = [];

        $(inputElem).on( 'change', function( e ) {
            var fileName = '';
            var self = this;

            if( this.files && this.files.length > 0 ){

                var allowMultiple = $(inputElem).prop('multiple');
                $.each(this.files, function(index, elem){
                    if(allowMultiple){
                        $(inputElem)[0].attachments.push(elem);
                    } else {
                        $(inputElem)[0].attachments = [elem];
                    }
                });


                $(this).val(null); // clear input after we've saved to variable.

                message.find('.form-file-item').remove();
                message.addClass('has-file');

                $.each($(inputElem)[0].attachments, function(index, file){
                    var newFileElem = $('<span class="form-file-item"></span>').text(file.name);
                    message.append(newFileElem);
                    newFileElem.on('click', function(clickElement){
                        var fileIndex = $(clickElement.target).parent().find('.form-file-item').index($(clickElement.target));
                        if(fileIndex > -1){
                            $(clickElement.target).remove();
                            $(inputElem)[0].attachments.splice(fileIndex, 1);
                        }
                    });
                });
            }

            if( fileName ) {
                label.addClass('has-file').html(fileName);
            } else {
                label.removeClass('has-file');
            }

        });

        $(inputElem).parent().find('button').on('click', function(e){
            e.preventDefault();
            e.stopImmediatePropagation();
            $(this).parent().find('input').click();
            return false;
        });

    });

    ////////////////////////////////////////////////////////
    /////// Form auto-prefill based on URL params /////////
    //////////////////////////////////////////////////////

    var queryParams = window.location.href.indexOf("?") !== -1;
    if (queryParams) {
        var search = window.location.search.substring(1);
        var params = JSON.parse('{"' + decodeURI(search).replace(/&/g, '","').replace(/=/g,'":"') + '"}');

        // loop through params
        for (var key in params) {

            // get input fields in form component
            var inputs = $(".form.component").find("input,textarea,select");
            for (var i = 0; i < inputs.length; i++) {
                if ($(inputs[i]).attr("name") === key) {
                    var tagName = document.querySelector('[name="'+key+'"]').tagName.toLowerCase();
                    if (tagName === "input") {
                        if ($(inputs[i]).attr("type") === "text") {
                            $(inputs[i]).val(params[key]);
                        } else {
                            if ($(inputs[i]).val() == params[key]) {
                                $(inputs[i]).prop("checked", true);
                            }
                        }
                    } else if (tagName === "select") {
                        $(inputs[i]).chosen().val(params[key]);
                        $(inputs[i]).trigger("chosen:updated");
                    } else if (tagName === "textarea") {
                        $(inputs[i]).val(params[key]);
                    }
                }
            }

        }
    }

    ////////////////////////////////////////////////////////
    //// building data analytics layer object start ///////
    //////////////////////////////////////////////////////

    //event for form Field Initiate
    $('.form.component form').on('focus', 'input[type=text],textarea', function(e) {
        checkAndInitiateForm($(this));
        var $element = $(this);
        var parentWraper = $element.closest('.section');
        var eventName = "";
        var label = parentWraper.find('label');
        if (label.text() !== undefined) {
            eventName = label.text().replace('*', '').trim();
        }
        updateFormAnalyticsData(eventName, "initiate", "form field", null);
    });

    //event for form Field complete of text and textarea
    $('.form.component form').on('blur', 'input[type=text],textarea', function(e) {
        var $element = $(this);
        var parentWraper = $element.closest('.section');
        var eventName = "";
        var label = parentWraper.find('label');
        if (label.text() !== undefined) {
            eventName = label.text().replace('*', '').trim();
        }
        updateFormAnalyticsData(eventName, "complete", "form field", null);
    });

    //event for form Field initiate/complete of radio and checkbox
    $('.form.component form').on('change', 'input[type=radio],input[type=checkbox]', function(e) {
        checkAndInitiateForm($(this));
        var $element = $(this);
        //var label = $element.parent().find('label');
        var label = $element.closest('.section').find('fieldset legend');
        var eventName = label.text().replace('*', '').trim();
        updateFormAnalyticsData(eventName, "initiate", "form field", null);
        updateFormAnalyticsData(eventName, "complete", "form field", null);
    });

    $('.form.component form').on('change', 'select', function(e) {
        checkAndInitiateForm($(this));
        var $element = $(this);
        var parentWraper = $element.closest('.section');
        var eventName = "";
        var label = parentWraper.find('label');
        if (label.text() !== undefined) {
            eventName = label.text().replace('*', '').trim();
        }
        updateFormAnalyticsData(eventName, "initiate", "form field", null);
        updateFormAnalyticsData(eventName, "complete", "form field", null);
    });

    function updateFormAnalyticsData(eventName, eventAction, eventType, userHashedNumber) {
        //event name should be the subject of the form
        //eventAction should be the "submit/complete/initiate"
        if (eventAction === 'submit') {
            console.info('Form submission -- EventName: ' + eventName + '  EventAction: ' + eventAction + '  EventType: ' + eventType);
        }

        try {
            if (digitalData) {
                if (digitalData.form) {
                    digitalData.form.eventName = eventName;
                    digitalData.form.eventAction = eventAction;
                    digitalData.form.type = eventType;
                    digitalData.form.timeStamp = new Date();
                    if (userHashedNumber != null) {
                        digitalData.form.phone = userHashedNumber;
                    }
                }
            }
            } catch (err) {
                console.log(err);
            }
        }

    function checkAndInitiateForm($element) {
        var form = $element.closest("form");
        if (!form.attr('data-is-initiated')) {
            var eventName = '';
            var customFormVal = form.find('input[name=subject]').val();
            if (undefined === customFormVal) {
                //get the title from the salesforece hidden field
                var salesforceForm = form.find('input[name=00N6100000EMJxE]').val();
                eventName = salesforceForm;
            } else {
                eventName = customFormVal;

            }
            updateFormAnalyticsData(eventName, "initiate", "form", null);
            form.attr('data-is-initiated', true);
        }
    }

    ////////////////////////////////////////////////////////
    ///// building data analytics layer object end  ///////
    //////////////////////////////////////////////////////
});

function readCookie(name) {
    var n = name + "=";
    var cookie = document.cookie.split(';');
    for (var i = 0; i < cookie.length; i++) {
        var c = cookie[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1, c.length);
        }
        if (c.indexOf(n) == 0) {
            return c.substring(n.length, c.length);
        }
    }
    return null;
}

$(function() {

    function initFooterComponents(instance) {
        var component = instance;

        var links = component.find(".footer__links > .links");

        // on mobile, hide the child pages to look like an accordion
        var isMobile = $(window).width() < 768;
        if (isMobile) {
            links.find("ul").attr("hidden", "hidden");
        }

        // toggles the list to dropdown on mobile
        links.on("click", function(e) {
            if (isMobile) {
                if (!$(this).hasClass("active")) {
                    $(this).find("ul").removeAttr("hidden");
                } else {
                    $(this).find("ul").attr("hidden", "hidden");
                }
                $(this).toggleClass("active");
            }
        });
    }

    $(document).ready(function() {
        var footerComponents = $(".footer.component");
        if (footerComponents.length) {
            footerComponents.each(function(index, elem) {
                initFooterComponents($(elem));
            });
        }
    });
});
var FADPrefilterFormModel = function(componentElement) {
    var self = this;
    self.title = componentElement.find(".title").text() || "";
    self.zipCodePlaceholderText = componentElement.find("input[name='zipcode']").attr("placeholder") || "";
    self.categoryPlaceholderText = componentElement.find("select[name='category']").data("placeholder") || "";
    self.ctaText = componentElement.find(".category-btn > span").text() || "";
    self.userCoordinates = ko.observableArray([]);
    self.userZipCode = ko.observable("");
    self.userZipCodeAddress = ko.observable("");
    self.showNoGeoLocationMessage = ko.observable(false);
    self.geolocate = function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                self.userCoordinates.push(geolocation);
                var point = new google.maps.LatLng(geolocation.lat, geolocation.lng);
                var geocoder = new google.maps.Geocoder().geocode(
                    {'latLng': point}, function( res, status) {
                        var zip = res[0].address_components.filter(function(item) {
                            return item.types.indexOf("postal_code") !== -1;
                        });
                        self.userZipCode(zip[0].short_name);
                        componentElement.find(".autocomplete").val(self.userZipCode());
                    }
                );
            }, function(err) {
                console.warn("User location is blocked. Manually input zipcode.");
            });
        }
    };
    self.inputZipCodeKeyPress = function(context, event) {
        var value = $(event.target).val();
        self.userZipCode(value);
        return true;
    }
    // RESP-385
    // pre-select category if there's only one option available
    self.checkSelectNumItems = function() {
        var select = componentElement.find("select[name='category']");
        var numItems = select.find("option").length - 1;
        if (numItems === 1) {
            select.val(select.find("option")[1].value);
            select.prop('disabled', true);
            select.trigger('chosen:updated');
            var selected = select.find("option")[1].value;
            componentElement.find(".category-btn").attr("href", selected);
        }
        return true;
    }

    self.init = function() {
        self.geolocate();
        self.checkSelectNumItems();
    };

    self.init();

    // set authorable select placeholder text
    componentElement.find("select[name='category']").chosen({
        disable_search_threshold: 10,
        width: '100%',
        placeholder_text_single: self.categoryPlaceholderText
    });

    // set CTA url when an option in selected within the dropdown
    componentElement.find("select[name='category']").on("change", function(e) {
        var selected = $(this).find("option:selected")[0].value;
        componentElement.find(".category-btn").attr("href", selected);
    });

    componentElement.find(".category-btn").on("click", function(e) {
        e.preventDefault();
        var path = $(this).attr("href");
        var zip = self.userZipCode();
        var select = componentElement.find("select[name='category']");
        if (zip !== undefined && zip != null && zip.length && select.val()) {
            window.location.replace(path + "?zip=" + zip);
        } else {
            self.showNoGeoLocationMessage(true);
            return false;
        }

        // Find a Dealer Prefilter Form Button Click Analytics - [RESP-155]
        if(!_.isUndefined(window._satellite)){
            _satellite.track('wtb_prefilter');
        }

        return true;
    });

    // adding class to body to show overflow between sections - [RESP-380]
    componentElement.find("select[name='category']").on("chosen:showing_dropdown", function() {
        $("body").addClass("chosen-is-active");
    });

    componentElement.find("select[name='category']").on("chosen:hiding_dropdown", function() {
        $("body").removeClass("chosen-is-active");
    });
}

$(document).ready(function () {
    $(".find-a-dealer-prefilter-form.component").each(function() {
        try {
            ko.applyBindings(new FADPrefilterFormModel($(this)), this);
        }
        catch(e) {
            console.log(e);
        }
    });
});
function filterFinderWrap() {
    const COMPONENT_ELEMENT = $('.filter-finder-component.component');
    const INSTANCE = COMPONENT_ELEMENT.attr('data-indexEnvironment');
    const APPLICATION_ID = COMPONENT_ELEMENT.attr('data-applicationid');
    const SEARCH_API_KEY = COMPONENT_ELEMENT.attr('data-search-api-key');
    const INDEX_NAME = INSTANCE + '_' + COMPONENT_ELEMENT.attr('data-index');
    const CLIENT = algoliasearch(APPLICATION_ID, SEARCH_API_KEY);
    const INDEX =  CLIENT.initIndex(INDEX_NAME);
    const FILTER_FINDER_MODAL = $('.filter-finder-modal');
    const MODAL_TITLE = FILTER_FINDER_MODAL.find('.modal-title');
    const TEXT_INPUT_LABEL_VALUE = FILTER_FINDER_MODAL.find(MODAL_TITLE).text();
    const FF_MODAL_PRESENT_CLASS = 'filter-finder-modal-present';
    const DOT_MODAL_REPOSITIONED_TRUE = $('.modal-repositioned');
    const DISPLAY_RESULTS = 'display-products';
    const DISPLAY_RESULTS_NONE = 'display-products-none';
    const DOT_PRODUCT_RESULTS_NONE = $('.product-results-none');
    const ID_FILTER_FINDER_MODAL = $('#filterFinderModal');
    const DOT_MODAL_SIBLING = $('.main-content');
    const MODAL_OPEN = 'modal-open';
    const DOT_FILTER_FINDER_COMPONENT = '.filter-finder-component';
    const DOT_ERROR_MSG = $(DOT_FILTER_FINDER_COMPONENT).find('.err-msg1');
    const MANUFACTURER_FF = $('.manufacturer-filter-finder');
    const INPUT_GROUP_MANUFACTURER = $('.input-group-manufacturer');
    const ID_GET_MANUFACTURER = $(DOT_FILTER_FINDER_COMPONENT).find("#get-manufacturer");
    const ID_RESULTS_HITS = ID_FILTER_FINDER_MODAL.find('#resulthits');
    const BODY_ELEMENT = $('body');
    const CLASS_PRODUCT_RESULTS = ID_FILTER_FINDER_MODAL.find('.product-results');
    const FF_TITLE_BANNER = FILTER_FINDER_MODAL.find('.title-banner');

    const facetValues = ['manufacturers', 'diameterUSA', 'diameterMetric', 'lengthUSA', 'lengthMetric'];
    facetValues.forEach((facetValue) => {
        const measurementTextInput = $('.measurement-txt-note').text();
        var measurementInchesString;
        $('.' + facetValue).change(function () {
            ID_RESULTS_HITS.html('');
            MODAL_TITLE.html('search ' + measurementTextInput);
            const measurementDropdownValue = $('.' + facetValue)
                .find(':selected')
                .text();
            if (measurementDropdownValue.includes('"')) {
                measurementInchesString = measurementDropdownValue.replace('"', '\\"');
            } else {
                measurementInchesString = measurementDropdownValue;
            }
            INDEX.search('', { filters: facetValue + ':' + '"' + measurementInchesString + '"' }).then(({ hits }) => {
                if (hits.length <= 0) {
                    filterFinderNoResults();
                    return;
                }
                ID_FILTER_FINDER_MODAL.find(FF_TITLE_BANNER).find('h2').html(measurementDropdownValue);
                for (const item of hits) {
                    populateFilterFinderModal(item);
                    repositionModal();
                }
            });
        });
    });
    // handle click on manufacturer dropdown
    ID_GET_MANUFACTURER.change(function() { 
        const manufacturerTextInput = $(".manufacturer-txt-note").text();
        const manufacturerDropdownValue = MANUFACTURER_FF.find(":selected").text()
        ID_RESULTS_HITS.html('');
        INDEX.search("", {
            filters: "manufacturers:" + '"' + manufacturerDropdownValue +  '"'
        }).then(({ hits }) => {
            if (hits.length <= 0) {
                filterFinderNoResults();
                return
            }  
            MODAL_TITLE.html('search ' + manufacturerTextInput);
            ID_FILTER_FINDER_MODAL.find(FF_TITLE_BANNER).find('h2').html(manufacturerDropdownValue);
            for (const item of hits) {
                populateFilterFinderModal(item);
                repositionModal();
            }
        });
    })

// populates measurement dropdown filter
    facetValues.forEach((facetValue) => {
        const facetClassValue = $('.measurement-filter-finder').find('.' + facetValue);
        INDEX.search('', {facets: [facetValue]}).then((resultHit) => {
            // gets all manufacturers for dropdown  
            for (let item of Object.values(resultHit.facets)) {      
                var facetSet = Object.keys(item);
                var facetSetAscending =  facetSet.sort();
                var option = ``;
                for (var i=0;i<facetSetAscending.length;i++){
                    option += '<option value="'+ facetSetAscending[i] + '">' + facetSetAscending[i] + '</option>';
                }
                if (facetValue === 'manufacturers') {    
                    INPUT_GROUP_MANUFACTURER.children('.form-control').addClass('input-display-manufacturer')
                    $('.input-display-manufacturer').css({display:''});
                    MANUFACTURER_FF.find(INPUT_GROUP_MANUFACTURER).find('select').append(option);
                }
                if (facetValue === "diameterUSA" || "lengthUSA" || "diameterMetric" || "lengthMetric") {
                    facetClassValue.append(option);
                    facetClassValue.css({display:""});
                }
            }
        });  
    });

    // triggers metric measurement dropdowns and unchecking of usa checkbox
    function metricClassActive() {
        $('.diameterMetric').addClass('display-metric')
        $('.lengthMetric').addClass('display-metric')
        $('.diameterUSA').addClass('display-none')
        $('.lengthUSA').addClass('display-none')
    }
    // triggers usa measurement dropdowns and unchecking of metric checkbox
    function usaClassActive() {
        $('.diameterMetric').removeClass('display-metric')
        $('.lengthMetric').removeClass('display-metric')
        $('.diameterUSA').removeClass('display-none')
        $('.lengthUSA').removeClass('display-none')
    }

    function handleMetricUsaCheckbox() {
        const measurementRadioInputSelector = $('.measurement-input-groups input[type="radio"]');
        measurementRadioInputSelector.on('change', function() {
            measurementRadioInputSelector.not(this).prop('checked', false);
        });

        measurementRadioInputSelector.click(function() {
            if ($(this).val() === '0') {
                usaClassActive();
            } else if ($(this).val() === '1') {
                metricClassActive();
            } 
        });
    };
    handleMetricUsaCheckbox();

    function removeChosenInput() {
        BODY_ELEMENT.find('#get_manufacturer_chosen').remove();
        BODY_ELEMENT.find('.measurement-input-groups > .input-group > .chosen-container').remove();
    }
    removeChosenInput();

    // calls html to populate modal 
    function populateFilterFinderModal(item) {
        const URL_IS_PRESENT = !!item.url ? 'url-is-present' : '';
        const REPLACEMENT_UNICEL_VALUE = item.replacementUnicel ? item.replacementUnicel : '-';
        const REPLACEMENT_FILBUR_VALUE = item.replacementFilbur ? item.replacementFilbur : '-';
        const FILBUR_UNICEL_CHECK = (!item.replacementFilbur && !item.replacementUnicel) ? 'filbur-unicel-inactive' : '';
        const DISCONTINUED_ITEM_CLASS = item.discontinued == 'no' ? 'item-not' : 'item-discontinued';

        BODY_ELEMENT.addClass(FF_MODAL_PRESENT_CLASS);
        ID_FILTER_FINDER_MODAL.modal('show');
        CLASS_PRODUCT_RESULTS.addClass(DISPLAY_RESULTS);
        DOT_ERROR_MSG.removeClass('display-error-message');
        document.getElementById('resulthits').innerHTML = document.getElementById('resulthits').innerHTML +
        `<div class="col-lg-9 col-md-7 col-sm-7 col-xs-12 table-title">
            ${item.sku}
        </div>
        <div class="col-lg-9 col-md-7 col-sm-7 col-xs-12 ff-table">
            <table class="description" cellpadding="0" cellspacing="0">
                <tbody>
                    <tr>
                        <td class="category">Diameter</td>
                        <td>${item.diameterUSA}</td>
                        <td>${item.diameterMetric}</td>
                    </tr>
                    <tr>
                        <td class="category">Length</td>
                        <td>${item.lengthUSA}</td>
                        <td>${item.lengthMetric}</td>
                    </tr>
                    <tr> 
                        <td class="category">Top Hole</td>
                        <td>${item.topHoleUSA}</td>
                        <td>${item.topHoleMetric}</td>
                    </tr>
                    <tr>
                        <td class="category">Bottom Hole</td>
                        <td>${item.bottomHoleUSA}</td>
                        <td>${item.bottomHoleMetric}</td>
                    </tr>
                    <tr>
                        <td class="category">Filter Material</td>
                        <td colspan="2">${item.category}</td>
                    </tr>
                    <tr>
                        <td class="category">Material Area</td>
                        <td>${item.materialAreaUSA}</td>
                        <td>${item.materialAreaMetric}</td>
                    </tr>
                    <tr>
                        <td class="category">Material Weight</td>
                        <td>${item.materialWeightUSA}</td>
                        <td>${item.materialWeightMetric}</td>
                    </tr>
                </tbody>
            </table>
            <table class="${FILBUR_UNICEL_CHECK} description" cellpadding="0" cellspacing="0">
                <tbody>
                    <tr>
                        <td class="replacement-title">Replacement</td>
                        <td>Unicel</td>
                        <td>Filbur</td>
                    </tr>
                    <tr>
                        <td class="last"></td>
                        <td>${REPLACEMENT_UNICEL_VALUE}</td>
                        <td>${REPLACEMENT_FILBUR_VALUE}</td>
                    </tr>
                </tbody>
            </table>
            <div class="button hit-learn-more ${URL_IS_PRESENT}">
                <a href="${item.url}" aria-label=${item.sku} class="btn btn-primary ${DISCONTINUED_ITEM_CLASS}">Learn More!</a>
            </div>
        </div>
        <div class="col-lg-3 col-md-5 col-sm-5 col-xs-12 ff-image">
            <div class="product-border">
                <center>
                    <img class="img-responsive"
                        src="${item.image}"
                        alt="${item.sku}.png" 
                        title="${item.sku}.png">
                </center>
            </div>
        </div>`;
    }

    function filterFinderNoInput() {
        DOT_ERROR_MSG.addClass('display-error-message');
    }
    function filterFinderNoResults() {
        DOT_PRODUCT_RESULTS_NONE.addClass('display-products-none');
    }

    function getFilterFinderData() {
        const searchObject = $(".textProductSearch").val();
        MODAL_TITLE.text(TEXT_INPUT_LABEL_VALUE);
        if (!searchObject) {
            filterFinderNoInput();
            return
        }
        INDEX.search(searchObject).then(({ hits }) => {
            ID_RESULTS_HITS.html('');
            if (hits.length <= 0) {
                filterFinderNoResults();
                return
            };
            CLASS_PRODUCT_RESULTS.addClass(DISPLAY_RESULTS);
            ID_FILTER_FINDER_MODAL.find(FF_TITLE_BANNER).find('h2').html(searchObject);
            BODY_ELEMENT.addClass(FF_MODAL_PRESENT_CLASS);
            for (const item of hits) {
                populateFilterFinderModal(item);
            }
        })
        .catch(err => {
            console.log(err);
        });
    }

    // click handlers and open/close functions for the filter finder modal
    function initFilterFinderModal() {
        if (!COMPONENT_ELEMENT) {
            return;
        }
        const MODAL_CLOSE_BUTTON = ID_FILTER_FINDER_MODAL.find('.custom-close');
        const FILTER_FINDER_SEARCH_BUTTON = $(".productSearch");
        const FILTER_FINDER_SEARCH = $(".textProductSearch");
        const ENTER_KEY = 13;
        // close modal function and clear html
        function closeModal() {
            const measurementFacetValues = ["diameterMetric",  "diameterUSA", "lengthMetric", "lengthUSA"];
            ID_FILTER_FINDER_MODAL.modal('hide');
            ID_RESULTS_HITS.html('');
            DOT_PRODUCT_RESULTS_NONE.removeClass(DISPLAY_RESULTS_NONE);
            CLASS_PRODUCT_RESULTS.removeClass(DISPLAY_RESULTS);
            ID_FILTER_FINDER_MODAL.find(FF_TITLE_BANNER).find('h2').html('');
            BODY_ELEMENT.removeClass(FF_MODAL_PRESENT_CLASS);
            ID_GET_MANUFACTURER.prop('selectedIndex', 0);
            measurementFacetValues.forEach((measurementFacetValue) => {
                $('.' + measurementFacetValue).prop('selectedIndex', 0);
            });
        }
        // using keypress so only listening when typing
        FILTER_FINDER_SEARCH.keypress(function (event) {
            if (event.keyCode == ENTER_KEY) {
                FILTER_FINDER_SEARCH_BUTTON.trigger("click");
            }
        });
        // open modal on click of icon 
        FILTER_FINDER_SEARCH_BUTTON.on("click", (function (event) {
            const searchObject = $(".textProductSearch").val();
            if(!!searchObject) {
                ID_FILTER_FINDER_MODAL.modal('show');
                repositionModal();
                getFilterFinderData();
            }  else {
                filterFinderNoInput();
            }
        }));
        // listener for close icon on modal 
        MODAL_CLOSE_BUTTON.on("click", function () {
            closeModal();
        });
        // listener for escape key 
        ID_FILTER_FINDER_MODAL.on("keydown", function (event) {
            const MODAL_OPEN_TRUE = BODY_ELEMENT.hasClass(MODAL_OPEN);
            if (event.key === "Escape" && MODAL_OPEN_TRUE) {
                closeModal();
            }
        });
        // listener for click outside of modal
        ID_FILTER_FINDER_MODAL.on("click", function (event) {
            const MODAL_OPEN_TRUE = BODY_ELEMENT.hasClass(MODAL_OPEN);
            if (MODAL_OPEN_TRUE && $(event.target).closest(".modal-content").length == 0) {
                closeModal();
            }
        });
    } 
    initFilterFinderModal();

    function repositionModal() {  
        if (DOT_MODAL_REPOSITIONED_TRUE.length) { 
            return;
        } 
        ID_FILTER_FINDER_MODAL.addClass('modal-repositioned');
        DOT_MODAL_SIBLING.prepend(filterFinderModal);
    }
}

$(document).ready(function () {
    const filterFinderComp = document.querySelector('.filter-finder-component');
    if (!filterFinderComp || filterFinderComp == null || filterFinderComp == undefined) {
        return;
    } 
    filterFinderWrap();
});

$(document).ready(function () {
  //show/hide download center filter MOBILE
  var filterBtn = $('.component.download-center-grid .btn.btn-filter')
  var filter = $('.component.download-center-grid .filter')
  filterBtn.on('click', function (e) {
    e.preventDefault()
    if (filter.hasClass('open')) {
      closeFilter()
    } else if (!filter.hasClass('open')) {
      filter.css('display', 'contents')
      $('form', filter).css('z-index', 99)
      filter.addClass('open')
      $('body').addClass('filter-open modal-open')
    }
  })
  $('.component.download-center-grid .filter .icon-close').click(function (e) {
    e.preventDefault()
    closeFilter()
  })
  function closeFilter() {
    $('body').removeClass('filter-open modal-open')
    filter.css('display', 'none')
    filter.removeClass('open')
  }
})

var DownloadCenterViewModel = function (componentElement) {
  var self = this;
  self.applicationId = componentElement.data('applicationId');
  self.searchApiKey = componentElement.data('searchApiKey');
  self.index = componentElement.data('index');
  self.searchTerm = componentElement.find('.searchBox').data('searchterm') || "";
  self.defaultSort = componentElement.find('.sortby').data('sortby')|| "dcTitle";
  self.resultperpage = componentElement.find('.hitsPerPage').data('resultperpage');
  self.yearFilterList = componentElement.find('.filter').data('yearfilter') || "";
  self.filterClick = function (event) {
    let isButtonClick = $(event.target).is('button');
    if(isButtonClick){
      event.preventDefault();
    }

    return true;
  };

  downloadAnalytic = function(age,brand,language,type,name){
    try {
      if(digitalData){
        if(digitalData.event){
          var eventArr = {};
          eventArr.eventAction = "download resource";
          eventArr.eventName = "download center";
          eventArr.timeStamp = new Date();
          eventArr.type = "download";
          digitalData.event.push(eventArr);
        }
        digitalData.download = {};
        if(digitalData.download){
          digitalData.download.downloadAge = age;
          digitalData.download.downloadBrand = brand.substring(brand.lastIndexOf('|')+1,brand.length);
          digitalData.download.downloadLanguage = language.toLowerCase();
          digitalData.download.downloadType = type.substring(type.lastIndexOf('|')+1,type.length);
          digitalData.download.downloadName = name;
        }
      }
    } catch (error) {
      console.log(error);
    }
  }

  /**
   * Adds the click event handler to the dynamic accordian panel widgets.
   * @param filterContainer container for the filter widgets
   */
  function initDynamicWidgetAccordianPanel(filterContainer) {
    const dynamicWidgets = filterContainer.find('div[class*=ais-DynamicWidgets-widget]');
    if (dynamicWidgets.length > 0) {
      dynamicWidgets.each(function (index, elem) {
        let observer = new MutationObserver(function (mutations, observer) {
          // Fired when a mutation occurs. In our case it is addition of dynamic widget content.
          $(elem).find('[class*=algolia-accordion-panel]').on('click', function (clickEvent) {
             if (clickEvent.target.className !== 'ais-RefinementList-showMore') {
                $(clickEvent.currentTarget).find('div.ais-Panel-body').slideToggle();
             }
          });
          observer.disconnect();
        });
        observer.observe(elem, {
          childList: true
        });
      });
    }
  }

  self.initAlgolia = function (indexName, containerElem) {
    var searchClient = algoliasearch(self.applicationId, self.searchApiKey);
    var search = instantsearch({
      indexName: indexName,
      searchClient: searchClient,
      insightsClient: window.aa,
      routing: {
        router: instantsearch.routers.history({
          createURL: function(obj) {
            var  qsModule = obj.qsModule;
            var  routeState = obj.routeState;
            var  location = obj.location;
            var queryParameters = {
              q: routeState.q ? routeState.q : "",
              page: routeState.page,
              num: routeState.num,
              sort: routeState.sort,
              date: routeState.date ? routeState.date: "",
              brands: routeState.brands ? routeState.brands: "",
              documentType: routeState.documentType ? routeState.documentType: "",
              language: routeState.language ? routeState.language: "",
              searchable: routeState.searchable ? routeState.searchable: "",
              software: routeState.software ? routeState.software: "",
              imgVideo: routeState.imgVideo ? routeState.imgVideo: "",
            };
    
            var queryString = qsModule.stringify(queryParameters, {
              addQueryPrefix: true
            });
    
            return location.protocol + "//" + location.host +  location.pathname + decodeURIComponent(queryString);
          },
    
          parseURL: function(obj) {
            var qsModule =  obj.qsModule;
            var location = obj.location;
            var data = qsModule.parse(
              location.search.slice(1)
            );
            self.yearFilterList = data.date ? data.date : self.yearFilterList;
            self.defaultSort = data.sort ? data.sort: [indexName] + "_popular";
            self.resultperpage = data.num ? data.num : self.resultperpage;
            self.searchTerm = data.q ? decodeURIComponent(data.q) : location.search.slice(1) ? "" : self.searchTerm;
            return {
              query: data.q ? decodeURIComponent(data.q) : self.yearFilterList,
              page: data.page ? data.page: 0,
              hitsPerPage: data.num ? data.num: self.resultperpage,
              sortBy: data.sort ? data.sort: self.defaultSort,
              refinementList: {
                year: data.date ? data.date.split(',') : [],
                brands: data.brands ? data.brands.split(','): [],
                documentType: data.documentType ? data.documentType.split(',') : [],
                language: data.language ? data.language.split(',') : [],
                searchable: data.searchable ? data.searchable.split(',') : [],
                software: data.software ? data.software.split(',') : [],
                'img-video': data.imgVideo ? data.imgVideo.split(',') : [],
              }
            };
          }
        }),
    
        stateMapping: {
          stateToRoute: function(uiState) {
            var indexUiState = uiState[indexName] || {};
            return {
              q: indexUiState.query,
              page: indexUiState.page,
              num: indexUiState.hitsPerPage,
              sort: indexUiState.sortBy,
              date: listRefinement(indexUiState.refinementList, 'year'),
              brands: listRefinement(indexUiState.refinementList, 'brands'),
              documentType: listRefinement(indexUiState.refinementList, 'documentType'),
              language: listRefinement(indexUiState.refinementList, 'language'),
              searchable: listRefinement(indexUiState.refinementList, 'searchable'),
              software: listRefinement(indexUiState.refinementList, 'software'),
              imgVideo: listRefinement(indexUiState.refinementList, 'img-video'),
            };
          },
    
          routeToState: function(routeState) {
            var uiState = {};
            uiState[indexName] = routeState;
            return uiState;
          }
        }
      }
    });
    
    function listRefinement(obj, key){
      if (obj && key) {
        var arr = obj[key];
        if(arr && arr.length > 0) {
          return arr.join();
        }
      }
      return "";
    }
    var sortByItems = [];
    if (self.defaultSort === "dcTitle") {
      sortByItems = [
        { label: 'Popularity', value: indexName + '_popular' },
        { label: 'A-Z', value: indexName },
        { label: 'Z-A', value: indexName + '1st' },
        { label: 'Oldest', value: indexName + '2nd' },
        { label: 'Latest', value: indexName + '3rd' },
      ];
    } else if (self.defaultSort === "dcTitleDesc") {
      sortByItems = [
        { label: 'Popularity', value: indexName + '_popular' },
        { label: 'A-Z', value: indexName + '1st' },
        { label: 'Z-A', value: indexName },
        { label: 'Oldest', value: indexName + '2nd' },
        { label: 'Latest', value: indexName + '3rd' },
      ];
    }
    else if (self.defaultSort === "dcCreatedDate") {
      sortByItems = [
        { label: 'Popularity', value: indexName + '_popular' },
        { label: 'A-Z', value: indexName + '1st' },
        { label: 'Z-A', value: indexName + '2nd' },
        { label: 'Oldest', value: indexName },
        { label: 'Latest', value: indexName + '3rd' },
      ];
    } else if (self.defaultSort === "dcCreatedDateDesc") {
      sortByItems = [
        { label: 'Popularity', value: indexName + '_popular' },
        { label: 'A-Z', value: indexName + '1st' },
        { label: 'Z-A', value: indexName + '2nd' },
        { label: 'Oldest', value: indexName + '3rd' },
        { label: 'Latest', value: indexName },
      ];
    } else {
      sortByItems = [
        { label: 'Popularity', value: indexName },
        { label: 'A-Z', value: indexName + '1st' },
        { label: 'Z-A', value: indexName + '2nd' },
        { label: 'Oldest', value: indexName + '3rd' },
        { label: 'Latest', value: indexName + '_popular' },
      ];
    }

    function getPlatform() {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? 'mobile' : 'desktop';
    }

    search.addWidgets([
      instantsearch.widgets.configure({
        analyticsTags: [getPlatform()],
        clickAnalytics: true,
      }),
    ]);
    //Search box
    search.addWidgets([
      instantsearch.widgets.searchBox({
        container: containerElem.find('.searchBox')[0],
        placeholder: 'Search Download Center',
        cssClasses: {
          form: 'input-search',
          input: 'search-field mobile-search',
          submit: 'search-icon',
          submitIcon: 'icon-search',
        },
        showReset: false,
        showLoadingIndicator: false,
      }),
    ])
    //SortBy
    search.addWidgets([
      instantsearch.widgets.sortBy({
        container: containerElem.find('.sortby')[0],
        items: sortByItems,
      }),
      instantsearch.widgets.sortBy({
        container: containerElem.find('.sort-by.mobile')[0],
        items: sortByItems,
      })
    ])
    //Results per page
    //Author default
    var hitsPerPageItems = [];
    if (self.resultperpage === 12) {
      hitsPerPageItems = [
        { label: '12', value: 12, default: true },
        { label: '24', value: 24 },
        { label: '48', value: 48 },
      ];
    }
    else if (self.resultperpage === 24) {
      hitsPerPageItems = [
        { label: '12', value: 12 },
        { label: '24', value: 24, default: true },
        { label: '48', value: 48 },
      ];
    }
    else {
      hitsPerPageItems = [
        { label: '12', value: 12 },
        { label: '24', value: 24 },
        { label: '48', value: 48, default: true },
      ];
    }
    search.addWidgets([
      instantsearch.widgets.hitsPerPage({
        container: containerElem.find('.hitsPerPage')[0],
        items: hitsPerPageItems,
        cssClasses: {
          root: 'num-results',
          select: 'filters-num-results',
        }
      }),
    ])

    //Results
    search.addWidgets([
      instantsearch.widgets.hits({
        container: containerElem.find('.hits')[0],
        cssClasses: {
          list: 'resource-results-list'
        },
        templates: {
          item: '<a onclick="downloadAnalytic({{__position}},\'' + '{{brands}}' + '\',\'' + '{{language}}' + '\',\'' + '{{documentType}}' + '\',\'' + '{{title}}' + '\')" data-query-id="{{__queryID}}" data-object-id="{{objectID}}" data-position={{__position}} class="resource-link" target="_blank" href="{{url}}"><span class="image"><img loading="lazy" src="{{thumbnail}}" alt="decorative"/></span><div class="resource-title">{{title}}</div><p class="description">{{description}}</p></a>',
        },
      })
    ])

    // add click handler to download center item for analytics 
    $(document).on("click", 'a.resource-link', function() {
      const userToken = HeaderUtil.getCloudVisitorId();
      const $this = $(this);
      const objectID = $this.data("object-id");
      const queryID = $this.data("query-id");
      const objectIdString = JSON.stringify(objectID);
      const position = $this.data("position");
      // initiates instant.js 
      const instance = instantsearch({
        searchClient,
        indexName: indexName + '_popular',
        insights: true,
      });

      window.aa('clickedObjectIDs', {
        eventType: 'click',
        userToken: userToken,
        queryID:  queryID,
        eventName: 'Download Center Item Click Event',
        index: indexName + '_popular',
        objectIDs: [objectIdString],
        positions: [position]
      })
  });

    //Pagination
    search.addWidgets([
      instantsearch.widgets.pagination({
        container: containerElem.find('.pagination .paging')[0],
        cssClasses: {
          root: 'paginationList'
        },
        showFirst: false,
        showLast: false,
        padding: 2,
        templates: {
          next: '',
          previous: ''
        }
      }),
    ])
    //Count
    search.addWidgets([
      instantsearch.widgets.stats({
        container: containerElem.find('.pagination .count')[0],
        templates: {
          text: function (result) {
            var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
            var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
            return (result.nbHits > 1) ? "Displaying " + firstItem + " - " +lastItem +" of "+ result.nbHits : '';
          },
        }
      }),
    ])

    //Filter list
    const SHOW_MORE_TEXT = '{{#isShowingMore}}Show less{{/isShowingMore}}{{^isShowingMore}}Show more{{/isShowingMore}}';
    function createFilterPanel(container, attribute, showMore, showMoreLimit, sortBy, transformItems){
         const filterPanelConfig = {
            container: container,
            attribute: attribute,
            showMore: showMore,
            showMoreLimit: showMoreLimit,
            templates: {
                showMoreText: SHOW_MORE_TEXT,
                item: '<input class="dc-filter-check" type="checkbox" value={{label}} {{#isRefined}}checked{{/isRefined}} /><label><span">{{label}}</span>&nbsp;<span class="item-count">({{count}})</span></label> ',
            },
            sortBy: sortBy ? [sortBy] : undefined,
        }
         if (transformItems) {
             filterPanelConfig.transformItems = function (items) {
                return items.map(function (item) {
                var formatLabel = item.label.substring(item.label.lastIndexOf('|') + 1, item.length);
                item.label = formatLabel;
                    return item;
                });
            };
        }
        return filterPanelConfig
     }
    search.addWidgets([
      instantsearch.widgets.dynamicWidgets({
        container: componentElement.find('#dynamic-widgets')[0],
        widgets: [
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('By Year', 'year')(createFilterPanel(container, 'year', true, 30, 'name:desc', false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Brands', 'brands')(createFilterPanel(container, 'brands', true, 30, null, true)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Industry Solutions', 'industrySolutions')(createFilterPanel(container, 'industrySolutions', true, 30, null, true)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Channels', 'channels')(createFilterPanel(container, 'channels', true, 30, null, true)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Categories', 'categories')(createFilterPanel(container, 'categories', true, 30, null, true)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Applications', 'applications')(createFilterPanel(container, 'applications', true, 30, null, true)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Document Type', 'documentType')(createFilterPanel(container, 'documentType', true, 30, null, true)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Images & Video', 'img-video')(createFilterPanel(container, 'img-video', false, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Software/Firmware', 'software')(createFilterPanel(container, 'img-video', false, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Language', 'language')(createFilterPanel(container, 'language', true, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Description', 'description')(createFilterPanel(container, 'description', true, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Url', 'url')(createFilterPanel(container, 'Url', true, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Title', 'title')(createFilterPanel(container, 'title', true, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Created Date', 'createdDate')(createFilterPanel(container, 'createdDate', true, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Expiration Date', 'expirationDate')(createFilterPanel(container, 'expirationDate', true, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Last Modified Date', 'lastModifiedDate')(createFilterPanel(container, 'lastModifiedDate', true, 30, null, false)),
            container =>
                PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Thumbnail', 'thumbnail')(createFilterPanel(container, 'thumbnail', true, 30, null, false)),
        ]
      }),
      instantsearch.widgets.refinementList({
        container: containerElem.find('.searchable')[0],
        attribute: 'searchable',
      })
    ]);
    search.start();
    //searchable only
    try{
      search.helper.addDisjunctiveFacetRefinement('searchable', 'true')
    }
    catch(err){
      console.log(err)
    }
      if(self.yearFilterList){
        if(self.yearFilterList.toString().includes(',')){
          var yearArr = self.yearFilterList.split(',');
          yearArr.map(function(item){
            search.helper.addDisjunctiveFacetRefinement('year', item)
          })
        }
        else{
          search.helper.addDisjunctiveFacetRefinement('year', self.yearFilterList)
        }
      }
    //init author searchbox text
    search.helper.setQuery(self.searchTerm).search();
    //hide filter if empty
    search.on('render', function () {
      $('.component.download-center-grid .filter .filter-list .dc-filter-group').filter(function () {
        return $('div', this).hasClass('ais-RefinementList--noRefinement');
      }).hide();
      $('.component.download-center-grid .filter .filter-list .dc-filter-group').filter(function () {
        return !$('div', this).hasClass('ais-RefinementList--noRefinement');
      }).show();
      $('.loader-wrapper.loader').css('display','none');
      $('.no-search-results').css('display','none');
    })
  };
  self.init = function () {
    self.initAlgolia(self.index, componentElement);
    initDynamicWidgetAccordianPanel(componentElement.find('.filter #dynamic-widgets'));
  };
  self.init();
};

$(document).ready(function () {
  $('.download-center-grid.component').each(function () {
    $('.loader-wrapper.loader').css('display','absolute');
    $('.no-search-results').css('display','absolute');
    ko.applyBindings(new DownloadCenterViewModel($(this)), this);
  });
});

$(document).ready(function(){
    if($('.dialogtech').length > 0) {

        try {
            $('.dialogtech [id^="number"]').each(function (i, el) {
                const phoneNumUtility = $(this).attr("data-attribute");
                const dialogNumBody = $(this).attr("data-override");

                let dialogNumHtml = phoneNumUtility || dialogNumBody;

                mrkup = "<a href='tel:" + dialogNumHtml + "' class='number'><span class='icon-nvent-phone'></span><span class='num'>" + dialogNumHtml + "</span></a>";

                if($(el).parent().hasClass('utility-dialogtech') === false) {
                    mrkup = "<a href='tel:" + dialogNumHtml + "' class='number'><span class='num'>" + dialogNumHtml + "</span></a>";
                }
                $(el).html(mrkup);
                setTimeout(function() {
                    // Required because something else is changing the value of this in form.js
                    $(el).html(mrkup);
                }, 1000);
                if($(el).parent().hasClass('utility-dialogtech') === true) {
                    $(el).parent().remove();
                    $('.utility-nav .utility-nav-links').append("<li class='dialogtech dialogtech-nav'>"+ mrkup +"</li>");
                    $('.mobile-menu .mobile-wrap .cart').before(mrkup);
                    $('.message-header').addClass('message-header__add-pad');

                    if($('.bread-section .share.component').length > 0) {
                        $('.bread-section .share.component').addClass('hide-mobile');
                    }
                }
            });
        } catch (e) {
            console.log('Caught Error: ' + e);
        }
    }

    // Mobile Chat Feature
    if ($('[class=message-desktop]').length > 0) {
        $('.message-mobi').addClass('message-mobi--50');
    }

    if ($('.dialogtech-mobi').length > 0) {
        $('.message-mobi').addClass('message-mobi--50');
    }else{
        $('.message-mobi').removeClass('message-mobi--50');
    }

    if ($('.message-mobi').length > 0) {
        $('.dialogtech-mobi').addClass('dialogtech-mobi--50');
    }else{
        $('.dialogtech-mobi').removeClass('dialogtech-mobi--50');
    }


    var dialogHeader = $('.message-header');
    if (dialogHeader){
        dialogHeader.remove;
        $('.utility-nav .utility-nav-links').append($('.message-header'));
    }

    $('.dialogtech.utility-dialogtech').on('click', function (e) {
        if(!!window._satellite) {
            _satellite.track('dialog_tech_click');
        }
    });
    $('.dialogtech-nav').on('click', function (e) {
        if(!!window._satellite) {
            _satellite.track('dialog_tech_click');
        }
    });
});

$(document).ready(function(){
    $('.curator .crt-tag').hide();

    $('.curator').each(function() {
        var feed = $(this).find('div').attr('data-feed');
        var script = document.createElement("script");
        script.setAttribute("type", "text/javascript");
        script.setAttribute("src", "https://cdn.curator.io/published/" + feed + ".js");
        document.body.appendChild(script);
    });
});
$(document).ready(function(){
    function getParam(p) {
        var match = RegExp('[?&]' + p + '=([^&]*)').exec(window.location.search);
        return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
    }

    // Append source value for MSA CTAs if available
    var source = getParam("source");
    if (source) {
        $(".btn").each(function() {
            if ($(this).attr("href") != null && $(this).attr("href").length > 0 && $(this).attr("href").indexOf("source=") == -1) {
                if ($(this).attr("href").indexOf("?") > -1) {
                    $(this).attr("href", $(this).attr("href") + "&source=" + source);
                } else {
                    $(this).attr("href", $(this).attr("href") + "?source=" + source);
                }
            }
        });
    }
    $("a.btn").click(function(e){
        var href = $("a.btn").attr("href");
        if(href && href.indexOf("/products/") !== -1){
            localStorage.setItem("productFindingMethod","PDPRecommendation");
            document.cookie="productFindingMethod=PDPRecommendation; domain=.pentair.com; path=/";
        }
    });
});

// Adobe analytics, wait for the page to load before adding the listeners.
window.addEventListener('load', function () {
    var ctas = document.querySelectorAll('a[class~="btn"], button[class~="sku-add-to-cart-btn"]');
    for (var i = 0; i < ctas.length; i++) {
        ctas[i].addEventListener('click', trackCTAClick);
    }

    // CTA Click event
    function trackCTAClick(clickEvent) {
        var ctaText = $(clickEvent.currentTarget).text();
        var analyticsEvent = $(clickEvent.currentTarget).attr("data-analytics-event");
        ctaText = ctaText ? ctaText.trim() : "";
        var eventCTAPayload = {
            eventName: 'cta clicked',
            eventType: 'event',
            attributes: {
                visitor: {
                    pentairCustomerID: getPentairCustomerID(), //if this is available
                    dealerID: getDealerID() //if this is available
                },
                page: {
                    pageCanonical: getPageViewPageAttribute("pageCanonical"),
                    pageName: getPageViewPageAttribute("pageName"),
                    pagePath: getPageViewPageAttribute("pagePath"),
                    pageType: getPageViewPageAttribute("pageType"),
                    pageURL: getPageViewPageAttribute("pageURL"),
                    pageTitle: getPageViewPageAttribute("pageTitle"),
                    pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                    businessUnitID: getPageViewPageAttribute("businessUnitID"),
                    subBrand: getPageViewPageAttribute("subBrand"),
                    language: getPageViewPageAttribute("language"),
                    author: getPageViewPageAttribute("author")
                },
                cta: {
                    cta: ctaText
                }
            }
        }
        trackEventWithQueue(eventCTAPayload);

        // Dropdown select analytics event
        if (analyticsEvent){
            eventname = analyticsEvent ? analyticsEvent.trim() : "";
            var analyticsEventPayload = {
                eventName: eventname,
                eventType: 'event',
                attributes: {
                    visitor: {
                        pentairCustomerID: getPentairCustomerID(), //if this is available
                        dealerID: getDealerID(), //if this is available
                        distributorID: getDistributorID() //if this is available
                    },
                    page: {
                        pageCanonical: getPageViewPageAttribute("pageCanonical"),
                        pageName: getPageViewPageAttribute("pageName"),
                        pagePath: getPageViewPageAttribute("pagePath"),
                        pageType: getPageViewPageAttribute("pageType"),
                        pageURL: getPageViewPageAttribute("pageURL"),
                        pageTitle: getPageViewPageAttribute("pageTitle"),
                        pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                        businessUnitID: getPageViewPageAttribute("businessUnitID"),
                        subBrand: getPageViewPageAttribute("subBrand"),
                        language: getPageViewPageAttribute("language"),
                        author: getPageViewPageAttribute("author"),
                    },
                    product: {
                        skuID: self.productSku,
                        productName: getPageViewProductAttribute("productName"),
                        type: getPageViewProductAttribute("type")
                    }
                }
            }
            trackEventWithQueue(analyticsEventPayload);

        }
    }
});
$(document).ready(function(){
    function getParam(p) {
        var match = RegExp('[?&]' + p + '=([^&]*)').exec(window.location.search);
        return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
    }

    // Append source value for MSA CTAs if available
    var source = getParam("source");
    if (source) {
        $(".btn").each(function() {
            if ($(this).attr("href") != null && $(this).attr("href").length > 0 && $(this).attr("href").indexOf("source=") == -1) {
                if ($(this).attr("href").indexOf("?") > -1) {
                    $(this).attr("href", $(this).attr("href") + "&source=" + source);
                } else {
                    $(this).attr("href", $(this).attr("href") + "?source=" + source);
                }
            }
        });
    }
});
$(function() {

    $(document).ready(function() {

        function toggleSelectionContent(option, value) {
            var options = $(option).closest("select").find("option");
            options.each(function() {
                if ($(this).val() !== value) {
                    $(this).closest(".wrapper").find(".selection-content[data-control='" + $(this).val() + "']").hide();
                } else {
                    $(this).closest(".wrapper").find(".selection-content[data-control='" + $(this).val() + "']").show();
                }
            });
        }

        function toggleInitialContent(instance) {
            // initially show/hide content
            var that = instance;
            if (!$(that).find(".wrapper").hasClass("in-edit")) {
                var options = $(that).find("select > option");
                options.each(function() {
                    if (typeof $(this).attr("selected") === typeof undefined || $(this).attr("selected") === false) {
                        var optionValue = $(this).val();
                        $(this).closest(".wrapper").find(".selection-content[data-control='" + optionValue + "']").hide();
                    }
                });
            }
        }

        function initContentSectionComponent(component) {
            var that = component;

            toggleInitialContent(that);

            // handle selection change
            $(that.find("select[name='selection']")).on("change", function() {
                toggleSelectionContent($(this), $(this).val());
            });

            // handle chosen dropdown when active - hides behind page content
            var chosen = $(that).find(".chosen-container");
            $(chosen).on("mouseenter", function() {
                if (!$(this).hasClass("chosen-container-active")) {
                    $("body").toggleClass("chosen-is-active");
                }
            });

            $(chosen).on("mouseleave",function() {
                if ($("body").hasClass("chosen-is-active")) {
                    if (!$(this).hasClass("chosen-container-active")) {
                        $("body").removeClass("chosen-is-active");
                    }
                }
            });

            //adding select dropdown arrow for mobile/tablet views only
            $(that.find(".chosen-select")).each(function() {
                $(this).after('<span class="arrow" aria-hidden="true"></span>');
            });

            $(document).on("click", function(e) {
                if (!$(e.target).closest(".chosen-container").length) {
                    if ($("body").hasClass("chosen-is-active")) {
                        $("body").removeClass("chosen-is-active");
                    }
                }
            });

        }

        var contentSectionComponents = $(".content-selection-container.component");
        if (contentSectionComponents.length) {
            contentSectionComponents.each(function(index, elem) {
                initContentSectionComponent($(elem));
            });
        }
    });
});
$(document).ready(function () {

    const $tab = $('.component.contact-grid .contact-filter a');
    const $headerContainers = $('.component.contact-grid .contact-grid__header-container');
    const $gridItems = $('.component.contact-grid .contact-grid__contacts > ul > li');
    const $iconClose = $('.component.contact-grid .filter-wrap .icon-close');
    const $sortBtn = $('.component.contact-grid .btn.btn-sortby');
    const $sortBy = $('.component.contact-grid .filter-wrap');

    // Add 'active' class on tab click
    $tab.on('click', function (e) {
        e.preventDefault();
        const $thisTab = $(this).parent();
        const $activeTab = $('.component.contact-grid .contact-filter li.active');
        const dataSort = $thisTab.attr('data-sort');

        if (!$thisTab.hasClass('active')) {
            if (dataSort === 'all') {
                $activeTab.removeClass('active');
                $thisTab.addClass('active');

                // Hide all headers...
                $headerContainers.hide();

                // ... and show only heading related to the active tab
                $('.component.contact-grid .contact-grid__header-container[data-type= "' + dataSort + '"]').fadeIn('fast');

                // Show All grid items
                $gridItems.fadeIn('fast');

            } else {
                $activeTab.removeClass('active').find('a').blur();
                $thisTab.addClass('active');

                // hide all headers
                $headerContainers.hide();

                // Show Heading related to the active tab
                $('.component.contact-grid .contact-grid__header-container[data-type= "' + dataSort + '"]').fadeIn('fast');

                // Hide all cards
                $gridItems.hide();

                // Show cards related to the active tab
                const activeTabIndustry = $thisTab.data('sort');
                $gridItems.each(function () {
                    let industries = $(this).find('.contact-card__categories').data('type').split(',');
                    if (industries.includes(activeTabIndustry)) {
                        $(this).fadeIn('fast');
                    }
                });
            }
        }

        // Mobile: Close filter modal on category click
        if ($sortBy.hasClass('open')) {
            closeSortby();
        }
    });

    // Sort By modal
    // show/hide sort by filter MOBILE

    $sortBtn.on('click', function (e) {
        e.preventDefault();
        if ($sortBy.hasClass('open')) {
            closeSortby();
        } else if (!$sortBy.hasClass('open')) {
            $sortBy.addClass('open');
            $('body').addClass('sortby-open modal-open');
        }
    });

    $iconClose.click(function (e) {
        e.preventDefault();
        closeSortby();
    });

    function closeSortby() {
        $('body').removeClass('sortby-open modal-open');
        $sortBy.removeClass('open');
    }
});
$(document).ready(function(){
    //var cstImageCarousel = $('.carousel-side-text.component .image-carousel-wrapper .image-carousel.owl-carousel');
    //var cstCaptionCarousel = $('.carousel-side-text.component .caption-carousel.owl-carousel');


    function init() {
        $('.carousel-side-text.component').each(function(){

            var $this = $(this);

            $this.find('.image-carousel-wrapper .image-carousel.owl-carousel').owlCarousel({
                items: 1,
                navText: ['<span class="ico icon-angle-left" aria-hidden="true"></span><span class="sr-only">Previous</span>', '<span class="ico icon-angle-right" aria-hidden="true"></span><span class="sr-only">Next</span>'],
                nav: true,
                navContainer: $this.find('.cst-nav'),
                autoHeight: true,
                info: doTheThing(),
                dots: false
            }).trigger('refresh.owl.carousel');

            $this.find('.caption-carousel.owl-carousel').owlCarousel({
                items: 1,
                nav: false,
                autoHeight: true,
                mouseDrag: false,
                touchDrag: false,
                dots: false
            }).trigger('refresh.owl.carousel');

            $this.find('.caption-nav .cst-nav .cst-prev').click(function () {
                $this.find('.image-carousel.owl-carousel').trigger('prev.owl.carousel');
            });
            $this.find('.caption-nav .cst-nav .cst-next').click(function () {
                $this.find('.image-carousel.owl-carousel').trigger('next.owl.carousel');
            });

            function doTheThing() {
                $this.find('.image-carousel.owl-carousel').on('initialized.owl.carousel', function(e) {
                    if (e.item.count >= 10) {
                        $this.find('.caption-nav .cst-nav .slider-counts .total-slides').text(e.item.count);
                    } else {
                        $this.find('.caption-nav .cst-nav .slider-counts .total-slides').text('0' + e.item.count);
                    }
                });
                $this.find('.image-carousel.owl-carousel').on('changed.owl.carousel', function(e) {
                    var position = e.item.index;
                    if (e.item.index >= 9) {
                        $this.find('.caption-nav .cst-nav .slider-counts .current-slide').text(position + 1);
                    } else {
                        $this.find('.caption-nav .cst-nav .slider-counts .current-slide').text('0' + (position + 1));
                    }
                    $this.find('.caption-carousel.owl-carousel').trigger('to.owl.carousel', position);
                });
            }
        });
    }

    $(window).on('load', function() {
        init();
    });

});


(function() {
    "use strict";

    var dataLayerEnabled;
    var dataLayer;

    var NS = "cmp";
    var IS = "carousel";

    var keyCodes = {
        SPACE: 32,
        END: 35,
        HOME: 36,
        ARROW_LEFT: 37,
        ARROW_UP: 38,
        ARROW_RIGHT: 39,
        ARROW_DOWN: 40
    };

    var selectors = {
        self: "[data-" + NS + '-is="' + IS + '"]'
    };

    var properties = {
        /**
         * Determines whether the Carousel will automatically transition between slides
         *
         * @memberof Carousel
         * @type {Boolean}
         * @default false
         */
        "autoplay": {
            "default": false,
            "transform": function(value) {
                return !(value === null || typeof value === "undefined");
            }
        },
        /**
         * Duration (in milliseconds) before automatically transitioning to the next slide
         *
         * @memberof Carousel
         * @type {Number}
         * @default 5000
         */
        "delay": {
            "default": 5000,
            "transform": function(value) {
                value = parseFloat(value);
                return !isNaN(value) ? value : null;
            }
        },
        /**
         * Determines whether automatic pause on hovering the carousel is disabled
         *
         * @memberof Carousel
         * @type {Boolean}
         * @default false
         */
        "autopauseDisabled": {
            "default": false,
            "transform": function(value) {
                return !(value === null || typeof value === "undefined");
            }
        }
    };

    /**
     * Carousel Configuration
     *
     * @typedef {Object} CarouselConfig Represents a Carousel configuration
     * @property {HTMLElement} element The HTMLElement representing the Carousel
     * @property {Object} options The Carousel options
     */

    /**
     * Carousel
     *
     * @class Carousel
     * @classdesc An interactive Carousel component for navigating a list of generic items
     * @param {CarouselConfig} config The Carousel configuration
     */
    function Carousel(config) {
        var that = this;

        if (config && config.element) {
            init(config);
        }

        /**
         * Initializes the Carousel
         *
         * @private
         * @param {CarouselConfig} config The Carousel configuration
         */
        function init(config) {
            // prevents multiple initialization
            config.element.removeAttribute("data-" + NS + "-is");

            setupProperties(config.options);
            cacheElements(config.element);

            that._active = 0;
            that._paused = false;

            if (that._elements.item) {
                refreshActive();
                bindEvents();
                resetAutoplayInterval();
                refreshPlayPauseActions();
            }

            // TODO: This section is only relevant in edit mode and should move to the editor clientLib
            if (window.Granite && window.Granite.author && window.Granite.author.MessageChannel) {
                /*
                 * Editor message handling:
                 * - subscribe to "cmp.panelcontainer" message requests sent by the editor frame
                 * - check that the message data panel container type is correct and that the id (path) matches this specific Carousel component
                 * - if so, route the "navigate" operation to enact a navigation of the Carousel based on index data
                 */
                window.CQ = window.CQ || {};
                window.CQ.CoreComponents = window.CQ.CoreComponents || {};
                CQ.CoreComponents.MESSAGE_CHANNEL = CQ.CoreComponents.MESSAGE_CHANNEL || new window.Granite.author.MessageChannel("cqauthor", window);
                CQ.CoreComponents.MESSAGE_CHANNEL.subscribeRequestMessage("cmp.panelcontainer", function(message) {
                    if (message.data && message.data.type === "cmp-carousel" && message.data.id === that._elements.self.dataset["cmpPanelcontainerId"]) {
                        if (message.data.operation === "navigate") {
                            navigate(message.data.index);
                        }
                    }
                });
            }
        }

        /**
         * Caches the Carousel elements as defined via the {@code data-carousel-hook="ELEMENT_NAME"} markup API
         *
         * @private
         * @param {HTMLElement} wrapper The Carousel wrapper element
         */
        function cacheElements(wrapper) {
            that._elements = {};
            that._elements.self = wrapper;
            var hooks = that._elements.self.querySelectorAll("[data-" + NS + "-hook-" + IS + "]");

            for (var i = 0; i < hooks.length; i++) {
                var hook = hooks[i];
                var capitalized = IS;
                capitalized = capitalized.charAt(0).toUpperCase() + capitalized.slice(1);
                var key = hook.dataset[NS + "Hook" + capitalized];
                if (that._elements[key]) {
                    if (!Array.isArray(that._elements[key])) {
                        var tmp = that._elements[key];
                        that._elements[key] = [tmp];
                    }
                    that._elements[key].push(hook);
                } else {
                    that._elements[key] = hook;
                }
            }
        }

        /**
         * Sets up properties for the Carousel based on the passed options.
         *
         * @private
         * @param {Object} options The Carousel options
         */
        function setupProperties(options) {
            that._properties = {};

            for (var key in properties) {
                if (properties.hasOwnProperty(key)) {
                    var property = properties[key];
                    var value = null;

                    if (options && options[key] != null) {
                        value = options[key];

                        // transform the provided option
                        if (property && typeof property.transform === "function") {
                            value = property.transform(value);
                        }
                    }

                    if (value === null) {
                        // value still null, take the property default
                        value = properties[key]["default"];
                    }

                    that._properties[key] = value;
                }
            }
        }

        /**
         * Binds Carousel event handling
         *
         * @private
         */
        function bindEvents() {
            if (that._elements["previous"]) {
                that._elements["previous"].addEventListener("click", function() {
                    var index = getPreviousIndex();
                    navigate(index);
                    if (dataLayerEnabled) {
                        dataLayer.push({
                            event: "cmp:show",
                            eventInfo: {
                                path: "component." + getDataLayerId(that._elements.item[index].dataset.cmpDataLayer)
                            }
                        });
                    }
                });
            }

            if (that._elements["next"]) {
                that._elements["next"].addEventListener("click", function() {
                    var index = getNextIndex();
                    navigate(index);
                    if (dataLayerEnabled) {
                        dataLayer.push({
                            event: "cmp:show",
                            eventInfo: {
                                path: "component." + getDataLayerId(that._elements.item[index].dataset.cmpDataLayer)
                            }
                        });
                    }
                });
            }

            var indicators = that._elements["indicator"];
            if (indicators) {
                for (var i = 0; i < indicators.length; i++) {
                    (function(index) {
                        indicators[i].addEventListener("click", function(event) {
                            navigateAndFocusIndicator(index);
                        });
                    })(i);
                }
            }

            if (that._elements["pause"]) {
                if (that._properties.autoplay) {
                    that._elements["pause"].addEventListener("click", onPauseClick);
                }
            }

            if (that._elements["play"]) {
                if (that._properties.autoplay) {
                    that._elements["play"].addEventListener("click", onPlayClick);
                }
            }

            that._elements.self.addEventListener("keydown", onKeyDown);

            if (!that._properties.autopauseDisabled) {
                that._elements.self.addEventListener("mouseenter", onMouseEnter);
                that._elements.self.addEventListener("mouseleave", onMouseLeave);
            }
        }

        /**
         * Handles carousel keydown events
         *
         * @private
         * @param {Object} event The keydown event
         */
        function onKeyDown(event) {
            var index = that._active;
            var lastIndex = that._elements["indicator"].length - 1;

            switch (event.keyCode) {
                case keyCodes.ARROW_LEFT:
                case keyCodes.ARROW_UP:
                    event.preventDefault();
                    if (index > 0) {
                        navigateAndFocusIndicator(index - 1);
                    }
                    break;
                case keyCodes.ARROW_RIGHT:
                case keyCodes.ARROW_DOWN:
                    event.preventDefault();
                    if (index < lastIndex) {
                        navigateAndFocusIndicator(index + 1);
                    }
                    break;
                case keyCodes.HOME:
                    event.preventDefault();
                    navigateAndFocusIndicator(0);
                    break;
                case keyCodes.END:
                    event.preventDefault();
                    navigateAndFocusIndicator(lastIndex);
                    break;
                case keyCodes.SPACE:
                    if (that._properties.autoplay && (event.target !== that._elements["previous"] && event.target !== that._elements["next"])) {
                        event.preventDefault();
                        if (!that._paused) {
                            pause();
                        } else {
                            play();
                        }
                    }
                    if (event.target === that._elements["pause"]) {
                        that._elements["play"].focus();
                    }
                    if (event.target === that._elements["play"]) {
                        that._elements["pause"].focus();
                    }
                    break;
                default:
                    return;
            }
        }

        /**
         * Handles carousel mouseenter events
         *
         * @private
         * @param {Object} event The mouseenter event
         */
        function onMouseEnter(event) {
            clearAutoplayInterval();
        }

        /**
         * Handles carousel mouseleave events
         *
         * @private
         * @param {Object} event The mouseleave event
         */
        function onMouseLeave(event) {
            resetAutoplayInterval();
        }

        /**
         * Handles pause element click events
         *
         * @private
         * @param {Object} event The click event
         */
        function onPauseClick(event) {
            pause();
            that._elements["play"].focus();
        }

        /**
         * Handles play element click events
         *
         * @private
         * @param {Object} event The click event
         */
        function onPlayClick() {
            play();
            that._elements["pause"].focus();
        }

        /**
         * Pauses the playing of the Carousel. Sets {@code Carousel#_paused} marker.
         * Only relevant when autoplay is enabled
         *
         * @private
         */
        function pause() {
            that._paused = true;
            clearAutoplayInterval();
            refreshPlayPauseActions();
        }

        /**
         * Enables the playing of the Carousel. Sets {@code Carousel#_paused} marker.
         * Only relevant when autoplay is enabled
         *
         * @private
         */
        function play() {
            that._paused = false;

            // If the Carousel is hovered, don't begin auto transitioning until the next mouse leave event
            var hovered = false;
            if (that._elements.self.parentElement) {
                hovered = that._elements.self.parentElement.querySelector(":hover") === that._elements.self;
            }
            if (that._properties.autopauseDisabled || !hovered) {
                resetAutoplayInterval();
            }

            refreshPlayPauseActions();
        }

        /**
         * Refreshes the play/pause action markup based on the {@code Carousel#_paused} state
         *
         * @private
         */
        function refreshPlayPauseActions() {
            setActionDisabled(that._elements["pause"], that._paused);
            setActionDisabled(that._elements["play"], !that._paused);
        }

        /**
         * Refreshes the item markup based on the current {@code Carousel#_active} index
         *
         * @private
         */
        function refreshActive() {
            var items = that._elements["item"];
            var indicators = that._elements["indicator"];

            if (items) {
                if (Array.isArray(items)) {
                    for (var i = 0; i < items.length; i++) {
                        if (i === parseInt(that._active)) {
                            items[i].classList.add("cmp-carousel__item--active");
                            items[i].removeAttribute("aria-hidden");
                            if (indicators) {
                                indicators[i].classList.add("cmp-carousel__indicator--active");
                                indicators[i].setAttribute("aria-selected", true);
                                indicators[i].setAttribute("tabindex", "0");
                            }
                        } else {
                            items[i].classList.remove("cmp-carousel__item--active");
                            items[i].setAttribute("aria-hidden", true);
                            if (indicators) {
                                indicators[i].classList.remove("cmp-carousel__indicator--active");
                                indicators[i].setAttribute("aria-selected", false);
                                indicators[i].setAttribute("tabindex", "-1");
                            }
                        }
                    }
                } else {
                    // only one item
                    items.classList.add("cmp-carousel__item--active");
                    if (indicators) {
                        indicators.classList.add("cmp-carousel__indicator--active");
                    }
                }
            }
        }

        /**
         * Focuses the element and prevents scrolling the element into view
         *
         * @param {HTMLElement} element Element to focus
         */
        function focusWithoutScroll(element) {
            var x = window.scrollX || window.pageXOffset;
            var y = window.scrollY || window.pageYOffset;
            element.focus();
            window.scrollTo(x, y);
        }

        /**
         * Retrieves the next active index, with looping
         *
         * @private
         * @returns {Number} Index of the next carousel item
         */
        function getNextIndex() {
            return that._active === (that._elements["item"].length - 1) ? 0 : that._active + 1;
        }

        /**
         * Retrieves the previous active index, with looping
         *
         * @private
         * @returns {Number} Index of the previous carousel item
         */
        function getPreviousIndex() {
            return that._active === 0 ? (that._elements["item"].length - 1) : that._active - 1;
        }

        /**
         * Navigates to the item at the provided index
         *
         * @private
         * @param {Number} index The index of the item to navigate to
         */
        function navigate(index) {
            if (index < 0 || index > (that._elements["item"].length - 1)) {
                return;
            }

            that._active = index;
            refreshActive();

            if (dataLayerEnabled) {
                var carouselId = that._elements.self.id;
                var activeItem = getDataLayerId(that._elements.item[index].dataset.cmpDataLayer);
                var updatePayload = { component: {} };
                updatePayload.component[carouselId] = { shownItems: [activeItem] };

                var removePayload = { component: {} };
                removePayload.component[carouselId] = { shownItems: undefined };

                dataLayer.push(removePayload);
                dataLayer.push(updatePayload);
            }

            // reset the autoplay transition interval following navigation, if not already hovering the carousel
            if (that._elements.self.parentElement) {
                if (that._elements.self.parentElement.querySelector(":hover") !== that._elements.self) {
                    resetAutoplayInterval();
                }
            }
        }

        /**
         * Navigates to the item at the provided index and ensures the active indicator gains focus
         *
         * @private
         * @param {Number} index The index of the item to navigate to
         */
        function navigateAndFocusIndicator(index) {
            navigate(index);
            focusWithoutScroll(that._elements["indicator"][index]);

            if (dataLayerEnabled) {
                dataLayer.push({
                    event: "cmp:show",
                    eventInfo: {
                        path: "component." + getDataLayerId(that._elements.item[index].dataset.cmpDataLayer)
                    }
                });
            }
        }

        /**
         * Starts/resets automatic slide transition interval
         *
         * @private
         */
        function resetAutoplayInterval() {
            if (that._paused || !that._properties.autoplay) {
                return;
            }
            clearAutoplayInterval();
            that._autoplayIntervalId = window.setInterval(function() {
                if (document.visibilityState && document.hidden) {
                    return;
                }
                var indicators = that._elements["indicators"];
                if (indicators) {
                    if (indicators !== document.activeElement && indicators.contains(document.activeElement)) {
                    // if an indicator has focus, ensure we switch focus following navigation
                    navigateAndFocusIndicator(getNextIndex());
                    } else {
                        navigate(getNextIndex());
                    }
                }
            }, that._properties.delay);
        }

        /**
         * Clears/pauses automatic slide transition interval
         *
         * @private
         */
        function clearAutoplayInterval() {
            window.clearInterval(that._autoplayIntervalId);
            that._autoplayIntervalId = null;
        }

        /**
         * Sets the disabled state for an action and toggles the appropriate CSS classes
         *
         * @private
         * @param {HTMLElement} action Action to disable
         * @param {Boolean} [disable] {@code true} to disable, {@code false} to enable
         */
        function setActionDisabled(action, disable) {
            if (!action) {
                return;
            }
            if (disable !== false) {
                action.disabled = true;
                action.classList.add("cmp-carousel__action--disabled");
            } else {
                action.disabled = false;
                action.classList.remove("cmp-carousel__action--disabled");
            }
        }
    }

    /**
     * Reads options data from the Carousel wrapper element, defined via {@code data-cmp-*} data attributes
     *
     * @private
     * @param {HTMLElement} element The Carousel element to read options data from
     * @returns {Object} The options read from the component data attributes
     */
    function readData(element) {
        var data = element.dataset;
        var options = [];
        var capitalized = IS;
        capitalized = capitalized.charAt(0).toUpperCase() + capitalized.slice(1);
        var reserved = ["is", "hook" + capitalized];

        for (var key in data) {
            if (data.hasOwnProperty(key)) {
                var value = data[key];

                if (key.indexOf(NS) === 0) {
                    key = key.slice(NS.length);
                    key = key.charAt(0).toLowerCase() + key.substring(1);

                    if (reserved.indexOf(key) === -1) {
                        options[key] = value;
                    }
                }
            }
        }

        return options;
    }

    /**
     * Parses the dataLayer string and returns the ID
     *
     * @private
     * @param {String} componentDataLayer the dataLayer string
     * @returns {String} dataLayerId or undefined
     */
    function getDataLayerId(componentDataLayer) {
        return Object.keys(JSON.parse(componentDataLayer))[0];
    }

    /**
     * Document ready handler and DOM mutation observers. Initializes Carousel components as necessary.
     *
     * @private
     */
    function onDocumentReady() {
      dataLayerEnabled = document.body.hasAttribute("data-cmp-data-layer-enabled");
      dataLayer = (dataLayerEnabled)? window.adobeDataLayer = window.adobeDataLayer || [] : undefined;

      var elements = document.querySelectorAll(selectors.self);
        for (var i = 0; i < elements.length; i++) {
            new Carousel({ element: elements[i], options: readData(elements[i]) });
        }

        var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
        var body = document.querySelector("body");
        var observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                // needed for IE
                var nodesArray = [].slice.call(mutation.addedNodes);
                if (nodesArray.length > 0) {
                    nodesArray.forEach(function(addedNode) {
                        if (addedNode.querySelectorAll) {
                            var elementsArray = [].slice.call(addedNode.querySelectorAll(selectors.self));
                            elementsArray.forEach(function(element) {
                                new Carousel({ element: element, options: readData(element) });
                            });
                        }
                    });
                }
            });
        });

        observer.observe(body, {
            subtree: true,
            childList: true,
            characterData: true
        });
    }

    if (document.readyState !== "loading") {
        onDocumentReady();
    } else {
        document.addEventListener("DOMContentLoaded", onDocumentReady);
    }

}());



jQuery(window).on('load', function() {


    let touchstartX = 0
    let touchendX = 0

    function checkDirection() {
        if (touchendX < touchstartX) jQuery('.cmp-carousel__action.cmp-carousel__action--next').trigger('click');
        if (touchendX > touchstartX) jQuery('.cmp-carousel__action.cmp-carousel__action--previous').trigger('click');
    }

    document.addEventListener('touchstart', e => {
        touchstartX = e.changedTouches[0].screenX
    })

    document.addEventListener('touchend', e => {
        touchendX = e.changedTouches[0].screenX
        checkDirection()
    })
	if (jQuery('.cmp-carousel__item').length < 2) {
    	jQuery('.cmp-carousel__actions').hide();
     	jQuery('.cmp-carousel__indicators').hide();
	}
})
$(document).ready(function(){

    var initImageCarousel = function(carouselComponent){
        var carousel = carouselComponent.find('.owl-carousel');
        var totalSlides = carousel.find('.image.parbase').length;
        var currentSlide = 0;

        if(totalSlides < 2){
            carouselComponent.find('.owl-custom-nav').hide();
        }

        var addLeadingZero = function (numString) {
            return (parseInt(numString, 10) < 10) ? '0' + numString : numString;
        };

        var update = function(){
            setTimeout(function(){
                var activeDot = carousel.find('.owl-dot.active');
                currentSlide = carousel.find('.owl-dot').index(activeDot) + 1;
                carouselComponent.find('.owl-custom-nav .current').text(addLeadingZero(currentSlide));
            }, 10);
        };

        carouselComponent.find('.owl-custom-nav .total').text(addLeadingZero(totalSlides));

        carousel.on('initialized.owl.carousel changed.owl.carousel resized.owl.carousel', function(e) {   
            update();
        });

        carouselComponent.find('.owl-custom-nav .owl-next').on('click', function (e) {
            carousel.trigger('next.owl.carousel');
        });

        carouselComponent.find('.owl-custom-nav .owl-prev').on('click', function (e) {
            carousel.trigger('prev.owl.carousel');
        });

        carousel.owlCarousel({
            loop: true,
            margin: 10,
            center: true,
            singleItem: true,
            animateIn: 'fadeIn',
            animateOut: 'fadeOut',
            mouseDrag: false,
            dots: true,
            responsive:{
                0:{
                    items: 1
                }
            }
        });

        update();
    };

    var carouselComponents = $('.component.carousel');

    if(carouselComponents.length){
        var mode = carouselComponents.first().data('isedit');
        if (mode === 'noedit') {
            $(function(){
                carouselComponents.each(function(index, elem){
                    initImageCarousel($(elem));
                });
            });
        }
    }


    //Check statistics
    carouselComponents.find('.statistic').each(function(){
        var $this = $(this);
        var theString = $this.text();
        var count = $this.text().replace(/ /g,'').length;

        //wrap special characters
        if(/^[a-zA-Z0-9- ]*$/.test(theString) == false) {
            $this.addClass('symbol-wrap');
        }
        if ($this.is(':contains("$")')){
            //wrap cents, if any
            var price = $this.text();
            if ($this.is(':contains(".")')){
                var priceTokens = price.split('.');
                price = priceTokens[0] +
                    '<span class="cents">.' + priceTokens[1] + '</span>';
                $this.html(price);
            }

            //wrap symbol
            $this.html(function(_, html) {
                return html.replace(/(\$)/g, '<span class="symbol">$</span>');
            });
        //wrap percent
        } else if ($this.is(':contains("%")')){
            $this.html(function(_, html) {
                return html.replace(/(%)/g, '<span class="symbol">%</span>');
            });
        }

        if (count === 2){
            $this.addClass('count-2');
        } else if (count === 3){
            $this.addClass('count-3');
        } else if (count === 4){
            $this.addClass('count-4');
        } else if (count === 5){
            $this.addClass('count-5');
        } else if (count === 6){
            $this.addClass('count-6');
        }
    });

});
$(document).ready(function(){

    //CATEGORY ICONS
    $('.component.brand-grid .categories').each(function(){
        var $this = $(this);
        var tags = [];
        var theTags = $(this).attr('data-type');
        if (theTags != null){
            theTags = theTags.split(",");
            for(var i = 0 , len = theTags.length; i < len; i++){
                tags.push(theTags[i]);
            }
            $.each(tags, function( i, l ){
                $this.append('<span class="icon-'+ tags[i] +'"><span class="sr-only">'+ tags[i] +' category</span></span>');
            });
        }
    });


    //BRAND MODAL
    var theLogo, theImage, theContent;
    $('.component.brand-grid .brands .brand-open').on('click', function(e){
        var $this = $(this).closest('li');
        theLogo = $this.find('.brand-logo').html();
        theImage = $this.find('.brand-modal-content .image').html();
        theContent = $this.find('.brand-modal-content .content').html();
    });
    $('#brandModal').on('show.bs.modal', function (e) {
        $(this).find('.image').html('').append(theImage);
        $(this).find('.brand-logo').html('').append(theLogo);
        $(this).find('.details').html('').append(theContent);
    })


    //SORTING
    //gets initial types of sortable items based on the data values on the brand grid items
    var types = [];
    allSort();
    function allSort(){
        $('.component.brand-grid .brands .categories').each(function() {
            var theType = $(this).attr('data-type');
            if (theType != null) {
                theType = theType.split(",");
                for (var i = 0, len = theType.length; i < len; i++) {
                    if ($.inArray(theType[i], types) == -1) {
                        types.push(theType[i]);
                    }
                }
            }
        });
    }

    //add Active Class on click
    $('.component.brand-grid .brand-filter a').on('click', function(e){
        e.preventDefault();
        var $this = $(this).parent();
        var dataSort = $this.attr('data-sort');
        if (dataSort == 'all'){
            $('.component.brand-grid .brand-filter li.active').removeClass('active');
            $this.addClass('active');
            sortGrid(dataSort, true);
        } else{
            if ($this.hasClass('active')){
                $this.removeClass('active').find('a').blur();
                sortGrid(dataSort, false);
            } else{
                $('.component.brand-grid .brand-filter li:first-child').removeClass('active');
                $this.addClass('active');
                sortGrid(dataSort, true);
            }
        }
    });


    var emptied = false;
    function sortGrid(sort, adding){
        if (adding){
            if (sort == 'all'){
                allSort();
                emptied = false;
            } else{
                if (!emptied){
                    types = [];
                    emptied = true;
                }
                types.push(sort);
            }
        } else if (!adding){
            types.splice($.inArray(sort, types),1);
        }

        //sort and hide elements not in type array
        $('.component.brand-grid .brands .categories').each(function() {
            var theType = $(this).attr('data-type');
            if (theType != null) {
                theType = theType.split(",");
                var show = false;
                for (var i = 0, len = theType.length; i < len; i++) {
                    if ($.inArray(theType[i], types) !== -1) {
                        show = true;
                    }
                }
                if (show) {
                    $(this).closest('li').fadeIn('fast');
                } else {
                    $(this).closest('li').fadeOut('fast');
                }
            }
        });
    }


    //SORT BY MODAL
    //show/hide sort by filter MOBILE
    var sortBtn = $(".component.brand-grid .btn.btn-sortby");
    var sortby = $(".component.brand-grid .filter-wrap");
    sortBtn.on('click', function(e){
        e.preventDefault();
        if (sortby.hasClass('open')){
            closeSortby();
        } else if (!sortby.hasClass('open')){
            sortby.addClass('open');
            $('body').addClass('sortby-open modal-open');
        }

    });
    $('.component.brand-grid .filter-wrap .icon-close').click(function(e){
        e.preventDefault();
        closeSortby();
    });

    function closeSortby(){
        $('body').removeClass('sortby-open modal-open');
        sortby.removeClass('open');
    }

});
var ArticleListingModel = function (componentElement) {
    var self = this;
    self.applicationId = componentElement.data('applicationId');
    self.searchApiKey = componentElement.data('searchApiKey');
    self.index = componentElement.find(".index").data('index');
    self.isMobile = ko.observable(window.matchMedia('(max-width: 767px)').matches);
    self.preFilters = ko.observable($(componentElement).data('preFilters'));
    self.areFiltersEnabled = ko.observable(!componentElement.find(".articles-container").hasClass("hide-filters") ? true : false);
    self.totals = ko.observable(0);

    self.isFilterOpen = function () {
        if (self.isMobile()) {
            $("#articleListingFilterModal").find('.ais-Panel-body').hide();
        }
        return !self.isMobile();
    };

    /**
     * Adds the click event handler to the dynamic accordian panel widgets.
     * @param filterContainer container for the filter widgets
     */
    function initDynamicWidgetAccordianPanel(filterContainer) {
        const dynamicWidgets = filterContainer.find('div[class*=ais-DynamicWidgets-widget]');
        if (dynamicWidgets.length > 0) {
            dynamicWidgets.each(function (index, elem) {
                let observer = new MutationObserver(function (mutations, observer) {
                    // Fired when a mutation occurs. In our case it is addition of dynamic widget content.
                    $(elem).find('[class*=algolia-accordion-panel]').on('click', function (clickEvent) {
                        self.openFilter('', clickEvent);
                    });
                    if (window.matchMedia('(max-width: 767px)').matches) {
                        $(elem).find('.ais-Panel-body').hide();
                    }
                    observer.disconnect();
                });
                observer.observe(elem, {
                    childList: true
                });
            });
        }
    }

    self.openFilter = function (context, event) { // for toggling open/closed state
        var headerClick = $(event.target).closest('.ais-Panel-header').length;
        if (headerClick) {
            $(event.currentTarget).toggleClass("open");
            if ($(event.currentTarget).hasClass("open")) {
                $(event.currentTarget).find('.ais-Panel-body').slideDown('fast');
            } else {
                $(event.currentTarget).find('.ais-Panel-body').slideUp('fast');
            }
        }
        return true;
    };
    self.isDynamic = componentElement.find(".articles").hasClass("dynamic");

    self.hasResults = function () {
        return !!self.totals();
    };

    self.filterClick = function (event) {

        var articleType = $(event.target).closest(".articles-container").find(".results").data("type");
        var refinementList = $(event.target).closest(".ais-RefinementList-list");
        var refinementsForm = $(event.target).closest("form");
        var refinementListItems;

        setTimeout(function () {
            refinementListItems = refinementsForm.find(".ais-RefinementList-item--selected");
            updateArticleFilterAnalytics(articleType, refinementList, refinementListItems);
        }, 100);
        return true;
    };

    self.MobileFilterViewModel = function (containerElem, articleListingModel) {
        var self = this;
        self.openFilter = articleListingModel.openFilter;
        self.filterClick = articleListingModel.filterClick;
        self.hasResults = articleListingModel.hasResults;
        self.isFilterOpen = function () {
            if (!articleListingModel.isFilterOpen()) {
                $(this).find('.ais-Panel-body').hide();
            }
            return articleListingModel.isFilterOpen();
        };
    };

    function initMobileFilters() {
        ko.applyBindings(new self.MobileFilterViewModel($('#articleListingFilterModal'), self), $('#articleListingFilterModal')[0]);
    };

    // only want to init algolia for indexes when dynamic option is selected
    if (self.isDynamic) {
        self.initAlgolia = function (indexName, containerElem) {
            var searchClient = algoliasearch(self.applicationId, self.searchApiKey);
            var pageLoadFacetFilters = [];
            // handle prefilter by category for various types
            var prefilters = self.preFilters();
            if (prefilters["bneCategories"] && prefilters["bneCategories"].name && prefilters["bneCategories"].prefilter) {
                prefilters["bneCategories"].name.split(",").forEach(function (categoryName, index) {
                    pageLoadFacetFilters.push("categoriesTitles:" + categoryName + "");
                });
            } else if (prefilters["categories"] && prefilters["categories"].name && prefilters["categories"].prefilter) {
                prefilters["categories"].name.split(",").forEach(function (categoryName, index) {
                    pageLoadFacetFilters.push("categoryTitles:" + categoryName + "");
                });
            }
            var search = instantsearch({
                indexName: indexName,
                searchClient: searchClient
            });

            var maxHitsPerPage = containerElem.find(".articles").data('hitsPerPage');

            let sortByItems = [
                {value: indexName, label: 'Sort by Relevance'},
                {value: indexName + '_sort_date_dsc', label: 'Newest to Oldest'},
                {value: indexName + '_sort_date_asc', label: 'Oldest to Newest'},
                {value: indexName + '_sort_alpha_asc', label: 'A-Z'},
                {value: indexName + '_sort_alpha_dsc', label: 'Z-A'}
            ];

            if (indexName.includes('pentair_education')) {
                sortByItems = sortByItems.filter(item => !item.value.includes('_sort_date'));
            }

            // Add 'Most Popular' sorting option for Education Articles and Blogs
            if (indexName.includes('pentair_education') || indexName.includes('pentair_blog')) {
                sortByItems.push({value: indexName + '_sort_pageviews_dsc', label: 'Most Popular'});
            }

            search.addWidgets([
                instantsearch.widgets.hits({
                    container: containerElem.find('.results')[0],
                    templates: {
                        item: function (hit, bindEvent) {
                            if (indexName.indexOf("mypentair_blog") > 0) {
                                return '<a class="result-item" href="' + hit.pagePath + '" data-position="' + hit.__position + '">' +
                                    (hit.blogImage ? ('<div class="top-image cover"><img loading="lazy" src="' + hit.blogImage + '.thumb.319.319.png" alt="' + hit.blogImageAltText + '"/><span class="triangle"></span></div>') : '') +
                                    '<div class="content-padding">' +
                                    '<div class="info">' +
                                    '<div class="category">' + (hit.categoriesTitles[0] ? hit.categoriesTitles[0] : '') + '</div>' +
                                    '<div class="date">' + (hit.displayDate ? hit.displayDate : '') + '</div>' +
                                    '</div>' +
                                    '<div class="title title-text">' + instantsearch.highlight({
                                        "attribute": "title",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>' +
                                    (hit.description ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "description",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '<div class="flex-row left mb-2">' +
                                    (hit.fileReference ? ('<div class="author-img-wrapper"><img loading="lazy" class="author-img" src="' + hit.fileReference + '.thumb.48.48.png" alt="Image of Author"/></div>') : '') +
                                    '<div class="author-name">' + hit.authorName + '</div></div>' +
                                    '<span class="arrow"></span>' +
                                    '</div>' +
                                    '</a>';
                            } else if (indexName.indexOf("pentair_blog") > 0) {
                                return '<a class="result-item" href="' + hit.bnePagePath + '" data-position="' + hit.__position + '">' +
                                    (hit.bneImgPath ? ('<div class="top-image cover"><img loading="lazy" src="' + hit.bneImgPath + '.thumb.319.319.png" alt="Article Image"/><span class="triangle"></span></div>') : '') +
                                    '<div class="content-padding">' +
                                    '<div class="info">' +
                                    '<div class="category">' + (hit.categoriesTitles[0] ? hit.categoriesTitles[0] : '') + '</div>' +
                                    '<div class="date">' + (hit.bneDate ? hit.bneDate : '') + '</div>' +
                                    '</div>' +
                                    '<div class="title title-text">' + instantsearch.highlight({
                                        "attribute": "bneTitle",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>' +
                                    (hit.bneDesc ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "bneDesc",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '<div class="flex-row left mb-2">' +
                                    (hit.bneAuthorImage ? ('<div class="author-img-wrapper"><img loading="lazy" class="author-img" src="' + hit.bneAuthorImage + '.thumb.48.48.png" alt="Image of Author"/></div>') : '') +
                                    '<div class="author-name">' + hit.bneAuthorNm + '</div></div>' +
                                    '<span class="arrow"></span>' +
                                    '</div>' +
                                    '</a>';
                            } else if (indexName.indexOf("mypentair_news") > 0) {
                                return '<a class="result-item" href="' + hit.pagePath + '.html" data-position="' + hit.__position + '">' +
                                    '<div class="content-padding">' +
                                    '<div class="info">' +
                                    '<div class="date">' + (hit.displayDate ? hit.displayDate : '') + '</div>' +
                                    '</div>' +
                                    '<div class="title title-text">' + instantsearch.highlight({
                                        "attribute": "title",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>' +
                                    (hit.description ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "description",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '</div>' +
                                    '</a>'
                            } else if (indexName.indexOf("pentair_news") > 0) {
                                return '<a class="result-item" href="' + hit.pagePath + '.html" data-position="' + hit.__position + '">' +
                                    '<div class="content-padding">' +
                                    '<div class="info">' +
                                    '<div class="date">' + hit.displayDate + '</div>' +
                                    '</div>' +
                                    '<div class="title title-text">' + instantsearch.highlight({
                                        "attribute": "title",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>' +
                                    (hit.description ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "description",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '</div>' +
                                    '</a>'
                            } else if (indexName.indexOf("mypentair_external_news") > 0) {
                                return '<a class="result-item" href="' + hit.externalSourceUrl + '.html" data-position="' + hit.__position + '" target="_blank">' +
                                    '<div class="content-padding">' +
                                    '<div class="info">' +
                                    '<div class="date">' + (hit.displayDate ? hit.displayDate : '') + '</div>' +
                                    '</div>' +
                                    '<div class="title title-text">' + instantsearch.highlight({
                                        "attribute": "jcrTitle",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>' +
                                    (hit.description ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "description",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '</div>' +
                                    '</a>'
                            } else if (indexName.indexOf("pentair_external_news") > 0) {
                                return '<a class="result-item" href="' + hit.externalSourceUrl + '.html" data-position="' + hit.__position + '" target="_blank" >' +
                                    '<div class="content-padding">' +
                                    '<div class="info">' +
                                    '<div class="date">' + (hit.displayDate ? hit.displayDate : '') + '</div>' +
                                    '</div>' +
                                    '<div class="title title-text">' + instantsearch.highlight({
                                        "attribute": "jcrTitle",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>' +
                                    (hit.description ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "description",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '</div>' +
                                    '</a>'
                            } else if (indexName.indexOf("pentair_events") > 0) {
                                return '<a class="result-item" href="' + hit.eventPagePath + '" data-position="' + hit.__position + '">' +
                                    '<div class="content-padding">' +
                                    '<div class="top">' +
                                    '<div class="date title-text">' + (hit.prettyDateRange ? hit.prettyDateRange : '') + '</div>' +
                                    '<div class="info">' +
                                    '<div>' + hit.eventLocation + '</div>' +
                                    '</div>' +
                                    '</div>' +
                                    '<div class="bottom">' +
                                    '<div class="title title-text">' + instantsearch.highlight({
                                        "attribute": "eventTitle",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>' +
                                    (hit.eventDescription ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "eventDescription",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '</div>' +
                                    '</div>' +
                                    '</a>';
                            } else if (indexName.indexOf("press") > 0) {
                                return '<a class="result-item" href="' + hit.investorLink + '" data-position="' + hit.__position + '">' +
                                    '<div class="content-padding">' +
                                    '<div class="top">' +
                                    '<div class="date title-text">' + (hit.date ? hit.date : '') + '</div>' +
                                    '</div>' +
                                    '<div class="bottom">' +
                                    '<div class="title title-text">' + instantsearch.highlight({
                                        "attribute": "title",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>' +
                                    (hit.shortDescription ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "shortDescription",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '</div>' +
                                    '</div>' +
                                    '</a>';
                            } else if (indexName.indexOf("pentair_education") > 0) {
                                return '<a class="result-item" href="' + hit.pagePath + '.html" data-position="' + hit.__position + '">' +
                                    (hit.articleImage ? ('<div class="top-image cover"><img loading="lazy" src="' + hit.articleImage + '.thumb.319.319.png" alt="Article Image"/><span class="triangle"></span></div>') : '') +
                                    '<div class="content-padding">' +
                                    '<div class="title title-text">' +
                                    (hit.educationTitle
                                        ? instantsearch.highlight({
                                            "attribute": "educationTitle",
                                            "highlightedTagName": "mark",
                                            "hit": hit
                                        })
                                        : instantsearch.highlight({
                                            "attribute": "jcrTitle",
                                            "highlightedTagName": "mark",
                                            "hit": hit
                                        })) +
                                    '</div>' +
                                    (hit.description ? ('<div class="content">' + instantsearch.snippet({
                                        "attribute": "description",
                                        "highlightedTagName": "mark",
                                        "hit": hit
                                    }) + '</div>') : '') +
                                    '<span class="arrow"></span>' +
                                    '</div>' +
                                    '</a>';
                            }
                        },
                        empty: 'No blog results{{#query}} for "{{query}}"{{/query}}'
                    },
                    cssClasses: {
                        root: 'owl-wrapper',
                        list: ['owl-carousel', 'owl-theme'],
                    },
                }),
                instantsearch.widgets.pagination({
                    container: containerElem.closest(".articles-content").find('.pagination .paging')[0],
                    showFirst: false,
                    showLast: false,
                    padding: 1,
                    templates: {
                        next: '',
                        previous: ''
                    },
                    cssClasses: {
                        selectedItem: 'selected',
                        root: 'wrapper-list light-theme',
                        list: 'pagination-count',
                        item: 'pagination-item',
                    },
                    scrollTo: '#articleListing'
                }),
                instantsearch.widgets.stats({
                    container: containerElem.closest(".articles-content").find('.hitsCount')[0],
                    templates: {
                        text: function (result) {
                            var firstItem = parseInt(result.hitsPerPage, 10) * parseInt(result.page, 10) + 1;
                            var lastItem = Math.min(parseInt(firstItem, 10) - 1 + parseInt(result.hitsPerPage, 10), result.nbHits);
                            return (result.nbHits > 1) ? 'Showing ' + firstItem + '-' + lastItem + ' of ' + result.nbHits + ' results' : '';
                        },
                    }
                }),
                instantsearch.widgets.sortBy({
                    container: self.isMobile() ? $('#articleListingFilterModal .sorting')[0] : containerElem.closest('.article-listing-algolia').find('.sorting')[0],
                    items: sortByItems
                }),
                instantsearch.widgets.configure({
                    hitsPerPage: maxHitsPerPage,
                    facetFilters: [pageLoadFacetFilters]
                })
            ]);

            // Filters
            if (indexName.indexOf("mypentair_blog") > 0 && self.areFiltersEnabled()) {
                search.addWidgets([
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Authors', 'authorName')({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container.author")[0] : containerElem.find('.filter-container.author')[0],
                        attribute: 'authorName',
                        templates: {
                            item: function (item) {
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                    '<label>' +
                                    '<span>' + item.label + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    }),
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'dateFilter')({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container.date")[0] : containerElem.find('.filter-container.date')[0],
                        attribute: 'dateFilter',
                        templates: {
                            item: function (item) {
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                    '<label>' +
                                    '<span>' + item.label + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    }),
                    instantsearch.widgets.clearRefinements({
                        container: $("#articleListingFilterModal").find(".clear-refinements")[0],
                        templates: {
                            resetLabel: "Clear Filters"
                        }
                    })
                ])
            } else if (indexName.indexOf("mypentair_news") > 0 && self.areFiltersEnabled()) {
                search.addWidgets([
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'dateFilter')({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container.date")[0] : containerElem.find('.filter-container.date')[0],
                        attribute: 'dateFilter',
                        templates: {
                            item: function (item) {
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                    '<label>' +
                                    '<span>' + item.label + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    }),
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Type', 'type')({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container.type")[0] : containerElem.find('.filter-container.type')[0],
                        attribute: 'type',
                        templates: {
                            item: function (item) {
                                var splitLabel = item.label.split("|")[1];
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + '>' +
                                    '<label>' +
                                    '<span>' + splitLabel + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    })
                ])
            } else if (indexName.indexOf("mypentair_external_news") > 0 && self.areFiltersEnabled()) {
                search.addWidgets([
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'dateFilter')({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container.date")[0] : containerElem.find('.filter-container.date')[0],
                        attribute: 'dateFilter',
                        templates: {
                            item: function (item) {
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                    '<label>' +
                                    '<span>' + item.label + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    }),
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Type', 'type')({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container.type")[0] : containerElem.find('.filter-container.type')[0],
                        attribute: 'type',
                        templates: {
                            item: function (item) {
                                var splitLabel = item.label.split("|")[1];
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + '>' +
                                    '<label>' +
                                    '<span>' + splitLabel + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    })
                ])
            } else if (indexName.indexOf("pentair_external_news") > 0 && self.areFiltersEnabled()) {
                search.addWidgets([
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'dateFilter')({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container.date")[0] : containerElem.find('.filter-container.date')[0],
                        attribute: 'dateFilter',
                        templates: {
                            item: function (item) {
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                    '<label>' +
                                    '<span>' + item.label + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    }),
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Type', 'type')({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container.type")[0] : containerElem.find('.filter-container.type')[0],
                        attribute: 'type',
                        templates: {
                            item: function (item) {
                                var splitLabel = item.label.split("|")[1];
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + '>' +
                                    '<label>' +
                                    '<span>' + splitLabel + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    })
                ])
            } else if (indexName.indexOf("pentair_blog") > 0 && self.areFiltersEnabled()) {
                var customWidgets = [

                    function (container) {
                        return PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Authors', 'bneAuthorNm')({
                            container: container,
                            attribute: 'bneAuthorNm',
                            templates: {
                                item: function (item) {
                                    return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                        '<label>' +
                                        '<span>' + item.label + '</span>' +
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'
                                }
                            }
                        })
                    },
                    function (container) {
                        return PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Date', 'filterDate')({
                            container: container,
                            attribute: 'filterDate',
                            templates: {
                                item: function (item) {
                                    return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                        '<label>' +
                                        '<span>' + item.label + '</span>' +
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'
                                }
                            }
                        })
                    }
                ];
                if (!(self.preFilters()["bneCategories"] && self.preFilters()["bneCategories"].name && self.preFilters()["bneCategories"].prefilter)) {
                    customWidgets.push(function (container) { //each in this function is callback
                        return PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Categories', 'categoriesTitles')({
                            container: container,
                            attribute: 'categoriesTitles',
                            templates: {
                                item: function (item) {

                                    return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                        '<label>' +
                                        '<span>' + item.label + '</span>' +
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'

                                }
                            }
                        })
                    });
                }
                /* custom widgets array is added dynamically to address removing
                categories title filter when prefilter is enabled and it works like past
                if it doesn't enabled
                 */
                search.addWidgets([
                    instantsearch.widgets.dynamicWidgets({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".filter-container")[0] : containerElem.find('.filter-container')[0],
                        widgets: customWidgets,
                    }),
                    instantsearch.widgets.clearRefinements({
                        container: $("#articleListingFilterModal").find(".clear-refinements")[0],
                        templates: {
                            resetLabel: "Clear Filters"
                        }
                    })
                ])
            } else if (indexName.indexOf("pentair_events") > 0 && self.areFiltersEnabled()) {
                search.addWidgets([
                    PENTAIR.CustomAlgoliaWidgets.clearRefinements()({
                        container: containerElem.find('.filters .clear-refinements')[0]
                    }),
                    PENTAIR.CustomAlgoliaWidgets.currentRefinements()({
                        container: containerElem.find('.filters .current-refinements')[0]
                    }),
                    PENTAIR.CustomAlgoliaWidgets.hierarchicalMenu()({
                        container: containerElem.find('.filters .categories')[0],
                        limit: 5,
                        sortBy: ['count:desc'],
                        attributes: [
                            'eventCategories'
                        ]
                    }),
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Date', 'bneDateFacet')({
                        container: containerElem.find('.filters .date')[0],
                        attribute: 'bneDateFacet',
                        templates: {
                            item: function (item) {
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + '>' +
                                    '<label>' +
                                    '<span>' + item.label + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    }),
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Region', 'region')({
                        container: containerElem.find('.filters .region')[0],
                        attribute: 'region',
                        templates: {
                            item: function (item) {
                                var splitLabel = item.label.split("|")[1];
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + '>' +
                                    '<label>' +
                                    '<span>' + splitLabel + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    }),
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Brands', 'brands')({
                        container: containerElem.find('.filters .brand')[0],
                        attribute: 'brands',
                        templates: {
                            item: function (item) {
                                var splitLabel = item.label.split("|")[1];
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + '>' +
                                    '<label>' +
                                    '<span>' + splitLabel + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    }),
                    PENTAIR.CustomAlgoliaWidgets.accordionFilterPanel('Event Type', 'type')({
                        container: containerElem.find('.filters .event-type')[0],
                        attribute: 'type',
                        templates: {
                            item: function (item) {
                                var splitLabel = item.label.split("|")[1];
                                return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + '>' +
                                    '<label>' +
                                    '<span>' + splitLabel + '</span>' +
                                    '<span class="item-count">' + item.count + '</span>' +
                                    '<span class="sr-only">Filter</span>' +
                                    '</label>'
                            }
                        }
                    })
                ])
            } else if (indexName.indexOf("pentair_education") > 0 && self.areFiltersEnabled()) {
                const customWidgets = [
                    container =>
                        PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Audience', 'audience')({
                            container: container,
                            attribute: 'audience',
                            templates: {
                                item: function (item) {
                                    var splitLabel = item.label.split("|")[1],
                                        slugLbl = String(splitLabel + "_education").toLowerCase().replace(/ /g, "_");

                                    return '<label for="' + slugLbl + '">' +
                                        '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + ' id="' + slugLbl + '" name="' + slugLbl + '">' +
                                        '<span>' + splitLabel + '</span>' +
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'
                                }
                            }
                        }),
                    container =>
                        PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Channel', 'channel')({
                            container: container,
                            attribute: 'channel',
                            templates: {
                                item: function (item) {
                                    var splitLabel = item.label.split("|")[1],
                                        slugLbl = String(splitLabel + "_education").toLowerCase().replace(/ /g, "_");

                                    return '<label for="' + slugLbl + '">' +
                                        '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + ' id="' + slugLbl + '" name="' + slugLbl + '">' +
                                        '<span>' + splitLabel + '</span>' +
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'
                                }
                            }
                        }),
                    container =>
                        PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Type', 'type')({
                            container: container,
                            attribute: 'type',
                            templates: {
                                item: function (item) {
                                    var splitLabel = item.label.split("|")[1],
                                        slugLbl = String(splitLabel + "_education").toLowerCase().replace(/ /g, "_");

                                    return '<label for="' + slugLbl + '">' +
                                        '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + ' id="' + slugLbl + '" name="' + slugLbl + '">' +
                                        '<span>' + splitLabel + '</span>' +
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'
                                }
                            }
                        })
                ];
                if (!(self.preFilters()["categories"] && self.preFilters()["categories"].name && self.preFilters()["categories"].prefilter)) {
                    customWidgets.push(function (container) {
                        return PENTAIR.CustomAlgoliaWidgets.dynamicAccordionFilterPanel('Categories', 'categoryTitles')({
                            container: container,
                            attribute: 'categoryTitles',
                            templates: {
                                item: function (item) {
                                    return '<input type="checkbox"' + (item.isRefined ? 'checked' : '') + (item.isRefined ? handleFilterChange() : '') + '>' +
                                        '<label>' +
                                        '<span>' + item.label + '</span>' +
                                        '<span class="item-count">' + item.count + '</span>' +
                                        '<span class="sr-only">Filter</span>' +
                                        '</label>'

                                }
                            }
                        })
                    });
                }
                search.addWidgets([
                    instantsearch.widgets.dynamicWidgets({
                        container: self.isMobile() ? $("#articleListingFilterModal").find(".algolia-filter-container.dynamic-widgets")[0] : containerElem.find('.algolia-filter-container.dynamic-widgets')[0],
                        widgets: customWidgets,
                    }),
                    instantsearch.widgets.clearRefinements({
                        container: $("#articleListingFilterModal").find(".clear-refinements")[0],
                        templates: {
                            resetLabel: "Clear Filters"
                        }
                    })
                ])
            }

            // Create the render function
            var renderConfigure = function (renderOptions, isFirstRender) {
                var refine = renderOptions.refine;
                var widgetParams = renderOptions.widgetParams;

                if (isFirstRender) {
                    var button = document.createElement("button");
                    var span = document.createElement("span");

                    button.addEventListener('click', function () {
                        refine({
                            hitsPerPage: maxHitsPerPage + widgetParams.searchParameters.hitsPerPage,
                        });
                    });

                    button.classList.add("btn", "btn-primary");
                    span.textContent = "Show More Results";

                    button.appendChild(span);
                    widgetParams.container.appendChild(button);
                }
            };

            // Create the custom widget
            var customConfigure = instantsearch.connectors.connectConfigure(renderConfigure);

            // Instantiate the custom widget
            search.addWidgets([
                customConfigure({
                    container: containerElem.closest(".articles-content").find('.infiniteHits')[0],
                    searchParameters: {
                        hitsPerPage: maxHitsPerPage,
                    },
                })
            ]);

            search.on("render", function () {
                if (this.helper.lastResults) {
                    self.totals(this.helper.lastResults.nbHits);
                }

                checkViewport();
                resultItemAnalyticsHandler();
            });

            search.start();
        }

        self.closeModal = function () {
            $(event.currentTarget).parents('figure').find('.icon-close').click()
        }

        self.init = function () {
            self.initAlgolia(self.index, componentElement.find(".articles-container"));
            initMobileFilters();

            const filterContainer = self.isMobile() ? $('#articleListingFilterModal').find('.algolia-filter-container.dynamic-widgets') : componentElement.find('.algolia-filter-container.dynamic-widgets');
            initDynamicWidgetAccordianPanel(filterContainer);
        };

        self.init();

        $("#articleListingFilterModal").find(".see-results").on("click", self.closeModal);
    } else {
        checkViewport();
    }

    /* Start - Article Filter Click Analytics */
    function updateArticleFilterAnalytics(articleType, list, listItems) {
        var data = {};
        for (var i = 0; i < listItems.length; i++) {
            var filterTypeEl = $(listItems[i]).closest(".filter-container");
            var filterTypeSplit = filterTypeEl.attr("class").split(" ");
            var filterType = filterTypeSplit[0].charAt(0).toUpperCase() + filterTypeSplit[0].slice(1);
            var filterData = $(listItems[i]).find("label > span:first-child").text();
            if (data.hasOwnProperty(filterType)) {
                data[filterType].push(filterData)
            } else {
                data[filterType] = [filterData]
            }
        }

        try {
            if (digitalData) {
                if (digitalData.event) {
                    digitalData.event.eventName = 'article filter';
                    digitalData.event.eventAction = 'click';
                    digitalData.event.type = 'filter';
                    digitalData.event.timeStamp = new Date();

                    var filterAnalyticsStr = "";
                    for (var key in data) {
                        var arr = data[key];
                        for (var i = 0; i < arr.length; i++) {
                            filterAnalyticsStr += "By " + key + ":" + arr[i] + "|";
                        }
                    }

                    var currentFilterRefinements = componentElement.find(".filters .current-refinements");
                    var filters = currentFilterRefinements.find("button");
                    for (var j = 0; j < filters.length; j++) {
                        var current = $(filters[j]);
                        if (current.data("attribute") == "eventCategories") {
                            filterAnalyticsStr += "By Category:" + current.data("value") + "|";
                        }
                    }

                    var result = filterAnalyticsStr.substring(0, filterAnalyticsStr.length - 1);

                    digitalData.article = {};
                    if (digitalData.article) {
                        digitalData.article.type = articleType;
                        digitalData.article.filterValues = result;
                    }
                }
            }
        } catch (err) {
            console.log(err);
        }
    }

    /* End - Article Filter Click Analytics */

    /* Start - Article Link Click Analytics */
    function resultItemAnalyticsHandler() {
        componentElement.find(".result-item").on("click", function (e) {
            var title = $(this).find(".title").text();
            var type = $(this).closest(".results").data("type");
            var position = $(this).data("position");
            if (typeof _satellite !== undefined && _satellite != null) {
                _satellite.track('articleResultClick', {
                    articleLinkName: title,
                    articleType: type,
                    articlePosition: position
                });
            }
        });
    }

    /* End - Article Link Click Analytics */

    function handleFilterChange(event) {
        if (self.isMobile()) {
            // for some reason, we can't destroy a dynamic owl carousel, but we can init one?
            var owl = componentElement.find(".owl-carousel");
            var options = componentElement.find(".articles").data("options");
            var results = componentElement.find(".results");
            var items = componentElement.find(".owl-carousel > .ais-Hits-item");

            if (!owl) {
                return false;
            }
            var numItems = 0;
            for (var i = 0; i < items.length; i++) {
                numItems = i;
                if (!$(items[i]).hasClass("item")) {
                    $(items[i]).addClass("item");
                }
                var owlItem = owl.find(".owl-item").get(i);
                if (owlItem) {
                    owlItem.append(items[i]);
                }
            }

            // remove extra owl items, if any
            owl.find(".owl-item:eq(" + numItems + ")").nextAll().remove();

            // remove extra owl dots, if any
            owl.find(".owl-dot:eq(" + numItems + ")").nextAll().remove();

            // disable owl nav buttons, if needed
            if (numItems < 2) {
                owl.find(".owl-nav > .owl-next").addClass("disabled");
            }
        }

        return true;
    }

    function checkViewport() {
        if (self.isMobile()) {
            // start - initialize owl
            var owl = componentElement.find(".articles");
            var results = owl.find(".results");
            var options = owl.data("options");
            options["navText"] = ["<span class='icon-chevron-left'></span>", "<span class='icon-chevron-right'></span>"];
            results.find(".ais-Hits-item").each(function () {
                $(this).addClass("item");
            });
            if (owl.data("view") == "none" || owl.data("view") == "load-more") {
                var carousel = owl.find(".ais-Hits-list");
                if (!carousel.hasClass("owl-carousel")) {
                    carousel.addClass("owl-carousel")
                }
                carousel.owlCarousel(options);
            }
            // end - initialize owl
        }
    }

    var filterBtn = componentElement.find(".filter-btn");
    filterBtn.on("click", function (e) {
        if (!$("body").hasClass("article-modal-open")) {
            $("body").addClass("article-modal-open");
        }
    });

    var modal = componentElement.next(".modal");
    var closeBtn = modal.find(".icon-close");
    closeBtn.on("click", function (e) {
        if ($("body").hasClass("article-modal-open")) {
            $("body").removeClass("article-modal-open");
        }
    });

};

$(document).ready(function () {
    $('.article-listing.component').each(function () {
        try {
            ko.applyBindings(new ArticleListingModel($(this)), this);
        } catch (e) {
            console.log(e);
        }
    });
});

$(document).ready(function(){

    var NewsListingPagination = function(elem, setEqualHeight) {
        var self = this,
            $newsListingContainer = $(elem),
            $newsContainer = $(elem).find('.news-container'),
            $pagination = $newsListingContainer.find('.pagination .wrapper-list'),
            $newsList = $newsListingContainer.find('.news-list'),
            $loadMoreBtn = $newsListingContainer.find('.load-more-btn > a'),
            urlToFecthFrom = $newsContainer.attr('data-current-resource') + '.pagination.',
            maxPagDiplay = 3,
            showPerPage = +$newsContainer.attr('data-news-records-per-page'),
            totalResultCount = +$newsContainer.attr('data-news-total-count'),
            $fromIndex = $newsListingContainer.find('.current-list .from'),
            $toIndex = $newsListingContainer.find('.current-list .to'),
            $loadMoreBtn = $newsListingContainer.find('.load-more-btn a'),
            isMobile = window.matchMedia('(max-width: 767px)').matches,
            currentPage = 0,
            tempPageIndex = 0,
            totalPages = Math.ceil(totalResultCount/showPerPage);

        self.getNewPageNews = function(pageInd, loop) {
            if ( !$newsList.length ) {
                return;
            }

            $.ajax({
                type: 'GET',
                async: false,
                url: urlToFecthFrom + ( pageInd || 0 ) +'.html',
                success: function(data) {
                    console.log("URL: " + urlToFecthFrom + ( pageInd || 0 ) +'.html');
                    if ( isMobile ) {
                        $newsContainer.find('.news-list-wrapper').append($('<div />').html(data).find('.news-list')[0].innerHTML);
                    } else {
                        $newsList.html(data);
                        if ( $pagination.pagination('getCurrentPage') != currentPage + 1 ) {
                            $pagination.pagination('drawPage', currentPage + 1);
                            self.setPageAck(currentPage + 1);
                        }
                    }

                    if ( setEqualHeight ) {
                        $(document).trigger('adjustInternalNewsHeights');
                    }
                },
                error: function(err) {
                    // failed from some reason.
                },
                complete: function(){
                    if ( loop && currentPage > 0 && tempPageIndex !== currentPage ) {
                        tempPageIndex += 1;
                        self.getNewPageNews(tempPageIndex, true);
                    } else {
                        tempPageIndex = 0;
                        if ( currentPage == totalPages - 1 ) {
                            $loadMoreBtn.hide();
                        }
                    }
                }
            });
        }

        self.bindPagination = function(){
            if ( !$pagination.length ) {
                return;
            }

            $pagination.pagination({
                items: totalResultCount,
                displayedPages: maxPagDiplay,
                itemsOnPage: showPerPage,
                edges: 0,
                ellipsePageSet: false,
                hrefTextPrefix: '#',
                onPageClick: function(pageInd){
                    currentPage = pageInd - 1
                    self.getNewPageNews(currentPage);
                    self.setPageAck(pageInd);
                    $('html, body').stop().animate({
                        scrollTop: $newsListingContainer.offset().top - 70
                    }, 500);
                }
            });
        }

        self.setPageAck = function( pageNum ){
            var start = pageNum ? ( ( pageNum - 1 )* showPerPage ) : 0,
                count = totalResultCount,
                end = Math.min(start + showPerPage, count);

            $fromIndex.text(start + 1);
            $toIndex.text( end );
        }

        self.bindEvents = function(){
            $loadMoreBtn.on('click', function(e){
                e.preventDefault();
                $(this).blur();
                currentPage += 1;
                self.getNewPageNews(currentPage);

                if ( currentPage == totalPages - 1 ) {
                    $loadMoreBtn.hide();
                }
            });

            $(window).on('resize', function(){
                var newIsMobile = window.matchMedia('(max-width: 767px)').matches;
                $newsList.html('');

                if ( isMobile === false && newIsMobile ) {
                    isMobile = newIsMobile;
                    self.getNewPageNews(0, true);
                } else {
                    isMobile = newIsMobile;
                    self.getNewPageNews(currentPage);
                }
            });
        }

        self.init = function(){
            self.bindPagination();
            self.setPageAck();
            self.bindEvents();
        }

        self.init();
    }


    $('.news-listing').each(function(){
        new NewsListingPagination(this, true);
    });
});
var PENTAIR = PENTAIR || {};

PENTAIR.InitAccordion = function() {
    $('.accordion.section .accordion dt.active').next('dd').stop().slideDown('fast');

    var addLeadingZero = function(numString) {
        return (parseInt(numString, 10) < 10) ? '0' + numString : numString;
    };

    var accordionGroupIndex = 1;

    $('.accordion.section').each(function(index, elem) {
        accordionGroupIndex = $(elem).prev().is('.accordion.section') ? accordionGroupIndex + 1 : 1;
        $(elem).find('.number').text(addLeadingZero(accordionGroupIndex));
    });

    $('.accordion.section .accordion dt').on('click', function() {
        var $this = $(this);
        var siblingAccordions = $this.parents('.accordion.section').first().nextUntil(':not(.accordion.section)'); // Used to clear all immediate sibling accordions.
        var jumpNav = $('.sticky-jump-nav');
        var jumpNavHeight = jumpNav.length ? jumpNav.outerHeight() : 0;

        siblingAccordions = siblingAccordions.add($this.parents('.accordion.section').first().prevUntil(':not(.accordion.section)'));

        if ($this.hasClass('active')) {
            $this.removeClass('active').next('dd').stop().slideUp('fast', function() {
                $('.owl-carousel').trigger('refresh.owl.carousel'); //fires to correct heights of tabs when accordion is embedded within
            });
        } else {
            $this.addClass('active').next('dd').stop().slideDown('fast', function() {
                $('.owl-carousel').trigger('refresh.owl.carousel'); //fires to correct heights of tabs when accordion is embedded within
            });
            siblingAccordions.find('dt').removeClass('active').next('dd').stop().slideUp('fast');
        }
        setTimeout(function() {
            $('html, body').animate({
                scrollTop: Number($this.offset().top - $('header').outerHeight() - jumpNavHeight) + "px"
            }, 250);
        }, 250);
    });
};

$(document).ready(function() {
    PENTAIR.InitAccordion();
});

$(function(){
	$("#distributorlocatormodal").on('show.bs.modal', function(event){
		//where-to-buy-new-distributor.js adds access to isloading and init for lazy loading.
		var targetWhereToBuy = $(this).find('.where-to-buy-new-distributor')[0];
		if(targetWhereToBuy.isLoading && targetWhereToBuy.isLoading()){ // "isLoading = true" means it hasn't been init yet
			targetWhereToBuy.init();
		}
	});
});
(function() {

    var distDisplayHelpers = function(self, brandsVerticalsAllowedFromTags) {
        return {
            distance: function(data) {
                return Math.round(data.distance * 10) / 10;
            },
            address: function(data) {
                var addressParts = [data.Dealer_Locator_Street_Address_1__c, data.Dealer_Locator_City__c, data.Dealer_Locator_State_Province__c, data.Dealer_Locator_Zip_Postal_Code__c, data.Dealer_Locator_Country__c].filter(function(elem) { return !!elem });
                var fullAddress = "";
                addressParts.forEach(function(addressElem, addressIndex) {
                    var addComma = addressIndex < (addressParts.length - 1);
                    fullAddress += addressElem + (addComma ? ', ' : '');
                });
                return fullAddress;
            },
            showDirections: function(data) {
                return data.Do_Not_Show_Address_on_Dealer_Locator__c === false;
            },
            phone: function(data) {
                return data.Dealer_Locator_Phone__c ? data.Dealer_Locator_Phone__c : '';
            },
            phonehref: function(data) {
                return data.Dealer_Locator_Phone__c ? 'tel:'+ data.Dealer_Locator_Phone__c  : '';
            },
            email: function(data) {
                return data.Dealer_Locator_Email__c ?  data.Dealer_Locator_Email__c : '';
            },
            emailhref: function(data) {
                return data.Dealer_Locator_Email__c ? 'mailto:'+ data.Dealer_Locator_Email__c : '';
            },
            website: function(data) {
                var website = data.Dealer_Locator_Website__c;
                var websiteExp = /(https:\/\/|http:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/;
                var normalUrlCheck = website && website.match(websiteExp);
                if (normalUrlCheck && website.indexOf('//') > -1) {
                    return website;
                } else if (normalUrlCheck && website.indexOf('//') === -1) {
                    return website ? '//' + website : '';
                } else {
                    return '';
                }
            },
            googleDirectionsLink: function(data) {
                return "https://www.google.com/maps/dir/?api=1&destination=" + this.address(data);
            },
            showNoResultsMessage: function() {
                return self.distributorList().length === 0 && !self.isLoading() && self.errorMessage() === 'noDistributors';
            },
            showNoGeoLocationMessage: function() {
                return !self.isLoading() && self.errorMessage() === 'noGeo';
            },
            showGeo: function() {
                return self.userLatLong() && self.userLatLong().lat && self.userLatLong().lng;
            },
            brandsVerticals: function(data) { // Returns array of all records' brand by vertical strings
                var allBrandsVerticals = new Set();
                var records = data.Account_Territories__r.records;
                $(records).each(function(index, record) {
                    var split = record.Brand_by_Vertical__c.split(';');
                    split.forEach(function(item) {
                        allBrandsVerticals.add(item);
                    });
                });
                return [...allBrandsVerticals];
            },
            // brands: function(data) {
            //     var brands = new Set();
            //     var brandsVerticalsString = '';
            //     var records = data.Account_Territories__r.records;
            //     $(records).each(function(index, record) {
            //         brandsVerticalsString += record.Brand_by_Vertical__c + ';';
            //     })
            //     var brandsVerticalsSet = new Set(brandsVerticalsString.split(';'));
            //     brandsVerticalsSet.forEach(function(index, item) {
            //         if (item.indexOf(' - ') >= 0) {
            //             var itemArr = item.split(' - ');
            //             if (itemArr[0] !== null || itemArr[1] !== "0" || itemArr[0] !== undefined) {
            //                 brands.add(itemArr[0]);
            //             }
            //         }
            //     });
            //     return "Brands: " + Array.from(brands).join(', ');
            // },
            markets: function(data) {
                var markets = new Set();
                var brandsVerticalsString = '';
                var records = data.Account_Territories__r.records;
                $(records).each(function(index, record) {
                    brandsVerticalsString += record.Brand_by_Vertical__c + ';';
                })
                var brandsVerticalsSet = new Set(brandsVerticalsString.split(';'));
                brandsVerticalsSet.forEach(function(index, item) {
                    if (brandsVerticalsAllowedFromTags.includes(item) && item.indexOf(' - ') >= 0) {
                        var itemArr = item.split(' - ');
                        if (itemArr[1] !== null || itemArr[1] !== "" || itemArr[1] !== undefined) {
                            markets.add(itemArr[1]);
                        }
                    }
                });
                return "Markets: " + Array.from(markets).join(', ');
            }
        }
    };

    var WhereToBuyViewModel = function(distributorComponentElement) {
        var self = this;

        self.distributorList = ko.observableArray(); // Populated by ajax call.

        self.mapHelper = new PENTAIR.Water.MapHelper(distributorComponentElement.find('.map-container'));
        self.googleMapsData = ko.observableArray();
        self.filterModel = new GenericFilterViewModel();

        var filterRules = {
            // 'Distance': function(distributorItem, currentFilter) {
            //     return currentFilter.value() >= distributorItem.distance;
            // },
            'Distributor Name': function(distributorItem, currentFilter) {
                return currentFilter.value() === distributorItem.name;
            },
            'Brand By Market': function(distributorItem, currentFilter) {
                var brandsVerticalsForItem = self.distDisplayHelpers.brandsVerticals(distributorItem);
                return brandsVerticalsForItem.includes(currentFilter.value());
            }
            // 'Brand Name': function(distributorItem, currentFilter) {
            //     var brandString = self.distDisplayHelpers.brands(distributorItem);
            //     return brandString.indexOf(currentFilter.value()) >= 0;
            // },
            // 'Market': function(distributorItem, currentFilter) {
            //     var marketString = self.distDisplayHelpers.markets(distributorItem);
            //     return marketString.indexOf(currentFilter.value()) >= 0;
            // }
        };

        self.searchInput = ko.observable().extend({ throttle: 200 });

        self.userPostalCode = ko.observable();
        self.userLatLong = ko.observable();
        self.userAddress = ko.observable();
        self.userCity = ko.observable('');
        self.userState = ko.observable('');
        self.userPostalCode = ko.observable('No Zip');
        var userCountry = '';
        var userState = '';
        var userCounty = '';

        self.zipQueryParam = ko.observable(getParams().zip ? decodeURIComponent(getParams().zip).replace(/\+/g, ' ') : '');
        self.zipcodeLat = ko.observable('');
        self.zipcodeLong = ko.observable('');
        self.zipcodeAddress = ko.observable('');

        self.filterModal = ko.observable('closed'); // closed or open
        self.errorMessage = ko.observable('noDistributors'); // 'noDistributors' or 'noGeo'

        // Brands and verticals are populated with TAGS from aem.
        var brands = distributorComponentElement.data('brands') ? distributorComponentElement.data('brands').split(',') : '';
        self.brands = ko.observableArray(brands);
        var verticals = distributorComponentElement.data('verticals') ? distributorComponentElement.data('verticals').split(',') : '';
        self.verticals = ko.observableArray(verticals);
        var brandsVerticalsAllowedFromTags = getAllowedTags();
        var resultsBrandsVerticals = new Set();

        // Get list of valid brands by verticals based on tag combinations
        function getAllowedTags() {
            var allowedTags = [];
            if (self.brands().length <= 0 || self.verticals().length <= 0) {
                console.log('Authored brands or verticals missing');
                return [];
            }
            self.brands().forEach(function(brandTag) {
                self.verticals().forEach(function(verticalTag) {
                    allowedTags.push(brandTag + ' - ' + verticalTag);
                })
            })
            return allowedTags;
        }

        function setCountryStateCounty(addressComponents) {
            userCountry = ''; // Reset values so not retained between searches
            userCounty = '';
            userState = '';
            var userCity = '';
            $(addressComponents).each(function(index, elem) {
                if (elem.types.includes('country')) {
                    userCountry = elem.short_name; // Get abbreviated country first
                }
            });
            $(addressComponents).each(function(index, elem) {
                if (userCountry === "US" && elem.types.includes("administrative_area_level_1")) {
                    userState = elem.short_name; // Abbreviated state name
                }
                if (userCountry === "US" && elem.types.includes("administrative_area_level_2")) {
                    userCounty = elem.long_name.replace(' County', ''); // Do not include the word county in the set value
                }
                if (userCountry === "US" && elem.types.includes("locality")) {
                    userCity = elem.long_name;
                }
            });
            if (userCountry === "US" && userCounty === '') {
                userCounty = userCity; // Set county to city to handle case where county doesn't exist
            }
        }

        self.userLatLong.subscribe(function(newValue) {
            if (!google || google === undefined) { return;}
            var geocoder = new google.maps.Geocoder();
            if (newValue) {
                geocoder.geocode({ 'latLng': newValue }, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        self.userAddress(results[0].formatted_address);

                        var addressData = getCityStateZip(results);
                        self.userCity(addressData.city);
                        self.userState(addressData.state);
                        self.userPostalCode(addressData.zip);

                        setCountryStateCounty(results[0].address_components);
                    }
                });
            }
        });

        var getCityStateZip = function(results){
            var outputData = {city: '', state: '', zip: ''};

            if(results[0] && results[0]['address_components']){
                var cityNameArray = results[0]['address_components'].filter(function(elem){return elem.types.indexOf('locality') !== -1});
                var stateNameArray = results[0]['address_components'].filter(function(elem){return elem.types.indexOf('administrative_area_level_1') !== -1});
                var postalCodeArray = results[0]['address_components'].filter(function(elem){return elem.types.indexOf('postal_code') !== -1});
                outputData['city'] = (cityNameArray && cityNameArray.length > 0) ? cityNameArray[0]['long_name'] : "";
                outputData['state']  = (stateNameArray && stateNameArray.length > 0) ? stateNameArray[0]['short_name'] : "";
                outputData['zip'] = (postalCodeArray && postalCodeArray.length > 0) ? postalCodeArray[0]['long_name'] : "";
            }

            return outputData;
        };

        self.isLoading = ko.observable(true);
        self.activeIndex = ko.observable(null);

        //Check if active filter is still visible when filter updates.
        function updateActiveFilter(filteredData) {
            var visibleIndexes = filteredData.map(function(elem) { return elem.index });
            if (!self.activeIndex() || (self.activeIndex() && visibleIndexes.indexOf(self.activeIndex()) == -1)) {
                self.activeIndex(null);
                self.mapHelper.closeMarker();
            }
        }


        // Hide or show pins when filter changes.
        self.filterModel.filteredDataList.subscribe(function(newValue) {
            var visiblePinIndexes = newValue.map(function(elem) { return elem.index });
            self.mapHelper.showPins(visiblePinIndexes);
            updateActiveFilter(newValue);
        });

        self.locationClick = function() {
            if (self.userLatLong() && self.userLatLong().latitude && self.userLatLong().longitude) {
                var pos = { lat: self.userLatLong().latitude, lng: self.userLatLong().longitude };
                self.runLatLongSearch(pos);
            }
            updateActiveFilter(newValue);
        };

        self.isActive = function(data) {
            return (self.activeIndex() !== null) && (self.activeIndex() === data.index);
        };

        // workaround for preventing bubbling (and preventDefault) when an anchor tag is inside a div with a click event.
        self.innerClick = function(selection, event) {
            /* Analytics Model Update*/
            if ((selection && selection.name) && (event && event.target && event.target.dataset && event.target.dataset.eventName)) {
                updateDataLayerObj(selection.name, 'Result Link', event.target.dataset.eventName, undefined, undefined, undefined, false);
            }
            // Adobe analytics
            trackWTBClickEvent('WTB Distributor list get directions click', selection.id, selection.index, 'get directions');
            return true;
        };

        self.distributorClick = function(data) {
            self.mapHelper.closeMarker();
            self.activeIndex(data.index);
            updateActiveFilter(newValue);
            if (!data.hideAddress) {
                self.mapHelper.openMarker(data.index);
            }
            // Adobe analytics
            trackWTBClickEvent('WTB Distributor search result list click', data.id, data.index, 'list result');
        };

        self.activePanel = ko.observable('list');

        self.mapPanelActive = function() { return self.activePanel() === 'map' };

        self.listPanelActive = function() { return self.activePanel() === 'list' };

        self.setListPanel = function() {
            self.activePanel('list');
            self.reInitJscroll(true);
        };

        self.setMapPanel = function() {
            self.activePanel('map');
            self.mapHelper.updateZoom();
        };

        self.openFilterModal = function() {
            self.filterModal('open');
            $('body').addClass('filter-open modal-open');
        };

        self.closeFilterModal = function() {
            self.filterModal('closed');
            $('body').removeClass('filter-open modal-open');
        };

        self.isFilterModalOpen = function() {
            return self.filterModal() === 'open';
        };

        // Used for hiding/showing sections. No hash means show all sections.
        var hashes = window.location.hash.replace("#", "");
        var hashArray = hashes ? hashes.split(",") : [];
        self.urlHashes = ko.observableArray(hashArray);

        // Jscroll handling.
        self.filterModel.setFilterRules(filterRules);

        self.reInitJscroll = ko.observable(false).extend({ rateLimit: 100, notify: 'always' });

        self.filterModel.activeFilters.subscribe(function(newValue) {
            self.reInitJscroll(true);
        });

        self.distDisplayHelpers = distDisplayHelpers(self, brandsVerticalsAllowedFromTags);

        self.reInitJscroll.subscribe(function(newValue) {
            if (newValue) {
                self.reInitJscroll(false);
                reInitJscroll();
            }
        });

        function reInitJscroll() {
            if (distributorComponentElement.find('.scroll-list').jScrollPane) {
                distributorComponentElement.find('.scroll-list').jScrollPane({
                    contentWidth: '0px',
                    autoReinitialize: true
                });

            }
        }

        $(window).on('resize', function(e) {
            self.reInitJscroll(true);
        });

        function getVisiblePins() {
            var indexArray = [];

            return indexArray;
        }

        self.afterRender = function() {
            self.reInitJscroll(true);
        };

        /**
         * Uses a set of values to populate a filter
         */
        function getSimpleFilterValues(values) {
            var valuesArr = []
            values.forEach(function(item) {
                valuesArr.push({'value': item, 'title': item});
            });
            return valuesArr;
        }


        // Populate Filters:
        self.distributorList.subscribe(function(newValue) {
            // var distanceValues = [{ value: 10, title: 10 }, { value: 20, title: 20 }, { value: 30, title: 30 }, { value: 50, title: 50 }, { value: 100, title: 100 }, { value: 150, title: 150 }, { value: 200, title: 200 }];
            var recordFilters = getRecordFilters();
            var filterCategories = [
                // { name: "Distance", type: "static", values: distanceValues, inputType: "radio" },
                { name: "Distributor Name", type: "dynamic", fromField: "name", inputType: "checkbox" },
                { name: "Brand By Market", type: "static", values: getSimpleFilterValues(resultsBrandsVerticals), inputType: "checkbox" },
                // { name: "Brand Name", type: "static", values: getSimpleFilterValues(self.brands()), inputType: "checkbox" },
                // { name: "Market", type: "static", values: getSimpleFilterValues(self.verticals()), inputType: "checkbox" }
            ];

            // if (self.brands().size <= 1) {
            //     filterCategories = filterCategories.filter(function(elem) { return elem.name !== "Brand Name" });
            // }
            // if (self.verticals().size <= 1) {
            //     filterCategories = filterCategories.filter(function(elem) { return elem.name !== "Market" });
            // }
            // if (resultsBrandsVerticals.size <= 1) {
            //     filterCategories = filterCategories.filter(function(elem) { return elem.name !== "Brand By Market" });
            // }

            self.filterModel.filters([]);
            self.filterModel.populateCategories(filterCategories, newValue);
            // initFilterSelection(newValue);
        });

        // function initFilterSelection(distributorList) {
        //     var distanceCategory = self.filterModel.filters().filter(function(categoryFilter) { return categoryFilter.name() === "Distance" });
        //     var distanceFiltersWithResults;
        //     if (distanceCategory.length && distanceCategory[0].values()) {
        //         distanceFiltersWithResults = distanceCategory[0].values().filter(function(filterModel) { return (filterModel.count() > 0) && (filterModel.value() >= 50) });
        //         if (distanceFiltersWithResults.length > 0) {
        //             distanceFiltersWithResults[0].toggleSelection();
        //             setInitialRadius();
        //         }
        //     }
        // }

        // If a user hits the 'x' when the location requests pops up in IE, the error section is not hit,
        // and the service fails silently.
        function geoLocationIETimeout() {
            var isIE = /*@cc_on!@*/ false || !!document.documentMode; // Internet Explorer 6-11
            self.geoLocationStatus = ko.observable('waiting');
            if (isIE) {
                setTimeout(function() {
                    if (self.geoLocationStatus() === 'waiting') {
                        self.errorMessage('noGeo');
                        self.firstSearch.dispose();
                        self.isLoading(false);
                    }
                }, 8000);
            }
        };

        function initUserLatLong() {
            if (navigator.geolocation) {
                geoLocationIETimeout();
                navigator.geolocation.getCurrentPosition(function(position) {
                    var pos = { lat: position.coords.latitude, lng: position.coords.longitude };
                    self.userLatLong(pos);
                    self.geoLocationStatus('complete');
                }, function(e) { // error
                    self.errorMessage('noGeo');
                    self.firstSearch.dispose();
                    self.geoLocationStatus('complete');
                    self.isLoading(false);
                });
            }
        }

        function getParams() {
            return _.chain(location.search.slice(1).split('&'))
                .map(function (item) { if (item) { return item.split('='); } })
                .compact()
                .object()
                .value();
        }

        self.runLatLongSearch = function(latLongData) {
            if (latLongData && latLongData.lat && latLongData.lng) {
                var pos = { latitude: latLongData.lat, longitude: latLongData.lng };

                // Reset user location
                if (latLongData) {
                    var geocoder = new google.maps.Geocoder();
                    if (!self.zipQueryParam()) {

                        geocoder.geocode({ 'latLng': latLongData }, function(results, status) {
                            if (status == google.maps.GeocoderStatus.OK) {
                                self.userAddress(results[0].formatted_address);

                                var addressData = getCityStateZip(results);
                                self.userCity(addressData.city);
                                self.userState(addressData.state);
                                self.userPostalCode(addressData.zip);
                                self.searchInput(self.userAddress());
                                setCountryStateCounty(results[0].address_components)
                            }
                            loadMapData(pos);
                        });
                    } else {
                        var address = self.zipQueryParam();
                        geocoder.geocode({ 'address': 'zipcode '+address }, function (results, status) {
                            if (status == google.maps.GeocoderStatus.OK) {
                                var latitude = results[0].geometry.location.lat();
                                var longitude = results[0].geometry.location.lng();
                                var address = results[0].formatted_address;
                                self.zipcodeLat(latitude);
                                self.zipcodeLong(longitude);
                                self.zipcodeAddress(address);
                                self.searchInput(address);
                                var zipPos = { latitude: latitude, longitude: longitude };
                                setCountryStateCounty(results[0].address_components)
                                loadMapData(zipPos);
                            }
                        });
                    }
                }

                self.activeIndex(null);
                self.reInitMap();
            }
        };

        self.runAddressSearch = function(address) {
            var geocoder = new google.maps.Geocoder();
            if (address) {
                geocoder.geocode({ 'address': address }, function(results, status) {
                    setCountryStateCounty(results[0].address_components)
                    if (status == google.maps.GeocoderStatus.OK) {
                        var pos = { lat: results[0].geometry.location.lat(), lng: results[0].geometry.location.lng() };
                        self.runLatLongSearch(pos);
                    }
                });
            }
        };

        self.locationSearchClick = function() {
            if (self.userLatLong() && self.userLatLong().lat && self.userLatLong().lng) {
                self.runLatLongSearch(self.userLatLong());
                self.searchInput(self.userAddress());
            } else {
                self.init(); // asks for location data again.
            }
        };

        self.searchUserInputClick = function() {
            self.runAddressSearch(self.searchInput());
        }

        self.searchInputKeypress = function(scope, event) {
            initAutocomplete();
            return true;
        };

        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        self.geolocate = function geolocate() {
            if (navigator.geolocation && autocomplete) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({ center: geolocation, radius: position.coords.accuracy });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        };

        self.showContactDistributor = function(data) {
            return data.Dealer_Locator_Phone__c || data.Dealer_Locator_Website__c || data.Dealer_Locator_Email__c;
        };

        self.showDistContactCallback = function(event, selection) {
            /* Analytics Model Update*/
            if ((selection && selection.Dealer_Locator_Name__c) && (event && event.target && event.target.dataset && event.target.dataset.eventName)) {
                updateDataLayerObj(selection.Dealer_Locator_Name__c, 'Result Link', event.target.dataset.eventName, undefined, undefined, undefined, false);
            }
            if ($(event.target).is($('a.contact-distributor'))) {
                event.preventDefault();
                if ($(event.target).parents('.marker').length) { // in map infowindow
                    $(event.target).parents('.show-contact').siblings('.contact').show();
                    $(event.target).parents('.show-contact').hide();
                    // Adobe analytics
                    var markerElem = event.target.closest('.marker');
                    trackWTBClickEvent('WTB map contact distributor click', markerElem.dataset.distributorId, markerElem.dataset.distributorIndex, 'map contact distributor');
                } else { // in distributor list
                    $(event.target).siblings('.contact').show();
                    $(event.target).hide();
                    reInitJscroll();
                    // Adobe analytics
                    trackWTBClickEvent('WTB list contact distributor click', selection.id, selection.index, 'contact distributor');
                }
            }
        };

        self.reInitMap = function() {
            var initMap = self.distributorList.subscribe(function() {
                updateDataLayerList(); // analytics wants a list of results
                self.googleMapsData(getGoogleMapsModel());
                self.mapHelper.setMarkerHtmlCallback(markerHtmlCallback);
                self.mapHelper.initMap(self.googleMapsData());
                self.mapHelper.addInfoWindowEvent('click', self.showDistContactCallback);
                initMap.dispose();
            });
        };

        var total;

        function updateDataLayerList() {
            var userAddress = self.searchInput();
            if (self.distributorList().length !== total) { // don't bother if results haven't changed
                total = self.distributorList().length;
                var distributorListNames = [];
                self.distributorList().forEach(function(elem) {
                    distributorListNames.push(elem.name);
                });
                distributorListNames = distributorListNames.join('|');
                updateDataLayerObj(undefined, 'Results Found', 'Distributors Impression', distributorListNames, undefined, undefined, userAddress, false);
            } else {
                var distributorListNames = [];
                self.distributorList().forEach(function(elem) {
                    distributorListNames.push(elem.name);
                });
                distributorListNames = distributorListNames.join('|');
                updateDataLayerObj(undefined, 'Results Found', 'Distributors Impression', distributorListNames, undefined, undefined, userAddress, false);
            }
        }

        function clearDigitalDataProperty(prop, propVal) {
            // clears out optional/circumstantial analytics properties
            if (propVal) {
                digitalData.findDistributor[prop] = propVal;
            } else {
                if (digitalData.findDistributor[prop]) {
                    delete digitalData.findDistributor[prop];
                }
            }
        }

        self.updateAnalytics = function updateAnalytics(scopedItem) {
            if (scopedItem && scopedItem.selected()) {
                var filterType = scopedItem.parent && scopedItem.parent.name() ? scopedItem.parent.name() : undefined;
                var filterValue = scopedItem.value();
                updateDataLayerObj(undefined, "Refine Search", "Apply Filter", undefined, filterType, filterValue, undefined, true);
            }
            return true;
        };

        // strictly for updating Data Layer Object with user location data
        function getUserLocationData(res) {
            var city, state, zip, formattedAddress;

            city = self.userCity();
            state = self.userState();
            zip = /\d{5}/.test(res) ? self.userPostalCode() : "No Zip";
            formattedAddress = city + "|" + state + "|" + zip;

            return formattedAddress;
        }

        function updateDataLayerObj(name, eventAction, eventName, distributorList, filterType, filterValue, address, fireInputTracking) {
            try {
                if (digitalData) {
                    if (digitalData.findDistributor) {
                        var TYPE = 'Find A Distributor';
                        clearDigitalDataProperty('name', name);
                        clearDigitalDataProperty('distributorsFound', distributorList);
                        clearDigitalDataProperty('filterType', filterType);
                        clearDigitalDataProperty('filterValue', filterValue);
                        digitalData.findDistributor.eventName = eventName;
                        digitalData.findDistributor.type = TYPE;
                        digitalData.findDistributor.eventAction = eventAction;
                        digitalData.findDistributor.timeStamp = new Date();
                        digitalData.findDistributor.distributorFormInput = getUserLocationData(address);
                        if (!_.isUndefined(window._satellite) && fireInputTracking) {
                            window._satellite.track("wtb_input");
                        }

                    }
                }
            } catch (err) {
                console.log(err);
            }
        }

        /**
         * Constructs the payload for the click event analytics tracking and sends the payload to be tracked.
         * @param eventName analytics event name
         * @param wtbDistributorIDClicked ID of the distributor clicked
         * @param wtbSearchResultIndex index of the clicked distributor in the list
         * @param wtbClickType click type: list result, contact distributor, get directions, map pin, map contact distributor
         */
        function trackWTBClickEvent(eventName, wtbDistributorIDClicked, wtbSearchResultIndex, wtbClickType) {
            var eventWTBClickPayload = {
                eventName: eventName,
                eventType: 'event',
                attributes: {
                    visitor: {
                        pentairCustomerID: getPentairCustomerID(), //if this is available
                        distributorID: getDistributorID() //if this is available
                    },
                    wtbSearch: {
                        wtbBrands: self.brands().join(),
                        wtbVerticals: self.verticals().join(),
                        wtbSearchZip: self.userPostalCode(),
                        wtbDistributorIDClicked: wtbDistributorIDClicked,
                        wtbSearchResultIndex: wtbSearchResultIndex + 1, // index start at 1
                        wtbClickType: wtbClickType
                    }
                }
            }
            trackEventWithQueue(eventWTBClickPayload);
        }

        function markerHtmlCallback(item) {
            var infoHtml;
            if (item && !isNaN(item.index)) {
                infoHtml = $('<div>').addClass('marker')
                                    .attr('data-distributor-index', item.index)
                                    .attr('data-distributor-id', item.id);
            }
            if (item && item.name) {
                infoHtml.append($('<p>').addClass('location-name').html(item.name));
            }
            if (item && item.distance) {
                infoHtml.append($('<p>').addClass('distance').html(item.distance + ' miles away'));
            }
            if (item && item.address) {
                infoHtml.append($('<p>')
                    .html(item.address.split(',')[0] + '<br>' + item.address.split(',').slice(1).join(', ')));
            }

            if(item && (item.phone || item.website || item.email)){
              var contact = $('<span>').addClass('contact').hide();

              if(item && item.phone){
                contact.append(
                    $('<p>')
                        .addClass('phone-one')
                        .append('<span class="icon-phone" aria-hidden="true"></span>')
                        .append($('<a>').attr('href', 'tel:' + item.phone).html(item.phone))
                );
              }
              if(item && item.email){
                contact.append(
                    $('<p>')
                        .addClass('email')
                        .append('<span class="icon-pentair-email" aria-hidden="true"></span>')
                        .append(
                            $('<a>')
                                .attr('href', 'mailto:' + item.email)
                                .attr('target', '_blank')
                                .attr('rel', 'noopener noreferrer')
                                .html(item.email)
                        )
                );
              }
              if(item && item.website){
                contact.append(
                    $('<p>')
                        .addClass('website')
                        .append('<span class="icon-external-link-square" aria-hidden="true"></span>')
                        .append($('<a>').attr({'href': item.website, 'target': '_blank'}).html(' Website'))
                );
              }

              infoHtml.append(contact);
              infoHtml.append($('<p>').addClass('show-contact').append('<span class="icon-address-book" aria-hidden="true"></span>').append($('<a>').addClass('contact-distributor').attr('href', '#').html(' Contact Distributor')));
            }

            // If the callback came from clicking on a map pin, fire adobe analytics event for tracking map pin click
            if (item && event.target.closest('.map-container')) {
                trackWTBClickEvent('WTB Distributor map pin click', item.id, item.index, 'map pin');
            }

            return infoHtml[0].outerHTML;
        }

        self.init = function() {
            initUserLatLong();
            self.firstSearch = self.userLatLong.subscribe(function(newValue) {
                if (newValue) {
                    self.runLatLongSearch(newValue);
                }
                self.firstSearch.dispose();
            });
        };

        function setInitialRadius() {
            var component = distributorComponentElement;
            var distance = component.find(".filter .Distance");
            var distanceFilters = distance.next("ul").find("li");
            for (var i = 0; i < distanceFilters.length; i++) {
                var currentFilter = $(distanceFilters[i]);
                var count = currentFilter.find(".item-count");
                var num = count.text().replace(/[()]/g, '');
                if (num > 0) {
                    currentFilter.find("input").click();
                    break;
                }
            }
        }

        var initialSearchOnPageView = true;

        function loadMapData(locationData) {
            // Leave distance: 200 here because Salesforce will handle it on their side
            var extendLocationData = { distance: 200, country: userCountry, brands: self.brands().join(','), verticals: self.verticals().join(',') };
            if (userState.length > 0) {
                extendLocationData.stateProvince = userState;
            }
            if (userCounty.length > 0) {
                extendLocationData.county = userCounty;
            }
            locationData = locationData;
            $.extend(locationData, extendLocationData);
            self.isLoading(true);
            self.errorMessage('noDistributors');

            $.ajax({
                type: 'GET',
                data: locationData,
                url: '/bin/pentair/sfdc/distributor',
                beforeSend: function() {},
                success: function(data) {
                    if (data) {
                        jsonData = JSON.parse(data);
                        var sortedDistributorResults = processDistData(jsonData.acctList);
                        self.distributorList(sortedDistributorResults);
                        if (self.distributorList().length === 0 && (locationData.latitude && locationData.longitude)) {
                            var pos = { "lat": locationData.latitude, "lng": locationData.longitude };
                            self.mapHelper.setCenter(pos);
                        }
                    } else {
                        console.error('No distributors found. -> ', data.length);
                    }
                    self.isLoading(false);
                    if (initialSearchOnPageView) {
                        initialSearchOnPageView = false;
                        var pageViewDistributorListLoaded = new CustomEvent("pageViewDistributorListLoaded", {
                            detail: {
                                wtbSearch: {
                                    wtbBrands: self.brands().join(),
                                    wtbVerticals: self.verticals().join(),
                                    wtbDistributorID: getFilteredDistributorIDs(),
                                    wtbNumberResults: self.filterModel.filteredDataList().length,
                                    wtbSearchZip: self.userPostalCode()
                                }
                            }
                        });
                        // Dispatch the event to be handled in clientlib-site/js/analytics/pageView.js
                        var whereToBuyComponent = document.querySelector('.where-to-buy-new-distributor.component');
                        whereToBuyComponent.dispatchEvent(pageViewDistributorListLoaded);
                    }
                },
                error: function(data) {
                    console.error('Error retrieving Distributor List ->', data);
                    self.isLoading(false);
                }
            });
        }

        // PENW-3184 - resetting focus state of Search button when clicked?
        $(".where-to-buy-new-distributor.component .wtb-search").on("click", function(e) {
            e.preventDefault();
            $(this).blur();
        });

        /**
         * Gets the filtered Distributor IDs that were returned in the search.
         * @returns comma separated string list of distributor IDs
         */
        function getFilteredDistributorIDs() {
            var distributorIDs = [];
            self.filterModel.filteredDataList().forEach(function(distributor) {
                distributorIDs.push(distributor["id"]);
            });
            return distributorIDs.join();
        }

        function getRecordFilters() {
            var allBrandNames = [];
            var allVerticals = [];

            self.distributorList().forEach(function(distributorElem) {
                allBrandNames = allBrandNames.concat(distributorElem["brands"]);
                allVerticals = allVerticals.concat(distributorElem["verticals"]);
            });

            var brandNameFilters = ko.utils.arrayGetDistinctValues(allBrandNames).sort().map(function(elem) { return { value: elem, title: elem } });
            var verticalsFilters = ko.utils.arrayGetDistinctValues(allVerticals).sort().map(function(elem) { return { value: elem, title: elem } });
            return { brandNameFilters: brandNameFilters, verticalsFilters: verticalsFilters };
        }

        function getGoogleMapsModel() {
            var mapData = self.distributorList()
                .map(function(elem, index) {
                    var mapElem = {};
                    mapElem.id = elem.iD;
                    mapElem.name = elem.Dealer_Locator_Name__c;
                    mapElem.phone = elem.Dealer_Locator_Phone__c;
                    mapElem.email = elem.email;
                    mapElem.address = self.distDisplayHelpers.address(elem);
                    mapElem.website = self.distDisplayHelpers.website(elem);
                    mapElem.index = index;
                    mapElem.latitude = elem.Dealer_Locator_Location__Latitude__s;
                    mapElem.longitude = elem.Dealer_Locator_Location__Longitude__s;
                    mapElem.distance = self.distDisplayHelpers.distance(elem);
                    mapElem.hideAddress = elem.Do_Not_Show_Address_on_Dealer_Locator__c;
                    return mapElem
                });
            return mapData;
        }

        // Add indexes, retrieve sets for brands and verticals
        function processDistData(data) {
            var sortedAndFiltered = data.filter(function(elem) {
                return (elem.Do_Not_Show_Address_on_Dealer_Locator__c == false) ||
                        (elem.Do_Not_Show_Address_on_Dealer_Locator__c && self.showContactDistributor(elem));
            });

            // Create full string of all brands by verticals results
            var brandsVerticalsString = '';
            $(sortedAndFiltered).each(function(index, elem) {
                var records = elem.Account_Territories__r.records;
                $(records).each(function(index, record) {
                    brandsVerticalsString += record.Brand_by_Vertical__c + ';';
                })
                elem.index = index;
            });

            // Use string to create set, then add to results set if result matches an allowed tag
            var brandsVerticalsSet = new Set(brandsVerticalsString.split(';'));
            brandsVerticalsSet.forEach(function(index, item) {
                if (brandsVerticalsAllowedFromTags.includes(item)) {
                    resultsBrandsVerticals.add(item);
                }
            });

            return sortedAndFiltered;
        }

        /*  Start of autocomplete changes
            Autocomplete requires the Places library, e.g.,
            src="//maps.googleapis.com/maps/api/js?key=${config.googleMapsKey}&libraries=places   */
        var autocomplete;

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search predictions to
            // geographical location types.
            if (!autocomplete) {
                autocomplete = new google.maps.places.Autocomplete(distributorComponentElement.find('.autocomplete')[0], { types: ['geocode'] });
                // Avoid paying for data that you don't need by restricting the set of
                // place fields that are returned to just the address components.
                autocomplete.setFields(['address_component', 'formatted_address']);
                autocomplete.addListener('place_changed', function() {
                    //
                    result = autocomplete.getPlace();
                    if (typeof result.address_components == 'undefined') {
                        // The user pressed enter in the input
                        // without selecting a result from the list
                        // Let's get the list from the Google API so that
                        // we can retrieve the details about the first result
                        // and use it (just as if the user had actually selected it)
                        autocompleteService = new google.maps.places.AutocompleteService();
                        autocompleteService.getPlacePredictions({
                                'input': result.name,
                                'types': ['geocode']
                            },
                            function listentoresult(list, status) {
                                if (list == null || list.length == 0) {
                                    // There are no suggestions available.
                                    // The user saw an empty list and hit enter.
                                    //console.log("No results");
                                } else {
                                    // Here's the first result that the user saw
                                    // in the list. We can use it and it'll be just
                                    // as if the user actually selected it
                                    // themselves. But first we need to get its details
                                    // to receive the result on the same format as we
                                    // do in the AutoComplete.
                                    placesService = new google.maps.places.PlacesService(distributorComponentElement.find('.autocomplete')[0]);
                                    placesService.getDetails({ 'reference': list[0].reference },
                                        function detailsresult(detailsResult, placesServiceStatus) {
                                            // Here's the first result in the AutoComplete with the exact
                                            // same data format as you get from the AutoComplete.
                                            self.searchInput(detailsResult.formatted_address);
                                            self.runAddressSearch(detailsResult.formatted_address);
                                        }
                                    );
                                }
                            }
                        );
                    } else {
                        // The user selected a result from the list, we can
                        // proceed and use it right away
                        var place = autocomplete.getPlace();
                        var address = place.formatted_address;
                        self.searchInput(address);
                        self.runAddressSearch(address);
                    }
                });
            }
        }
        /*END of autocomplete */

        // lazy load if modal:

        var parentModal = distributorComponentElement.parents('#storelocatormodal');
        var isInModal = !!parentModal.length;
        if (isInModal) {
            self = this;
            distributorComponentElement[0].init = self.init;
            distributorComponentElement[0].isLoading = self.isLoading;
        } else {
            self.init();
        }
    };
    var showParams;
    try {
    var regex = /(%22)+/g;
    var queryString = location.search.substring(1);
    queryString = queryString.replace(regex, '_');
    var urlParams = queryString ? JSON.parse('{"' + decodeURIComponent(queryString).replace(/=&/g, "\":\"\",\"").replace(/&/g, "\",\"").replace(/=/g, "\":\"") + '"}') : {};
    showParam = urlParams["show"] || "";
    }catch(message){
        var params = new URLSearchParams(window.location.search);
        showParam = params.get("show") || "";
    }

    $(document).ready(function() {
        $('.where-to-buy-new-distributor.component').each(function() {
            if (showParam) {
                $(document).find('section.toolbar').hide();
            }
            if (!showParam || showParam === "localDistributors") {
                try {
                    ko.applyBindings(new WhereToBuyViewModel($(this)), this);
                } catch (e) {
                    console.log(e);
                }
            } else {
                $('.where-to-buy-new-distributor.component').hide();
            }
        });
    });
})();

$(function(){
	$("#storelocatormodal").on('show.bs.modal', function(event){
		//where-to-buy-new.js adds access to isloading and init for lazy loading.
		var targetWhereToBuy = $(this).find('.where-to-buy-new')[0];
		if(targetWhereToBuy.isLoading && targetWhereToBuy.isLoading()){ // "isLoading = true" means it hasn't been init yet
			targetWhereToBuy.init();
		}
	});
});
(function () {
    var WhereToBuyButton = function (componentElement) {
        let isShowDistributorsLocator = componentElement.attr("data-show-local-distributors-locator") !== undefined;
        let isShowDealersLocator = !isShowDistributorsLocator;

        // 'supplier' = dealer or distributor
        let NO_SUPPLIERS_AVAILABLE;
        let NO_SUPPLIERS_ERROR_MESSAGE;
        let SFDC_URL
        if (isShowDistributorsLocator) {
            NO_SUPPLIERS_AVAILABLE = "NO DISTRIBUTORS AVAILABLE";
            NO_SUPPLIERS_ERROR_MESSAGE = "noDistributors";
            SFDC_URL = '/bin/pentair/sfdc/distributor';
        } else if (isShowDealersLocator) {
            NO_SUPPLIERS_AVAILABLE = "NO DEALERS AVAILABLE";
            NO_SUPPLIERS_ERROR_MESSAGE = "noDealers";
            SFDC_URL = '/bin/pentair/sfdc/dealers';
        } else {
            console.error("isShowDistributorsLocator or isShowDealersLocator  should be 'true', but both 'false'");
        }

        // Brands and categories are populated with TAGS from aem.
        var brands = componentElement.data('brands') ? componentElement.data('brands').split(',') : '';
        self.brands = ko.observableArray(brands);

        var categories = componentElement.data('categories') ? componentElement.data('categories').split(',') : '';
        self.categories = ko.observableArray(categories);

        self.isLoading = ko.observable(true);
        self.userLatLong = ko.observable();
        self.errorMessage = ko.observable();
        self.pageType = ko.observable(componentElement.attr('data-resource').split('/').pop()); // product or sku-page

        var skus = componentElement.attr('data-wtb-sku') ? componentElement.attr('data-wtb-sku').split(',') : [];
        self.skus = ko.observableArray(skus);
        self.productSku = componentElement.attr('data-product-sku');
        self.hasSalesforceResults = ko.observable(false);								// should we display find local section or not
        self.hasChannelAdvisor = ko.observable(componentElement.attr('data-wtb-in-sku-list') == 'true'); 	// should we display channeladvisor (find online section) or not

        var productPageUrl = componentElement.attr("data-product-page-url") ? componentElement.attr("data-product-page-url") : ""
        var editMode = window.location.search.includes("wcmmode=disabled") ? 'edit' : 'publish'; // TODO remove this once full solution is found
        self.productPageUrl = ko.observable(productPageUrl);

        self.pageUrl = ko.observable(window.location.pathname);

        self.geoLocationFailed = ko.computed(function () {
            return !self.userLatLong() && !self.isLoading();
        });

        self.runLatLongSearch = function (latLongData) {
            if (latLongData && latLongData.lat && latLongData.lng) {
                var pos = {latitude: latLongData.lat, longitude: latLongData.lng};
                loadMapData(pos);
            }
        };

        self.linkUrl = ko.computed(function () {
            var link = self.pageType() === 'product' ? self.productPageUrl() : self.pageUrl().replace(".html", "");

            // Adding conditional class to show non-commpdp if available
            $('.buttons.none-ecommpdp').addClass("has-child");

            var skuSection = (self.skus().length >= 1) ? ('/sku/' + self.skus()[0]) : '';
            link += self.pageType() === 'product' ? skuSection + '/where-to-buy.html' : '';
            link += self.pageType() !== 'product' ? '/where-to-buy.html' : '';

            if (!self.hasChannelAdvisor()) {
                if (isShowDealersLocator) {
                    link += '?show=local';
                } else if (isShowDistributorsLocator) {
                    link += '?show=localDistributors';
                }
            } else {
                link += '?show=online'
            }

            var prefix = link.indexOf('?') == -1 ? '?' : '&';
            link += prefix + 'from=' + self.pageType();

            return editMode === "publish" ? link.replace("/content/pentair", "") : link;
        });

        self.init = function () {
            initUserLatLong();
            self.initSearch = self.userLatLong.subscribe(function (newValue) {
                if (newValue) {
                    self.runLatLongSearch(newValue);
                }
                self.initSearch.dispose();
            });
        };

        // If a user hits the 'x' when the location requests pops up in IE, the error section is not hit,
        // and the service fails silently.
        function geoLocationIETimeout() {
            var isIE = /*@cc_on!@*/false || !!document.documentMode; // Internet Explorer 6-11
            self.geoLocationStatus = ko.observable('waiting');
            if (isIE) {
                setTimeout(function () {
                    if (self.geoLocationStatus() === 'waiting') {
                        self.errorMessage('noGeo');
                        self.initSearch.dispose();
                        self.isLoading(false);
                    }
                }, 3000);
            }
        };

        function initUserLatLong() {
            if (navigator.geolocation) {
                geoLocationIETimeout();
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {lat: position.coords.latitude, lng: position.coords.longitude}
                    self.userLatLong(pos);
                    self.geoLocationStatus('complete');
                }, function (e) { // error
                    self.errorMessage('noGeo');
                    self.initSearch.dispose();
                    self.isLoading(false);
                    self.geoLocationStatus('complete');
                });
            }
        };

        function loadMapData(locationData) {
            var extendLocationData = {
                distance: 200,
                brands: self.brands().join(','),
                categories: self.categories().join(',')
            };
            locationData = locationData;
            $.extend(locationData, extendLocationData);
            self.isLoading(true);
            self.errorMessage(NO_SUPPLIERS_ERROR_MESSAGE);

            $.ajax({
                type: 'GET',
                data: locationData,
                url: SFDC_URL,
                beforeSend: function () {
                },
                success: function (data) {
                    jsonData = JSON.parse(data);
                    var filteredResults = jsonData.results.filter(function (elem) {
                        return elem.hideAddress == false;
                    });
                    self.hasSalesforceResults(filteredResults.length > 0);
                    self.isLoading(false);
                },
                error: function (data) {
                    self.isLoading(false);
                }
            });
        };

        // Fire all 'on click' event analytics tracking methods
        self.wtbAnalyticsEvents = function () {
            trackWTBClickEvent();
            constructAlgoliaAnalyticsWTBObject();
            return true;
        }

        // [SEAP-145] - Algolia WTB Conversion Tracking
        function constructAlgoliaAnalyticsWTBObject() {
            var queryParams = window.location.href.indexOf("?") !== -1;
            if (queryParams) {
                var search = window.location.search.substring(1);
                var params = JSON.parse('{"' + decodeURI(search).replace(/&/g, '","').replace(/=/g, '":"') + '"}');
                if (params.hasOwnProperty("queryID") && params.hasOwnProperty("objectID") && params.hasOwnProperty("indexName")) {
                    var userToken = "";
                    if (typeof _satellite !== undefined && _satellite != null) {
                        userToken = _satellite.getVisitorId().getMarketingCloudVisitorID();
                    }
                    // attach to window object with conversion tracking details
                    aa('convertedObjectIDsAfterSearch', {
                        userToken: userToken,
                        eventName: 'Where_To_Buy',
                        index: params.indexName,
                        queryID: params.queryID,
                        objectIDs: [params.objectID]
                    });
                }
            }
            return true;
        }

        // Abode Analytics
        // Tracks the WTB button click event
        function trackWTBClickEvent() {
            var eventWTBPayload = {
                eventName: 'WTB click',
                eventType: 'event',
                attributes: {
                    visitor: {
                        pentairCustomerID: getPentairCustomerID(), //if this is available
                        dealerID: getDealerID(), //if this is available
                        distributorID: getDistributorID() //if this is available
                    },
                    page: {
                        pageCanonical: getPageViewPageAttribute("pageCanonical"),
                        pageName: getPageViewPageAttribute("pageName"),
                        pagePath: getPageViewPageAttribute("pagePath"),
                        pageType: getPageViewPageAttribute("pageType"),
                        pageURL: getPageViewPageAttribute("pageURL"),
                        pageTitle: getPageViewPageAttribute("pageTitle"),
                        pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                        businessUnitID: getPageViewPageAttribute("businessUnitID"),
                        subBrand: getPageViewPageAttribute("subBrand"),
                        language: getPageViewPageAttribute("language"),
                        author: getPageViewPageAttribute("author"),
                    },
                    product: {
                        skuID: self.productSku,
                        productName: getPageViewProductAttribute("productName"),
                        type: getPageViewProductAttribute("type")
                    }
                }
            }
            trackEventWithQueue(eventWTBPayload);
        }

        self.init();
    };

    $(document).ready(function () {
        $('.wtb-button.component').each(function () {
            try {
                ko.applyBindings(new WhereToBuyButton($(this)), this);
            } catch (e) {
                console.log(e);
            }
        });
    });
})();

(function() {
    var displayHelpers = function(self) {
        return {
            distance: function(data) {
                return Math.round(data.distance * 10) / 10;
            },
            address: function(data) {
                var addressParts = [data.address1, data.address2, data.city, data.state, data.postal_code, data.country].filter(function(elem) { return !!elem });
                var fullAddress = "";
                addressParts.forEach(function(addressElem, addressIndex) {
                    var addComma = addressIndex < (addressParts.length - 1);
                    fullAddress += addressElem + (addComma ? ', ' : '');
                });
                return fullAddress;
            },
            showDirections: function(data) {
                return data.hideAddress === false;
            },
            phone: function(data) {
                return data.phone ? ('tel: ' + data.phone) : '';
            },
            email: function(data) {
                return data.email ? ('mailto:' + data.email) : '';
            },
            googleDirectionsLink: function(data) {
                return "https://www.google.com/maps/dir/?api=1&destination=" + this.address(data);
            },
            showTrueBlue: function(data) {
                return data.status === "True Blue";
            },
            website: function(data) {
                var websiteExp = /(https:\/\/|http:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/;
                var normalUrlCheck = data.website && data.website.match(websiteExp);
                if (normalUrlCheck && data.website.indexOf('//') > -1) {
                    return data.website;
                } else if (normalUrlCheck && data.website.indexOf('//') === -1) {
                    return data.website ? '//' + data.website : '';
                } else {
                    return '';
                }
            },
            showNoResultsMessage: function() {
                return self.dealerList().length === 0 && !self.isLoading() && self.errorMessage() === 'noDealers';
            },
            showNoGeoLocationMessage: function() {
                return !self.isLoading() && self.errorMessage() === 'noGeo';
            },
            showGeo: function() {
                return self.userLatLong() && self.userLatLong().lat && self.userLatLong().lng;
            }
        }
    };

    var WhereToBuyViewModel = function(componentElement) {
        var self = this;

        self.dealerList = ko.observableArray(); // Populated by ajax call.

        self.mapHelper = new PENTAIR.Water.MapHelper(componentElement.find('.map-container'));
        self.googleMapsData = ko.observableArray();
        self.filterModel = new GenericFilterViewModel();

        var filterRules = {
            'Distance': function(dealerItem, currentFilter) {
                return currentFilter.value() >= dealerItem.distance;
            },
            'Dealer Name': function(dealerItem, currentFilter) {
                return currentFilter.value() === dealerItem.name;
            },
            'Store Type': function(dealerItem, currentFilter) {
                // if brand name is selected, check against only that brand, else look for any.
                // var activeBrandFilters = currentFilter.parent.parent.activeFilters().filter(function(activeFilter){
                //     return activeFilter.parent.name() === "Brand Name";
                // });

                // var activeBrandNames = activeBrandFilters.map(function(activeBrandFilter){return activeBrandFilter.value()});

                var valueBasedRules = {
                    "Service Only": function(record) { return !record["Retail__c"] && record["Service__c"] },
                    "Retail Only": function(record) { return record["Retail__c"] && !record["Service__c"] },
                    "Retail & Service": function(record) { return record["Retail__c"] && record["Service__c"] },
                };

                // var recordsMatchingBrandName = dealerItem.details.records.filter(function(elem){return activeBrandNames.indexOf(elem["Brand_Name__c"]) > -1}) // If ANY of the brand names you have selected?
                return dealerItem.details.records.reduce(function(acc, record) {
                    return acc || valueBasedRules[currentFilter.value()](record)
                }, false)
            },
            'Brand Name': function(dealerItem, currentFilter) {
                return dealerItem.brands.indexOf(currentFilter.value()) > -1;
            },
            'Product Category': function(dealerItem, currentFilter) {
                return dealerItem.categories.indexOf(currentFilter.value()) > -1;
            },
            'Partner Level': function(dealerItem, currentFilter) {
                return currentFilter.value() === dealerItem.status;
            }
        };

        self.searchInput = ko.observable().extend({ throttle: 200 });

        self.userPostalCode = ko.observable();
        self.userLatLong = ko.observable();
        self.userAddress = ko.observable();
        self.userCity = ko.observable('');
        self.userState = ko.observable('');
        self.userPostalCode = ko.observable('No Zip');

        self.zipQueryParam = ko.observable(getParams().zip ? decodeURIComponent(getParams().zip).replace(/\+/g, ' ') : '');
        self.zipcodeLat = ko.observable('');
        self.zipcodeLong = ko.observable('');
        self.zipcodeAddress = ko.observable('');

        self.filterModal = ko.observable('closed'); // closed or open
        self.errorMessage = ko.observable('noDealers'); // 'noDealers' or 'noGeo'

        // Brands and categories are populated with TAGS from aem.
        var brands = componentElement.data('brands') ? componentElement.data('brands').split(',') : '';
        self.brands = ko.observableArray(brands);

        var categories = componentElement.data('categories') ? componentElement.data('categories').split(',') : '';
        self.categories = ko.observableArray(categories);

        self.userLatLong.subscribe(function(newValue) {
            var geocoder = new google.maps.Geocoder();
            if (newValue) {
                geocoder.geocode({ 'latLng': newValue }, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        self.userAddress(results[0].formatted_address);

                        var addressData = getCityStateZip(results);
                        self.userCity(addressData.city);
                        self.userState(addressData.state);
                        self.userPostalCode(addressData.zip);
                    }
                });
            }
        });

        var getCityStateZip = function(results){
            var outputData = {city: '', state: '', zip: ''};

            if(results[0] && results[0]['address_components']){
                var cityNameArray = results[0]['address_components'].filter(function(elem){return elem.types.indexOf('locality') !== -1});
                var stateNameArray = results[0]['address_components'].filter(function(elem){return elem.types.indexOf('administrative_area_level_1') !== -1});
                var postalCodeArray = results[0]['address_components'].filter(function(elem){return elem.types.indexOf('postal_code') !== -1});
                outputData['city'] = (cityNameArray && cityNameArray.length > 0) ? cityNameArray[0]['long_name'] : "";
                outputData['state']  = (stateNameArray && stateNameArray.length > 0) ? stateNameArray[0]['short_name'] : "";
                outputData['zip'] = (postalCodeArray && postalCodeArray.length > 0) ? postalCodeArray[0]['long_name'] : "";

            }

            return outputData;
        };

        self.isLoading = ko.observable(true);
        self.activeIndex = ko.observable(null);

        //Check if active filter is still visible when filter updates.
        function updateActiveFilter(filteredData) {
            var visibleIndexes = filteredData.map(function(elem) { return elem.index });
            if (!self.activeIndex() || (self.activeIndex() && visibleIndexes.indexOf(self.activeIndex()) == -1)) {
                self.activeIndex(null);
                self.mapHelper.closeMarker();
            }
        }

        // Hide or show pins when filter changes.
        self.filterModel.filteredDataList.subscribe(function(newValue) {
            var visiblePinIndexes = newValue.map(function(elem) { return elem.index });
            self.mapHelper.showPins(visiblePinIndexes);
            updateActiveFilter(newValue);
        });

        self.locationClick = function() {
            if (self.userLatLong() && self.userLatLong().latitude && self.userLatLong().longitude) {
                var pos = { lat: self.userLatLong().latitude, lng: self.userLatLong().longitude };
                self.runLatLongSearch(pos);
            }
        };

        self.isActive = function(data) {
            return (self.activeIndex() !== null) && (self.activeIndex() === data.index);
        };

        // workaround for preventing bubbling (and preventDefault) when an anchor tag is
        // inside a div with a click event.
        self.innerClick = function(selection, event) {
            /* Analytics Model Update*/
            if ((selection && selection.name) && (event && event.target && event.target.dataset && event.target.dataset.eventName)) {
                updateDataLayerObj(selection.name, 'Result Link', event.target.dataset.eventName, undefined, undefined, undefined, false);
            }
            // Adobe analytics
            trackWTBClickEvent('WTB list get directions click', selection.id, selection.index, 'get directions');
            return true;
        };

        self.dealerClick = function(data) {
            self.mapHelper.closeMarker();
            self.activeIndex(data.index);
            if (!data.hideAddress) {
                self.mapHelper.openMarker(data.index);
            }
            // Adobe analytics
            trackWTBClickEvent('WTB search result list click', data.id, data.index, 'list result');
        };

        self.activePanel = ko.observable('list');

        self.mapPanelActive = function() { return self.activePanel() === 'map' };

        self.listPanelActive = function() { return self.activePanel() === 'list' };

        self.setListPanel = function() {
            self.activePanel('list');
            self.reInitJscroll(true);
        };

        self.setMapPanel = function() {
            self.activePanel('map');
            self.mapHelper.updateZoom();
        };

        self.openFilterModal = function() {
            self.filterModal('open');
            $('body').addClass('filter-open modal-open');
        };

        self.closeFilterModal = function() {
            self.filterModal('closed');
            $('body').removeClass('filter-open modal-open');
        };

        self.isFilterModalOpen = function() {
            return self.filterModal() === 'open';
        };

        // Used for hiding/showing sections. No hash means show all sections.
        var hashes = window.location.hash.replace("#", "");
        var hashArray = hashes ? hashes.split(",") : [];
        self.urlHashes = ko.observableArray(hashArray);

        // Jscroll handling.
        self.filterModel.setFilterRules(filterRules);

        self.reInitJscroll = ko.observable(false).extend({ rateLimit: 100, notify: 'always' });

        self.filterModel.activeFilters.subscribe(function(newValue) {
            self.reInitJscroll(true);
        });

        self.displayHelpers = displayHelpers(self);

        self.reInitJscroll.subscribe(function(newValue) {
            if (newValue) {
                self.reInitJscroll(false);
                reInitJscroll();
            }
        });

        function reInitJscroll() {
            if (componentElement.find('.scroll-list').jScrollPane) {
                componentElement.find('.scroll-list').jScrollPane({
                    contentWidth: '0px',
                    autoReinitialize: true
                });

            }
        }

        $(window).on('resize', function(e) {
            self.reInitJscroll(true);
        });

        function getVisiblePins() {
            var indexArray = [];

            return indexArray;
        }

        self.afterRender = function() {
            self.reInitJscroll(true);
        };

        // Populate Filters:
        self.dealerList.subscribe(function(newValue) {
            var distanceValues = [{ value: 10, title: 10 }, { value: 20, title: 20 }, { value: 30, title: 30 }, { value: 50, title: 50 }, { value: 100, title: 100 }, { value: 150, title: 150 }, { value: 200, title: 200 }];
            var storeTypeValues = [{ value: "Service Only", title: "Service Only" }, { value: "Retail Only", title: "Retail Only" }, { value: "Retail & Service", title: "Retail & Service" }];
            var recordFilters = getRecordFilters();
            var filterCategories = [
                { name: "Distance", type: "static", values: distanceValues, inputType: "radio" },
                { name: "Dealer Name", type: "dynamic", fromField: "name", inputType: "checkbox" },
                //{name: "Store Type", type: "static", values: storeTypeValues, inputType: "radio"},
                { name: "Brand Name", type: "static", values: recordFilters.brandNameFilters, inputType: "checkbox" },
                // {name: "Product Category", type: "static", values: recordFilters.categoryFilters, inputType: "checkbox"}, waiting on new API/backend field 'product line'
                { name: "Partner Level", type: "dynamic", fromField: "status", inputType: "checkbox" }
            ];

            if (self.brands().length == 1) {
                filterCategories = filterCategories.filter(function(elem) { return elem.name !== "Brand Name" });
            }

            self.filterModel.filters([]);
            self.filterModel.populateCategories(filterCategories, newValue);
            initFilterSelection(newValue);
        });

        function initFilterSelection(dealerList) {
            var distanceCategory = self.filterModel.filters().filter(function(categoryFilter) { return categoryFilter.name() === "Distance" });
            var distanceFiltersWithResults;
            if (distanceCategory.length && distanceCategory[0].values()) {
                distanceFiltersWithResults = distanceCategory[0].values().filter(function(filterModel) { return (filterModel.count() > 0) && (filterModel.value() >= 50) });
                if (distanceFiltersWithResults.length > 0) {
                    distanceFiltersWithResults[0].toggleSelection();
                    setInitialRadius();
                }
            }
        }

        // If a user hits the 'x' when the location requests pops up in IE, the error section is not hit,
        // and the service fails silently.
        function geoLocationIETimeout() {
            var isIE = /*@cc_on!@*/ false || !!document.documentMode; // Internet Explorer 6-11
            self.geoLocationStatus = ko.observable('waiting');
            if (isIE) {
                setTimeout(function() {
                    if (self.geoLocationStatus() === 'waiting') {
                        self.errorMessage('noGeo');
                        self.firstSearch.dispose();
                        self.isLoading(false);
                    }
                }, 8000);
            }
        };

        function initUserLatLong() {
            if (navigator.geolocation) {
                geoLocationIETimeout();
                navigator.geolocation.getCurrentPosition(function(position) {
                    var pos = { lat: position.coords.latitude, lng: position.coords.longitude };
                    self.userLatLong(pos);
                    self.geoLocationStatus('complete');
                }, function(e) { // error
                    self.errorMessage('noGeo');
                    self.firstSearch.dispose();
                    self.geoLocationStatus('complete');
                    self.isLoading(false);
                });
            }
        }

        function getParams() {
            return _.chain(location.search.slice(1).split('&'))
                .map(function (item) { if (item) { return item.split('='); } })
                .compact()
                .object()
                .value();
        }

        self.runLatLongSearch = function(latLongData) {
            if (latLongData && latLongData.lat && latLongData.lng) {
                var pos = { latitude: latLongData.lat, longitude: latLongData.lng };

                // Reset user location
                if (latLongData) {
                    var geocoder = new google.maps.Geocoder();
                    if (!self.zipQueryParam()) {
                        geocoder.geocode({ 'latLng': latLongData }, function(results, status) {
                            if (status == google.maps.GeocoderStatus.OK) {
                                self.userAddress(results[0].formatted_address);

                                var addressData = getCityStateZip(results);
                                self.userCity(addressData.city);
                                self.userState(addressData.state);
                                self.userPostalCode(addressData.zip);

                                self.searchInput(self.userAddress());
                            }
                        });
                        loadMapData(pos);
                    } else {
                          var address = self.zipQueryParam();
                          geocoder.geocode({ 'address': 'zipcode '+address }, function (results, status) {
                              if (status == google.maps.GeocoderStatus.OK) {
                                  var latitude = results[0].geometry.location.lat();
                                  var longitude = results[0].geometry.location.lng();
                                  var address = results[0].formatted_address;
                                  self.zipcodeLat(latitude);
                                  self.zipcodeLong(longitude);
                                  self.zipcodeAddress(address);
                                  self.searchInput(address);
                                  var zipPos = { latitude: latitude, longitude: longitude };
                                  loadMapData(zipPos);
                              }
                          });
                    }
                }

                self.activeIndex(null);
                self.reInitMap();
            }
        };

        self.runAddressSearch = function(address) {
            var geocoder = new google.maps.Geocoder();
            if (address) {
                geocoder.geocode({ 'address': address }, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var pos = { lat: results[0].geometry.location.lat(), lng: results[0].geometry.location.lng() };
                        self.runLatLongSearch(pos);
                    }
                });
            }
        };

        self.locationSearchClick = function() {
            if (self.userLatLong() && self.userLatLong().lat && self.userLatLong().lng) {
                self.runLatLongSearch(self.userLatLong());
                self.searchInput(self.userAddress());
            } else {
                self.init(); // asks for location data again.
            }
        };

        self.searchUserInputClick = function() {
            self.runAddressSearch(self.searchInput());
        }

        self.searchInputKeypress = function(scope, event) {
            initAutocomplete();
            return true;
        };

        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        self.geolocate = function geolocate() {
            if (navigator.geolocation && autocomplete) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({ center: geolocation, radius: position.coords.accuracy });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        };

        self.showContactDealer = function(data) {
            return data.phone || data.website || data.email;
        };

        self.showContactCallback = function(event, selection) {
            /* Analytics Model Update*/
            if ((selection && selection.name) && (event && event.target && event.target.dataset && event.target.dataset.eventName)) {
                updateDataLayerObj(selection.name, 'Result Link', event.target.dataset.eventName, undefined, undefined, undefined, false);
            }
            if ($(event.target).is($('a.contact-dealer'))) {
                event.preventDefault();
                if ($(event.target).parents('.marker').length) { // in map infowindow
                    $(event.target).parents('.show-contact').siblings('.contact').show();
                    $(event.target).parents('.show-contact').hide();
                    // Adobe analytics
                    var markerElem = event.target.closest('.marker');
                    trackWTBClickEvent('WTB map contact dealer click', markerElem.dataset.dealerId, markerElem.dataset.dealerIndex, 'map contact dealer');
                } else { // in dealer list
                    $(event.target).siblings('.contact').show();
                    $(event.target).hide();
                    reInitJscroll();
                    // Adobe analytics
                    trackWTBClickEvent('WTB list contact dealer click', selection.id, selection.index, 'contact dealer');
                }
            }
        };

        self.reInitMap = function() {
            var initMap = self.dealerList.subscribe(function() {
                updateDataLayerList(); // analytics wants a list of results
                self.googleMapsData(getGoogleMapsModel());
                self.mapHelper.setMarkerHtmlCallback(markerHtmlCallback);
                self.mapHelper.initMap(self.googleMapsData());
                self.mapHelper.addInfoWindowEvent('click', self.showContactCallback);
                initMap.dispose();
            });
        };

        var total;

        function updateDataLayerList() {
            var userAddress = self.searchInput();
            if (self.dealerList().length !== total) { // don't bother if results haven't changed
                total = self.dealerList().length;
                var dealerListNames = [];
                self.dealerList().forEach(function(elem) {
                    dealerListNames.push(elem.name);
                });
                dealerListNames = dealerListNames.join('|');
                updateDataLayerObj(undefined, 'Results Found', 'Dealers Impression', dealerListNames, undefined, undefined, userAddress, false);
            } else {
                var dealerListNames = [];
                self.dealerList().forEach(function(elem) {
                    dealerListNames.push(elem.name);
                });
                dealerListNames = dealerListNames.join('|');
                updateDataLayerObj(undefined, 'Results Found', 'Dealers Impression', dealerListNames, undefined, undefined, userAddress, false);
            }
        }

        function clearDigitalDataProperty(prop, propVal) {
            // clears out optional/circumstantial analytics properties
            if (propVal) {
                digitalData.findDealer[prop] = propVal;
            } else {
                if (digitalData.findDealer[prop]) {
                    delete digitalData.findDealer[prop];
                }
            }
        }

        self.updateAnalytics = function updateAnalytics(scopedItem) {
            if (scopedItem && scopedItem.selected()) {
                var filterType = scopedItem.parent && scopedItem.parent.name() ? scopedItem.parent.name() : undefined;
                var filterValue = scopedItem.value();
                updateDataLayerObj(undefined, "Refine Search", "Apply Filter", undefined, filterType, filterValue, undefined, true);
            }
            return true;
        };

        // strictly for updating Data Layer Object with user location data
        function getUserLocationData(res) {
            var city, state, zip, formattedAddress;

            city = self.userCity();
            state = self.userState();
            zip = /\d{5}/.test(res) ? self.userPostalCode() : "No Zip";
            formattedAddress = city + "|" + state + "|" + zip;

            return formattedAddress;
        }

        function updateDataLayerObj(name, eventAction, eventName, dealerList, filterType, filterValue, address, fireInputTracking) {
            try {
                if (digitalData) {
                    if (digitalData.findDealer) {
                        var TYPE = 'Find A Dealer';
                        clearDigitalDataProperty('name', name);
                        clearDigitalDataProperty('dealersFound', dealerList);
                        clearDigitalDataProperty('filterType', filterType);
                        clearDigitalDataProperty('filterValue', filterValue);
                        digitalData.findDealer.eventName = eventName;
                        digitalData.findDealer.type = TYPE;
                        digitalData.findDealer.eventAction = eventAction;
                        digitalData.findDealer.timeStamp = new Date();
                        digitalData.findDealer.dealerFormInput = getUserLocationData(address);
                        if (!_.isUndefined(window._satellite) && fireInputTracking) {
                            window._satellite.track("wtb_input");
                        }

                    }
                }
            } catch (err) {
                console.log(err);
            }
        }

        /**
         * Constructs the payload for the click event analytics tracking and sends the payload to be tracked.
         * @param eventName analytics event name
         * @param wtbDealerIDClicked ID of the dealer clicked
         * @param wtbSearchResultIndex index of the clicked dealer in the list
         * @param wtbClickType click type: list result, contact dealer, get directions, map pin, map contact dealer
         */
        function trackWTBClickEvent(eventName, wtbDealerIDClicked, wtbSearchResultIndex, wtbClickType) {
            var eventWTBClickPayload = {
                eventName: eventName,
                eventType: 'event',
                attributes: {
                    visitor: {
                        pentairCustomerID: getPentairCustomerID(), //if this is available
                        dealerID: getDealerID() //if this is available
                    },
                    wtbSearch: {
                        wtbBrands: self.brands().join(),
                        wtbCategories: self.categories().join(),
                        wtbSearchZip: self.userPostalCode(),
                        wtbDealerIDClicked: wtbDealerIDClicked,
                        wtbSearchResultIndex: wtbSearchResultIndex + 1, // index start at 1
                        wtbClickType: wtbClickType
                    }
                }
            }
            trackEventWithQueue(eventWTBClickPayload);
        }

        function markerHtmlCallback(item) {
            var infoHtml;
            if (item && !isNaN(item.index)) {
                infoHtml = $('<div>').addClass('marker')
                                    .attr('data-dealer-index', item.index)
                                    .attr('data-dealer-id', item.id);
            }
            if (item && item.name) {
                infoHtml.append($('<p>').addClass('location-name').html(item.name));
            }
            if (item && item.distance) {
                infoHtml.append($('<p>').addClass('distance').html(item.distance + ' miles away'));
            }
            if (item && item.address) {
                infoHtml.append($('<p>')
                    .html(item.address.split(',')[0] + '<br>' + item.address.split(',').slice(1).join(', ')));
            }

            if(item && (item.phone || item.website || item.email)){
              var contact = $('<span>').addClass('contact').hide();

              if(item && item.phone){
                contact.append(
                    $('<p>')
                        .addClass('phone-one')
                        .append('<span class="icon-phone" aria-hidden="true"></span>')
                        .append($('<a>').attr('href', 'tel:' + item.phone).html(item.phone))
                );
              }
              if(item && item.email){
                contact.append(
                    $('<p>')
                        .addClass('email')
                        .append('<span class="icon-pentair-email" aria-hidden="true"></span>')
                        .append(
                            $('<a>')
                                .attr('href', 'mailto:' + item.email)
                                .attr('target', '_blank')
                                .attr('rel', 'noopener noreferrer')
                                .html(item.email)
                        )
                );
              }
              if(item && item.website){
                contact.append(
                    $('<p>')
                        .addClass('website')
                        .append('<span class="icon-external-link-square" aria-hidden="true"></span>')
                        .append($('<a>').attr({'href': item.website, 'target': '_blank'}).html(' Website'))
                );
              }

              infoHtml.append(contact);
              infoHtml.append($('<p>').addClass('show-contact').append('<span class="icon-address-book" aria-hidden="true"></span>').append($('<a>').addClass('contact-dealer').attr('href', '#').html(' Contact Dealer')));
            }

            // If the callback came from clicking on a map pin, fire adobe analytics event for tracking map pin click
            if (item && event.target.closest('.map-container')) {
                trackWTBClickEvent('WTB map pin click', item.id, item.index, 'map pin');
            }

            return infoHtml[0].outerHTML;
        }

        self.init = function() {
            initUserLatLong();
            self.firstSearch = self.userLatLong.subscribe(function(newValue) {
                if (newValue) {
                    self.runLatLongSearch(newValue);
                }
                self.firstSearch.dispose();
            });
        };

        function setInitialRadius() {
            var component = componentElement;
            var distance = component.find(".filter .Distance");
            var distanceFilters = distance.next("ul").find("li");
            for (var i = 0; i < distanceFilters.length; i++) {
                var currentFilter = $(distanceFilters[i]);
                var count = currentFilter.find(".item-count");
                var num = count.text().replace(/[()]/g, '');
                if (num > 0) {
                    currentFilter.find("input").click();
                    break;
                }
            }
        }

        var initialSearchOnPageView = true;

        function loadMapData(locationData) {
            var extendLocationData = { distance: 200, brands: self.brands().join(','), categories: self.categories().join(',') };
            locationData = locationData;
            $.extend(locationData, extendLocationData);
            self.isLoading(true);
            self.errorMessage('noDealers');

            $.ajax({
                type: 'GET',
                data: locationData,
                url: '/bin/pentair/sfdc/dealers',
                beforeSend: function() {},
                success: function(data) {
                    if (data) {
                        jsonData = JSON.parse(data);
                        var sortedDealerResults = flattenBrandAndCategory(processData(jsonData.results));
                        self.dealerList(sortedDealerResults);
                        if (self.dealerList().length === 0 && (locationData.latitude && locationData.longitude)) {
                            var pos = { "lat": locationData.latitude, "lng": locationData.longitude };
                            self.mapHelper.setCenter(pos);
                        }
                    } else {
                        console.error('No dealers found. -> ', data.length);
                    }
                    self.isLoading(false);
                    if (initialSearchOnPageView) {
                        initialSearchOnPageView = false;
                        var pageViewDealerListLoaded = new CustomEvent("pageViewDealerListLoaded", {
                            detail: {
                                wtbSearch: {
                                    wtbBrands: self.brands().join(),
                                    wtbCategories: self.categories().join(),
                                    wtbDealerID: getFilteredDealerIDs(),
                                    wtbNumberResults: self.filterModel.filteredDataList().length,
                                    wtbSearchZip: self.userPostalCode()
                                }
                            }
                        });
                        // Dispatch the event to be handled in clientlib-site/js/analytics/pageView.js
                        var whereToBuyComponent = document.querySelector('.where-to-buy-new.component');
                        whereToBuyComponent.dispatchEvent(pageViewDealerListLoaded);
                    }
                },
                error: function(data) {
                    console.error('Error retrieving Dealer List ->', data);
                    self.isLoading(false);
                }
            });
        }

        // PENW-3184 - resetting focus state of Search button when clicked?
        $(".where-to-buy-new.component .wtb-search").on("click", function(e) {
            e.preventDefault();
            $(this).blur();
        });

        /**
         * Gets the filtered Dealer IDs that were returned in the search.
         * @returns comma separated string list of dealer IDs
         */
        function getFilteredDealerIDs() {
            var dealerIDs = [];
            self.filterModel.filteredDataList().forEach(function(dealer) {
                dealerIDs.push(dealer["id"]);
            });
            return dealerIDs.join();
        }

        function flattenBrandAndCategory(data) {

            data.forEach(function(dealerElem) {
                var brandNames = [];
                var categories = [];

                dealerElem.details.records.forEach(function(recordElem) {
                    brandNames = brandNames.concat(recordElem["Brand_Name__c"]);
                    categories = categories.concat(recordElem["Category_Name__c"]);
                });

                if (self.brands().length === 1) {
                    dealerElem['brands'] = self.brands();
                } else {
                    dealerElem['brands'] = ko.utils.arrayGetDistinctValues(brandNames).sort();
                }

                dealerElem['categories'] = ko.utils.arrayGetDistinctValues(categories).sort();
            });

            return data;
        }

        function getRecordFilters() {
            var allBrandNames = [];
            var allCategories = [];

            self.dealerList().forEach(function(dealerElem) {
                allBrandNames = allBrandNames.concat(dealerElem["brands"]);
                allCategories = allCategories.concat(dealerElem["categories"]);
            });

            var brandNameFilters = ko.utils.arrayGetDistinctValues(allBrandNames).sort().map(function(elem) { return { value: elem, title: elem } });
            var categoryFilters = ko.utils.arrayGetDistinctValues(allCategories).sort().map(function(elem) { return { value: elem, title: elem } });
            return { brandNameFilters: brandNameFilters, categoryFilters: categoryFilters };
        }

        function getGoogleMapsModel() {
            var mapData = self.dealerList()
                .map(function(elem, index) {
                    var mapElem = {};
                    mapElem.id = elem.id;
                    mapElem.name = elem.name;
                    mapElem.phone = elem.phone;
                    mapElem.email = elem.email;
                    mapElem.address = self.displayHelpers.address(elem);
                    mapElem.website = self.displayHelpers.website(elem);
                    mapElem.index = index;
                    mapElem.latitude = elem.latitude;
                    mapElem.longitude = elem.longitude;
                    mapElem.distance = self.displayHelpers.distance(elem);
                    mapElem.hideAddress = elem.hideAddress;
                    return mapElem
                });
            return mapData;
        }

        // Add indexes, and remove invalid results.
        function processData(data) {
            var sortedAndFiltered = data.filter(function(elem) {
                var validContact = (elem.hideAddress == false) || (elem.hideAddress && self.showContactDealer(elem));
                return elem.details && elem.details.records && validContact;
            });

            $(sortedAndFiltered).each(function(index, elem) {
                elem.index = index;
            });

            return sortedAndFiltered;
        }

        /*  Start of autocomplete changes
            Autocomplete requires the Places library, e.g.,
            src="//maps.googleapis.com/maps/api/js?key=${config.googleMapsKey}&libraries=places   */
        var autocomplete;

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search predictions to
            // geographical location types.
            if (!autocomplete) {
                autocomplete = new google.maps.places.Autocomplete(componentElement.find('.autocomplete')[0], { types: ['geocode'] });
                // Avoid paying for data that you don't need by restricting the set of
                // place fields that are returned to just the address components.
                autocomplete.setFields(['address_component', 'formatted_address']);
                autocomplete.addListener('place_changed', function() {
                    //
                    result = autocomplete.getPlace();
                    if (typeof result.address_components == 'undefined') {
                        // The user pressed enter in the input
                        // without selecting a result from the list
                        // Let's get the list from the Google API so that
                        // we can retrieve the details about the first result
                        // and use it (just as if the user had actually selected it)
                        autocompleteService = new google.maps.places.AutocompleteService();
                        autocompleteService.getPlacePredictions({
                                'input': result.name,
                                'types': ['geocode']
                            },
                            function listentoresult(list, status) {
                                if (list == null || list.length == 0) {
                                    // There are no suggestions available.
                                    // The user saw an empty list and hit enter.
                                    //console.log("No results");
                                } else {
                                    // Here's the first result that the user saw
                                    // in the list. We can use it and it'll be just
                                    // as if the user actually selected it
                                    // themselves. But first we need to get its details
                                    // to receive the result on the same format as we
                                    // do in the AutoComplete.
                                    placesService = new google.maps.places.PlacesService(componentElement.find('.autocomplete')[0]);
                                    placesService.getDetails({ 'reference': list[0].reference },
                                        function detailsresult(detailsResult, placesServiceStatus) {
                                            // Here's the first result in the AutoComplete with the exact
                                            // same data format as you get from the AutoComplete.
                                            self.searchInput(detailsResult.formatted_address);
                                            self.runAddressSearch(detailsResult.formatted_address);
                                        }
                                    );
                                }
                            }
                        );
                    } else {
                        // The user selected a result from the list, we can
                        // proceed and use it right away
                        var place = autocomplete.getPlace();
                        var address = place.formatted_address;
                        self.searchInput(address);
                        self.runAddressSearch(address);
                    }
                });
            }
        }
        /*END of autocomplete */

        // lazy load if modal:

        var parentModal = componentElement.parents('#storelocatormodal');
        var isInModal = !!parentModal.length;
        if (isInModal) {
            self = this;
            componentElement[0].init = self.init;
            componentElement[0].isLoading = self.isLoading;
        } else {
            self.init();
        }
    };

    var regex = /(%22)+/g;
    var showParam;
    try {
        var queryString = location.search.substring(1);
        queryString = queryString.replace(regex, '_');
        var urlParams = queryString ? JSON.parse('{"' + decodeURIComponent(queryString).replace(/=&/g, "\":\"\",\"").replace(/&/g, "\",\"").replace(/=/g, "\":\"") + '"}') : {};
        showParam = urlParams["show"] || "";
    } catch (message) {
        var params = new URLSearchParams(window.location.search);
        showParam = params.get("show") || "";
    }
    $(document).ready(function () {
        $('.where-to-buy-new.component').each(function () {
            if (showParam) {
                $(document).find('section.toolbar').hide();
            }
            if (!showParam || showParam === "local") {
                try {
                    ko.applyBindings(new WhereToBuyViewModel($(this)), this);
                } catch (e) {
                    console.log(e);
                }
            } else {
                $('.where-to-buy-new.component').hide();
            }
        });
    });
})();

window.Pentair = window.Pentair || {};
window.Pentair.updateFAD = function updateFAD() {
    var storelocator = $('#storelocatorwidget');
    storelocator.find('.storelocator-btn').each(function() {
        $(this).find('span.fa').remove();
        $(this)
            .removeClass('storelocator-btn-danger')
            .removeClass('storelocator-btn-primary')
            .removeClass('storelocator-btn')
            .addClass('btn')
            .addClass('btn-primary')
            .wrapInner('<span></span>');
    });
    storelocator.find('iframe').attr('title', 'Find A Dealer Map');
};

$(function() {
    var where2Buy = $('.where-to-buy.component');
    if(where2Buy.length) {
        where2Buy.closest('section').find('div.bg-image').css('background-position', 'center bottom');

        ////////////////////////////////////////////////////////
        //// building data analytics layer object start ///////
        //////////////////////////////////////////////////////

        where2Buy.on('click', 'button.btn.btn-secondary', function(e) {

            try {
                if(digitalData) {
                    var dataFilters = $('#storelocatorscript').attr('data-filters');
                    var brand = "";
                    if(dataFilters && dataFilters !== "") {
                        var brands = dataFilters.split(',');
                        if(brands.length > 0) {
                            brand = brands[0];
                        }
                    }
                    console.log("brand", brand);
                    if(digitalData.product) {
                        digitalData.product.productBrand = brand;
                    }
                    if(digitalData.event) {
                        var eventData = {};
                        eventData.eventName = "where to buy";
                        eventData.eventAction = "where to buy click";
                        eventData.type = "where to buy";
                        eventData.timeStamp = new Date();
                        digitalData.event.push(eventData);
                    }

                }

            } catch(err) {
                console.log(err);
            }
        });
        ////////////////////////////////////////////////////////
        ///// building data analytics layer object end  ///////
        //////////////////////////////////////////////////////
    }

});

$(window).load(function() {
    $('#storelocatormodal').on('show.bs.modal', function(e) {
        if(window.Pentair && !!window.Pentair.updateFAD) {
            window.Pentair.updateFAD();
        }
    });
});


$(document).ready(function(){
    var $table = $(".table.component");
    var $tableModal = $(".table.component .table-modal");
    var modal = document.querySelector('.table-modal');

    if ($(".table.component tbody").hasClass("has-image")){
        $table.find("img.cq-image-placeholder").remove();
        if ($table.find("td").has("img")){
            $table.find("img").closest("td").addClass("add-icon");
            $table.find("img").wrap("<a href='#' data-toggle='table-modal' class='table-anchor'></a>");
        }
    }
    
    function killTheModal() {
        $("body").removeClass("table-modal-open");
        $tableModal.css("display", "");
        $tableModal.removeClass("active");
        $table.find(".table-modal img").attr("src", "");
        $table.find(".table-modal img").attr("alt", "");
        $table.find(".table-modal .product-info a").attr("href", "#");
        $table.find(".table-modal .product-info a").text("");
    }

    $(".table.component tbody.has-image tr td img").on("click", function(e){
        e.preventDefault();
        $("body").addClass("table-modal-open");
        $(this).closest(".table.component").find(".table-modal").css("display", "block");
        $(this).closest(".table.component").find(".table-modal").addClass("active");
        $table.find(".table-modal img").attr("src", $(this).attr("src"));
        $table.find(".table-modal img").attr("alt", $(this).closest("td").next().find("a").text());
        $table.find(".table-modal .product-info a").attr("href", $(this).closest("td").next().find("a").attr("href"));
        $table.find(".table-modal .product-info a").text($(this).closest("td").next().find("a").text());

    });
    
    if(modal) {
        modal.addEventListener('click', function(e) {
            if(e.target.classList.contains('table-modal')) {
                killTheModal();
            }
        });
    }

    $(".table.component .table-modal button.close-modal").on("click", function(e){
        killTheModal()
    });

    //cell text count for table formatting
    $('.table.component table td').each(function(){
        var textCount = $(this).text().trim().length;
        var thisIndex = $(this).index();
        var thisTable = $(this).closest('table');
        if (textCount <= 24) {
            thisTable.find('thead th:eq(' + thisIndex + ')').addClass('small-width');
        } else if (textCount > 25 && textCount < 75){
            thisTable.find('thead th:eq(' + thisIndex + ')').addClass('medium-width');
        } else if (textCount >= 75){
            thisTable.find('thead th:eq(' + thisIndex + ')').addClass('large-width');
        }
    });
});

function mobileSlide(e) {
    var ths = $(e.currentTarget),
        rent = ths.parent().parent();

    if(!(rent.hasClass('inactive') === true)) {
        rent.addClass('inactive');
        rent.find('td').each(function(i, el) {
            if(i > 0) {
                $(el).slideUp(250);
            }
        });
    } else {
        rent.removeClass('inactive');
        rent.find('td').each(function(i, el) {
            if(i > 0) {
                $(el).slideDown(250);
            }
        });
    }
};

function mobileCleanUp(w, tbl) {
    if(w >= 768) {
        tbl.each(function(i, el) {
            $(el).removeAttr('class');
            $(el).find('td').removeAttr('class style');
        });
    } else {
        tbl.each(function(i, el) {
            $(el).addClass('inactive');
            $(el).find('td').not(":nth-child(1)").hide();
        });

    }
}

var document_width;
$(function() {
	document_width=$(document).width();
    $(document).click(function(event) {
        var $target = $(event.target);

        if ($target.closest(".less-skus").length > 0) {
            $(".full-sku-view").addClass("hidden");
            $(".partial-sku-view").removeClass("hidden");
        } else if ($target.closest(".more-skus").length > 0) {
            $(".full-sku-view").removeClass("hidden");
            $(".partial-sku-view").addClass("hidden");
        } else if($target.hasClass("sku-link")){
            event.preventDefault();
            localStorage.setItem("productFindingMethod","Navigation");
            document.cookie="productFindingMethod=Navigation; domain=.pentair.com; path=/";
            location.href = $target.attr("href");
        }
    });

    $(".more-skus-link,.less-skus-link").attr("href","javascript:void(0);");
    $(".data-tables .full-sku-view").addClass("hidden");

    //cell text count
    $('.specs-tables table td').each(function(){
        var textCount = $(this).text().length;
        var thisIndex = $(this).index();
        var thisTable = $(this).closest('table');
        if (textCount > 25 && textCount < 75){
            thisTable.find('thead th:eq(' + thisIndex + ')').addClass('medium-width');
            $.fn.matchHeight._update()
        } else if (textCount >= 75){
            thisTable.find('thead th:eq(' + thisIndex + ')').addClass('large-width');
            $.fn.matchHeight._update()
        }
    });

    // Makes table responsive
    $('.specs-table table tbody tr').each(function(i,el){
        var table = $(el).closest('table');
        var thead = table.find('thead th');

        for (j = 0; j < $(el).find('td').length; j++) {
            $(this).find('td:eq('+j+')').wrapInner('<div class="content"></div>').prepend('<div class="header">'+thead.eq(j).text()+'</div>');
            if(j === 0) {
                $(this).find('td:eq('+j+')').append('<button class="toggle"></div>');
                $(this).find('td:eq('+j+') button.toggle').on('click', function(e) {
                    mobileSlide(e);
                });
            }
        }
    });
    //print the tables nicely
    $('.specs-table.component .print-only table tr').each(function(i,e){
        var table = $(this).closest('table');
        var thead = table.find('thead th');

        for (j = 0; j < $(this).find('td').length; j++){
            $(this).find('td:eq('+j+')').attr('data-title',thead.eq(j).text());
        }
    });
    $(window).on('resize', function(e) {
        if(document_width!=$(document).width()) {
            document_width=$(document).width();
            mobileCleanUp($(window).outerWidth(), $('.specs-table table tbody tr'));
        }
    });

    mobileCleanUp($(window).outerWidth(), $('.specs-table table tbody tr'));
    setTimeout(hideFull, 1000);
    function hideFull(){
        $(".data-tables .full-sku-view").addClass("hidden");
    }

    // E-Commerce Specs Table has missing data - counter by adding empty table cells for styling purposes
    var specsTableComponent = $(".specs-table.component");
    var table = specsTableComponent.find("table");
    for (var m = 0; m < table.length; m++) {
        var currTable = $(table[m]);
        var tableHeaders = currTable.find("th");
        var numHeaders = tableHeaders.length;
        var tableRows = currTable.find("tbody > tr");
        for (var i = 0; i < tableRows.length; i++) {
            var currRow = $(tableRows[i]);
            var numCells = currRow.find("td").length;
            if (numCells < numHeaders) {
                var diff = numHeaders - numCells;
                for (var j = 0; j < diff; j++) {
                    var emptyCell = "<td><span class='sr-only'>Empty Cell</span></td>";
                    currRow.append(emptyCell);
                }
            }
        }
    }
});

(function() {

    var displayHelpers = function(self) {
        return {
            kValue: function(data) {
                return data > 1000 ? data / 1000 + 'k' : data;
            },
            addCommas: function(data) {
                return data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            },
            saltTickLabel: function(index) {
                var label = self.isFirst(index) ? this.addCommas(self.minSalt) : '';
                label = label || (self.isLast(self.saltTickMarks(), index) ? this.addCommas(self.maxSalt) : '');
                return label;
            },
            gallonTickLabel: function(data, min, max) {
                var label = data % 4 === 0 ? min * (data / 4 + 1) : "";
                var kVal = self.displayHelpers.kValue(label);
                return label ? self.displayHelpers.addCommas(kVal) : "";
            }
        }
    };

    var calculationHelper = function(self) {
        return {
            ppmNeeded: function(salinity) { return 3400 - salinity; },
            liters: function(gallons) { return gallons * 3.7854; }, //--- Gives you liters from Gallons
            glNeeded: function(ppmNeeded) { return ppmNeeded * 0.001; }, //--- Gives g/L needed
            gSaltNeeded: function(liters, glNeeded) { return liters * glNeeded; },
            lbsSaltNeeded: function(gSaltNeeded) { return Math.ceil(gSaltNeeded / 453.5923); } //--- Gives you lbs of salt needed.
        }
    };

    var SalinityCalculatorViewModel = function(componentElement) {
        var self = this;
        self.displayHelpers = displayHelpers(self);
        self.calculationHelper = calculationHelper(self);

        self.maxGallons = 40000;
        self.minGallons = self.maxGallons / 4;
        self.startingGallons = ((self.maxGallons - self.minGallons) / 2) + self.minGallons;
        self.gallonsOfWater = ko.observable(self.startingGallons);
        self.minSalt = 0;
        self.maxSalt = 3400;
        self.currentSaltLevel = ko.observable(self.maxSalt / 2);
        self.sliderHasChanged = ko.observable(false);

        self.calculatedDemand = ko.computed(function() {
            if (!self.sliderHasChanged()) {
                return 0
            } else {
                var ppmNeeded = self.calculationHelper.ppmNeeded(self.currentSaltLevel());
                var liters = self.calculationHelper.liters(self.gallonsOfWater());
                var glNeeded = self.calculationHelper.glNeeded(ppmNeeded);
                var gSaltNeeded = self.calculationHelper.gSaltNeeded(liters, glNeeded);
                var lbsSaltNeeded = self.calculationHelper.lbsSaltNeeded(gSaltNeeded);
                return lbsSaltNeeded;
            }
        });

        self.gallonsSub = self.gallonsOfWater.subscribe(function() {
            self.sliderHasChanged(true);
            self.gallonsSub.dispose();
            self.saltSub.dispose();
        });

        self.saltSub = self.currentSaltLevel.subscribe(function() {
            self.sliderHasChanged(true);
            self.gallonsSub.dispose();
            self.saltSub.dispose();
        });

        self.gallonSelected = ko.computed(function() {
            return (self.gallonsOfWater() - self.minGallons) / (self.maxGallons - self.minGallons) * 100 + '%';
        });

        self.gallonUnselected = ko.computed(function() {
            return 100 - (self.gallonsOfWater() - self.minGallons) / (self.maxGallons - self.minGallons) * 100 + '%';
        });

        self.saltSelected = ko.computed(function() {
            return (self.currentSaltLevel() - self.minSalt) / (self.maxSalt - self.minSalt) * 100 + '%';
        });

        self.saltUnselected = ko.computed(function() {
            return 100 - (self.currentSaltLevel() - self.minSalt) / (self.maxSalt - self.minSalt) * 100 + '%';
        });

        self.isOdd = function(data) {
            return data % 2 === 1;
        };

        self.isEven = function(data) {
            return data % 2 === 0;
        };

        self.isFirst = function(index) {
            return index === 0;
        };

        self.isLast = function(array, index) {
            return index === (array.length - 1);
        };

        self.isFirstOrLast = function(array, index) {
            return self.isFirst(index) || self.isLast(array, index);
        }

        // These depend on some helper methods defined above.
        var gallonTickArray = (new Array(14)).join('0').split(''); // results in array of 13
        self.gallonTickMarks = ko.observableArray(gallonTickArray.map(function(elem, index) { return self.isOdd(index) ? 'small-tick' : 'large-tick' }));
        var saltTickArray = (new Array(13).join('0').split('')); // results in array of 12
        self.saltTickMarks = ko.observableArray(saltTickArray.map(function(elem, index) { return self.isFirstOrLast(saltTickArray, index) ? 'large-tick' : 'small-tick' }));

        var initParams = function() {
            var queryString = location.search.substring(1);
            var urlParams = queryString ? JSON.parse('{"' + decodeURIComponent(queryString).replace(/=&/g, "\",\"").replace(/&/g, "\",\"").replace(/=/g, "\":\"") + '"}') : {};
            var saltParam = urlParams["salt"] || "";
            var gallonParam = urlParams["gallons"] || "";

            if (saltParam || gallonParam) {
                self.gallonsOfWater(gallonParam);
                self.currentSaltLevel(saltParam);
            }
        };

        initParams();
    };

    $(document).ready(function() {
        $('.salinity-calculator.component .ko-container').each(function() {
            ko.applyBindings(new SalinityCalculatorViewModel($(this)), this);
        });
    });

})();
$(function() {
    if($('.related-products.component').length) {
        objectFitImages('img.product-image');
    }
    $('a.product-link').click(function(event) {
        localStorage.setItem("productFindingMethod", "Navigation");
        document.cookie="productFindingMethod=Navigation; domain=.pentair.com; path=/";
    });
    $( "a.product-link" ).contextmenu(function(event) {
        localStorage.setItem("productFindingMethod", "Navigation");
        document.cookie="productFindingMethod=Navigation; domain=.pentair.com; path=/";
      });
});

$(function(){
    //svg conversion
    $('.product-support-cards img[src$=".svg"]').each(function() {
        var $img = jQuery(this);
        var imgURL = $img.attr('src');
        var attributes = $img.prop("attributes");

        $.get(imgURL, function(data) {
            // Get the SVG tag, ignore the rest
            var $svg = $(data).find('svg');

            // Remove any invalid XML tags
            $svg = $svg.removeAttr('xmlns:a');

            // Loop through IMG attributes and apply on SVG
            $.each(attributes, function() {
                $svg.attr(this.name, this.value);
            });

            // Replace IMG with SVG
            $img.replaceWith($svg);
            $svg.get(0).setAttribute('preserveAspectRatio','xMidYMin meet');
        }, 'xml');
    });

});
$(function() {
    var fromParam;
    try {
        var regex = /(%22)+/g;
        var queryString = location.search.substring(1);
        queryString = queryString.replace(regex, '_');
        var urlParams = queryString ? JSON.parse('{"' + decodeURIComponent(queryString).replace(/=&/g, "\":\"\",\"").replace(/&/g, "\",\"").replace(/=/g, "\":\"") + '"}') : {};
         fromParam = urlParams["from"] || "";
    }catch(message){
        var params = new URLSearchParams(window.location.search);
        fromParam = params.get("from") || "";
    }
    var titleDiv = $('.product-sku-hero.component .wtb-title');
    var skuTitle = titleDiv.data('skuTitle');
    var productTitle = titleDiv.data('productTitle');
    $(titleDiv).text(fromParam === 'product' ? productTitle : skuTitle);
    $(titleDiv).parent().show();
});
$(function() {

    var $BODY = $('body');
    var $CAROUSELCOMP = $('.product-key-features-carousel.component');

    function initCarousel(component) {
        var pkfCarousel = $(component);
        var featuredPKGallery, featuredPKGalleryOptions;
        var slides = true;
        var NAVIGATION = ['<span class="sr-only">Previous</span>', '<span class="sr-only">Next</span>'];
        var bodyWidth = Math.floor($BODY.width());
        var totalSlides = 0;
        var currentSlide = 0;

        var update = function() {
            setTimeout(function() {
                totalSlides = pkfCarousel.find('.owl-dot').length;
                pkfCarousel.find('.owl-custom-nav .total').text(addLeadingZero(totalSlides));
                var activeDot = pkfCarousel.find('.owl-dot.active');
                currentSlide = pkfCarousel.find('.owl-dot').index(activeDot) + 1;
                pkfCarousel.find('.owl-custom-nav .current').text(addLeadingZero(currentSlide));
            }, 10);
        };

        var addLeadingZero = function(numString) {
            return (parseInt(numString, 10) < 10) ? '0' + numString : numString;
        };

        function updateBodyWidthValue() {
            bodyWidth = Math.floor($BODY.width());
        }

        featuredPKGallery = pkfCarousel.find('.owl-carousel.product-key-features');
        featuredPKGalleryOptions = {
            loop: function() {
                return slides;
            },
            dots: true,
            nav: function() {
                return slides;
            },
            navText: function() {
                return slides;
            } ? NAVIGATION : false,
            //navContainer: "#featuredPKNav",
            autoHeight: true,
            // Auto rotation
            autoplay: false,
            mouseDrag: false,
            responsiveClass: true,
            center: true,
            responsive: {
                0: {
                    autoWidth: false,
                    items: 1,
                    margin: 0,
                    stagePadding: 0
                },
                768: {
                    autoWidth: true,
                    items: 1,
                    margin: 15,
                    stagePadding: 150
                },
                992: {
                    autoWidth: true,
                    items: 1,
                    margin: 30,
                    stagePadding: 330
                }
            },
            onInitialized: function() {
                update();

            },
            onResize: function() {
                updateBodyWidthValue();
                update();
            },
            onChanged: function() {
                update();
            }
        };

        pkfCarousel.find('.owl-custom-nav .owl-next').on('click', function() {
            featuredPKGallery.trigger('next.owl.carousel');
        });

        pkfCarousel.find('.owl-custom-nav .owl-prev').on('click', function() {
            featuredPKGallery.trigger('prev.owl.carousel');
        });

        update();

        featuredPKGallery.owlCarousel(featuredPKGalleryOptions);
    }

    if ($CAROUSELCOMP.length) {
        $CAROUSELCOMP.each(function(index, element) {
            initCarousel(element);
        });
    }
});


    ////////////////////////////////////////////////////////////////////
    //// building where to buy data analytics layer object start ///////
    ////////////////////////////////////////////////////////////////////

    // Image Engagements data layer changes
    //function to capture data when item is on screen
    var isOnScreen = function (el) {
        var $el = $(el);
        var height = $el.outerHeight();
        var width = $el.outerWidth();

        if (!width || !height) {
            return false;
        }

        var win = $(window);

        var viewport = {
            top: win.scrollTop(),
            left: win.scrollLeft()
        };
        viewport.right = viewport.left + win.width();
        viewport.bottom = viewport.top + win.height();

        var bounds = $el.offset();
        bounds.right = bounds.left + width;
        bounds.bottom = bounds.top + height;

        var deltas = {
            top: viewport.bottom - bounds.top,
            left: viewport.right - bounds.left,
            bottom: bounds.bottom - viewport.top,
            right: bounds.right - viewport.left
        };

        return deltas.top>0
            && deltas.left>0
            && deltas.right>0
            && deltas.bottom>0;
    };

    $(window).on('load.produceInfoDL scroll.produceInfoDL', function () {
        try {
            if (isOnScreen(sync1)) {
                $(window).off('.produceInfoDL');
                addImageEngagementsData(sync1, true);
            }
        } catch (error) {
            // Intentionally blank
        }
    });


    //where to buy data layer
    var $prodcutDetails = $('.prod-details');
    $prodcutDetails.on('click', 'button.btn.btn-primary', function () {

        try {
            if (digitalData) {
                var dataFilters = $('#storelocatorscript').attr('data-filters');
                var brand = "";
                if (dataFilters && dataFilters!==undefined && dataFilters!=="") {
                    var brands = dataFilters.split(',');
                    if (brands.length>0) {
                        brand = brands[0];
                    }
                }
                if (digitalData.product) {
                    digitalData.product.productBrand = brand;
                }
                if (digitalData.event) {
                    var eventData = {};
                    eventData.eventName = "where to buy";
                    eventData.eventAction = "where to buy click";
                    eventData.type = "where to buy";
                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }

            }

        } catch (err) {
            console.log(err)
        }
    });

    function addImageEngagementsData($element, onloadItem) {
        try {
            var $curItems;
            if (onloadItem) {
                $curItems = $(sync2).find('.owl-item').eq(0);
            } else {
                $curItems = $(sync1).find('.owl-item').eq($element.item.index);
            }
            var imagePath = $curItems ? $curItems.find('.image img').attr('src') : "";
            var altText = $curItems ? $curItems.find('.image img').attr('alt') : "";

            if (digitalData) {
                if (digitalData.product) {
                    digitalData.product.productName = $('h1').text();
                    digitalData.product.galleryImageName = imagePath;
                }
                if (digitalData.event) {
                    var eventData = {};
                    eventData.eventName = "image engagement";
                    eventData.eventAction = "image";
                    eventData.type = "shopping";
                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }

            }

        } catch (err) {
            console.log(err)
        }
    }

    function syncPosition(el) {
        addImageEngagementsData(el);
        currentSlide  = el.item.index;
        if (sync2.length > 0){
            sync2.trigger('to.owl.carousel',[currentSlide, 100, true]);
            sync2.find(".owl-item").removeClass("current").eq(currentSlide).addClass("current");
        }
    }
// });

var ProductInfomationV2 = function (componentElement) {
    var self = this;
    self.sku = $(componentElement).data('productSku');
    self.productName = $(componentElement).data('productName');
    self.productId = $(componentElement).data('productId');
    self.brandTags = $(componentElement).data('brandTags');
    self.categories = $(componentElement).data('categories');
    self.channel = $(componentElement).data('channel');
    self.pageType = $(componentElement).data('pageType');
    self.stock = getStock($(componentElement).data("stock"));
    assignStockClass();
    self.init = function () {
        updateDataLayerObj();
    }
    function getStock(value){
        if(value == "IN_STOCK"){
            return "In Stock";
        }
        if(value == "OUT_OF_STOCK"){
            return "Out of Stock";
        }

        return "Discontinued"
    }
    function assignStockClass(){
        if($(".stock").text() === "IN STOCK"){
            $(".stock").addClass("in-stock");
        }
}

    function getProductFindingMethod() {
        var result = "Direct"
        var productFindingMethod = localStorage.getItem("productFindingMethod");
        if (productFindingMethod && productFindingMethod.trim() !== "") {
            result = productFindingMethod;
            localStorage.removeItem("productFindingMethod");
        } else {
            var prvUrl = document.referrer;
            if (prvUrl){
                if (prvUrl.indexOf('search.html?') !== -1) {
                    result =  "Search";
                } else if (prvUrl.indexOf('products') !== -1){
                    result = "Navigation";
                }
            }
        }
        localStorage.setItem("productFindingMethodTemp", result);
        document.cookie="productFindingMethod=" + result +"; domain=.pentair.com; path=/";

        return result;
    }
    function updateDataLayerObj() {
        try {
            if (digitalData) {
                if (!digitalData.page) {
                    digitalData.page = {
                        attributes: {
                            analytics: {}
                        }
                    }
                }
                if (digitalData.page.attributes.analytics) {
                    digitalData.page.attributes.analytics.pageType = self.pageType;
                }
                if (!digitalData.productItem) {
                    digitalData.productItem = [];
                }
                var index = -1;
                for (var i = 0; i < digitalData.productItem.length; i++) {
                    if (digitalData.productItem[i] && digitalData.productItem[i].productInfo && digitalData.productItem[i].productInfo.productID === self.productId) {
                        index = i;
                        break;
                    }
                }
                var productInfoData = {
                    productName: self.productName,
                    productID: self.productId,
                    skuID: self.sku,
                    brand: self.brandTags,
                    category: self.categories,
                    type: self.channel,
                    productFindingMethod: getProductFindingMethod(),
                    Stock: self.stock
                }

                if (index === -1) {
                    digitalData.productItem.push({ productInfo: productInfoData })
                } else {
                    digitalData.productItem[index] = { productInfo: productInfoData };
                }
            }
        } catch (err) {
            console.log(err);
        }
    }

    self.init();
}

$(document).ready(function() {
    $('.component.product-information-v2').each(function () {
        new ProductInfomationV2(this);
    });
});


// Mobile Dropdown behavior
var mobileSku = {
    init:function($elem, index) {
        var skuBtn = $elem.find('button'),
            skuBtnInner = $elem.find('button .inner-btn'),
            skuMenu = $elem.parent().find('.sku-wrap'),
            selected = $elem.parent().find('.sku-wrap .values .keyname-selected');
        var $skuBtn = $(skuBtn),
            $skuBtnInner = $(skuBtnInner),
            $skuMenu = $(skuMenu),
            $selected = $(selected);
        if($selected){
            $skuBtnInner.html($selected.html());
        }
        var isConfigurable = $('.component.product-information').attr("data-product-configurable");
        if(isConfigurable == "true"){
            $skuBtnInner .html("Select SKU");
        }

        $skuBtn.on('click touch', function(e) {
            if($("body #skuOverlay").length == 0){
                $("body .mobile-sku-selection").remove();
                $("body").append("<div id='skuOverlay' class='overlay'></div><div class='mobile-sku-selection'></div>");
            }
            $("body #skuOverlay").show();
            $("body #skuOverlay").on('click touch',function(e){
                var $div =  $("body .mobile-sku-selection");
                $div.css("height","0");
                $("body").css('overflow-y','auto');
                e.target.remove();
            })
            $("body").css('overflow-y','hidden');
            mobileSku.toggleMenu(e);
        });

        $(window).on('resize', function() {
            mobileSku.resizeCheck($(window).outerWidth(), $skuBtn, $skuMenu);
        })
    },
    toggleMenu:function(e) {
        var $ths = $(e.currentTarget),
            $mnu = $ths.parent().parent().find('.sku-wrap');
        var $div =  $("body .mobile-sku-selection");
        $div.html($mnu.html());
        if($('.mobile-sku-selection .values.selected').length > 0){
            $('.mobile-sku-selection .values.selected')[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
        $div.css("height","300px");
        $div.on('click touch', 'div.values', function () {
            var keyname = $(this).attr("data-keyname");
            $div.css("height","0");
            selectSku(keyname);
        });
    },

    resizeCheck:function(w, btn, mnu) {
        if(w >= 768) {
            mnu.removeClass('open');
            mnu.removeAttr('style');
            btn.removeClass('open');
        }
    }
}

$(window).load(function(){
    if($('.mobile-sku').length > 0) {
        $('.mobile-sku').each(function(index, elem){
            mobileSku.init($(elem), index);
        });
    }
    if ($('.product-information.component').length) {
        //product details carousel
        var sync1 = $(".product-information.component #sync1");
        var sync2 = $(".product-information.component #sync2");

        var numItems = sync2.find('.image').length;

        var syncedSecondary = true;

        var currentSlide = 0;
        var callback = function(e) {
             var hasDots = e.item.count > 1;
            if(!hasDots){
                $('.owl-dots').hide();
            }
        }

        sync1.owlCarousel({
            items: 1,
            mouseDrag: false,
            nav: true,
            navText: ['<div><span class="icon-angle-left" aria-hidden="true"></span><span class="sr-only">Previous</span></div>', '<div><span class="icon-angle-right" aria-hidden="true"></span><span class="sr-only">Next</span></div>'],
            dots: true,
            animateOut: 'fadeOut',
            loop: false,
            responsive: {
                0: {
                    autoHeight: true
                },
                768: {
                    autoHeight: false
                }
            },
            onInitialized: callback
        }).on('changed.owl.carousel', syncPosition);
        //Reset the size of the Larger carousel window when the carousel initializes
        //There are known weird issues with Owl carousel and height calculations. If this has problems in future,
        //Look https://github.com/OwlCarousel2/OwlCarousel2/issues/842 for other options.
        sync1.trigger('refresh.owl.carousel');

        sync2.on('initialized.owl.carousel', function () {
            sync2.find(".owl-item").eq(0).addClass("current");
            sync2.siblings('.thumbnav').detach().appendTo(sync2);
            }).owlCarousel({
                slideBy: 1,
                loop:false,
                stagePadding: 0,
                mouseDrag: false,
                dots: true,
                nav: false,
                smartSpeed: 200,
                responsiveClass: true,
                margin: 10,
                autoWidth: true,
                responsive: {
                    0: {
                        items: (numItems > 3 ? 4 : numItems)
                    },
                    768: {
                        items: Math.min(3, numItems)
                    },
                    992: {
                        items: Math.min(4, numItems)
                    }
                }
            });

        sync2.on("click", ".owl-item", function (e) {
            e.preventDefault();
            var number = $(this).index();
            sync1.trigger('to.owl.carousel',[number, 100]);
        });

        $('.product-information.component .thumbnav .icon-angle-right').on('click', function (e) {
            e.preventDefault();
            currentSlide = currentSlide + 1 > numItems ? 0 : currentSlide + 1;
            sync1.trigger('to.owl.carousel',[currentSlide, 100]);
        });
        $('.product-information.component .thumbnav .icon-angle-left').on('click', function (e) {
            e.preventDefault();
            currentSlide = currentSlide <= 0 ? numItems - 1 : currentSlide - 1;
            sync1.trigger('to.owl.carousel',[currentSlide, 100]);
        });

        //this fixes a resize issue for the initial load of the main image
        setTimeout(function () {
            $(window).resize();
        }, 1000);
    }

    ////////////////////////////////////////////////////////////////////
    //// building where to buy data analytics layer object start ///////
    ////////////////////////////////////////////////////////////////////

    // Image Engagements data layer changes
    //function to capture data when item is on screen
    var isOnScreen = function (el) {
        var $el = $(el);
        var height = $el.outerHeight();
        var width = $el.outerWidth();

        if (!width || !height) {
            return false;
        }

        var win = $(window);

        var viewport = {
            top: win.scrollTop(),
            left: win.scrollLeft()
        };
        viewport.right = viewport.left + win.width();
        viewport.bottom = viewport.top + win.height();

        var bounds = $el.offset();
        bounds.right = bounds.left + width;
        bounds.bottom = bounds.top + height;

        var deltas = {
            top: viewport.bottom - bounds.top,
            left: viewport.right - bounds.left,
            bottom: bounds.bottom - viewport.top,
            right: bounds.right - viewport.left
        };

        return deltas.top>0
            && deltas.left>0
            && deltas.right>0
            && deltas.bottom>0;
    };

    $(window).on('load.produceInfoDL scroll.produceInfoDL', function () {
        try {
            if (isOnScreen(sync1)) {
                $(window).off('.produceInfoDL');
                addImageEngagementsData(sync1, true);
            }
        } catch (error) {
            // Intentionally blank
        }
    });


    //where to buy data layer
    var $prodcutDetails = $('.prod-details');
    $prodcutDetails.on('click', 'button.btn.btn-primary', function () {

        try {
            if (digitalData) {
                var dataFilters = $('#storelocatorscript').attr('data-filters');
                var brand = "";
                if (dataFilters && dataFilters!==undefined && dataFilters!=="") {
                    var brands = dataFilters.split(',');
                    if (brands.length>0) {
                        brand = brands[0];
                    }
                }
                if (digitalData.product) {
                    digitalData.product.productBrand = brand;
                }
                if (digitalData.event) {
                    var eventData = {};
                    eventData.eventName = "where to buy";
                    eventData.eventAction = "where to buy click";
                    eventData.type = "where to buy";
                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }

            }

        } catch (err) {
            console.log(err)
        }
    });

    function addImageEngagementsData($element, onloadItem) {
        try {
            var $curItems;
            if (onloadItem) {
                $curItems = $(sync2).find('.owl-item').eq(0);
            } else {
                $curItems = $(sync1).find('.owl-item').eq($element.item.index);
            }
            var imagePath = $curItems ? $curItems.find('.image img').attr('src') : "";
            var altText = $curItems ? $curItems.find('.image img').attr('alt') : "";

            if (digitalData) {
                if (digitalData.product) {
                    digitalData.product.productName = $('h1').text();
                    digitalData.product.galleryImageName = imagePath;
                }
                if (digitalData.event) {
                    var eventData = {};
                    eventData.eventName = "image engagement";
                    eventData.eventAction = "image";
                    eventData.type = "shopping";
                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }

            }

        } catch (err) {
            console.log(err)
        }
    }

    function syncPosition(el) {
        addImageEngagementsData(el);
        currentSlide  = el.item.index;
        if (sync2.length > 0){
            sync2.trigger('to.owl.carousel',[currentSlide, 100, true]);
            sync2.find(".owl-item").removeClass("current").eq(currentSlide).addClass("current");
        }
    }
});

var ProductInfomation = function (componentElement) {
    var self = this;
    self.sku = $(componentElement).data('productSku');
    self.productName = $(componentElement).data('productName');
    self.productId = $(componentElement).data('productId');
    self.brandTags = $(componentElement).data('brandTags');
    self.categories = $(componentElement).data('categories');
    self.channel = $(componentElement).data('channel');
    self.pageType = $(componentElement).data('pageType');
    self.stock = getStock($(componentElement).data("stock"));
    self.init = function () {
        updateDataLayerObj();
    }
    function getStock(value){
        if(value == "IN_STOCK"){
            return "In Stock";
        }
        if(value == "OUT_OF_STOCK"){
            return "Out of Stock";
        }

        return "Discontinued"
    }

    if($(".stock").html() === "IN STOCK"){
        $(".stock").addClass("in-stock");
    }

    function getProductFindingMethod() {
        var result = "Direct"
        var productFindingMethod = localStorage.getItem("productFindingMethod");
        if (productFindingMethod && productFindingMethod.trim() !== "") {
            result = productFindingMethod;
            localStorage.removeItem("productFindingMethod");
        } else {
            var prvUrl = document.referrer;
            if (prvUrl){
                if (prvUrl.indexOf('search.html?') !== -1) {
                    result =  "Search";
                } else if (prvUrl.indexOf('products') !== -1){
                    result = "Navigation";
                }
            }
        }
        localStorage.setItem("productFindingMethodTemp", result);
        document.cookie="productFindingMethod=" + result +"; domain=.pentair.com; path=/";

        return result;
    }
    function updateDataLayerObj() {
        try {
            if (digitalData) {
                if (!digitalData.page) {
                    digitalData.page = {
                        attributes: {
                            analytics: {}
                        }
                    }
                }
                if (digitalData.page.attributes.analytics) {
                    digitalData.page.attributes.analytics.pageType = self.pageType;
                }
                if (!digitalData.productItem) {
                    digitalData.productItem = [];
                }
                var index = -1;
                for (var i = 0; i < digitalData.productItem.length; i++) {
                    if (digitalData.productItem[i] && digitalData.productItem[i].productInfo && digitalData.productItem[i].productInfo.productID === self.productId) {
                        index = i;
                        break;
                    }
                }
                var productInfoData = {
                    productName: self.productName,
                    productID: self.productId,
                    skuID: self.sku,
                    brand: self.brandTags,
                    category: self.categories,
                    type: self.channel,
                    productFindingMethod: getProductFindingMethod(),
                    Stock: self.stock
                }

                if (index === -1) {
                    digitalData.productItem.push({ productInfo: productInfoData })
                } else {
                    digitalData.productItem[index] = { productInfo: productInfoData };
                }
            }
        } catch (err) {
            console.log(err);
        }
    }

    self.init();
}

var selectSku = function(keyname){
    if(keyname != '' && keyname != 'undefined'){
        var url = window.location.href;
        var keyArr = keyname.split("#");
        if(keyArr.length == 2){
            var skuid = keyArr[1];
            var isConfigurable = $('.component.product-information').attr("data-product-configurable");
            var urlArr = '';
            var productFindingMethod = localStorage.getItem("productFindingMethodTemp");

            // Set productFindingMethod for Analytics
            localStorage.setItem("productFindingMethod", productFindingMethod);
            document.cookie="productFindingMethod=" + productFindingMethod +"; domain=.pentair.com; path=/";

            if (isConfigurable == 'true') {
                urlArr = url.indexOf('.html') > 0 ? url.replace('.html', '.' + skuid + '.html') : url.concat('.', skuid + '.html');
            }
            else{
                var urlSkuId = $('.component.product-information').attr("data-product-sku");
                urlArr = url.replace(urlSkuId, skuid );
            }

            if(urlArr.indexOf("#productbuycard") != -1){
                window.location.href = urlArr;
            }
            else{
                //window.location.href = urlArr + "#productbuycard";
                window.location.href = urlArr ;
            }


        }
    }
}

$(document).ready(function() {
    if ($('.component.product-information-v2') <=0){
        $('.component.product-information').each(function () {
            new ProductInfomation(this);
        });
        var $skuSelector = $('.skuselector');
        $skuSelector.on('click', 'div.values', function () {
            var keyname = $(this).attr("data-keyname");
            selectSku(keyname);
        });

        $(".skuselector div.values").hover(function(e) {
            if(e.type == "mouseenter") {
                var keyname = $(this).attr("data-keyname");
                if(keyname != '' && keyname != 'undefined'){
                    var keyArr = keyname.split("#");
                    if(keyArr.length == 2){
                        var skuid = keyArr[1];
                        var variantAttributes = keyArr[0];

                        // Set Sku Selector Attributes for Sku
                        $('.skuselector .options').html(variantAttributes);
                    }

                }
            }
            /*if(e.type == "mouseleave") {
                $('.skuselector .options').html('&nbsp;');
            }*/

        });
        $('.skuselector').each(function( index ) {
            if($(this).find('.keyname-selected').length > 0 ){
                var keyname = $(this).find('.keyname-selected').closest('.values').attr("data-keyname");
                var keyArr = keyname.split("#");
                if(keyArr.length == 2){
                    var variantAttributes = keyArr[0];
                    $(this).find('.options').html(variantAttributes);
                }
            }
        });

        if($('.buttons.none-ecommpdp').find('.btn').length > 0){
            $('.buttons.none-ecommpdp').addClass("has-child");
        }
    }
});

// adds 'has-child' class for custom cta if present
$(document).ready(function() {
    if($('.buttons.none-ecommpdp').find('.custom-cta-active').length > 0){
        $('.buttons.none-ecommpdp').addClass("has-child");
    }
});

$(document).ready(function(){

    var targetElem = $('.image-hotspot.component');

    var addLeadingZero = function (numString) {
        return (parseInt(numString, 10) < 10) ? '0' + numString : numString;
    };

    var addNumbers = function (containerId) {
        $('#' + containerId).find('.s7imagemapeffect .s7icon').each(function(index, elem){
            $(elem).text(addLeadingZero(index + 1));
        });
    }
    var initViewer = function (componentElem, containerId, assetPath, serverUrl, contentUrl) {
        var s7interactiveimageviewer = new s7viewers.InteractiveImage({
        "containerId" : containerId,
        "params" : {
            "serverurl" : serverUrl.replace("http://", "https://"),
            "contenturl" : contentUrl.replace("http://", "https://"),
            "asset" : assetPath }
        });
        
        s7interactiveimageviewer.setHandlers({ 
          "quickViewActivate": function(inData) {
            // console.log(inData);
          }, 
          "initComplete" : function () {
            if(componentElem.data('numbers') === true){
                addNumbers(containerId);
            }
          }
        });

        s7interactiveimageviewer.init(); 
    }

    if(targetElem.length > 0){
        targetElem.each(function(index, elem) {
            var assetPath = $(elem).data('asset');
            var serverUrl = $(elem).data('server-url');
            var contentUrl = $(elem).data('content-url');
            
            var containerId = 'image-hotspot-container-' + index;
            $(elem).find('.interactive-image-container').attr('id', containerId);
            initViewer($(elem), containerId, assetPath, serverUrl, contentUrl);
        });
    }

});
$(document).ready(function() {
    var isConfigurableFamily = $('.component.product-information-v2').attr("data-product-configurable");
    var currentHref = window.location.href;
    var urlSkuId = $('.component.product-buy-card-v2').attr("data-product-sku");
    var currentSkuDropdown;

    // Retrieve the dropdown list element for the current sku
    $('.sku-num').each(function(idx, skuNum) {
        if ($(skuNum).text() === urlSkuId) {
            currentSkuDropdown = $(skuNum).parents('li');
        }
    });

    $('.selectsku__dropdown-values').each(function(idx, dropdownOption) {
        // Set the hrefs for dropdowns
        var dropdownHref = '';
        var dropdownSkuId = $(dropdownOption).find('.sku-num').html();

        if (isConfigurableFamily === 'true') {
            dropdownHref = currentHref.indexOf('.html') > 0 ?
                    currentHref.replace('.html', '.' + dropdownSkuId + '.html') : currentHref.concat('.', dropdownSkuId + '.html');
        } else {
            dropdownHref = currentHref.replace(urlSkuId, dropdownSkuId);
        }

        var dropdownAnchor = $(dropdownOption).find('a');
        $(dropdownAnchor).attr('href', dropdownHref);

        // Set current sku as "selected", then remove the dropdown option for current sku
        if (urlSkuId === dropdownSkuId) {
            var skuDropdownElem = $(currentSkuDropdown.find('a')[0]).clone()[0];
            var innerSkuDropdown = $(skuDropdownElem).html();
            $('#options').html('<div class="options-content"></div>');
            $("#options .options-content").html(innerSkuDropdown);
            $(currentSkuDropdown).remove();
        }
    });
});

var ProductBuyCard = function (componentElement) {
    var self = this;
    var card = $(componentElement);

    self.zipcodeErr = '[Unable get your zipcode]';
    self.sku = card.data('productSku');
    self.invalidZip = card.data('invalidZipcode');
    self.productName = card.data('productName');
    self.productId = card.data('productId');
    self.brandTags = card.data('brandTags');
    self.categories = card.data('categories');
    self.minimalPrice = card.data('minimalPrice');
    self.installationSku = card.data('installationSku');
    self.addToCartBtn = card.find(".add-to-cart-btn");
    self.consultationBtn = card.find(".consultation-btn");
    self.quantityInput = card.find(".quantity-input");
    self.changeZipcodeLink = card.find(".change-zipcode-link");
    self.zipcodeView = card.find(".zipcode-view");
    self.zipcodeEdit = card.find(".zipcode-edit");
    self.zipcodeInput = card.find(".zipcode-input");
    self.zipcodeOk = card.find(".zipcode-ok");
    self.zipcodeCancel = card.find(".zipcode-cancel");
    self.cardLoading = card.find(".cart-loading");
    self.serviceError = card.find(".service-error");
    self.qtyError = card.find(".quantity-error");
    self.zipcodeError = card.find(".zipcode-err");
    self.installation = card.find(".installation");
    self.installationInput = card.find($("input[name='install-service']"));
    self.subscriptionInput = card.find($("input[name='subscription-service']"));
    self.installationInputFirst = card.find($("input[name='install-service']:first"));
    self.installationInputLast = card.find($("input[name='install-service']:last"));
    self.installationSelected = "White glove";
    self.priceView = card.find(".minimal_price");
    self.installationCostText = card.find(".installation-cost-text");
    self.installationCostSpan = $(self.installationCostText).find('span');
    self.subsccriptionDiv = card.find(".subscription");
    self.productOnline = card.attr('data-product-online');
    self.productOneTimePurchase = card.attr('data-product-onetimepurchase');
    self.installationFlag = card.attr('data-installation-flag');
    self.showAddToCartBtn = card.attr('data-show-add-to-cart-btn');
    self.channel = card.data('channel');
    self.stock = getStock($(componentElement).data("stock"));
    self.initInstallation = function () {
        if (navigator && navigator.permissions) {
            navigator.permissions.query({
                name: 'geolocation'
            })
                .then(function (PermissionStatus) {
                    getZipcode(PermissionStatus.state);
                    PermissionStatus.onchange = function () {
                        getZipcode(this.state);
                    };
                });
        } else {
            var zipcode = localZipcode();
            showZipcode(zipcode, false);
            loading(true);

            if (self.productOnline == 'true') {
                setTimeout(function () {
                    subscriptionOptions();
                    serviceableGeography(zipcode, false);
                }, 2000);
            }
        }
    }
    self.init = function () {
        loading(true);
        if (self.productOnline == 'true') {
            setTimeout(function () {
                subscriptionOptions();

            }, 2000);
        }
    }
    $(self.installationInput).on('change', function (event) {
        self.installationSelected = event.target.value;
        if (self.installationSelected == "White glove") {
            trackZipcode(true, $(self.zipcodeView).html());
        }
    });
    $(self.addToCartBtn).click(function (event) {
        $(self.serviceError).hide();
        var number = $(self.quantityInput).val();
        if (!isNaN(number) && number > 0) {
            if (!window.CIF || !window.CIF.CommerceGraphqlApi) return;
            var cart_id = getCookiesCartId();
            var sku = self.sku;
            if (!sku) {
                return;
            }
            loading(true);
            if (cart_id) {
                addToCart(cart_id, number, sku);
            } else {
                addToEmptyCart(number, sku);
            }
        } else {
            $(self.qtyError).show();
            return;
        }
    });
    $(self.consultationBtn).click(function (event) {
        $(self.serviceError).hide();
        var sku = self.sku;
        if (!sku) {
            return;
        }
        localStorage.setItem("SKUID", sku);
        var consultationpageurl = $('a.consultation-btn').attr('data-consultationpageurl');
        window.location.href = consultationpageurl;
    });

    $(self.quantityInput).keyup(function (event) {
        var number = event.target.value;
        if (!isNaN(number)) {
            $(self.qtyError).hide();
        }
    });

    $(self.changeZipcodeLink).click(function (event) {
        showZipcode($(self.zipcodeView).html(), true);
    });

    $(self.zipcodeOk).click(function (event) {
        var zipcode = $(self.zipcodeInput).val();
        if (zipcode && zipcode.trim()) {
            var isChanged = zipcode !== $(self.zipcodeView).html().trim();
            showZipcode(zipcode, false);
            if (isChanged) {
                serviceableGeography(zipcode, true);
            }
        } else {
            $(self.zipcodeInput).css("border-color", "red");
        }
    });

    $(self.zipcodeCancel).click(function (event) {
        showZipcode(null, false);
    });


    function loading(isLoading) {
        var loader = $(self.cardLoading);
        if (isLoading && loader.hasClass("hide")) {
            loader.removeClass("hide");
        }
        if (!isLoading && !loader.hasClass("hide")) {
            setTimeout(function () {
                loader.addClass("hide");
            }, 2000);

        }
    }
    function addToEmptyCart(number, sku) {
        loading(true);
        return window.CIF.CommerceGraphqlApi.createEmptyCart(function (data) {
            setCookiesCartId(data);
            var cart_id = getCookiesCartId() || data.createEmptyCart;
            addToCart(cart_id, number, sku);
        }, function (errorMsg) {
            showErr(errorMsg);
        });
    }
    function addToCart(cart_id, number, sku) {
        loading(true);
        var installation = isInstallation();
        var subscriptionId = $(self.subsccriptionDiv).attr('data-option-id');
        var subscriptionValueString = $(".product-buy-card.component .subscription").find("input[name='subscription-service']:checked").val();
        var subscriptionDate = $(self.subsccriptionDiv).attr('data-subscription-date');
        var zipcode = localZipcode();
        return window.CIF.CommerceGraphqlApi.addToCart(cart_id, number, sku, installation, subscriptionId, subscriptionValueString, subscriptionDate, zipcode,
            function (data) {
                if (data) {
                    var addSimpleProductsToCartObj = data.addSimpleProductsToCart;
                    if (addSimpleProductsToCartObj) {
                        showCartNumber(addSimpleProductsToCartObj);
                        if (addSimpleProductsToCartObj.cart && addSimpleProductsToCartObj.cart.items) {
                            var items = addSimpleProductsToCartObj.cart.items;
                            var productInfoData = getProductInfo(self.sku, self.productId, number, items);
                            var subtotal = data.addSimpleProductsToCart.cart.prices.subtotal_with_discount_excluding_tax.value;

                            showPreviewWindow(items, number, addSimpleProductsToCartObj.cart.total_quantity, subtotal);

                            var installData = installation ? getProductInfo(self.installationSku, '', number, items) : null;
                            // Adobe analytics track add to cart event payloads
                            if (number == addSimpleProductsToCartObj.cart.total_quantity) {
                                // If the number/qty that was added == total cart quantity then the cart was empty
                                trackAddToCartAnalyticsEvent(self.sku, addSimpleProductsToCartObj.cart.id, true);
                            } else {
                                trackAddToCartAnalyticsEvent(self.sku, addSimpleProductsToCartObj.cart.id, false);
                            }
                            updateDataLayerObj(productInfoData, installData);
                            constructAlgoliaAnalyticsAddtoCartObject();

                            //Show item added text for 5 seconds
                            $(self.addToCartBtn).html("<span>ADDED !</span>");

                            setTimeout(function () {
                                $(self.addToCartBtn).html("<span>Add to Cart</span>");
                            }, 5000);
                        }
                    }
                }
                loading(false);
            },
            function (errorMsg) {
                showErr(errorMsg);
            }
        );
    }



    // set Add to Cart Preview modal position on page resize

    closeAddToCartPreview();
    resizeAddToCartPreview();
    viewCartFromAddToCartPreview();

    /**
     * Track the payload for add to cart button click event in Adobe analytics.
     * @param sku of the product being added to cart
     * @param cart_id id of the cart
     * @param {boolean} addedToEmptyCart true/false if the cart was empty
     */
    function trackAddToCartAnalyticsEvent(sku, cart_id, addedToEmptyCart) {
        var eventAddToCartPayload = {
            eventName: addedToEmptyCart ? 'cart open' : 'add to cart',
            eventType: 'custom',
            attributes: {
                product: {
                    skuID: sku
                },
                cart: {
                    cartID: cart_id
                },
                visitor: {
                    pentairCustomerID: getPentairCustomerID(), //if this is available
                    dealerID: getDealerID() //if this is available
                }
            }
        };
        trackEventWithQueue(eventAddToCartPayload);
    }

    function getProductInfo(sku, productId, number, items) {
        var productFindingMethod = localStorage.getItem("productFindingMethodTemp");
        if (productFindingMethod) {
            document.cookie = "productFindingMethod=" + productFindingMethod + "; domain=.pentair.com; path=/";
        } else {
            document.cookie = "productFindingMethod=Direct; domain=.pentair.com; path=/";
        }

        document.cookie = "productType=" + self.channel + "; domain=.pentair.com; path=/";
        var data = {
            productName: '',
            productID: productId,
            skuID: sku,
            brand: self.brandTags,
            category: self.categories,
            type: self.channel,
            productFindingMethod: productFindingMethod ? productFindingMethod : 'Direct',
            Stock: getStock(self.stock),
            unitPrice: 0,
            revenue: 0,
            quantity: parseInt(number),
            installation: self.installationSelected ? self.installationSelected : '',
        }
        for (var i = 0; i < items.length; i++) {
            if (items[i].product && items[i].product.sku == sku) {
                var unitPrice = items[i].prices && items[i].prices.price && items[i].prices.price.value ? items[i].prices.price.value : 0;
                data.productName = items[i].product && items[i].product.name ? items[i].product.name : sku;
                data.unitPrice = unitPrice;
                data.revenue = parseInt(number) * unitPrice;
                break;
            }
        }
        return data;
    }

    function getStock(value) {
        if (value == "IN_STOCK") {
            return "InStock";
        }
        if (value == "OUT_OF_STOCK") {
            return "Out of Stock";
        }

        return "Discontinued"
    }

    function isInstallation() {
        if (self.installationFlag == 'true') {
            return self.installationSelected == "White glove";
        }
        return false;


    }

    function showZipcode(zipcode, edit) {
        if (!self.installation) return;
        if (zipcode) {
            if (zipcode == self.zipcodeErr) {
                $(self.zipcodeView).addClass("error-zipcode-message");
            } else {
                $(self.zipcodeView).removeClass("error-zipcode-message");
                localStorage.setItem("zipcode", zipcode);
            }
            $(self.zipcodeView).html(zipcode);
            $(self.zipcodeInput).val(zipcode);
            $(self.zipcodeInput).css("border-color", "#eee");
        }
        if (edit) {
            $(self.changeZipcodeLink).hide();
            $(self.zipcodeEdit).css('display', 'flex');
        } else {
            $(self.changeZipcodeLink).show();
            $(self.zipcodeEdit).hide();
        }
        loading(false);
    }

    function subscriptionOptions() {
        if (!window.CIF || !window.CIF.CommerceGraphqlApi || !self.sku) {
            console.log('Error in loading CIF in subscriptionOptions()');
            loading(false);
            return;
        }

        loading(true);
        return window.CIF.CommerceGraphqlApi.subscriptionOptions(self.sku,
            function (data) {
                if (data && data.products && data.products.items) {
                    $(self.serviceError).hide();
                    var item = data.products.items[0];
                    var options = item.options;
                    if (!options) {
                        loading(false);
                    } else {
                        options.forEach(function (option) {
                            if (option.title == 'Subscription') {
                                var optionid = option.option_id;
                                $(self.subsccriptionDiv).attr('data-option-id', optionid); // id to be sent while adding to cart

                                var valueArr = option.value;
                                var subscriptionDivHtml = '<div class="subscription-lbl">Subscription</div><div class="input-radio-group">';
                                if (self.productOneTimePurchase == 'true') {
                                    subscriptionDivHtml += '<div class="input-radio"><label><input type="radio" onclick="javascript:subscriptionSelected();" name="subscription-service" checked="true" value="onetimepurchase"><span class="checked"></span><div>One Time Purchase</div></label></div>';
                                }

                                var count = 0;
                                var checkText = '';
                                valueArr.forEach(function (obj) {
                                    if (count == 0 && self.productOneTimePurchase != 'true') {
                                        $(self.subsccriptionDiv).attr('data-value-string', obj.title); //  value_string to be sent while adding to cart
                                        checkText = 'checked="true"';
                                    } else {
                                        checkText = '';
                                    }
                                    // populate the subscription radio buttons here
                                    subscriptionDivHtml += '<div class="input-radio"><label><input type="radio" onclick="javascript:subscriptionSelected();" name="subscription-service" ' + checkText + ' value="' + obj.option_type_id + '"><span class="checked"></span><div>' + obj.title + '</div></label></div>';

                                    subscriptionDivHtml += '<div class="subdatepicker' + obj.option_type_id + '" style="margin-left: 4rem;display:none"><div>Select a start date:</div><input type="text" name="subscription-date' + obj.option_type_id + '" readonly="true" class="datepicker" style="display:none;font-weight:500;font-family:\'Barlow Condensed\',sans-serif;" placeholder="" data-date-format="MM d" id="subscription-date' + obj.option_type_id + '" data-parsley-errors-container="subscription-date' + obj.option_type_id + '" ></div>';


                                    count++;
                                });

                                subscriptionDivHtml += '</div></div>';

                                $(self.subsccriptionDiv).html(subscriptionDivHtml);
                                $(self.subsccriptionDiv).show(); // unhide subscription div
                                loading(false);
                            }
                        });
                    }
                } else {
                    showErr("Subcription options not available for the product !");
                }

            },
            function (errorMsg) {
                showErr(errorMsg);
            }
        );
    }

    function serviceableGeography(zipcode, isZipChanged) {
        if (!window.CIF || !window.CIF.CommerceGraphqlApi || !self.sku || zipcode === self.zipcodeErr) {
            console.log('Error in loading CIF in serviceableGeography()');

            loading(false);
            return;
        }
        loading(true);
        var number = $(self.quantityInput).val() ? $(self.quantityInput).val() : 0;
        return window.CIF.CommerceGraphqlApi.serviceableGeography(zipcode, number, self.sku,
            function (data) {
                var isEligible = false;
                if (data && data.serviceableGeography) {
                    isEligible = data.serviceableGeography.isEligible;
                    if (isEligible) {
                        $(self.serviceError).hide();
                        var cost = data.serviceableGeography.cost;
                        if (cost) {
                            $(self.installationCostText).show();
                            var currency = cost.currency ? cost.currency : '';
                            var value = cost.value ? cost.value.toFixed(2) : '';
                            $(self.installationCostSpan[0]).html(currency);
                            $(self.installationCostSpan[1]).html(value);
                            $(self.zipcodeError).hide();
                            loading(false);
                        }
                    }
                    if (isZipChanged) {
                        trackZipcodeOnChange(isEligible, zipcode);
                    } else {
                        trackZipcode(isEligible, zipcode);
                    }

                }
                if (!isEligible) {
                    // Disable installation option
                    $(self.installationCostText).hide();
                    self.installationSelected = "Do it yourself";

                    $(self.installationInputFirst).attr('disabled', true);
                    $(self.installationInputFirst).attr('checked', false);
                    $(self.installationInputLast).attr('checked', true);
                    $(self.installationInputFirst).prop('checked', false);
                    $(self.installationInputLast).prop('checked', true);

                    $(self.installationInputFirst).addClass('installation-disabled');
                    $(self.installationCostText).addClass('installation-disabled');

                    $('.product-buy-card.component .input-radio:first').find('div').addClass('installation-disabled');
                    $(self.installationCostText).addClass('installation-disabled');
                    $(self.zipcodeError).html(self.invalidZip);
                    $(self.zipcodeError).css('display', 'block');
                    loading(false);
                } else {
                    // Enable installation option
                    self.installationSelected = "White glove";
                    $(self.installationInputFirst).attr('disabled', false);
                    $(self.installationInputLast).attr('checked', false);
                    $(self.installationInputFirst).attr('checked', true);
                    $(self.installationInputLast).prop('checked', false);
                    $(self.installationInputFirst).prop('checked', true);


                    $(self.installationInputFirst).removeClass('installation-disabled');
                    $(self.installationCostText).removeClass('installation-disabled');

                    $('.product-buy-card.component .input-radio:first').find('div').removeClass('installation-disabled');
                    $(self.installationCostText).removeClass('installation-disabled');

                }

            },
            function (errorMsg) {
                // Disable installation option
                $(self.installationCostText).hide();
                self.installationSelected = "Do it yourself";
                $(self.installationInputFirst).attr('disabled', true);
                $(self.installationInputFirst).attr('checked', false);
                $(self.installationInputLast).attr('checked', true);
                $(self.installationInputFirst).prop('checked', false);
                $(self.installationInputLast).prop('checked', true);
                $(self.installationInputFirst).addClass('installation-disabled');
                $(self.installationCostText).addClass('installation-disabled');
                $('.product-buy-card.component .input-radio:first').find('div').addClass('installation-disabled');
                $(self.installationCostText).addClass('installation-disabled');

                $(self.installationCostText).hide();
                showErr('ServiceableGeography API Error: ' + errorMsg);
            }
        );

    }

    function getZipcode(state) {
        if (state == 'granted') {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var lat = position.coords.latitude;
                    var long = position.coords.longitude;
                    var point = new google.maps.LatLng(lat, long);
                    var data = '';
                    new google.maps.Geocoder().geocode({
                        'latLng': point
                    }, function (res, status) {
                        res.forEach(function (location) {
                            var addressComps = location.address_components;
                            if (addressComps.length) {
                                addressComps.forEach(function (comp) {
                                    if ((comp.long_name || comp.short_name) && comp.types && comp.types.indexOf('postal_code') >= 0) {
                                        data = comp.long_name || comp.short_name;
                                    }
                                });
                            }
                        });
                        if (!data || !data.trim()) {
                            data = localZipcode();
                        }
                        showZipcode(data, false);
                        if (self.productOnline == 'true') {
                            serviceableGeography(data, false);
                            subscriptionOptions();
                        }

                    });
                }, function (errorMsg) {
                    showErr(errorMsg);
                });
            }
            ;
        } else {
            showZipcode(localZipcode(), false);
            if (self.productOnline == 'true') {
                subscriptionOptions();
            }
            if (self.productOnline == 'true' && localZipcode() != '[Unable get your zipcode]') {
                serviceableGeography(localZipcode(), false);
                $(self.installationInputFirst).attr('disabled', false);
                $(self.installationInputLast).attr('checked', false);
                $(self.installationInputFirst).attr('checked', true);
                $(self.installationInputLast).prop('checked', false);
                $(self.installationInputFirst).prop('checked', true);
            } else {
                // Disable installation option
                $(self.installationCostText).hide();
                self.installationSelected = "Do it yourself";

                $(self.installationInputFirst).attr('disabled', true);
                $(self.installationInputLast).attr('checked', true);
                $(self.installationInputFirst).attr('checked', false);
                $(self.installationInputLast).prop('checked', true);
                $(self.installationInputFirst).prop('checked', false);

                $(self.installationInputFirst).addClass('installation-disabled');
                $(self.installationCostText).addClass('installation-disabled');

                $('.product-buy-card.component .input-radio:first').find('div').addClass('installation-disabled');
                $(self.installationCostText).addClass('installation-disabled');
            }


        }
    };

    function localZipcode() {
        return localStorage.getItem("zipcode") || self.zipcodeErr;
    }

    function showErr(errorMsg) {
        if (errorMsg) {
            $(self.serviceError).html(errorMsg);
            $(self.serviceError).show();
        }
        loading(false);
    }

    function trackZipcode(isEligible, zipcode) {
        if (zipcode && zipcode != self.zipcodeErr && isInstallation()) {
            if (!_.isUndefined(window._satellite)) {
                var whiteGlove = isEligible ? 'whiteglove_zip_available' : 'whiteglove_zip_unavailable';
                window._satellite.track(whiteGlove, {
                    "whiteglove_zip": zipcode
                });
            }
        }
    }

    function trackZipcodeOnChange(isEligible, zipcode) {
        if (zipcode && zipcode != self.zipcodeErr) {
            if (!_.isUndefined(window._satellite)) {
                var whiteGlove = isEligible ? 'whiteglove_zip_available' : 'whiteglove_zip_unavailable';
                window._satellite.track(whiteGlove, {
                    "whiteglove_zip": zipcode
                });
            }
        }
    }

    function constructAlgoliaAnalyticsAddtoCartObject() {
        var queryParams = window.location.href.indexOf("?") !== -1;
        if (queryParams) {
            var search = window.location.search.substring(1);
            var params = JSON.parse('{"' + decodeURI(search).replace(/&/g, '","').replace(/=/g, '":"') + '"}');
            var objectID = window.location.href;
            if (params.hasOwnProperty("queryID") && params.hasOwnProperty("indexName")) {
                var userToken = "";
                if (typeof _satellite !== undefined && _satellite != null) {
                    userToken = _satellite.getVisitorId().getMarketingCloudVisitorID();
                }
                // attach to window object with conversion tracking details
                aa('convertedObjectIDsAfterSearch', {
                    userToken: userToken,
                    eventName: 'Add_To_Cart',
                    index: params.indexName,
                    queryID: params.queryID,
                    objectIDs: [objectID]
                });
            }
        }
        return true;
    }

    function updateDataLayerObj(productInfoData, installData) {
        try {
            if (digitalData) {
                digitalData.productItem = [];
                digitalData.productItem.push({
                    productInfo: productInfoData
                })
                if (installData) {
                    digitalData.productItem.push({
                        productInfo: installData
                    })
                }
                if (!_.isUndefined(window._satellite)) {
                    window._satellite.track("addtocart");
                }
            }
        } catch (err) {
            console.log(err);
        }
    }

    if (self.installationFlag == 'true') {
        self.initInstallation();
    } else {
        self.init();
        loading(false);
    }
}

$(document).ready(function () {
    $('.product-buy-card.component').each(function () {
        new ProductBuyCard(this)
    });
});


function subscriptionSelected() {
    var subscriptionValueString = $(".product-buy-card.component .subscription").find("input[name='subscription-service']:checked").val();

    if (subscriptionValueString == 'onetimepurchase') {
        $(".product-buy-card.component input[name='subscription-service']").each(function () {
            var radioVal = $(this).val();
            if (radioVal != subscriptionValueString) {
                $("#subscription-date" + radioVal).hide();
                $(".product-buy-card.component .subdatepicker" + radioVal).hide();
            }

        });
    } else {
        //hide all subscription options date picker except the one selected
        $(".product-buy-card.component input[name='subscription-service']").each(function () {
            var radioVal = $(this).val();
            if (radioVal == subscriptionValueString) {
                var mthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                var dayNames = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

                $("#subscription-date" + radioVal).show();
                $(".product-buy-card.component .subdatepicker" + radioVal).show();

                var currentDate = new Date();
                if (radioVal == '77') {
                    // 3 months
                    currentDate.setMonth(currentDate.getMonth() + 3);
                } else if (radioVal == '80') {
                    // 6 months
                    currentDate.setMonth(currentDate.getMonth() + 6);
                } else if (radioVal == '83') {
                    // 9 months
                    currentDate.setMonth(currentDate.getMonth() + 9);
                }

                var subDateMonth = mthNames[currentDate.getMonth()];
                var subDateDay = currentDate.getDate();
                var displayDate = subDateMonth + ' ' + subDateDay;

                //Convert into Locale Date String
                var localDateString = currentDate.toLocaleDateString();
                var localDateStringArr = localDateString.split('/');
                var currDate = localDateStringArr[1];
                var currMonth = localDateStringArr[0];
                var currYear = localDateStringArr[2];

                if (currDate.length == 1) {
                    currDate = '0' + currDate;
                }
                if (currMonth.length == 1) {
                    currMonth = '0' + currMonth;
                }

                var subscriptionDate = currYear + '-' + currMonth + '-' + currDate;
                $(".product-buy-card.component .subscription").attr('data-subscription-date', subscriptionDate);

                $("#subscription-date" + subscriptionValueString)
                    .datepicker({
                        autoclose: true,
                        startDate: new Date()
                    })
                    .on('change', function () {
                        var dateObj = $("#subscription-date" + subscriptionValueString).datepicker('getDate');
                        var subscriptionDate = dateObj.toLocaleDateString('en-CA');

                        $(".product-buy-card.component .subscription").attr('data-subscription-date', subscriptionDate);

                    }).datepicker("setDate", new Date(currYear, currMonth - 1, currDate));

                $(".product-buy-card.component #subscription-date" + radioVal).val(displayDate);

            } else {
                $("#subscription-date" + radioVal).hide();
                $(".product-buy-card.component .subdatepicker" + radioVal).hide();
            }
        });
    }

}

$(document).ready(function(){


    //show/hide micro product filter MOBILE
    var filterBtn = $(".component.page-list .btn.btn-filter");
    var filter = $(".component.page-list .filter");
    filterBtn.on('click', function(e){
        e.preventDefault();
        if (filter.hasClass('open')){
            closeFilter();
        } else if (!filter.hasClass('open')){
            filter.addClass('open');
            $('body').addClass('filter-open modal-open');
        }

    });
    $('.component.page-list .filter .icon-close').click(function(e){
        e.preventDefault();
        closeFilter();
    });

    function closeFilter(){
        $('body').removeClass('filter-open modal-open');
        filter.removeClass('open');
    }


});
$(function () {
    // var $pageListItem = $('.page-list-item > p');
    //
    // if ($pageListItem.length) {
    //     $pageListItem.succinct({size: 100});
    // } else {
    //     console.info('No items found to succinctify.');
    // }
});

$(document).ready(function(){

    var $mbSpotList = $('.hero-carousel .hero-interactive-hotspot .spots .mobile-list'),
        $spotList = $('.hero-carousel .hero-interactive-hotspot .spots .spot-list'),
        $mbSpots = $('.hero-carousel .hero-interactive-hotspot .mobile-spots');

    $('.hero-carousel .hero-interactive-hotspot .spots .mobile-list, .hero-carousel .hero-interactive-hotspot .mobile-spots, .hero-carousel .hero-interactive-hotspot .spots .spot-list').find('li').on('click',function(){
        var index = $(this).index();
        if ($(this).hasClass('active') === false){
            $spotList.slideUp('fast', function(){
                $mbSpotList.find('.active').removeClass('active');
                $mbSpots.find('.active').removeClass('active');
                $spotList.find('.active').removeClass('active').hide();

                $spotList.find('li').eq(index).addClass('active').show();
                $mbSpots.find('li').eq(index).addClass('active');
                $mbSpotList.find('li').eq(index).addClass('active');

                $spotList.slideDown('fast');
            });
        } else{
            $mbSpots.find('li').removeClass('active');
            $mbSpotList.find('li').removeClass('active');
            $spotList.find('li').removeClass('active').slideUp('fast');
        }
    });


    $spotList.find('a').on('click',function(e){
        if (!$(this).closest('li').hasClass('active') && ($('body').hasClass('tablet') || $('body').hasClass('mobile') || $('body').hasClass('tablet-desktop'))){
            e.preventDefault();
        }
    });


    $(document).mouseup(function(e) {
        var container = $('.hero-carousel .hero-interactive-hotspot .spots .spot-list, .hero-carousel .hero-interactive-hotspot .spots .mobile-list');
        if (!container.is(e.target) && container.has(e.target).length === 0) {
            $mbSpots.find('li').removeClass('active');
            $mbSpotList.find('li').removeClass('active');
            $spotList.find('li').removeClass('active').slideUp('fast');
        }
    });
});
$(function () {

    var log = function(input) {
        return console.log(input);
    }

    // RESP-156
    function updateChannelHeroAnalytics(anchor) {
        var linkDetails = "";

        if (anchor.hasClass("main-link")) {
            linkDetails += "Main link" + "|";
        } else {
            linkDetails += "Sub link" + "|";
        }

        if (anchor.closest(".hcs__section").hasClass("residential")) {
            linkDetails += "Residential" + "|" + anchor.attr("aria-label");
        } else {
            linkDetails += "Business and Industry" + "|" + anchor.attr("aria-label");
        }

        if(!!window._satellite){
            _satellite.track('heroBannerClick', {heroLinkDetails: linkDetails} );
        }

    }

    function initHeroChannelSelector(component) {
        // need to override hero component styles
        if (!$("body").hasClass("hcs-active")) {
            $("body").addClass("hcs-active");
        }

        var imgWrap = component.find(".img-wrap");
        imgWrap.hover(function(){
            if ($(this).closest(".hcs__section").hasClass("residential")) {
                $(this).closest(".hcs__bottom").find(".hcs__section.business-industry").addClass("inactive");
            } else {
                $(this).closest(".hcs__bottom").find(".hcs__section.residential").addClass("inactive");
            }
        }, function() {
            component.find(".hcs__section.inactive").removeClass("inactive");
        });

        // set cookie based on what link was clicked
        $(component).find("a").on("click", function(e) {
            if (component.find("input[name='residential']").length || component.find("input[name='business-industry']").length) {
                var section = $(this).closest(".hcs__section");
                var identifier = section.hasClass("residential") ? "residential" : "business-industry";
                var channelUrl = component.find("input[name='"+ identifier +"']").val();
                var date = new Date();
                date.setTime(date.getTime() + (30 * 24 * 60 * 60 * 1000));
                var expires = "; expires=" + date.toGMTString();
                document.cookie = "channel=" + identifier + expires + ";path=/";
                document.cookie = "channelUrl=" + channelUrl + expires + ";path=/";
            }

            if ($(this).hasClass("main-link") || $(this).hasClass("sublink")) {
                updateChannelHeroAnalytics($(this));
            }

            return true;
        });

        // channel redirect is enabled - redirect on page load
        /*if (component.find("input[name='residential']").length || component.find("input[name='business-industry']").length) {
            var channelIdentifier = readCookie("channel");
            if (channelIdentifier !== undefined && channelIdentifier != null && channelIdentifier.length > 0) {
                var url = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '') + component.find("input[name='"+ channelIdentifier +"']").val() + ".html";
                window.location.replace(url);
            }
        }*/
    }

    $(document).ready(function() {
        var heroChannelSelector = $(".hero-channel-selector.component");
        if (heroChannelSelector.length) {
            heroChannelSelector.each(function(index, elem) {
                initHeroChannelSelector($(elem));
            });
        }
    });
});

$(function () {
// adds class for height selected from hero-interior, removes classes an author might accidentally select 

    $(".hero.component").each(function(index, element) {
        const pntInterior = $(this).find(".pnt-hero-interior");
        const heroInterior = $(this).find(".hero-interior");

        if (heroInterior.first().children(".pnt-hero-interior.desktop-height-small").first().length) {
            $(this).addClass('desktop-height-small');
            pntInterior.removeClass("desktop-height-large");
        }
        if (heroInterior.first().children(".pnt-hero-interior.desktop-height-default").first().length) {
            $(this).addClass('desktop-height-medium');
            pntInterior.removeClass("desktop-height-small");
            pntInterior.removeClass("desktop-height-large");
        }
        if (heroInterior.first().children(".pnt-hero-interior.desktop-height-large").first().length) {
            $(this).addClass('desktop-height-large');
            pntInterior.removeClass("desktop-height-small");
        }
        if (heroInterior.first().children(".pnt-hero-interior.mobile-height-default").first().length) {
            $(this).addClass('mobile-height-default');
            pntInterior.removeClass("mobile-height-fit");
        }
        if (heroInterior.first().children(".pnt-hero-interior.mobile-height-fit").first().length) {
            $(this).addClass('mobile-height-fit');
            pntInterior.removeClass("mobile-height-default");
        }
    });

  
    $(window).load(function() {
        $(".hero.component").each(function(index, element) {
        const heroContentDetails = $(this).find(".owl-item.active").find(".pnt-hero-interior.mobile-height-fit").children(".pnt-hero-interior__content").children(".pnt-hero-interior__content--details");
        const heroContentHeight = heroContentDetails.height();
        const heroInteriorMobileFit = $(this).find(".pnt-hero-interior.mobile-height-fit");
            if (heroInteriorMobileFit.length) {
                heroInteriorMobileFit.css("height", (heroContentHeight + 55 + "px"));
            }
        });
    });
    /*
    * hero.js
    *
    * watches for changes in edit/preview mode and alters the presentation of the component in response.
    *
    * initializes owl.carousel functionality and options
    *
    * */

    var delay, heroComponent, heroGallery, heroGalleryOptions;
    var singleSlide;
    var $HTML = $('html');
    var $BODY = $('body');
    var $HERO = $BODY.find('.hero.component');
    var isEditMode = !!$HTML.hasClass('aem-AuthorLayer-Edit');
    var NAVIGATION = ['<span class="sr-only">Previous</span>', '<span class="sr-only">Next</span>'];
    var videoIndexes = [];
    var carouselItems;
    var packOfVids = [];
    var videoAutoplay = $HERO.data('videoAutoplay') || false;
    var carouselAutoplay = $HERO.data('carouselAutoplay') || false;
    var lastTranslateTime;

    function getDelayInteger() {
        // this function corrects original dialog input of miliseconds (6000)
        // the current dialog is in seconds and will throw a validation error if the delay is > 30
        var num = parseInt(delay);
        var isNum = typeof(num) === 'number';

        if (isNum && num % 1000 === 0 ) {
            return num;
        } else if (isNum) {
            return num * 1000;
        } else {
            return 6000;
        }
    }

    function initCarousel(component) {
        heroGallery = component.find('.owl-carousel.hero-carousel');
        heroGalleryOptions = {
            // autoplay: false,
            center: true,
            items: 1,
            rewind: true,
            margin: 10,
            nav: true,
            navText: true,
            animateOut: 'fadeOut',
            animateIn: 'fadeIn',
            onTranslate: eventRegistered,
            changed: eventRegistered,
            drag: eventRegistered,
            change: eventRegistered,
            resize: eventRegistered,
            onInitialize: eventRegistered,
            onInitialized: eventRegistered
        }
    }

    function eventRegistered(event) {

        /* for autoplay enabled videos we need to control the slide translations manually based on the
        * video length and the carousel delay settings.  For this to work the owl carousel option:
        * autoplay must be false */

        var isVideo = false;
        var item      = event.item;     // Position of the current item

        if (event.type === 'initialized') {
            findVideos();
            if (videoAutoplay  && videoIndexes.length) {
                isVideo = playVideo(0);
            }
            if (!isVideo) {
                if(carouselAutoplay) {
                    lastTranslateTime = Date.now();
                    setTimeout(function() {
                            heroGallery.trigger('next.owl.carousel');
                    },delay * 1000);
                }
            }
        }

        if (event.type === 'translate') {
            if (videoAutoplay  && videoIndexes.length) {
                isVideo = playVideo(item.index);
            }
            if (!isVideo) {
                lastTranslateTime = Date.now();
                if(carouselAutoplay) {
                    setTimeout(function() {
                        if (isTimeToChangeSlide()) {
                            heroGallery.trigger('next.owl.carousel');
                        }
                    },delay * 1000);
                }
            }
        }

        checkForHeroChannelSelector();
    }

    function isTimeToChangeSlide() {
        return Date.now() - lastTranslateTime  >= delay * 1000;
    }

    function playVideo(ind) {
        /* check if there is a video at that index and execute play */
        // debugger;
        var thisVideo = videoIndexes.indexOf(ind);
        if (thisVideo >= 0) {
            var videoElem = carouselItems[ind];
            var videoElement = $(videoElem).find('video')[0];
            $(videoElement).trigger('play');
            return true;
        }

        return false;
    }

    function transitionSlideOnVideoCompletion() {
        packOfVids.forEach(function iterateEachVideo(video) {
            video[0].addEventListener('ended', function triggerOwlTransition() {
                heroGallery.trigger('next.owl.carousel');
            });
        })
    }

    function findVideos() {

        /* use this to get the index numbers of video slides */
        carouselItems = singleSlide ? heroGallery.find('.video-holder') : heroGallery.find('.owl-item');

        for (var i = 0; i < carouselItems.length; i += 1) {

            var video = $(carouselItems[i]).find('video');

            if (video.length > 0) {
                videoIndexes.push(i);
                packOfVids.push(video);
            }
        }

        if (packOfVids.length > 0) {
            // use this to add ended listeners?
            transitionSlideOnVideoCompletion();
        }
    }

    /*
    * Need to check for the Hero Channel Selector component to override default hero styles
    */
    function checkForHeroChannelSelector() {
        var heroCarousel = $HERO.find(".hero-carousel");
        if (heroCarousel.find(".item").length < 2) {
            if (items.find(".hero-channel-selector.component").length) {
                $BODY.addClass("hcs-active");
            }
        } else {
            setTimeout(function(){
                var activeItem = heroCarousel.find(".owl-item.active");
                if (activeItem.length) {
                    if (activeItem.find(".hero-channel-selector.component").length) {
                        $BODY.addClass("hcs-active");
                    } else {
                        if ($BODY.hasClass("hcs-active")) {
                            $BODY.removeClass("hcs-active");
                        }
                    }
                }
            }, 0);
        }
    }

    $BODY.on('pentair.init', function (event) {
        if (event) {
            heroComponent = $(event.target).find('.hero');
        } else {
            heroComponent = $HERO;
        }
        // Authored delay
        delay = heroComponent.find('.owl-carousel.hero-carousel').data('carouselDelay');

        if (heroComponent.length) {
            singleSlide = heroComponent.find('.item').length < 2;
            if (singleSlide){
                heroGallery = heroComponent.find('.owl-carousel.hero-carousel');
                findVideos();
                playVideo(0);
            } else {
                initCarousel(heroComponent);
                heroComponent.addClass('owl-carousel-active');
                if (heroGallery && heroGallery.length) {
                    heroGallery.owlCarousel(heroGalleryOptions);
                }
            }
        } 
    });

    $HTML.watch({
        properties: "attr_class",
        watchChildren: false,
        interval: 100,
        callback: function (data, i) {
            var newValue = data.vals[i].replace(/(^\s+|\s+$)/g, '');
            if (newValue === 'aem-AuthorLayer-Edit') {
                isEditMode = true;
                $BODY.trigger('pentair.init');
                $HERO.addClass('hero-edit');
            } else if (newValue === 'aem-AuthorLayer-Preview') {
                isEditMode = false;
                $BODY.trigger('pentair.init');
            } else {
                isEditMode = false;
            }
        }
    });

});

$(document).ready(function() {
    var $help = $('.help');
    var $chosenHelp = $(".help .help-chosen");
    var $helpWrap = $help.find('.wrap');
    var $dummy = $(".help .dummy");
    var $body = $("body");
    var $hideBefore = $help.find(".hide-before");
    var $solutionsButton = $help.find("button");
    var $searchButton = $('a.icon-search');


    //chosen
    $chosenHelp.chosen({disable_search: true, inherit_select_classes: true});
    $('.help select.help-chosen').each(function(){
        $(this).after('<span class="arrow" aria-hidden="true"></span>');
    });
    $dummy.on('click',function(evt){
        evt.stopPropagation();
        $chosenHelp.trigger('chosen:open');
        $('html,body').animate({
            scrollTop: ($help.offset().top + $help.height()) - $(window).height()
        }, 300);
    });

    //show help overlay on selection or search if search is selected
    $chosenHelp.on('change',function(evt){
        var selectedClass = $(".help-chosen option:selected").attr('class');
        var helpOffset = $help.offset().top - 50;
        if (selectedClass == '') {
            $help.removeClass('open');
            clearChecks();
            $body.removeClass('modal-open');
        } else if(selectedClass == 'search-option'){
            $searchButton.removeClass('open');
            $('#searchModal').modal("show");
            $('#siteSearch').focus();
            $body.removeClass('modal-open');
        } else {
            var selectedIndex = selectedClass.substring(4);
            $selectedCategory = $hideBefore.find(".category-list-" + selectedIndex);

            if ($selectedCategory.data("category-link")) {
                // Less than two solutions and link present. Navigate!
				buildDataLayerObj("choosen-redirect");
                location.href = $selectedCategory.data("category-link");
            } else {
                if (!$help.hasClass('open')){
                    $helpWrap.css({ 'top': helpOffset});
                    $helpWrap.delay(500).animate({
                        top: 0
                    }, 500);
                }
                $hideBefore.find(".category-list-item").addClass("hide");
                $selectedCategory.removeClass("hide");
                $help.addClass('open');
                clearChecks();
                $body.addClass('modal-open');

            }
        }
    });

    //show search if search option is already selected but user re-opens and selects it again
    $chosenHelp.on('chosen:hiding_dropdown',function(evt){
        if($(".help-chosen option:selected").attr('class') == 'search-option'){
            $searchButton.removeClass('open');
            $('#searchModal').modal("show");
            $body.removeClass('modal-open');
        }
    });

    //close help overlay
    $help.find('.icon-close').on('click', function(e){
        e.preventDefault();
        $help.removeClass('open');
        $helpWrap.attr('style','');
        clearChecks();
        $body.removeClass('modal-open');
    });

    //fire checkbox on click
    $help.find("input:checkbox").on('click', function() {
        checkBox($(this));
    });

    //open solutions link
    $solutionsButton.on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
		buildDataLayerObj("solution-btn");
        location.href = $(this).data("solution-link");
    });
	function buildDataLayerObj(type){
		////////////////////////////////////////////////////////
		//// building data analytics layer object start ///////
		//////////////////////////////////////////////////////
		try{
			var helpWith = $('#helpWith').val();
			if( 'choosen-redirect'  !== type ){
				var $chekedItem = $help.find("input[type=checkbox]:checked")
				var subFilter1 = $chekedItem.parent().find('span').text();
				helpWith = helpWith+":"+subFilter1;
			}
			
			if( digitalData.search ){
				digitalData.search.searchType = "guided site search";
				digitalData.search.searchLocation = window.location.pathname;
				/* digitalData.search.searchQuery = self.keyword();
				digitalData.search.resultsNumber = self.totalResultsCount(); */
				digitalData.search.searchFilter = helpWith;
			}
			if( digitalData.event ){
				digitalData.event.eventName = "guided site search"
				digitalData.event.type = "search form"
				digitalData.event.timeStamp = new Date(); 
			}
		}catch(err) {
			console.log(err)
		}
		////////////////////////////////////////////////////////
		///// building data analytics layer object end  ///////
		//////////////////////////////////////////////////////
	}
    //check off 1 box at a time
    function checkBox(item){
        var $box = item;
        $box.closest('ul').find('li').removeClass('active');
        $box.closest('li').addClass('active');
        $help.find('.btn').prop('disabled', false);
        if ($box.is(":checked")) {
            var group = "input:checkbox[name='" + $box.attr("name") + "']";
            $(group).prop("checked", false);
            $box.prop("checked", true);
            $solutionsButton.data("solution-link",$box.data("solution-link"));
        } else {
            $box.prop("checked", false);
            $solutionsButton.data("solution-link","");
        }
    }

    //clear all checks for help
    function clearChecks(){
        $help.find('.radios li').removeClass('active');
        $help.find("input:checkbox").each(function(){
            $(this).prop("checked", false);
        });
        // $help.find('.btn').prop('disabled', true);
    }

    //close help on escape
    $(document).keyup(function(e) {
        if (e.keyCode == 27) { // escape key maps to keycode `27`
            $help.removeClass('open');
            clearChecks();
            $body.removeClass('modal-open');
        }
    });
});


$(function() {

    setSVG();

    var featuredComponent, featuredGallery, featuredGalleryOptions;
    var slides = true;
    var $HTML = $('html');
    var $BODY = $('body');
    var $GALLERY = $BODY.find('.featured-carousel.owl-carousel');
    var isEditMode = !!$HTML.hasClass('aem-AuthorLayer-Edit');
    var NAVIGATION = ['<span class="sr-only">Previous</span>', '<span class="sr-only">Next</span>'];

    function setSVG() {
        $('.featured-carousel.component img[src$=".svg"]').each(function() {
            var $img = jQuery(this);
            var imgURL = $img.attr('src');
            var attributes = $img.prop("attributes");

            $.get(imgURL, function(data) {
                // Get the SVG tag, ignore the rest
                var $svg = $(data).find('svg');

                // Remove any invalid XML tags
                $svg = $svg.removeAttr('xmlns:a');

                // Loop through IMG attributes and apply on SVG
                $.each(attributes, function() {
                    $svg.attr(this.name, this.value);
                });

                // Replace IMG with SVG
                $img.replaceWith($svg);
                $svg.get(0).setAttribute('preserveAspectRatio', 'xMidYMin meet');
            }, 'xml');
        });
    }

    function initCarousel(component) {
        featuredGallery = component.find('.owl-carousel.featured-carousel');
        featuredGalleryOptions = {
            loop: function() {
                return slides;
            },
            dots: false,
            nav: function() {
                return slides;
            },
            navText: function() {
                return slides;
            } ? NAVIGATION : false,
            navContainer: "#featuredNav",
            autoHeight: true,
            // Auto rotation
            autoplay: false,
            mouseDrag: false,
            responsiveClass: true,
            center: true,
            margin: 15,
            autoWidth: true,
            responsive: {
                0: {
                    stagePadding: 20,
                    items: 1
                },
                768: {
                    stagePadding: 150,
                    items: 1
                },
                992: {
                    stagePadding: 230,
                    items: 1
                }
            },
            onInitialized: function() {
                setSVG();
            },
            onResize: function() {
            }
        };
    }

    $BODY.on('pentair.init', function(event) {

        if(event) {
            featuredComponent = $(event.target).find('.featured-carousel.component');
        } else {
            featuredComponent = $GALLERY;
        }

        if(featuredComponent.length) {

            slides = featuredComponent.find('.item').length >= 2;
            if(slides) {
                initCarousel(featuredComponent);
                featuredComponent.addClass('owl-carousel-active');
            } else {
                featuredComponent.find('.item').addClass('active');
            }

            if(featuredGallery && featuredGallery.length) {
                featuredGallery.owlCarousel(featuredGalleryOptions);

                ////////////////////////////////////////////////////
                ////////Analytics datalayer chagnes start//////////
                //////////////////////////////////////////////////
                featuredGallery.on('changed.owl.carousel', function(e) {
                    if(featuredGallery.find('.owl-item').eq(e.item.index).length) {
                        // var currentOwlItem = featuredGallery.find('.owl-item').eq(e.item.index); // unused variable 1/17/19
                        var prodName = featuredGallery.find('.owl-item').eq(e.item.index).find('.images h4').text();
                        updateDataLayerObj(prodName, "impression");
                    }
                });
                ////////////////////////////////////////////////////
                ////////Analytics datalayer chagnes end////////////
                //////////////////////////////////////////////////

            } else {
                //console.warn('The hero carousel is on the page, however it has not been authored.')
            }
        }
    });

    ////////////////////////////////////////////////////////
    //// building data analytics layer object start ///////
    //////////////////////////////////////////////////////

    $GALLERY.on('click', '.owl-item .buttons .btn-primary', function(event) {
        var prdtName = $(this).closest('.item').find('.images h4').text();
        updateDataLayerObj(prdtName, "click");
    });

    function updateDataLayerObj(productName, eventAction) {
        try {
            if(digitalData) {

                if(digitalData.internalCampaign) {
                    digitalData.internalCampaign.featuredProductName = productName;
                }
                if(digitalData.event) {
                    var eventData = {};
                    eventData.eventName = "featured product";
                    eventData.eventAction = eventAction;
                    eventData.type = "internal campaign";
                    eventData.timeStamp = new Date();
                    digitalData.event.push(eventData);
                }

            }

        } catch(err) {
            console.log(err);
        }
    }

    ////////////////////////////////////////////////////////
    ///// building data analytics layer object end  ///////
    //////////////////////////////////////////////////////

    $HTML.watch({
        properties: "attr_class",
        watchChildren: false,
        interval: 100,
        callback: function(data, i) {
            var newValue = data.vals[i].replace(/(^\s+|\s+$)/g, '');
            if(newValue === 'aem-AuthorLayer-Edit') {
                isEditMode = true;
                $BODY.trigger('pentair.init');
                $GALLERY.addClass('gallery-edit');
            } else if(newValue === 'aem-AuthorLayer-Preview') {
                isEditMode = false;
                $BODY.trigger('pentair.init');
            } else {
                isEditMode = false;
            }
        }
    });

});

////////////////////////////////////////////////////////////////
///////////////building data layer oject////////////////////////
////////////////////////////////////////////////////////////////

$(document).ready(function(){
    try{
        if(digitalData.resource){
            var eventData = {};
            $('.item .downloads .downloads-resources .pdf').on('click',function(e) {
                var timeStamp = new Date();
                digitalData.resource.resourceName = $(this).text();
                eventData.eventName = "resource";
                eventData.eventAction = "click";
                eventData.type = "resource library";
                eventData.timeStamp = timeStamp;
                digitalData.event.push(eventData);
            });
        }
    }catch(err){
        console.log(err);
    }

    // Adobe analytics
    var downloadsElement = document.querySelector("[class='downloads-resources']");
    if (downloadsElement) {
        var downloadLinks = downloadsElement.querySelectorAll("a[href*='.pdf']");
        for (var i = 0; i < downloadLinks.length; i++) {
            downloadLinks[i].addEventListener('click', trackDownloadsLinkClick);
        }
    }

    function trackDownloadsLinkClick() {
        var eventProductInfoDownloadPayload = {
            eventName: 'click for product download',
            eventType: 'event',
            visitor: {
                pentairCustomerID: getPentairCustomerID(),
                dealerID: getDealerID()
            },
            page: {
                pageCanonical: getPageViewPageAttribute('pageCanonical'),
                pageName: getPageViewPageAttribute('pageName'),
                pagePath: getPageViewPageAttribute('pagePath'),
                pageType: getPageViewPageAttribute('pageType'),
                pageURL: getPageViewPageAttribute('pageURL'),
                pageTitle: getPageViewPageAttribute('pageTitle'),
                pageSEOTags: getPageViewPageAttribute('pageSEOTags'),
                businessUnitID: getPageViewPageAttribute('businessUnitID'),
                subBrand: getPageViewPageAttribute('subBrand'),
                language: getPageViewPageAttribute('language'),
                author: getPageViewPageAttribute('author'),
            },
            product: {
                productName: getPageViewProductAttribute('productName'),
                skuID: getPageViewProductAttribute('skuID'),
                type: getPageViewProductAttribute('type')
            }
        }
        trackEventWithQueue(eventProductInfoDownloadPayload);
    }
});

////////////////////////////////////////////////////////////////
///////////////building data layer oject////////////////////////
////////////////////////////////////////////////////////////////

(function() {

    var CTABuyOnline = function(componentElement) {
    var self = this;

    // Fire all 'on click' event analytics tracking methods
    self.buyOnlineAnalyticsEvents = function () {
        trackWTBClickEvent();
        constructAlgoliaAnalyticsWTBObject();
        return true;
    }

    // [SEAP-145] - Algolia WTB Conversion Tracking
    function constructAlgoliaAnalyticsWTBObject() {
        var queryParams = window.location.href.indexOf("?") !== -1;
        if (queryParams) {
            var search = window.location.search.substring(1);
            var params = JSON.parse('{"' + decodeURI(search).replace(/&/g, '","').replace(/=/g, '":"') + '"}');
            if (params.hasOwnProperty("queryID") && params.hasOwnProperty("objectID") && params.hasOwnProperty("indexName")) {
                var userToken = "";
                if (typeof _satellite !== undefined && _satellite != null) {
                    userToken = _satellite.getVisitorId().getMarketingCloudVisitorID();
                }
                // attach to window object with conversion tracking details
                aa('convertedObjectIDsAfterSearch', {
                    userToken: userToken,
                    eventName: 'Where_To_Buy',
                    index: params.indexName,
                    queryID: params.queryID,
                    objectIDs: [params.objectID]
                });
            }
        }
        return true;
    }

    // Abode Analytics
    // Tracks the WTB button click event
    function trackWTBClickEvent() {
        var eventWTBPayload = {
            eventName: 'WTB click',
            eventType: 'event',
            attributes: {
                visitor: {
                    pentairCustomerID: getPentairCustomerID(), //if this is available
                    dealerID: getDealerID(), //if this is available
                    distributorID: getDistributorID() //if this is available
                },
                page: {
                    pageCanonical: getPageViewPageAttribute("pageCanonical"),
                    pageName: getPageViewPageAttribute("pageName"),
                    pagePath: getPageViewPageAttribute("pagePath"),
                    pageType: getPageViewPageAttribute("pageType"),
                    pageURL: getPageViewPageAttribute("pageURL"),
                    pageTitle: getPageViewPageAttribute("pageTitle"),
                    pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                    businessUnitID: getPageViewPageAttribute("businessUnitID"),
                    subBrand: getPageViewPageAttribute("subBrand"),
                    language: getPageViewPageAttribute("language"),
                    author: getPageViewPageAttribute("author"),
                },
                product: {
                    skuID: self.productSku,
                    productName: getPageViewProductAttribute("productName"),
                    type: getPageViewProductAttribute("type")
                }
            }
        }
        trackEventWithQueue(eventWTBPayload);
    }
};

    $(document).ready(function () {
        $('.buy-online-cta').each(function () {
            try {
                ko.applyBindings(new CTABuyOnline($(this)), this);
            } catch (e) {
                console.log(e);
            }
        });
    });

})();
(function() {

    var CTABuyLocal = function(componentElement) {
    var self = this;

    // Fire all 'on click' event analytics tracking methods
    self.buyLocalAnalyticsEvents = function () {
        trackWTBClickEvent();
        constructAlgoliaAnalyticsWTBObject();
        return true;
    }

    // [SEAP-145] - Algolia WTB Conversion Tracking
    function constructAlgoliaAnalyticsWTBObject() {
        var queryParams = window.location.href.indexOf("?") !== -1;
        if (queryParams) {
            var search = window.location.search.substring(1);
            var params = JSON.parse('{"' + decodeURI(search).replace(/&/g, '","').replace(/=/g, '":"') + '"}');
            if (params.hasOwnProperty("queryID") && params.hasOwnProperty("objectID") && params.hasOwnProperty("indexName")) {
                var userToken = "";
                if (typeof _satellite !== undefined && _satellite != null) {
                    userToken = _satellite.getVisitorId().getMarketingCloudVisitorID();
                }
                // attach to window object with conversion tracking details
                aa('convertedObjectIDsAfterSearch', {
                    userToken: userToken,
                    eventName: 'Where_To_Buy',
                    index: params.indexName,
                    queryID: params.queryID,
                    objectIDs: [params.objectID]
                });
            }
        }
        return true;
    }

    // Abode Analytics
    // Tracks the WTB button click event
    function trackWTBClickEvent() {
        var eventWTBPayload = {
            eventName: 'WTB click',
            eventType: 'event',
            attributes: {
                visitor: {
                    pentairCustomerID: getPentairCustomerID(), //if this is available
                    dealerID: getDealerID(), //if this is available
                    distributorID: getDistributorID() //if this is available
                },
                page: {
                    pageCanonical: getPageViewPageAttribute("pageCanonical"),
                    pageName: getPageViewPageAttribute("pageName"),
                    pagePath: getPageViewPageAttribute("pagePath"),
                    pageType: getPageViewPageAttribute("pageType"),
                    pageURL: getPageViewPageAttribute("pageURL"),
                    pageTitle: getPageViewPageAttribute("pageTitle"),
                    pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                    businessUnitID: getPageViewPageAttribute("businessUnitID"),
                    subBrand: getPageViewPageAttribute("subBrand"),
                    language: getPageViewPageAttribute("language"),
                    author: getPageViewPageAttribute("author"),
                },
                product: {
                    skuID: self.productSku,
                    productName: getPageViewProductAttribute("productName"),
                    type: getPageViewProductAttribute("type")
                }
            }
        }
        trackEventWithQueue(eventWTBPayload);
    }

};

    $(document).ready(function () {
        $('.buy-locally-cta').each(function () {
            try {
                ko.applyBindings(new CTABuyLocal($(this)), this);
            } catch (e) {
                console.log(e);
            }
        });
    });

})();

$(function () {
    var cookieCta;
    var cookieElem = $(".cookie-cta");

    // Element below footer has same height as cookie-cta, footer is not covered when at bottom of page.
    var updateHeight = function () {
        $('.cookie-cta-placeholder').css('height', cookieElem.outerHeight());
    };

    var updateVisibility = function () {
        cookieCta = Cookies.get('cookieCta');

        if (!cookieCta || cookieCta!=='hide') {
            cookieElem.css('display', 'flex');
            $('body').append('<div class="cookie-cta-placeholder"></div>');
            updateHeight();

        } else if (cookieCta==='hide') {
            $('.cookie-cta-placeholder').css('height', 0);
            cookieElem.hide();
        }
    };

    $('.cookie-cta a.icon-close').click(function (e) {
        e.preventDefault();
        if (!cookieCta) {
            Cookies.set('cookieCta', 'hide', {expires: 90});
        }
        updateVisibility();
    });

    $(window).resize($.throttle(updateHeight, 100));

    updateVisibility();
});

$(document).ready(function() {

    var regex = /(%22)+/g;
    var showParam;
    try {
        var queryString = location.search.substring(1);
        queryString = queryString.replace(regex, '_');
        var urlParams = queryString ? JSON.parse('{"' + decodeURI(queryString.replace(/&/g, "\",\"").replace(/=/g, "\":\"")) + '"}') : {};
        showParam = urlParams["show"] || "";
    } catch (message) {
        var params = new URLSearchParams(window.location.search);
        showParam = params.get("show") || "";
    }
    if (showParam == "local") {
        $('#channelAdvisor').hide();
        $(document).find('section.toolbar').hide();
    } else {
        var backgroundColor = $('#channelAdvisor iframe').closest('section').css('background-color');
        //$('#channelAdvisor iframe').iFrameResize({bodyBackground: backgroundColor});
    }
});
$(function () {
    var $categoryComponent = $('.category-selection.component');
    if (!$categoryComponent.length) {
        return;
    }

    var $categoryChosen = $categoryComponent.find('select'),
        $newContent = $('.swap-area .new-content'),
        $noContent = $('.swap-area .no-content'),
        $swapArea = $('.swap-area, .sticky-category-container'),
        $choice;

    function testForValueMatch(element, category) {
        if (category===$choice) {
            element.style.display = 'block';
        } else {
            element.style.display = 'none';
        }
    }

    function displaySelection() {
        /*$articleContents.length*/
        if ($newContent.children('div').length) {
            $.each($newContent.children('div'), function (index, element) {
                testForValueMatch(element, element.dataset.categoryItem);
            });
        }
    }

    function contentReveal() {
        displaySelection();
        $swapArea.addClass('swapped');
        $newContent.slideDown('slow');
    }

    $categoryChosen.on('input', function () {

        $choice = $('#catSelection').val();

        if ($choice.length) {

            if (!$swapArea.hasClass('swapped')) {
                // $swapArea.addClass('swapped');
                $noContent.slideUp('slow', function () {
                    contentReveal();
                });
            } else {
                // $swapArea.removeClass('swapped');
                $newContent.slideUp('slow', function () {
                    contentReveal();
                });
            }
        }
    });

    $button = $('.sticky-category-container > button').on('click', function() {
        $('html, body').animate({scrollTop: '0px'}, 800);
    });
});

var FilterViewModel = function(data, filterFields){
    var self = this;
    self.dataArray = data;
    self.Category = ko.observableArray();       // list of all category filters
    self.Type = ko.observableArray();           // list of all type filters
    self.Audience = ko.observableArray();       // list of all audience filters
    self.showMobileFilter = ko.observable(false);
    self.selectedList = ko.observableArray();

    self.closeMobileFilter = function () {
        self.showMobileFilter(false);
    };

    self.openMobileFilter = function () {
        self.showMobileFilter(true);
    };

    self.selected = ko.computed(function(){
        return self.selectedList().reduce(function(selectObject, elem){
            selectObject[elem.filterGroup].push(elem.filterName);
            return selectObject;
        }, { Category : ko.observableArray(), Type : ko.observableArray(), Audience: ko.observableArray() });
    });

    self.filterGroups = ko.observableArray(filterFields); //['Category', 'Type', 'Audience']

    self.filteredEventList = ko.computed(function(){
        var filtered = self.dataArray().filter(function(elem){
            var categoryArray = elem.categories ? elem.categories.split('|') : [];
            var categoryInclude = self.selected().Category().filter(function(category){return categoryArray.indexOf(category) !== -1;}).length > 0;
            var typeArray = elem.type ? elem.type.split('|') : [];
            var typeInclude = self.selected().Type().filter(function(type){return typeArray.indexOf(type) !== -1;}).length > 0;
            var audienceArray = elem.audience ? elem.audience.split('|') : [];
            var audienceInclude = self.selected().Audience().filter(function(audience){return audienceArray.indexOf(audience) !== -1;}).length > 0;
            if(self.selected().Category().length === 0 && self.selected().Type().length === 0 && self.selected().Audience().length === 0){
                return true;
            }
            return (self.selected().Category().length > 0 ? categoryInclude : false) || (self.selected().Type().length > 0 ? typeInclude : false) || (self.selected().Audience().length > 0 ? audienceInclude : false);
        });
        return filtered;
    }).extend({ throttle: 250 });

    var matchIndex = function (filterGroup, filterName) {
        var matchIndex = -1;

        $(self.selectedList()).each(function(index, elem){
            if(elem['filterGroup'] === filterGroup && elem['filterName'] === filterName){ 
                matchIndex = index; 
                return;
            }
        });

        return matchIndex;
    };

    self.removeSelected = function(filterGroup, filterName){
        var index = matchIndex(filterGroup, filterName);
        self.selectedList.splice(index, 1);
    };

    self.checkboxClick = function (filterGroup, filterName) {
        var filterIndex = matchIndex(filterGroup, filterName);
        if(filterIndex !== -1){
            self.removeSelected(filterGroup, filterName);
        } else if(filterIndex === -1){
            self.selectedList.push({filterGroup: filterGroup, filterName: filterName});
        }
    };

    self.init = function(){
        var category = [];
        var type = [];
        var audience = [];

        var countContainer = {};

        var counterHelper = function(filterObj, filterName){
            filterObj[filterName] = filterObj[filterName] ? filterObj[filterName] + 1 : 1;
            return filterObj;
        };

        $(self.dataArray()).each(function(index, elem){
            if(elem.categories) { 
                category = category.concat(elem.categories.split('|')); 
            }
            if(elem.type) { 
                type = type.concat(elem.type.split('|')); 
            }
            if(elem.audience) {
                audience = audience.concat(elem.audience.split('|'));
            }
        });

        // Counts of how many events for each filter.
        self.count = {};
        self.count['Category'] = category.reduce(counterHelper, {});
        self.count['Type'] = type.reduce(counterHelper, {});
        self.count['Audience'] = audience.reduce(counterHelper, {});

        // Init filter selections
        self.selectedList([]);

        // All filters, sans repeats.
        self.Category(ko.utils.arrayGetDistinctValues(category).sort());
        self.Type(ko.utils.arrayGetDistinctValues(type).sort());
        self.Audience(ko.utils.arrayGetDistinctValues(audience).sort());
    };

    self.count = {};

    self.displayCount = function(category, filter){
        return '(' + self.count[category][filter] + ')';
    };

    self.showFilters = ko.computed(function(){
        return (self.Category().length + self.Type().length + self.Audience().length) > 0;
    });

    self.showFilter = function (filterName) {
        return self[filterName]().length > 0;
    }
};


$(function() {

    'use strict';

    var CalendarEventsViewModel = function(componentElem) {
        var self = this;

        var calendarElem = componentElem.find('.calendar-container');

        self.specifiedView = 'month';

        // Static Params
        self.calendarBaseParams = {
            header: {
                left:   'prev,next today',
                center: 'title',
                right: 'month, listMonth'
            },
            titleFormat: 'MMMM YYYY',
            columnHeaderFormat: 'dddd',
            aspectRatio: 1.38,
            eventLimit: true,
            eventRender: function (event, element) {
                var anchor = element.prop('tagName') === 'A' ? element : element.find('a');
                if(event.id && anchor.length > 0){
                    anchor.attr('href', '/' + event.id.replace(/_/g,'/') + '.html');
                }
            }
        };

        self.searchBaseParams = {
            pageApp: 'events_calendar',
            count:  '9999'
        };

        self.snpUrl = calendarElem.data('snp-address');

        // Observables
        self.eventList = ko.observableArray();

        self.filters = new FilterViewModel(self.eventList, ['Category', 'Type', 'Audience']);

        // right now this is unused because only 1 axjax call is ever made - containing all events
        self.snpEqualsParams = ko.computed(function(){
            var filterList = [
                { name: 'Category', value: self.filters.selected().Category() },
                { name: 'Type', value: self.filters.selected().Type() },
                { name: 'Audience', value: self.filters.selected().Audience() }
            ];

            var filterObj = {};
            
            $(filterList).each(function(index, elem){
                if(elem['name'] && elem['value']){
                    filterObj['sp_x_' + (index + 1)] = elem['name'];
                    filterObj['sp_q_' + (index + 1)] = elem['value'];
                }
            });

            return filterObj;
        });

        self.searchParams = ko.computed(function(){
            var filterParams = self.snpEqualsParams();
            var params = $.extend({}, self.snpEqualsParams(), self.searchBaseParams);
            return params;
        });

        self.calendarParams = ko.computed(function(){
            var events = { events: self.filters.filteredEventList() };
            var params = $.extend(true, {}, events, self.calendarBaseParams);
            return params;
        });

        // sample data
        //self.eventList([{title: 'All Day Event',start: '2018-07-01', type: 'big', audience: 'cool people', category: 'hockey'},{title: 'Long Event',start: '2018-07-07',end: '2018-03-10', type: 'big', audience: 'cool people', category: 'baseball'},{id: 999,title: 'Repeating Event',start: '2018-07-09T16:00:00'},{id: 999,title: 'Repeating Event',start: '2018-07-16T16:00:00'},{title: 'Conference',start: '2018-03-11',end: '2018-07-13'},{title: 'Meeting',start: '2018-03-12T10:30:00',end: '2018-07-12T12:30:00'},{title: 'Lunch',start: '2018-07-12T12:00:00'},{title: 'Meeting',start: '2018-07-12T14:30:00'},{title: 'Happy Hour',start: '2018-07-12T17:30:00'},{title: 'Dinner',start: '2018-07-12T20:00:00'},{title: 'Birthday Party',start: '2018-07-13T07:00:00'},{title: 'Click for Google',url: 'http://google.com/',start: '2018-07-28'}]);

        // Subscriptions
        self.filters.filteredEventList.subscribe(function(){
            self.specifiedView = calendarElem.fullCalendar('getView').name || 'month';
            calendarElem.fullCalendar('destroy');
            calendarElem.fullCalendar(self.calendarParams());
            checkView();
        });

        // Ajax Related
        var doSearch = function () {
            $.ajax({
                dataType: "json",
                url: self.snpUrl,
                data: self.searchParams()
            }).done(function(data) {
                self.eventList(data.results);
                self.filters.init();
            });
        };

        function getView() {
            if($('body').hasClass('mobile')) {
                return 'listMonth';
            } else {
                return self.specifiedView;
            }
        }

        //change view depending on current viewpoint size
        function checkView(){
            calendarElem.fullCalendar('changeView', getView());
        }

        // Initialization
        var initEvents = function () {
            var resizeCal;
            $(window).on('resize', function(e) {
                clearTimeout(resizeCal);
                resizeCal = setTimeout(function() {
                    checkView();
                }, 250);
            });
            checkView();
        };

        var init = function(){
            initEvents();
            doSearch();
        };

        init();
    };

    var calendarComponents = $('.calendar-events.component');

    calendarComponents.each(function(index, elem){
        ko.applyBindings(new CalendarEventsViewModel($(elem)), elem);
    });

});
$(function(){
    "use strict";

    if($(".pool-volume.component").length > 0) {
        var url = window.location.search.substring(1);
        // All Pool Volume URLs would have these query params in common if coming from a Share Link
        if(url.indexOf("shape=") !== -1 && url.indexOf("&deepEnd=") !== -1 && url.indexOf("&shallowEnd=") !== -1 &&  url.indexOf("&results=") !== -1) {
            getShapeUrlParams(url);
        } else {
            if(window.innerWidth > 767) {
                document.getElementsByClassName("pv-tab-container")[0].classList.add("rectangular-active");
                document.querySelectorAll("dt.rectangle")[0].classList.add("active");
                document.querySelectorAll("dt.rectangle > button")[0].setAttribute("aria-expanded", "true");
                document.querySelectorAll("dd#rectangle")[0].removeAttribute("hidden");
            } else {
                document.querySelectorAll(".tabs")[0].setAttribute("data-allow-toggle", "");
            }
        }

        Array.prototype.slice.call(document.querySelectorAll('.tabs')).forEach(function (accordion) {

            // Allow for multiple accordion sections to be expanded at the same time
            var tabsVertical = accordion.hasAttribute('data-tabs-vertical');
            // Allow for each toggle to both open and close individually
            var allowToggle = accordion.hasAttribute('data-allow-toggle');

            // Create the array of toggle elements for the accordion group
            var triggers = Array.prototype.slice.call(accordion.querySelectorAll('dt>button'));
            var panels = Array.prototype.slice.call(accordion.querySelectorAll('dd'));

            accordion.addEventListener('click', function (event) {
                var target = event.target;
                var targetText = event.target.innerText.trim().toLowerCase();
                var tabs = $("dl.tabs");
                var activeEl = $(this).find("dt.active");
                var tabContainer = document.getElementsByClassName("pv-tab-container")[0];

                if (target.tagName === "BUTTON" && target.classList.contains("tab-btn")) {
                    // Check if the current toggle is expanded.
                    var isExpanded = target.getAttribute('aria-expanded') == 'true';

                    var active = accordion.querySelector('[aria-expanded="true"]');

                    if(active != null) {
                        // without allowMultiple, close the open accordion
                        if (active !== target) {
                            // Set the expanded state on the triggering element
                            active.setAttribute('aria-expanded', 'false');
                            // Hide the accordion sections, using aria-controls to specify the desired section
                            document.getElementById(active.getAttribute('aria-controls')).setAttribute('hidden', '');
                            activeEl.removeClass("active");
                            Array.prototype.slice.call(tabContainer.classList).forEach(function(className) {
                                if(className.includes("-active")) {
                                    tabContainer.classList.remove(className);
                                }
                            });
                            // When toggling is not allowed, clean up disabled state
                            if (!allowToggle) {
                                active.removeAttribute('aria-disabled');
                            }
                        }
                    }

                    if (!isExpanded) {
                        // Set the expanded state on the triggering element
                        target.setAttribute('aria-expanded', 'true');
                        // Hide the accordion sections, using aria-controls to specify the desired section
                        document.getElementById(target.getAttribute('aria-controls')).removeAttribute('hidden');

                        $(target).closest("dt").addClass("active");
                        $(target).closest(".pv-tab-container").addClass(targetText+"-active");

                        // If toggling is not allowed, set disabled state on trigger
                        if (!allowToggle) {
                            target.setAttribute('aria-disabled', 'true');
                        }
                    } else if (allowToggle && isExpanded) {
                        // Set the expanded state on the triggering element
                        target.setAttribute('aria-expanded', 'false');
                        // Hide the accordion sections, using aria-controls to specify the desired section
                        document.getElementById(target.getAttribute('aria-controls')).setAttribute('hidden', '');
                        activeEl.removeClass("active");
                    }
                    event.preventDefault();
                }
            });

            // Minor setup: will set disabled state, via aria-disabled, to an
            // expanded/ active accordion which is not allowed to be toggled close
            if (!allowToggle) {
                // Get the first expanded/ active accordion
                var expanded = accordion.querySelector('[aria-expanded="true"]');

                // If an expanded/ active accordion is found, disable
                if (expanded) {
                    expanded.setAttribute('aria-disabled', 'true');
                }
            }
        });

        /*
            Perform Pool Volume Calculations
        */

        // Rectangular
        var buttonRect = document.getElementById("buttonRectangular");
        buttonRect.addEventListener("click", function(e) {
            var deepEndVal = document.getElementById("deepEndRectangle");
            var shallowEndVal = document.getElementById("shallowEndRectangle");
            var lengthVal = document.getElementById("lengthRectangle");
            var widthVal = document.getElementById("widthRectangle");

            var rectangleShallow = Math.ceil(((parseFloat(lengthVal.value) * parseFloat(widthVal.value)) * parseFloat(shallowEndVal.value)) * 7.4805);
            var rectangleDeep = 0;
            if (parseFloat(deepEndVal.value) > parseFloat(shallowEndVal.value)) {
                rectangleDeep = ((Math.ceil((lengthVal.value*widthVal.value)*deepEndVal.value)*7.4805)-Math.ceil(((lengthVal.value*widthVal.value)*shallowEndVal.value)* 7.4805))/2;
            }
            var result = Math.ceil(rectangleShallow + rectangleDeep);

            if (!isNaN(result)) {
                var form = $(this).closest("form");
                var tabs = $(this).closest("dl.tabs");
                var activeTab = tabs.find("dt.active");
                validateForm(form, activeTab, result);
            }

        });

        // Oblong
        var buttonOb = document.getElementById("buttonOblong");
        buttonOb.addEventListener("click", function(e) {
            var deepEndVal = document.getElementById("deepEndOblong");
            var shallowEndVal = document.getElementById("shallowEndOblong");
            var largeDiameterVal = document.getElementById("largeDiameterOblong");
            var smallDiameterVal = document.getElementById("smallDiameterOblong");
            var lengthVal = document.getElementById("lengthOblong");

            var oblongArea = Math.ceil(((parseFloat(largeDiameterVal.value) + parseFloat(smallDiameterVal.value)) * parseFloat(lengthVal.value)) * 0.45);
            var depth = (parseFloat(shallowEndVal.value) + parseFloat(deepEndVal.value)) / 2;

            var result = Math.ceil((oblongArea * depth) * 7.4805);

            if (!isNaN(result)) {
                var form = $(this).closest("form");
                var tabs = $(this).closest("dl.tabs");
                var activeTab = tabs.find("dt.active");
                validateForm(form, activeTab, result);
            }

        });

        // Circular
        var buttonCirc = document.getElementById("buttonCircular");
        buttonCirc.addEventListener("click", function(e) {
            var deepEndVal = document.getElementById("deepEndCircular");
            var shallowEndVal = document.getElementById("shallowEndCircular");
            var radius = document.getElementById("radiusCircular");

            var cylinderShallow = Math.ceil(((Math.PI * Math.pow(radius.value,2))* parseFloat(shallowEndVal.value)) * 7.4805);
            var cylinderDeep = 0;
            if(parseFloat(deepEndVal.value) > parseFloat(shallowEndVal.value)) {
                cylinderDeep = Math.ceil(Math.ceil(((Math.PI * Math.pow(radius.value,2))*parseFloat(deepEndVal.value))*7.4805)-Math.ceil(((Math.PI * Math.pow(radius.value,2))*parseFloat(shallowEndVal.value)))*7.4805)/2;
            }

            var result = Math.ceil(cylinderShallow + cylinderDeep);

            if (!isNaN(result)) {
                var form = $(this).closest("form");
                var tabs = $(this).closest("dl.tabs");
                var activeTab = tabs.find("dt.active");
                validateForm(form, activeTab, result);
            }
        });

        // Triangular
        var buttonTri = document.getElementById("buttonTriangular");
        buttonTri.addEventListener("click", function(e) {
            var deepEndVal = document.getElementById("deepEndTriangular");
            var shallowEndVal = document.getElementById("shallowEndTriangular");
            var triangleBase = document.getElementById("baseTriangular");
            var triangleHeight = document.getElementById("heightTriangular");

            var triangleShallow = Math.ceil(((parseFloat(triangleBase.value) * parseFloat(triangleHeight.value))*parseFloat(shallowEndVal.value))*7.4805) / 2;
            var triangleDeep = 0;
            if(parseFloat(deepEndVal.value) > parseFloat(shallowEndVal.value)) {
                triangleDeep = Math.ceil((Math.ceil(((triangleBase.value*triangleHeight.value)*parseFloat(deepEndVal.value))*7.4805)-Math.ceil(((triangleBase.value*triangleHeight.value)*parseFloat(shallowEndVal.value))*7.4805))/2)/2;
            }

            var result = Math.ceil(triangleShallow + triangleDeep);

            if (!isNaN(result)) {
                var form = $(this).closest("form");
                var tabs = $(this).closest("dl.tabs");
                var activeTab = tabs.find("dt.active");
                validateForm(form, activeTab, result);
            }
        });

        $("#recalcRect, #recalcOb, #recalcCirc, #recalcTri").on("click", function() {
            $(this).closest(".tab-content").removeClass("toggle-section");
        });

        // Prototyping Math Object since IE does not support the trunc prop
        Math.trunc = Math.trunc || function(x) {
          if (isNaN(x)) {
            return NaN;
          }
          if (x > 0) {
            return Math.floor(x);
          }
          return Math.ceil(x);
        };
    }
});

function getShapeUrlParams(url) {
    var params = {}, queries, temp, i, l;
    // Split into key/value pairs
    queries = url.split("&");
    // Convert the array of strings into an object
    for ( i = 0, l = queries.length; i < l; i++ ) {
        temp = queries[i].split('=');
        params[temp[0]] = temp[1];
    }

    return populateValuesFromParams(params);
}

function populateValuesFromParams(params) {
    var tabs = $(".pool-volume.component").find("dt");
    var tabContent = $(".pool-volume.component").find("dd");
    if(params.shape === "rectangle") {
        var rectangleTab = tabs.closest("."+params.shape);
        if(!rectangleTab.hasClass("active")) {
            rectangleTab.addClass("active");
            rectangleTab.find("button.tab-btn").attr("aria-expanded", "true");
            tabContent.each(function(index, element) {
                if($(element).is("#"+params.shape)) {
                    $(element).removeAttr("hidden");
                }
            });
            // input values from ${params} obj
            $("#deepEndRectangle").val(params.deepEnd != null ? params.deepEnd : 0);
            $("#shallowEndRectangle").val(params.shallowEnd != null ? params.shallowEnd : 0);
            $("#lengthRectangle").val(params.length != null ? params.length : 0);
            $("#widthRectangle").val(params.width != null ? params.width : 0);
            $("#calcResultRectangle").text(params.results != null ? params.results : 0);
        }
    } else if (params.shape === "oblong") {
        var oblongTab = tabs.closest("."+params.shape);
        if(!oblongTab.hasClass("active")) {
            oblongTab.addClass("active");
            oblongTab.find("button.tab-btn").attr("aria-expanded", "true");
            tabContent.each(function(index, element) {
                if($(element).is("#"+params.shape)) {
                    $(element).removeAttr("hidden");
                }
            });
            // input values from ${params} obj
            $("#deepEndOblong").val(params.deepEnd != null ? params.deepEnd : 0);
            $("#shallowEndOblong").val(params.shallowEnd != null ? params.shallowEnd : 0);
            $("#largeDiameterOblong").val(params.largeDiameter != null ? params.largeDiameter : 0);
            $("#smallDiameterOblong").val(params.smallDiameter != null ? params.smallDiameter : 0);
            $("#lengthOblong").val(params.length != null ? params.length : 0);
            $("#calcResultOblong").text(params.results != null ? params.results : 0);
        }
    } else if (params.shape === "circular") {
        var circularTab = tabs.closest("."+params.shape);
        if(!circularTab.hasClass("active")) {
            circularTab.addClass("active");
            circularTab.find("button.tab-btn").attr("aria-expanded", "true");
            tabContent.each(function(index, element) {
                if($(element).is("#"+params.shape)) {
                    $(element).removeAttr("hidden");
                }
            });
            // input values from ${params} obj
            $("#deepEndCircular").val(params.deepEnd != null ? params.deepEnd : 0);
            $("#shallowEndCircular").val(params.shallowEnd != null ? params.shallowEnd : 0);
            $("#radiusCircular").val(params.radius != null ? params.radius : 0);
            $("#calcResultCircular").text(params.results != null ? params.results : 0);
        }
    } else if (params.shape === "triangular") {
        var triangularTab = tabs.closest("."+params.shape);
        if(!triangularTab.hasClass("active")) {
            triangularTab.addClass("active");
            triangularTab.find("button.tab-btn").attr("aria-expanded", "true");
            tabContent.each(function(index, element) {
                if($(element).is("#"+params.shape)) {
                    $(element).removeAttr("hidden");
                }
            });
            // input values from ${params} obj
            $("#deepEndTriangular").val(params.deepEnd != null ? params.deepEnd : 0);
            $("#shallowEndTriangular").val(params.shallowEnd != null ? params.shallowEnd : 0);
            $("#heightTriangular").val(params.height != null ? params.height : 0);
            $("#baseTriangular").val(params.base != null ? params.base : 0);
            $("#calcResultTriangular").text(params.results != null ? params.results : 0);
        }
    }
}

function validateForm(form, activeTab, result) {
    var inputs = $(form).find("input");
    var tab = $(activeTab);

    var isValid = true;
    for(var i = 0; i < inputs.length; i++) {
        var currentInput = inputs[i];
        if(!currentInput.value || isNaN(currentInput.value)) {
            currentInput.parentElement.classList.add("is-invalid");
            isValid = false;
        }
    }

    if(isValid) {

        if(window.innerWidth > 767) {
            if (activeTab.hasClass("rectangle")) {
                $("#calcResultRectangle").text(Math.ceil(Math.trunc(result) / 100) * 100);
            } else if (activeTab.hasClass("oblong")) {
                $("#calcResultOblong").text(Math.ceil(Math.trunc(result) / 100) * 100);
            } else if (activeTab.hasClass("circular")) {
                $("#calcResultCircular").text(Math.ceil(Math.trunc(result) / 100) * 100);
            } else if (activeTab.hasClass("triangular")) {
                $("#calcResultTriangular").text(Math.ceil(Math.trunc(result) / 100) * 100);
            }
        } else {
            if (activeTab.hasClass("rectangle")) {
                $("#calcResultRectangle").closest(".tab-content").addClass("toggle-section");
                $("#calcResultRectangle").text(Math.ceil(Math.trunc(result) / 100) * 100);
            } else if (activeTab.hasClass("oblong")) {
                $("#calcResultOblong").closest(".tab-content").addClass("toggle-section");
                $("#calcResultOblong").text(Math.ceil(Math.trunc(result) / 100) * 100);
            } else if (activeTab.hasClass("circular")) {
                $("#calcResultCircular").closest(".tab-content").addClass("toggle-section");
                $("#calcResultCircular").text(Math.ceil(Math.trunc(result) / 100) * 100);
            } else if (activeTab.hasClass("triangular")) {
                $("#calcResultTriangular").closest(".tab-content").addClass("toggle-section");
                $("#calcResultTriangular").text(Math.ceil(Math.trunc(result) / 100) * 100);
            }
            // scroll to results container
            var shareComponent = $(tab).closest(".pv-tab-container").find(".pv-calc-share");
            var offsetHeader = $("header").height();
            var offsetValue = shareComponent.offset().top - offsetHeader;
            if(shareComponent.length > 0) {
                $('html, body').animate({
                    scrollTop: offsetValue
                }, 500);
            }
        }
    }

    return isValid;
}
var PoolPumpSavingsCalculator = PoolPumpSavingsCalculator || {};

PoolPumpSavingsCalculator.addressAutoComplete = (function(){

	var autocomplete;
	var successCallback;

	// Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
	var onFocus = function(viewModel, event) {
    	if (navigator.geolocation && autocomplete) {
	        navigator.geolocation.getCurrentPosition(function(position) {
	            var geolocation = {
	                lat: position.coords.latitude,
	                lng: position.coords.longitude
	            };
	            var circle = new google.maps.Circle(
	                {center: geolocation, radius: position.coords.accuracy});
	            autocomplete.setBounds(circle.getBounds());
	        });
	    }
	};

	var setSuccessCallback = function (callback) {
		successCallback = callback;
	};

	// Inits autocomplete on first keypress.
    var onKeyPress = function(viewModel, event) {
        // Create the autocomplete object, restricting the search predictions to
        // geographical location types.
        // 
        if(!autocomplete) {
            autocomplete = new google.maps.places.Autocomplete(event.currentTarget, {types: ['geocode']});
            // Avoid paying for data that you don't need by restricting the set of
            // place fields that are returned to just the address components.
            autocomplete.setFields(['address_component', 'formatted_address']);
            autocomplete.addListener('place_changed', function() {
                //
                result = autocomplete.getPlace();
                if(typeof result.address_components == 'undefined') {
                    // The user pressed enter in the input 
                    // without selecting a result from the list
                    // Let's get the list from the Google API so that
                    // we can retrieve the details about the first result
                    // and use it (just as if the user had actually selected it)
                    autocompleteService = new google.maps.places.AutocompleteService();
                    autocompleteService.getPlacePredictions(
                        {
                            'input': result.name,
                            'types': ['geocode']
                        },
                        function listentoresult(list, status) {
                            if(list == null || list.length == 0) {
                                // There are no suggestions available.
                                // The user saw an empty list and hit enter.
                                //console.log("No results");
                            } else {
                                // Here's the first result that the user saw
                                // in the list. We can use it and it'll be just
                                // as if the user actually selected it
                                // themselves. But first we need to get its details
                                // to receive the result on the same format as we
                                // do in the AutoComplete.
                                placesService = new google.maps.places.PlacesService(event.currentTarget);
                                placesService.getDetails(
                                    {'reference': list[0].reference},
                                    function detailsresult(detailsResult, placesServiceStatus) {
                                        // Here's the first result in the AutoComplete with the exact
                                        // same data format as you get from the AutoComplete.
                                        //console.log("We selected the first item from the list automatically because the user didn't select anything");
                                        var zipcode = detailsResult.address_components[0]['long_name'];
                                        successCallback(zipcode);
                                    }
                                );
                            }
                        }
                    );
                } else {
                    // The user selected a result from the list, we can 
                    // proceed and use it right away
                    var place = autocomplete.getPlace();
                    var zipcode = place.address_components[0]['long_name'];
                    successCallback(zipcode);

                }
            });
        }
        return true;
    }
    return {
    	onFocus: onFocus,
    	onKeyPress: onKeyPress,
    	setSuccessCallback: setSuccessCallback
	};
})();
var PoolPumpSavingsCalculator = PoolPumpSavingsCalculator || {};

(function(){

    var displayHelpers = function(self){
        return {
            kValue: function(data){
                return data > 1000 ? data / 1000 + 'k' : data;
            },
            addCommas: function(data){
                return data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            },
            isOdd: function(data) {
                return data % 2 === 1;
            },
            isEven: function(data) {
                return data % 2 === 0;
            },
            isFirst: function(index) {
                return index === 0;
            },
            isLast: function (array, index) {
                return index === (array.length - 1);
            },
            isFirstOrLast: function(array, index){
                return this.isFirst(index) || this.isLast(array, index);
            },
            runTimeTickLabel: function(index) {
                return (this.isFirstOrLast(self.runTimeTickMarks(), index) || (index == (self.runTimeTickMarks().length - 1) / 2)) ? index : '';
            },
            inverse: function(currentValue, min, max){
                return 1 - (currentValue / (max - min));
            },
            lastStep: function(){
                return self.currentStep() == 6;
            },
            showPaging: function(){
                return !this.lastStep();
            },
            dollarAmount: function(data){
                return '$' + this.addCommas(data);
            },
            percentAmount: function(data){
                return data + '%';
            },
            kwhAmount: function(data){
                return data + ' kWh';
            },
            hoursAmount: function(data){
                return data + ' HRS';
            },
            addHtml: function(data){
                if (data.indexOf("where-to-buy") > -1) {
                    return data + ".html?show=local&from=product"
                } else {
                    return data + ".html"
                }
            }
        }
    };

    var calculationHelper = function(self){
        return {
            ppmNeeded : function(salinity){ return 3400 - salinity;},
            liters : function(gallons){ return gallons* 3.7854; }, //--- Gives you liters from Gallons
            glNeeded : function(ppmNeeded){ return ppmNeeded * 0.001; }, //--- Gives g/L needed
            gSaltNeeded : function(liters, glNeeded){ return liters * glNeeded; },
            lbsSaltNeeded : function(gSaltNeeded){ return Math.ceil(gSaltNeeded / 453.5923); } //--- Gives you lbs of salt needed.
        }
    };

    var RangeModel = function (min, max, parentModel, currentStyle) {
        var self = this;
        self.min = ko.observable(min);
        self.max = ko.observable(max);
        currentStyle = currentStyle || "runTime";

        self.selected = ko.computed(function(){
            return (parentModel[currentStyle]() - min)/(max - min) * 100 + '%';
        });

        self.unselected = ko.computed(function(){
            return 100 - (parentModel[currentStyle]() - min)/(max - min) * 100 + '%';
        });

        var tickMarkStyle = {
            runTime : function(){
                var tickArray = tickArray || (new Array(26).join('0').split('')); // results in array of 25 (0-24)
                return tickArray.map(function(elem, index){return parentModel.displayHelpers.isFirstOrLast(tickArray, index) ? 'large-tick' : 'small-tick'});
            },
            volume : function(){
                var tickArray = tickArray || (new Array(18).join('0').split('')); // results in array of 18
                return tickArray.map(function(elem, index){return (index % 2 == 0) ? 'large-tick' : 'small-tick'});
            },
            season : function(){
                 var tickArray = tickArray || (new Array(14).join('0').split('')); // results in array of 13
                return tickArray.map(function(elem, index){return (index % 2 == 0) ? 'large-tick' : 'small-tick'});
            }
        };

        var labelStyle = {
            runTime : function(index){
                return (parentModel.displayHelpers.isFirstOrLast(self.tickMarks(), index) || (index == (self.tickMarks().length - 1) / 2)) ? index : '';
            },
            volume : function(index){
                var volumeLabel = (index % 2 === 0) ? min + (max - min) / (self.tickMarks().length - 1) * index : '';
                return parentModel.displayHelpers.kValue(volumeLabel)
            },
            season : function(index){
                var seasonLabel = (index % 4 === 0) ? min + (max - min) / (self.tickMarks().length - 1) * index : '';
                 return seasonLabel !== '' ? seasonLabel + 'mos' : '';
            }
        };

        self.tickMarks = ko.observableArray(tickMarkStyle[currentStyle]());
        self.label = function(index){return labelStyle[currentStyle](index);}
    };

    PoolPumpSavingsCalculator.ViewModel = function(componentElement) {
        var self = this;
        self.displayHelpers = displayHelpers(self);
        self.calculationHelper = calculationHelper(self);
        self.currentStep = ko.observable(1);
        self.currentTemplate = ko.computed(function(){
            return 'step-' + self.currentStep();
        });
        self.componentElement = componentElement;
        self.zipCode = ko.observable('');
        self.zipCodeError = ko.observable(false);
        self.state = ko.observable('');
        self.rate = ko.observable('');
        self.horsePower = ko.observable("0");
        self.runTime = ko.observable(12);
        self.RunTimeModel = new RangeModel(0, 24, self, 'runTime');

        self.itemParam = ko.observable();

        self.isLoading = ko.observable(true);

        self.volume = ko.observable(35000);
        self.VolumeModel = new RangeModel(10000, 50000, self, 'volume');

        self.season = ko.observable(6);
        self.SeasonModel = new RangeModel(0, 12, self, 'season');

        self.userLatLong = ko.observable();
        self.userAddress = ko.observable();

        self.results = ko.observable();

        //Triggered by location button click
        self.userLatLong.subscribe(function(newValue){
            var geocoder = new google.maps.Geocoder();
            if(newValue){
                geocoder.geocode({'latLng': newValue}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var addressData = getStateZip(results);
                        self.state(addressData.state);
                        self.userAddress(results[0].formatted_address);
                        self.zipCode(addressData.zip);
                        kwhLookup();
                    }
                });
            }
        });

        //Triggered by user zipcode input
        self.lookupZipcode = function(){
            var geocoder = new google.maps.Geocoder();
            var newValue = $(arguments[1].target).val();
            if(newValue){
                geocoder.geocode({'address': newValue}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var addressData = getStateZip(results);
                        self.userAddress(results[0].formatted_address);
                        self.state(addressData.state);
                        self.zipCode(addressData.zip);
                        kwhLookup();
                        self.zipCodeError(false);
                    } else {
                        self.zipCode('');
                        self.rate('');
                        self.zipCodeError(true);
                    }
                });
            }
        };

        var getStateZip = function(results){
            var outputData = {state: '', zip: ''};

            if(results[0] && results[0]['address_components']){
                var postalCodeArray = results[0]['address_components'].filter(function(elem){return elem.types.indexOf('postal_code') !== -1});
                var stateNameArray = results[0]['address_components'].filter(function(elem){return elem.types.indexOf('administrative_area_level_1') !== -1});
                outputData['zip'] = (postalCodeArray && postalCodeArray.length > 0) ? postalCodeArray[0]['long_name'] : "";
                outputData['state']  = (stateNameArray && stateNameArray.length > 0) ? stateNameArray[0]['long_name'] : "";

            }

            return outputData;
        };

        self.zipCodeEnter = function (value, event) {
            if(event.keyCode === 13){
                self.lookupZipcode(value, event);
            }
            return true;
        }

        var kwhLookup = function(){
            $.ajax({
              url: '/bin/pentair/calculators/poolpumpsavings',
              data: {state: self.state()},
              success: function(result){
                if(result.kw){
                    self.rate(Math.round(parseFloat(result.kw)*10000)/10000);
                    self.zipCodeError(false);
                }
              }
            });
        };

        self.params = ko.computed(function(){
            return {
                state: self.state(),
                swimSeason: self.season(),
                runTime: self.runTime(),
                volume: self.volume(),
                hp: self.horsePower(),
                electricityCost: self.rate()
            }
        });

        self.populateResults = function(){
            $.get({
                url: "/bin/pentair/calculators/poolpumpsavings.json",
                data: self.params(),
                success: function(result){
                    var resultsModels = [];
                    $.each(result[0].products, function (index, elem) {
                         var name = Object.keys(elem)[0];
                         resultsModels.push(new self.ProductModel(name, elem[name][0]));
                    });
                    self.results(resultsModels);
                }
            });
        };

        self.ProductModel = function(productName, productResultObj){
            var keys = ["brands","categories","cost","cost-savings","hrs-compare","hrs-per-day","kwh-per-month","kwh-savings","ss-cost","ss-hrs-per-day","ss-kwh-per-month","thumbnail","title","url","where-to-buy"];
            var self = this;
            self.name = productName;

            $.each(keys, function(index, elem){
                self[elem] = productResultObj[elem];
            });

            return self;
        };

        self.shareHelper = function(){
            var self = this;

            self.shareParams = function(itemIndex){
                return {
                    zipCode: self.zipCode(),
                    rate: self.rate(),
                    horsePower: self.horsePower(),
                    runTime: self.runTime(),
                    volume: self.volume(),
                    season: self.season(),
                    item: itemIndex + 1  // which accordion to expand
                }
            };

            var facebookLink = function(itemIndex){
                var fbLinkBase = 'http://www.facebook.com/sharer/sharer.php?u=';
                return fbLinkBase + encodeURIComponent(window.location.origin + window.location.pathname + '?title=' + document.title + '&' + $.param(self.shareParams(itemIndex)));
            };

            var twitterLink =  function(itemIndex){
                var twitterBase = 'http://twitter.com/intent/tweet?status=';
                return twitterBase + document.title + ' ' + encodeURIComponent(window.location.origin + window.location.pathname + '?' + $.param(self.shareParams(itemIndex)));
            };

            var mailToLink = function(itemIndex){
                var mailToBase = 'mailto:?subject=';
                var bodyKey = '&body=';
                return mailToBase + document.title + bodyKey + encodeURIComponent(window.location.origin + window.location.pathname + '?' + $.param(self.shareParams(itemIndex)));
            };

            return {
                facebookLink : facebookLink,
                twitterLink : twitterLink,
                mailToLink : mailToLink
            }
        };

        self.initRecommendation = function(){
            if(self.displayHelpers.lastStep()){
                self.populateResults();
            }
        }

        self.checkZipcodeError = function(){
            var isValid = (!(self.zipCode()) && self.rate()) || ((self.zipCode) && self.rate());
            if(isValid){
                self.zipCode('');
                self.zipCodeError(false);
            } else {
                self.zipCodeError(true);
            }
            return isValid;
        };

        self.disableNext = function () {
            var nextRules = {
                1 : function(){
                    return !self.rate();
                },
                2 : function(){
                    return self.horsePower() == 0;
                },
                3 : function(){
                    return !self.runTime();
                },
                4 : function(){
                    return !self.volume();
                },
                5 : function(){
                     return !self.season();
                }
            }
            return nextRules[self.currentStep()]();
        }

        var scrollTop = function(){
             setTimeout(function(){$("body,html").animate({
                scrollTop: componentElement.offset().top - $('header').outerHeight() - 65
              }, 500 )}, 200);
        };

        self.firstStep = function () {
            self.currentStep(1);
            scrollTop();
        };

        self.checkToolTip = function () {
            var toolTip = this.componentElement.data('tooltip');
            return !!toolTip;
        };

        self.nextStep = function () {
            self.checkZipcodeError();
            if(!self.disableNext()){
                if(self.currentStep() === 5){
                    self.isLoading(true);
                    self.results(null);
                }
                self.currentStep(self.currentStep() + 1);
            }
            if ( matchMedia('(max-width: 765px)').matches ) {
                scrollTop();
            }
        };

        self.prevStep = function () {
            self.currentStep(self.currentStep() - 1);
            if ( matchMedia('(max-width: 765px)').matches ) {
                scrollTop();
            }
        }

        self.locationSearchClick = function () {
            self.initLatLong()
        };

        self.runLatLongSearch = function () {
            //console.log('latlongasearch')
        }

        self.initLatLong = function(){
          self.tryBrowserGeoLocation();
          self.firstLatLongInit = self.userLatLong.subscribe(function(newValue){
            if(newValue){
                self.runLatLongSearch(newValue);
            }
            self.firstLatLongInit.dispose();
          });
        };

        self.tryBrowserGeoLocation = function () {
            if (navigator.geolocation) {
                geoLocationIETimeout();
                navigator.geolocation.getCurrentPosition(function(position) {
                    var pos = { lat:position.coords.latitude, lng: position.coords.longitude};
                    self.userLatLong(pos);
                    self.geoLocationStatus('complete');
                }, function(e){ // error
                    //self.errorMessage('noGeo');
                    //self.firstSearch.dispose();
                    self.geoLocationStatus('complete');
                    self.isLoading(false);
                });
            }
        };

        // If a user hits the 'x' when the location requests pops up in IE, the error section is not hit,
        // and the service fails silently.
        function geoLocationIETimeout(){
            var isIE = /*@cc_on!@*/false || !!document.documentMode; // Internet Explorer 6-11
            self.geoLocationStatus = ko.observable('waiting');
            if(isIE){
                setTimeout(function(){
                    if(self.geoLocationStatus() === 'waiting'){
                        //self.errorMessage('noGeo');
                        //self.firstSearch.dispose();
                        self.isLoading(false);
                    }
                }, 8000);
            }
        };

        ko.bindingHandlers.initAfterRender = {
            update: function(element, valueAccessor) {
                ko.utils.unwrapObservable(valueAccessor()); //grab a dependency to the obs array
                PENTAIR.InitAccordion();
                if(self.results()){
                    self.isLoading(false);
                    if(self.itemParam()){
                        var accordionItem = componentElement.find('.accordion.section .accordion dt').eq([self.itemParam()-1]);
                        if(!accordionItem.hasClass('active')){
                            accordionItem.click();
                        };
                        self.itemParam(null);
                    }
                }
            }
        }

        var initParams = function(){
            var queryString = location.search.substring(1);
            var urlParams = queryString ? JSON.parse('{"' + decodeURIComponent(queryString).replace(/&/g, "\",\"").replace(/=/g,"\":\"") + '"}') : {};

            var zipCodeParam = urlParams["zipCode"] || "";
            var horsePowerParam = urlParams["horsePower"] || "";
            var runTimeParam = urlParams["runTime"] || "";
            var volumeParam = urlParams["volume"] || "";
            var seasonParam = urlParams["season"] || "";
            var rateParam = urlParams["electricityCost"] || "";
            var itemParam = urlParams["item"] || "";

            var paramsUsed = zipCodeParam || horsePowerParam || runTimeParam || volumeParam || seasonParam || rateParam;

            if(paramsUsed){
                self.zipCode(zipCodeParam);
                self.horsePower(horsePowerParam);
                self.runTime(runTimeParam);
                self.volume(volumeParam);
                self.season(seasonParam);
                self.rate(rateParam);
                self.itemParam(itemParam ? itemParam : null);

                var stepArray = [!!self.rate(), !!self.horsePower(), !!self.runTime(), !!self.volume(), !!self.season()];
                var stepIndex = stepArray.indexOf(false);
                var currentStep = (stepIndex == -1 ? 6 : (stepIndex + 1));
                self.currentStep(stepIndex == -1 ? 6 : (stepIndex + 1));
            }
        };

        initParams();
    };

    $(document).ready(function() {
        $('.pool-pump-savings-calculator.component').each(function() {
            ko.applyBindings(new PoolPumpSavingsCalculator.ViewModel($(this)), this);
        });
    });


// WTB Button Analytics - Pool Calculators

    // Fire all 'on click' event analytics tracking methods
    self.poolWtbAnalytics = function (wtbClickElement) {
        trackCTAClick(wtbClickElement);
        trackWTBClickEvent(wtbClickElement);
        constructAlgoliaAnalyticsWTBObject();
        return true;
    }

    // Fire all 'on click' event analytics tracking methods
    self.poolProdClickAnalytics = function (prodClickElement) {
        trackCTAClick(prodClickElement);
        trackProdClickEvent(prodClickElement);
        constructAlgoliaAnalyticsWTBObject();
        return true;
    }

    // [SEAP-145] - Algolia WTB Conversion Tracking
        function constructAlgoliaAnalyticsWTBObject() {
            var queryParams = window.location.href.indexOf("?") !== -1;
            if (queryParams) {
                var search = window.location.search.substring(1);
                var params = JSON.parse('{"' + decodeURI(search).replace(/&/g, '","').replace(/=/g, '":"') + '"}');
                if (params.hasOwnProperty("queryID") && params.hasOwnProperty("objectID") && params.hasOwnProperty("indexName")) {
                    var userToken = "";
                    if (typeof _satellite !== undefined && _satellite != null) {
                        userToken = _satellite.getVisitorId().getMarketingCloudVisitorID();
                    }
                    // attach to window object with conversion tracking details
                    aa('convertedObjectIDsAfterSearch', {
                        userToken: userToken,
                        eventName: 'Where_To_Buy',
                        index: params.indexName,
                        queryID: params.queryID,
                        objectIDs: [params.objectID]
                    });
                }
            }
            return true;
        }

        // Abode Analytics
        // Tracks the WTB button click event
        function trackWTBClickEvent(wtbClickElement) {
            var wtbText = $(wtbClickElement).text();
            wtbText = wtbText ? wtbText.trim() : "";
            var eventWTBPayload = {
                eventName: 'WTB click',
                eventType: 'event',
                attributes: {
                    visitor: {
                        pentairCustomerID: getPentairCustomerID(), //if this is available
                        dealerID: getDealerID(), //if this is available
                        distributorID: getDistributorID() //if this is available
                    },
                    page: {
                        pageCanonical: getPageViewPageAttribute("pageCanonical"),
                        pageName: getPageViewPageAttribute("pageName"),
                        pagePath: getPageViewPageAttribute("pagePath"),
                        pageType: getPageViewPageAttribute("pageType"),
                        pageURL: getPageViewPageAttribute("pageURL"),
                        pageTitle: getPageViewPageAttribute("pageTitle"),
                        pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                        businessUnitID: getPageViewPageAttribute("businessUnitID"),
                        subBrand: getPageViewPageAttribute("subBrand"),
                        language: getPageViewPageAttribute("language"),
                        author: getPageViewPageAttribute("author"),
                    },
                    product: {
                        skuID: self.productSku,
                        productName: wtbClickElement.name,
                        type: getPageViewProductAttribute("type")
                    },
                    cta: {
                        cta: wtbText
                    }
                }
            }
            trackEventWithQueue(eventWTBPayload);
        }

        // Abode Analytics
        // Tracks the WTB button click event
        function trackProdClickEvent(prodClickElement) {
            var prodText = $(prodClickElement).text();
            prodText = prodText ? prodText.trim() : "";
            var eventProdPayload = {
                eventName: 'cta product clicked',
                eventType: 'event',
                attributes: {
                    visitor: {
                        pentairCustomerID: getPentairCustomerID(), //if this is available
                        dealerID: getDealerID(), //if this is available
                        distributorID: getDistributorID() //if this is available
                    },
                    page: {
                        pageCanonical: getPageViewPageAttribute("pageCanonical"),
                        pageName: getPageViewPageAttribute("pageName"),
                        pagePath: getPageViewPageAttribute("pagePath"),
                        pageType: getPageViewPageAttribute("pageType"),
                        pageURL: getPageViewPageAttribute("pageURL"),
                        pageTitle: getPageViewPageAttribute("pageTitle"),
                        pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                        businessUnitID: getPageViewPageAttribute("businessUnitID"),
                        subBrand: getPageViewPageAttribute("subBrand"),
                        language: getPageViewPageAttribute("language"),
                        author: getPageViewPageAttribute("author"),
                    },
                    product: {
                        skuID: self.productSku,
                        productName: prodClickElement.name,
                        type: getPageViewProductAttribute("type")
                    },
                    cta: {
                        cta: prodText
                    }
                }
            }
            trackEventWithQueue(eventProdPayload);
        }

        // CTA Click event
        function trackCTAClick(ctaClickElement) {
            var ctaText = $(ctaClickElement).text();
            ctaText = ctaText ? ctaText.trim() : "";
            var eventCTAPayload = {
                eventName: 'cta clicked',
                eventType: 'event',
                attributes: {
                    visitor: {
                        pentairCustomerID: getPentairCustomerID(), //if this is available
                        dealerID: getDealerID() //if this is available
                    },
                    page: {
                        pageCanonical: getPageViewPageAttribute("pageCanonical"),
                        pageName: getPageViewPageAttribute("pageName"),
                        pagePath: getPageViewPageAttribute("pagePath"),
                        pageType: getPageViewPageAttribute("pageType"),
                        pageURL: getPageViewPageAttribute("pageURL"),
                        pageTitle: getPageViewPageAttribute("pageTitle"),
                        pageSEOTags: getPageViewPageAttribute("pageSEOTags"),
                        businessUnitID: getPageViewPageAttribute("businessUnitID"),
                        subBrand: getPageViewPageAttribute("subBrand"),
                        language: getPageViewPageAttribute("language"),
                        author: getPageViewPageAttribute("author")
                    },
                    cta: {
                        cta: ctaText
                    }
                }
            }
            trackEventWithQueue(eventCTAPayload);
        }

})();
$(function(){
    "use strict";

    var initHeatPumpCarousel = function(carouselComponent){
        var carousel = carouselComponent.find('.hp-carousel.owl-carousel');

        // Main Steps Carousel Component
        carousel.owlCarousel({
            items: 1,
            loop: false,
            mouseDrag: false,
            touchDrag:false,
            dots: true,
            nav:true,
            singleItem:true,
            navText: ['<button class="btn btn-white prev"><span>previous</span></button>', '<button class="btn btn-green next"><span>next</span></button>'],
            dotsContainer:"#hp-dots-container",
            autoHeight:true,
            responsive:{
                0: {
                    margin:20
                },
                768:{
                    margin:0
                }
            }
        }).on("initialized.owl.carousel changed.owl.carousel resized.owl.carousel", function(e) {
            handleOnChanged(e);
            anchorStepsOnMobile(e);
        });

        $(".next").on("click", function(e) {
            validateSlide(e);
            e.preventDefault();
            return false;
        });

        var activeItem = $(this).find(".owl-item.active");
        var activeItemInputs = $(activeItem).find("input");
        $(activeItemInputs).each(function(index, elem) {
            $(this).on("input", function(e) {
                if($(this).parent().hasClass("is-invalid")) {
                    $(this).parent().removeClass("is-invalid");
                }
            });
        });

        $(document).on("click", ".recommended-pump .btn-over", function(e) {
            e.preventDefault();
            $(this).closest(".heat-pump.component").removeClass("show-recommended-pump");
            $(carousel).trigger("to.owl.carousel", [0,0]);
            $(carousel).find(".owl-nav").css("textAlign", "");
            var recommendedPump = $(".heat-pump.component").find(".recommended-pump");
            if(!recommendedPump.find(".loader-wrapper.loader").length) {
                var loader = '<div class="loader-wrapper loader"><div class="results-loader"><p class="loading-text">Loading...</p></div></div>';
                $(this).closest(".recommended-pump").append(loader);
            }
        });

    };

    var heatPumpComponents = $('.component.heat-pump');

    if(heatPumpComponents.length){
        $(function(){
            heatPumpComponents.each(function(index, elem){
                initHeatPumpCarousel($(elem));
            });
        });
    }

    /*
    * Call getTabInputValues() to handle the calculations on input since we removed the calculate button for HP component
    */
    var poolVolumeComponent = heatPumpComponents.find(".pool-volume.component");
    if(poolVolumeComponent.length > 0) {
        var tabs = poolVolumeComponent.find("dt");
        $(tabs).on("click", function(e) {
            var targetEl = e.currentTarget;
            var inputs = $(this).next("dd").find("input");
            getTabInputValues(targetEl, inputs);
        });

        getTabInputValues(tabs);
    }

    if($(".heat-pump.component").length > 0) {

        $("#zipCode").on("keyup", function(e) {
            if ($(this).val().length === 5) {
                getLatLongByZipCode($(this).val());
            }
        });

        $("#allowZip").on("click", function(e) {
            getUserPosition();
        });

        if(!$("body").hasClass("ie")) {
            $("#tempSlider").on("input", function(e) {
                $(this).closest(".pool-temp-slider").find(".slider-selected").css("width", sliderSelected);
                $(this).closest(".pool-temp-slider").find(".slider-unselected").css("width", sliderUnselected);
                $(this).closest(".pool-temp-slider").find("#tick-result-num").text(Math.round($(this).val()));
                $(this).closest(".pool-temp-container").find("#deg-output-num").text(Math.round($(this).val()));
            });

            $(".recommended-pump .tabs").on("input", ".slider.left", function(e) {
                this.value = Math.min(this.value,this.parentNode.childNodes[2].value-1);
                var value=(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.value)-(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.min);
                $(this).closest(".slider-container").find(".inverse-left").css("width", value+'%');
                $(this).closest(".slider-container").find(".range-overlap").css("left", value+'%');
                $(this).closest(".slider-container").find(".thumb.left").css("left", value+'%');
                handleActiveBars();
            });

            $(".recommended-pump .tabs").on("input", ".slider.right", function(e) {
                this.value = Math.max(this.value,this.parentNode.childNodes[1].value-(-1));
                var value=(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.value)-(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.min);
                $(this).closest(".slider-container").find(".inverse-right").css("width", (100-value)+'%');
                $(this).closest(".slider-container").find(".range-overlap").css("right", (100-value)+'%');
                $(this).closest(".slider-container").find(".thumb.right").css("left", value+'%');
                handleActiveBars();
            });

            $(".recommended-pump .tabs").on("input", ".dollars-per-therm input", function(e) {
                $(this).closest(".slider-container").find(".slider-selected").css("width", dptSliderWidths.selectedWidth());
                $(this).closest(".slider-container").find(".slider-unselected").css("width", dptSliderWidths.unselectedWidth());
                $(this).closest(".slider-container").find("#dptThermVal").text(Number.parseFloat($(this).val()).toFixed(2));
            });

            $(".recommended-pump .tabs").on("input", ".dollars-per-kwh input", function(e) {
                $(this).closest(".slider-container").find(".slider-selected").css("width", dpkSliderWidths.selectedWidth());
                $(this).closest(".slider-container").find(".slider-unselected").css("width", dpkSliderWidths.unselectedWidth());
                $(this).closest(".slider-container").find(".kwh-value").text(Number.parseFloat($(this).val()).toFixed(4));
            });

            $(".recommended-pump .tabs").on("input", ".gas-efficiency input", function(e) {
                $(this).closest(".slider-container").find(".slider-selected").css("width", gasEfficiencyWidths.selectedWidth());
                $(this).closest(".slider-container").find(".slider-unselected").css("width", gasEfficiencyWidths.unselectedWidth());
                $(this).closest(".slider-container").find(".gas-value").text(Math.round($(this).val()));
            });

            $(".recommended-pump .tabs").on("input", ".pool-temp-slider input", function(e) {
                $(this).closest(".slider-container").find(".slider-selected").css("width", poolTempWidths.selectedWidth());
                $(this).closest(".slider-container").find(".slider-unselected").css("width", poolTempWidths.unselectedWidth());
                $(this).closest(".slider-container").find(".pool-temp-value").text(Math.round($(this).val()));
            });

        } else {
            // ie and edge do not support input events, use on change instead
            $("#tempSlider").on("change", function(e) {
                $(this).closest(".pool-temp-slider").find(".slider-selected").css("width", sliderSelected);
                $(this).closest(".pool-temp-slider").find(".slider-unselected").css("width", sliderUnselected);
                $(this).closest(".pool-temp-slider").find("#tick-result-num").text(Math.round($(this).val()));
                $(this).closest(".pool-temp-container").find("#deg-output-num").text(Math.round($(this).val()));
            });

            $(".recommended-pump .tabs").on("change", ".slider.left", function(e) {
                this.value = Math.min(this.value,this.parentNode.childNodes[2].value-1);
                var value=(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.value)-(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.min);
                $(this).closest(".slider-container").find(".inverse-left").css("width", value+'%');
                $(this).closest(".slider-container").find(".range-overlap").css("left", value+'%');
                $(this).closest(".slider-container").find(".thumb.left").css("left", value+'%');
                handleActiveBars();
            });

            $(".recommended-pump .tabs").on("change", ".slider.right", function(e) {
                this.value = Math.max(this.value,this.parentNode.childNodes[1].value-(-1));
                var value=(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.value)-(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.min);
                $(this).closest(".slider-container").find(".inverse-right").css("width", (100-value)+'%');
                $(this).closest(".slider-container").find(".range-overlap").css("right", (100-value)+'%');
                $(this).closest(".slider-container").find(".thumb.right").css("left", value+'%');
                handleActiveBars();
            });

            $(".recommended-pump .tabs").on("change", ".dollars-per-therm input", function(e) {
                $(this).closest(".slider-container").find(".slider-selected").css("width", dptSliderWidths.selectedWidth());
                $(this).closest(".slider-container").find(".slider-unselected").css("width", dptSliderWidths.unselectedWidth());
                $(this).closest(".slider-container").find("#dptThermVal").text(parseFloat($(this).val()).toFixed(2));
            });

            $(".recommended-pump .tabs").on("change", ".dollars-per-kwh input", function(e) {
                $(this).closest(".slider-container").find(".slider-selected").css("width", dpkSliderWidths.selectedWidth());
                $(this).closest(".slider-container").find(".slider-unselected").css("width", dpkSliderWidths.unselectedWidth());
                $(this).closest(".slider-container").find(".kwh-value").text(parseFloat($(this).val()).toFixed(4));
            });

            $(".recommended-pump .tabs").on("change", ".gas-efficiency input", function(e) {
                $(this).closest(".slider-container").find(".slider-selected").css("width", gasEfficiencyWidths.selectedWidth());
                $(this).closest(".slider-container").find(".slider-unselected").css("width", gasEfficiencyWidths.unselectedWidth());
                $(this).closest(".slider-container").find(".gas-value").text(Math.round($(this).val()));
            });

            $(".recommended-pump .tabs").on("change", ".pool-temp-slider input", function(e) {
                $(this).closest(".slider-container").find(".slider-selected").css("width", poolTempWidths.selectedWidth());
                $(this).closest(".slider-container").find(".slider-unselected").css("width", poolTempWidths.unselectedWidth());
                $(this).closest(".slider-container").find(".pool-temp-value").text(Math.round($(this).val()));
            });
        }

        $(document).on("click", "#recommendHeatPump", function(e) {
            e.preventDefault();
            var tabNames = $(this).closest(".heat-pump.component").find(".recommended-pump dt");
            var tabContent = $(this).closest(".heat-pump.component").find(".recommended-pump dd");
            // remove old recommended pumps if they exist
            if(tabNames.length && tabContent.length) {
                tabNames.remove();
                tabContent.remove();
            }
            $(".heat-pump.component").addClass("show-recommended-pump");
            var owlItems = $(this).closest(".hp-carousel").find(".owl-item");
            constructHeatPumpUrl(owlItems);
        });

        if($("body").hasClass("ie")) {
            // IE and Edge Multirange slider workaround when moving slider thumbs
            $(document).on("mousemove", ".swim-season .slider.left, .swim-season .slider.right", setSlider);
        }

        // toggle functionality for recommended page on mobile
        var recommendedPump = $(".recommended-pump");
        var tabs = $(recommendedPump).find("dl.tabs");
        if($(window).width() < 768) {
            var activeTab = $(tabs).find("dt.tab.active");
            $(activeTab).next("dd").attr("hidden", "");
            activeTab.removeClass("active");
            $(activeTab).find(".tab-btn").attr("aria-expanded", "false");
        } else {
            $(tabs).removeAttr("data-allow-toggle");
        }

        $(".recommended-pump .tabs").on("click", ".btn-recalc", function(e) {
            e.preventDefault();
            var leftSlider = $(this).closest(".recommended-slider").find(".slider.left").val();
            var rightSlider = $(this).closest(".recommended-slider").find(".slider.right").val();
            var swimSeason = leftSlider + ":" + rightSlider;

            var dollarsPerTherm = $(this).closest(".recommended-pump-sliders").find(".dollars-per-therm input").val();
            var dollarsPerKwh = $(this).closest(".recommended-pump-sliders").find(".dollars-per-kwh input").val();
            var gasHeaterEfficiency = Math.round($(this).closest(".recommended-pump-sliders").find(".gas-efficiency input").val());
            var desiredWaterTemp = $(this).closest(".recommended-pump-sliders").find(".pool-temp-slider input").val();

            var newData = url;
            var poolData = poolUrl;
            newData.swimSeason = swimSeason;
            newData.gasCost = parseFloat(dollarsPerTherm).toFixed(2);
            newData.electricityCost = parseFloat(dollarsPerKwh).toFixed(2);
            newData.efficiency = parseFloat(gasHeaterEfficiency / 100).toFixed(2);
            newData.temp = parseFloat(desiredWaterTemp).toFixed(1);

            var tabNames = $(this).closest(".tabs").find("dt");
            var tabContent = $(this).closest(".tabs").find("dd");
            var loader = '<div class="loader-wrapper loader"><div class="results-loader"><p class="loading-text">Loading...</p></div></div>';
            if(tabNames.length && tabContent.length) {
                $(this).closest(".tabs").append(loader);
                tabNames.remove();
                tabContent.remove();
            }
            var data = $.extend({}, newData, poolData);

            heatPumpCalculationData(data, leftSlider, rightSlider, desiredWaterTemp, gasHeaterEfficiency);
        });

        /** since content is dynamic, we need to check the query parameters every time the mouse moves towards the share links. */
        $('.recommended-pump').on('mouseenter', ".calc-share.component", function() {
            updateHeatPumpCalcShareLinks();
        });

        init();
    }

});

var dptSliderWidths = {
    selectedWidth : function() {
        var activePump = $(".recommended-pump").find("dt.active").next("dd");
        var min = 0, max = 5;
        var result = (activePump.find("#dptTherm").val() - min) / (max - min) * 100 + "%";
        return result;
    },
    unselectedWidth : function() {
        var activePump = $(".recommended-pump").find("dt.active").next("dd");
        var min = 0, max = 5;
        var result = 100 - (activePump.find("#dptTherm").val() - min) / (max - min) * 100 + "%";
        return result;
    }
};

var dpkSliderWidths = {
    selectedWidth : function() {
        var activePump = $(".recommended-pump").find("dt.active").next("dd");
        var min = 0, max = 1;
        var result = (activePump.find("#dpkVal").val() - min) / (max - min) * 100 + "%";
        return result;
    },
    unselectedWidth : function() {
        var activePump = $(".recommended-pump").find("dt.active").next("dd");
        var min = 0, max = 1;
        var result = 100 - (activePump.find("#dpkVal").val() - min) / (max - min) * 100 + "%";
        return result;
    }
};

var gasEfficiencyWidths = {
    selectedWidth : function() {
        var activePump = $(".recommended-pump").find("dt.active").next("dd");
        var min = 50, max = 100;
        var result = (activePump.find("#gasValue").val() - min) / (max - min) * 100 + "%";
        return result;
    },
    unselectedWidth : function() {
        var min = 50, max = 100;
        var activePump = $(".recommended-pump").find("dt.active").next("dd");
        var result = 100 - (activePump.find("#gasValue").val() - min) / (max - min) * 100 + "%";
        return result;
    }
};

var poolTempWidths = {
    selectedWidth : function() {
        var activePump = $(".recommended-pump").find("dt.active").next("dd");
        var min = 60, max = 104;
        var result = (activePump.find("#poolTempValue").val() - min) / (max - min) * 100 + "%";
        return result;
    },
    unselectedWidth : function() {
        var activePump = $(".recommended-pump").find("dt.active").next("dd");
        var min = 60, max = 104;
        var result = 100 - (activePump.find("#poolTempValue").val() - min) / (max - min) * 100 + "%";
        return result;
    }
};

var waterTempTicks = function() {
    var ticks = (new Array(14)).join('0').split('');
    var tickContainer = $(".heat-pump.component .pool-temp-slider .tick-container");
    ticks.map(function(elem, index) {
        if (index % 2 === 0) {
            if (index === 0) {
                $(tickContainer).append('<span class="large-tick"><span class="num-deg">60&deg;</span></span>');
            } else if (index === ticks.length - 1) {
                $(tickContainer).append('<span class="large-tick"><span class="num-deg">104&deg;</span></span>');
            } else {
                $(tickContainer).append('<span class="large-tick"></span>');
            }
        } else {
            $(tickContainer).append('<span class="small-tick"></span>');
        }
    });

    /* Recommended Pumps - Slider Ticks */
    var thermTicks = (new Array(12)).join('0').split('');
    var thermTicksContainer = $(".heat-pump.component .dollars-per-therm .tick-container");
    var kwhTicksContainer = $(".heat-pump.component .dollars-per-kwh .tick-container");
    var gasEfficiencyContainer = $(".heat-pump.component .gas-efficiency .tick-container");
    thermTicks.map(function(elem, index) {
        if(index === 0) {
            $(thermTicksContainer).append('<span class="large-tick"><span class="num-tick">$0</span></span>');
            $(kwhTicksContainer).append('<span class="large-tick"><span class="num-tick">$0</span></span>');
            $(gasEfficiencyContainer).append('<span class="large-tick"><span class="num-tick">50%</span></span>');
        } else if (index === thermTicks.length -1) {
            $(thermTicksContainer).append('<span class="large-tick"><span class="num-tick">$5.00</span></span>');
            $(kwhTicksContainer).append('<span class="large-tick"><span class="num-tick">$1.00</span></span>');
            $(gasEfficiencyContainer).append('<span class="large-tick"><span class="num-tick">100%</span></span>');
        } else {
            $(thermTicksContainer).append('<span class="small-tick"></span>');
            $(kwhTicksContainer).append('<span class="small-tick"></span>');
            $(gasEfficiencyContainer).append('<span class="small-tick"></span>');
        }
    });

}

function anchorStepsOnMobile(e) {
    if ($(window).width() < 768) {
        var hpDotsContainer = $(".heat-pump.component").find("#hp-dots-container");
        var offsetHeader = $("header").height();
        var offsetValue = hpDotsContainer.offset().top - offsetHeader;
        $('html, body').animate({
            scrollTop: offsetValue
        }, 500);
    }
}

function handleOnChanged(e) {
    var position = (e.item.index + 1);
    var hpCarousel = $(".heat-pump.component").find(".owl-carousel");
    if(position === 1) {
        if ($(window).width() < 768) {
            $(hpCarousel).find(".owl-nav").css("textAlign", "");
            $(hpCarousel).find(".owl-nav").css("display", "");
            if($("#recommendHeatPump").length) { $(hpCarousel).find(".owl-nav > button#recommendHeatPump").remove(); }
            // remove full-width class - only applies for slide 2
            $(".heat-pump.component").find(".hp-carousel").removeClass("full-width");
        } else {
            if($("#recommendHeatPump").length) { $(hpCarousel).find(".owl-nav > button#recommendHeatPump").remove(); }
        }
    } else if (position === 2) {
        if($(window).width() < 768) {
            if($("#recommendHeatPump").length) { $(hpCarousel).find(".owl-nav > button#recommendHeatPump").remove(); }

            // position owl-nav buttons to be within each pool volume tab and center
            // usually owl-nav buttons are positioned at the bottom
            // but designs have the owl-nav buttons within each tab separately.
            // will need to clone original owl-nav buttons and append to each tab.
            $(hpCarousel).find(".owl-nav").css("textAlign", "center");
            var owlNav = $(hpCarousel).find(".owl-nav").clone(); // clone first
            $(hpCarousel).find(".owl-nav:not(.tab-content-section > .owl-nav)").css("display", "none"); // hide next

            // Manually set height on owl-height wrapper due to autoHeight prop on owl-carousel cuts off content when tabs are expanded
            var originalHeight;
            setTimeout(function() {
                originalHeight = parseFloat($(hpCarousel).find(".owl-height").css("height"));
            }, 500);

            var tabButton = $(hpCarousel).find("dt > .tab-btn");
            $(tabButton).on("click", function(e) {
                var currentTab = $(this).closest("dt");
                var resultContainer = $(currentTab).next("dd").find(".result-container");
                var tabContentSection = $(currentTab).next("dd").find(".tab-content-section").eq(2);
                var owlNavInTab = $(tabContentSection).find(".owl-nav");
                if(!owlNavInTab.length) {
                    $(resultContainer).after(owlNav);
                }

                var tabContent = $(this).closest("dt").next("dd").height();
                var currentBtn = $(this);
                setTimeout(function(){
                    var isActive = $(currentBtn).closest("dt").hasClass("active");
                    var activeTabOwlHeight = originalHeight + tabContent;
                    if(isActive) {
                        $(currentBtn).closest(".owl-height").css("height", activeTabOwlHeight);
                    } else {
                        $(currentBtn).closest(".owl-height").css("height", originalHeight);
                    }
                },10);

            });

            // separate click event handler for dynamically added prev/next buttons
            $(".tab-content-section").on("click", ".owl-next", function(e) {
                validateSlide(e);
                e.preventDefault();
                return false;
            });

            $(".tab-content-section").on("click", ".owl-prev", function(e) {
                hpCarousel.trigger('prev.owl.carousel');
            });

            $(".heat-pump.component").find(".hp-carousel").addClass("full-width");

        } else {
            if($("#recommendHeatPump").length) { $(hpCarousel).find(".owl-nav > button#recommendHeatPump").remove(); }
            // Manually set height on owl-height wrapper due to autoHeight prop cuts off content when tabs are expanded
            var originalHeight;
            setTimeout(function() {
                originalHeight = parseFloat($(hpCarousel).find(".owl-height").css("height"));
            }, 500);

            var tabButton = $(hpCarousel).find("dt > .tab-btn");
            $(tabButton).on("click", function(e) {
                var tabContent = $(this).closest("dt").next("dd").height();
                var tabOffset = originalHeight - tabContent;
                if (e.currentTarget.innerText === "OBLONG") {
                    $(this).closest(".owl-height").css("height", originalHeight + tabOffset);
                } else {
                    $(this).closest(".owl-height").css("height", originalHeight);
                }

                    });
                }
            } else if (position === 3) {
                var height = $(hpCarousel).find(".owl-item").eq(2).height();
                if($(window).width() > 767) {
                    $(hpCarousel).find(".owl-height").css("height", height); // content cutoff due to rotated container
                    // next button is replaced with recommended heat pump button on desktop
                    var recommendButton = '<button class="btn btn-green recommend-btn" id="recommendHeatPump"><span>Calculate Savings</span></button>';
                    if(!$(hpCarousel).find(".owl-nav .recommend-btn").length) {$(hpCarousel).find(".owl-nav").append(recommendButton);}
                } else {
                    var recommendButton = '<button class="btn btn-green recommend-btn" id="recommendHeatPump"><span>next</span></button>';
                    if(!$(hpCarousel).find(".owl-nav .recommend-btn").length) {
                        $(hpCarousel).find(".owl-nav").append(recommendButton);
                        // text align center owl-nav to match designs
                        $(hpCarousel).find(".owl-nav").css("display", "");
                        $(hpCarousel).find(".owl-nav").css("textAlign", "center");
                    }
                    // remove full-width class - only applies for slide 2
                    $(".heat-pump.component").find(".hp-carousel").removeClass("full-width");
                }
            }
        }

function validateSlide(event) {
    var carousel = $(".heat-pump.component").find(".owl-carousel");
    var target = event.currentTarget;
    var activeOwlItem = $(target).closest(".owl-carousel").find(".owl-item.active");
    var activeTab = $(activeOwlItem).find("dt.active");
    var inputs = $(activeOwlItem).find("input");
    var validated = true;
    if(activeTab.length) {
        var tabInputs = $(activeTab).next("dd").find("input");
        for (var i = 0; i < tabInputs.length; i++) {
            if(tabInputs[i] && tabInputs[i].value === "") {
                validated = false;
            }
        }
    } else {
        var firstOwlItem = carousel.find(".owl-item").eq(0);
        var firstSlideInputs = firstOwlItem.find("input");
        if(firstOwlItem.hasClass("active")) {
            var zipInput = $("#zipCode");
            var kwhInput = $("#kw-per-hr");
            if (!(zipInput.val()) && !(kwhInput).val()) {
                validated = false;
            }
        } else {
            for (var i = 0; i < inputs.length; i++) {
                if(inputs[i] && inputs[i].value === "") {
                    validated = false;
                }
            }
        }
    }
    // if invalid - set is-invalid class on input container
    if(!validated) {
        if(activeTab.length) {
            var tabInputs = $(activeTab).next("dd").find("input");
            for(var i = 0; i < tabInputs.length; i++) {
                if(tabInputs[i] && tabInputs[i].value === "") {
                    var parent = tabInputs[i].parentElement;
                    $(parent).addClass("is-invalid");
                }
            }
        } else {
            var firstOwlItem = carousel.find(".owl-item").eq(0);
            if(firstOwlItem.hasClass("active")) {
                $("#zipCode").closest(".zip-container").addClass("is-invalid");
            } else {
                for(var i = 0; i < inputs.length; i++) {
                    var parent = inputs[i].parentElement;
                    $(parent).addClass("is-invalid");
                }
            }
        }
    } else {
        carousel.trigger('next.owl.carousel');
    }
}

// perform pool volume calculations after user enters data
function getTabInputValues(el, inputs) {
    var activeTab = $(el);
    var fields = activeTab.next("dd").find("input");
    var values = {};
    $(fields).each(function(index, element) {
        $(element).on("input", function(e) {
            var value = e.currentTarget.value;
            var id = e.currentTarget.id;
            if(!values.hasOwnProperty(id)) {
                values[id] = value;
            } else {
                values[id] = value;
            }
            handleCalculations(activeTab, values);
        });
    });
}

function handleCalculations(activeTab, values) {
    if (activeTab.hasClass("rectangle")) {
        if(Object.keys(values).length === 4) {
            var shallow = parseFloat(values["shallowEndRectangle"]);
            var deep = parseFloat(values["deepEndRectangle"]);
            var length = parseFloat(values["lengthRectangle"]);
            var width = parseFloat(values["widthRectangle"]);

            var rectangleShallow = Math.ceil(((length * width) * shallow) * 7.4805);
            var rectangleDeep = 0;
            if (deep > shallow) {
                rectangleDeep = ((Math.ceil((length*width)*deep)*7.4805)-Math.ceil(((length*width)*shallow)* 7.4805))/2;
            }
            var result = Math.ceil(rectangleShallow + rectangleDeep);
            if($("#deepEndRectangle").val() !== "" && $("#shallowEndRectangle").val() !== "" && $("#lengthRectangle").val() !== "" && $("#widthRectangle").val() !== "") {
                activeTab.next("dd").find("#calcResultRectangle").text(Math.ceil(result / 100) * 100);
            }
        }
    } else if (activeTab.hasClass("oblong")) {
        if(Object.keys(values).length === 5) {
            var shallow = parseFloat(values["shallowEndOblong"]);
            var deep = parseFloat(values["deepEndOblong"]);
            var length = parseFloat(values["lengthOblong"]);
            var largeDiameter = parseFloat(values["largeDiameterOblong"]);
            var smallDiameter = parseFloat(values["smallDiameterOblong"]);

            var oblongArea = Math.ceil(((largeDiameter + smallDiameter) * length) * 0.45);
            var depth = (shallow + deep) / 2;

            var result = Math.ceil((oblongArea * depth) * 7.4805);
            if($("#deepEndOblong").val() !== "" && $("#shallowEndOblong").val() !== "" && $("#largeDiameterOblong").val() !== "" && $("#smallDiameterOblong").val() !== "" && $("#lengthOblong").val() !== "") {
                activeTab.next("dd").find("#calcResultOblong").text(Math.ceil(result / 100) * 100);
            }
        }
    } else if (activeTab.hasClass("circular")) {
          if(Object.keys(values).length === 3) {
              var shallow = parseFloat(values["shallowEndCircular"]);
              var deep = parseFloat(values["deepEndCircular"]);
              var radius = parseFloat(values["radiusCircular"]);

              var cylinderShallow = Math.ceil(((Math.PI * Math.pow(radius,2)) * shallow) * 7.4805);
              var cylinderDeep = 0;
              if(deep > shallow) {
                  cylinderDeep = Math.ceil(Math.ceil(((Math.PI * Math.pow(radius,2))*deep)*7.4805)-Math.ceil(((Math.PI * Math.pow(radius,2))*shallow))*7.4805)/2;
              }

              var result = Math.ceil(cylinderShallow + cylinderDeep);
              if($("#deepEndCircular").val() !== "" && $("#shallowEndCircular").val() !== "" && $("#radiusCircular").val() !== "") {
                  activeTab.next("dd").find("#calcResultCircular").text(Math.ceil(result / 100) * 100);
              }
          }
    } else if (activeTab.hasClass("triangular")) {
        if(Object.keys(values).length === 4) {
            var shallow = parseFloat(values["shallowEndTriangular"]);
            var deep = parseFloat(values["deepEndTriangular"]);
            var height = parseFloat(values["heightTriangular"]);
            var base = parseFloat(values["baseTriangular"]);

            var triangleShallow = Math.ceil(((base * height)*shallow)*7.4805) / 2;
            var triangleDeep = 0;
            if(deep > shallow) {
                triangleDeep = Math.ceil((Math.ceil(((base*height)*deep)*7.4805)-Math.ceil(((base*height)*shallow)*7.4805))/2)/2;
            }

            var result = Math.ceil(triangleShallow + triangleDeep);
            if($("#deepEndTriangular").val() !== "" && $("#shallowEndTriangular").val() !== "" && $("#heightTriangular").val() !== "" && $("#baseTriangular").val() !== "") {
                activeTab.next("dd").find("#calcResultTriangular").text(Math.ceil(result / 100) * 100);
            }
        }
    }
}

function setLatLong() {
    // Defaults to L.A. if no user input
    var points = {lat : 34.052235, long : -118.243683};
    return points;
}

function getUserPosition(){
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(success, error);
    }
}

function handleZipCode(zip, res) {
    $(".heat-pump.component").find("#zipCode").val(zip[1]);
}

function success(position) {
    var lat = position.coords.latitude;
    var long = position.coords.longitude;
    var point = new google.maps.LatLng(lat, long);
    var geocoder = new google.maps.Geocoder().geocode(
        {'latLng': point}, function( res, status) {
            var zip = res[0].formatted_address.match(/,\s\w{2}\s(\d{5})/);
            var lat = res[0].geometry.location.lat();
            var long = res[0].geometry.location.lng();
            handleZipCode(zip, res[0]);
            reverseGeocode(lat, long);
            if($(".heat-pump.component .location-wrapper > div:first-child").hasClass("is-invalid")) {
                $(".heat-pump.component .location-wrapper > div:first-child").removeClass("is-invalid");
            }
        }
    );
}

function error(err) {
    if (err.code == err.PERMISSION_DENIED) {
        $(".heat-pump.component .location-wrapper > div:first-child").addClass("is-invalid");
    }
}

// populate kW/h field based on user's state
function getKilowattPerHours(obj) {
    $.ajax({
        type: 'GET',
        data: obj,
        url: '/bin/pentair/calculators/heatpump',
        dataType: 'json',
        success: function(data) {
            var kiloValue = data.kw;
            var thermValue = data.gas;
            $(".heat-pump.component").find("#kw-per-hr").val(kiloValue);
            $(".heat-pump.component").find("#gas-per-therm").val(thermValue);
        },
        error: function(data) {
            console.log("Error requesting Heat Pump Data - Zipcode ", data);
        }
    });
}

// reverse geocode
var stateObj = {state: "unknown"};

var resultObj = {};
function reverseGeocode(lat, long) {
    var tempLat = lat;
    var tempLong = long;
    var points = new google.maps.LatLng(tempLat, tempLong);
    var geocoder = new google.maps.Geocoder().geocode(
        {'latLng': points}, function( res, status) {
            res.map(function(item) {
                if (item.types.indexOf("administrative_area_level_1") > -1) {
                    var stateData  = item.formatted_address.split(",");
                    var state = stateData[0];
                    resultObj.state = state;
                    resultObj.lat = tempLat;
                    resultObj.long = tempLong;
                    stateObj.state = state;
                    getKilowattPerHours(stateObj);
                }
            });
        }
    );
}

function getLatLongByZipCode(zip) {
    var geocoder = new google.maps.Geocoder();
    var address = zip;
    geocoder.geocode({ 'address': 'zipcode '+address, 'componentRestrictions':{'country':'US'}}, function (response, status) {
        if (status == google.maps.GeocoderStatus.OK) {
            var latitude = response[0].geometry.location.lat();
            var longitude = response[0].geometry.location.lng();
            reverseGeocode(latitude, longitude);
        }
    });
}

// Slider Widths
function sliderSelected() {
    var min = 60, max = 104;
    var selectedWidth = ($("#tempSlider").val() - min) / (max - min) * 100 + "%";
    return selectedWidth;
}

function sliderUnselected() {
    var min = 60, max = 104;
    var unselectedWidth = 100 - ($("#tempSlider").val() - min) / (max - min) * 100 + "%";
    return unselectedWidth;
}

// Calculate Temp Slider Widths on Load
function calcTempSliderWidths() {
    var selected = ($("#tempSlider").val() - 60) / (104 - 60) * 100 + "%";
    var unselected = 100 - ($("#tempSlider").val() - 60) / (104 - 60) * 100 + "%";
    $(".heat-pump.component .pool-temp-slider").find(".slider-selected").css("width", selected);
    $(".heat-pump.component .pool-temp-slider").find(".slider-unselected").css("width", unselected);
}

function handleActiveBars() {
    var activePump = $(".recommended-pump").find("dt");
    var activePumpContent = $(".recommended-pump").find("dd");

    activePumpContent.each(function(index, item) {
        var sliderContainer = $(item).find(".swim-season");
        var leftSlider = parseFloat($(sliderContainer).find("input.left").val());
        var rightSlider = parseFloat($(sliderContainer).find("input.right").val());
        var bars = $(sliderContainer).find(".bar");
        for(var i = 0; i < bars.length; i++) {
            if(i >= (leftSlider-1) && i <= (rightSlider-1)) {
                if(!$(bars[i]).hasClass("active")) {
                    $(bars[i]).addClass("active");
                }
            } else {
                if($(bars[i]).hasClass("active")) {
                    $(bars[i]).removeClass("active");
                }
            }
        }
        showSliderMonths(sliderContainer);
    });
}

function showSliderMonths(sliderContainer) {
    var bars = $(sliderContainer).find(".bar.active");
    $(bars).each(function(index, elem) {
        if(index === 0 || index === bars.length-1) {
            $(bars[0]).addClass("show");
            $(bars[bars.length-1]).addClass("show");
        } else {
            $(bars[index]).removeClass("show");
        }
    });
}

function setSlider(event) {
    var sliderLeft = $(".swim-season .slider.left");
    var sliderRight = $(".swim-season .slider.right");
    var min = parseInt($(sliderLeft).attr("min"), 10);
    var max = parseInt($(sliderLeft).attr("max"), 10);
    var maxOffset = 297; // width of swim seasons range inputs
    var mousePosition = event.offsetX / maxOffset;
    var mouseValue = parseInt((mousePosition * (max - min)) + min, 10);
    var distSliderLeft = Math.abs($(sliderLeft).val() - mouseValue);
    var distSliderRight = Math.abs($(sliderRight).val() - mouseValue);
    if (distSliderLeft < distSliderRight) {
        $(sliderLeft).css("zIndex", 11);
        $(sliderRight).css("zIndex", 10);
    } else {
        $(sliderLeft).css("zIndex", 10);
        $(sliderRight).css("zIndex", 11);
    }
}

function poolVolumeHelper(shape) {
    var classes = $(shape).attr("class").split(/\s+/);
    var pvUrl = {};
    if(classes.indexOf("rectangle") > -1) {
        pvUrl.shape = classes[0];
        pvUrl.length = $("#lengthRectangle").val();
        pvUrl.width = $("#widthRectangle").val();
        pvUrl.shallow = $("#shallowEndRectangle").val();
        pvUrl.deep = $("#deepEndRectangle").val();
    } else if (classes.indexOf("oblong") > -1) {
        pvUrl.shape = classes[0];
        pvUrl.length = $("#lengthOblong").val();
        pvUrl.smallDiameter = $("#smallDiameterOblong").val();
        pvUrl.largeDiameter = $("#largeDiameterOblong").val();
        pvUrl.shallow = $("#shallowEndOblong").val();
        pvUrl.deep = $("#deepEndOblong").val();
    } else if (classes.indexOf("circular") > -1) {
        pvUrl.shape = "circle";
        pvUrl.shallow = $("#shallowEndCircular").val();
        pvUrl.deep = $("#deepEndCircular").val();
        pvUrl.radius = $("#radiusCircular").val();
    } else if (classes.indexOf("triangular") > -1) {
        pvUrl.shape = "triangle";
        pvUrl.shallow = $("#shallowEndTriangular").val();
        pvUrl.deep = $("#deepEndTriangular").val();
        pvUrl.length = $("#heightTriangular").val();
        pvUrl.width = $("#baseTriangular").val();
    }
    return pvUrl;
}

function tempSliderHelper(sliders) {
    var result = "";
    $(sliders).each(function(index, elem) {
        if (index === 0) {
            result += $(elem).val() + ":";
        } else {
            result += $(elem).val();
        }
    });
    return result;
}

var url = {};
var poolUrl = {};
function constructHeatPumpUrl(items) {
    var inputs = [];
    var slideOneInputs = $(items).eq(0).find("input");
    var slideTwoInputs = $(items).eq(1).find(".pool-volume.component dt.active").next("dd").find("input");
    var slideThreeInputs = $(items).eq(2).find("input");
    Array.prototype.push.apply(inputs, [slideOneInputs, slideTwoInputs, slideThreeInputs]);

    var tempValue = parseFloat($(slideThreeInputs).val()).toFixed(1);
    var shape = $(items).eq(1).find(".pool-volume.component dt.active");

    poolUrl = poolVolumeHelper(shape);
    var poolTempSliders = $(items).closest(".heat-pump.component").find(".recommended-pump dt.active").next("dd").find(".swim-season input");
    var poolTemps = tempSliderHelper(poolTempSliders);

    // Lat Long Values
    var defaultLongLong = setLatLong();
    var reverseGeoObj = resultObj;

    var eCost = $("#kw-per-hr").val();
    var gCost = $("#gas-per-therm").val();

    // construct object that holds our data values
    url.temp = parseFloat(tempValue).toFixed(1);
    url.state = (reverseGeoObj.state !== undefined ? reverseGeoObj.state : "Ohio");
    url.swimSeason = (poolTemps === "" ? '3:9' : poolTemps);
    url.lat = (reverseGeoObj.lat !== undefined ? reverseGeoObj.lat : defaultLongLong.lat);
    url.long = (reverseGeoObj.long !== undefined ? reverseGeoObj.long : defaultLongLong.long);
    url.efficiency = 0.82;
    url.gasCost = parseFloat(gCost).toFixed(2);
    url.electricityCost = parseFloat(eCost).toFixed(2);

    var data = $.extend({}, url, poolUrl);

    // send data values to function to send ajax request to servlet
    heatPumpCalculationData(data);
}

// request servlet based on calculation data provided
function heatPumpCalculationData(data, leftSlider, rightSlider, desiredWaterTemp, gasHeaterEfficiency) {
    $.ajax({
        type: 'GET',
        data: data,
        url: '/bin/pentair/calculators/heatpump',
        dataType: 'json',
        success: function(data) {
            handleRecommendedPumpData(data[0].products, data[1][0], leftSlider, rightSlider, desiredWaterTemp, gasHeaterEfficiency);
        },
        error: function(data) {
            console.log("Error requesting Heat Pump Data - Calculations ", data);
        }
    });
}

function handleRecommendedPumpData(data, sliderData, leftSlider, rightSlider, desiredWaterTemp, gasHeaterEfficiency) {
    var recommendedPump = $(".heat-pump.component").find(".recommended-pump");
    $(".heat-pump.component").find(".recommended-pump .loader-wrapper.loader").remove();

    var kwhValue = sliderData.kw;
    var gasValue = sliderData.gas;
    var waterTempSlider = $(".heat-pump.component .owl-item").eq(2).find("#tempSlider");
    var waterTempValue = Math.round(waterTempSlider.val());
    var desiredTemp = Math.round(desiredWaterTemp);

    leftSlider = Math.min(leftSlider,rightSlider - 1);
    var leftSliderValue = (100/(12 - 1))*leftSlider-(100/(12 - 1))*1;

    rightSlider = Math.max(rightSlider,leftSlider - (-1));
    var rightSliderValue = (100/(12 - 1))*rightSlider-(100/(12 - 1))*1;

    // wtb data sfdc dealers ajax
    var defaultLongLong = setLatLong();
    var reverseGeoObj = resultObj;
    var locationData = {};
    locationData.latitude = (reverseGeoObj.lat !== undefined ? reverseGeoObj.lat : defaultLongLong.lat);
    locationData.longitude = (reverseGeoObj.long !== undefined ? reverseGeoObj.long : defaultLongLong.long);

    data.map(function(elem, index) {
        Object.keys(elem).forEach(function(key) {
            var title = elem[key][0].title;
            var url = elem[key][0].url;
            var thumbnail = elem[key][0].thumbnail;
            var whereToBuy = elem[key][0]["where-to-buy"];
            var brands = elem[key][0].brands;
            var categories = elem[key][0].categories;
            var cost = elem[key][0].cost;
            var savings = elem[key][0].savings;
            var timeToHeat = elem[key][0]["time-to-heat"];

            // create tab markup
            var tabButton = generateTabMarkUp(title, index);
            var tabContent = generateTabContentMarkUp(title, url, thumbnail, whereToBuy, brands, categories, cost, savings, timeToHeat, kwhValue, gasValue, waterTempValue, desiredTemp, gasHeaterEfficiency, leftSlider, leftSliderValue, rightSlider, rightSliderValue, index);
            $(recommendedPump).find("dl.tabs").append(tabButton);
            $(recommendedPump).find("dl.tabs").append(tabContent);

            // sfdc dealers ajax
            var extendLocationData = {distance: 200, brands: brands.split(",").join(','), categories: categories.split(",").join(',')};
            $.extend(locationData, extendLocationData);

            handleWTBResults(locationData, index);
        });
    });

    handleActiveBars();
}

function handleSFDCResults(value, index) {
    if (value === false) {
        $(".heat-pump.component .recommended-pump dd").eq(index).find(".btn-wtb").attr("data-show", false);
    }
}

function handleWTBResults(data, index) {
    var showButton;
    var locationData = data;
    $.ajax({
        type: 'GET',
        data: locationData,
        url: '/bin/pentair/sfdc/dealers',
        beforeSend: function() {},
        success: function(data) {
            jsonData = JSON.parse(data);
            var filteredResults = jsonData.results.filter(function(elem){return elem.hideAddress == false;});
            if(filteredResults.length > 0) {
                showButton = true;
                handleSFDCResults(showButton, index);
            }
        },
        error: function(data) {
            console.error('No dealers found. -> ', data.length);
            showButton = false;
            handleSFDCResults(showButton, index);
        }
    });
}

function generateTabMarkUp(title, index) {
    var tab = '<dt class="tab'+(index === 0 ? ' active' : '')+'" role="heading">';
    tab += '<button class="tab-btn" aria-expanded="'+(index === 0 ? 'true':'false')+'" aria-controls="tab'+index+'" id="tab'+index+'Toggle" type="button" aria-disabled="true">';
    tab += '<span class="tab-text">' + title + '</span></button></dt>';
    return tab;
}
function generateTabContentMarkUp(title, url, thumbnail, whereToBuy, brands, categories, cost, savings, timeToHeat, kwhValue, gasValue, waterTempValue, desiredTemp, gasHeaterEfficiency, leftSlider, leftSliderValue, rightSlider, rightSliderValue, index) {
    var content = '<dd id="tab'+index+'" role="region" aria-labelledby="tab'+index+'Toggle" '+(index === 0 ? '': 'hidden')+'>';
    content += '<div class="tab-content"><div class="tab-content-section"><div class="recommended-pump-title h6">'+title+'</div>';
    content += '<p class="model-desc">Your estimated savings are $'+(Math.round(savings))+', compared to conventional heating. Use the sliders below to change the swim season months.</p>';
    content += '<div class="button-container"><a href="'+whereToBuy+'.html?show=local&from=product" class="btn btn-green btn-wtb" data-brands="'+brands+'" data-categories="'+categories+'" data-show="true" onclick="poolWtbAnalytics(this)" target="_blank"><span>where to buy</span></a><a href="'+url+'.html" class="btn btn-white btn-product" onclick="poolProdClickAnalytics(this)" target="_blank"><span>view product</span></a></div>';
    content += '<div class="share-container"><div class="calc-share component"><div class="calc-share-component-label">Share Results</div><ul><li>';
    content += '<a class="calc-share-link mailto-link" href="#"><span class="icon-envelope" aria-hidden="true"></span><span class="sr-only">Share via Email</span></a></li>';
    content += '<li><a class="calc-share-link twitter-link" href="#" target="_blank"><span class="icon-twitter" aria-hidden="true"></span><span class="sr-only">Share via Twitter</span></a></li>';
    content += '<li><a class="calc-share-link facebook-link" href="#" target="_blank"><span class="icon-facebook" aria-hidden="true"></span><span class="sr-only">Share via Facebook</span></a></li>';
    content += '<li><a href="javascript:window.print()"><span class="icon-print" aria-hidden="true"></span><span class="sr-only">Print</span></a></li></ul></div><button class="btn btn-over"><span>start over</span></button></div></div>';
    content += '<div class="tab-content-section"><div class="estimated-savings'+(savings == 0.00 ? ' no-savings' : '')+'"><div class="has-savings"><div class="h6">your estimated seasonal savings</div><span class="savings-amount">$'+(Math.round(savings))+'</span><p>dollars</p></div><div class="zero-savings"><p>Based on the information you provided, a gas heater may be a better option for you.</p><a class="btn btn-green" href="https://www.pentair.com/en-us/products/pool-spa-equipment/pool-heaters/gas-pool-heaters.html" target="_blank"><span>browse gas heaters</span></a></div></div>';
    content += '<img loading="lazy" class="results-pump" src="'+thumbnail+'" alt="'+title+'"><div class="water-temp h6">average time to raise water 10&deg;f: <span class="water-temp-val">'+timeToHeat+'<span>hrs</span></span></div></div></div>';
    content += '<div class="recommended-pump-sliders"><div class="recommended-slider"><div class="h6">utility costs</div><div class="dollars-per-therm slider-container"><label>gas dollars per therm</label>';
    content += '<input type="range" class="slider" min="0" max="5" step="any" value="'+gasValue+'" id="dptTherm"><div class="slider-selected" style="width:'+(gasValue - 0)/(5-0) * 100+'%"></div><div class="slider-unselected" style="width:'+(100 - (gasValue - 0) / (5 - 0) * 100 )+'%"></div>';
    content += '<div class="tick-container"><span class="large-tick"><span class="num-tick">$0</span></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span> ';
    content += '<span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="large-tick"><span class="num-tick">$5.00</span></span> ';
    content += '</div><div class="tick-result"><span>$<span id="dptThermVal">'+gasValue+'</span></span><span>/therm</span></div></div><div class="dollars-per-kwh slider-container"><label>electricity dollars per kwh</label>';
    content += '<input type="range" class="slider" min="0" max="1" step="any" value="'+kwhValue+'" id="dpkVal"><div class="slider-selected" style="width:'+(kwhValue - 0)/(1-0) * 100+'%"></div><div class="slider-unselected" style="width:'+(100 - (kwhValue - 0) / (1 - 0) * 100 )+'%"></div>';
    content += '<div class="tick-container"><span class="large-tick"><span class="num-tick">$0</span></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span> ';
    content += '<span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span>';
    content += '<span class="large-tick"><span class="num-tick">$1.00</span></span></div><div class="tick-result"><span>$<span class="kwh-value">'+kwhValue+'</span></span><span>/kWh</span></div></div></div>';
    content += '<div class="recommended-slider"><div class="h6">Inputs</div><div class="gas-efficiency slider-container"><label>gas heater efficiency</label>';
    content += '<input type="range" class="slider" min="50" max="100" step="any" value="'+(isNaN(gasHeaterEfficiency) ? 82 : gasHeaterEfficiency)+'" id="gasValue"><div class="slider-selected" style="width:'+(isNaN(gasHeaterEfficiency) ? ((82 - 50) / (100 - 50) * 100) : ((gasHeaterEfficiency - 50) / (100 - 50) * 100))+'%;"></div>';
    content += '<div class="slider-unselected" style="width:'+(isNaN(gasHeaterEfficiency) ? (100 - (82 - 50) / (100 - 50) * 100) : (100 - (gasHeaterEfficiency - 50) / (100 - 50) * 100))+'%;"></div><div class="tick-container"><span class="large-tick"><span class="num-tick">50%</span></span>';
    content += '<span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span><span class="small-tick"></span>';
    content += '<span class="small-tick"></span><span class="small-tick"></span><span class="large-tick"><span class="num-tick">100%</span></span></div>';
    content += '<div class="tick-result"><span class="gas-value">'+(isNaN(gasHeaterEfficiency) ? 82 : gasHeaterEfficiency)+'</span><span>%</span></div></div>';
    content += '<div class="pool-temp-slider slider-container"><label>desired water temp</label><input type="range" class="slider" min="60" max="104" step="any" value="'+(!isNaN(desiredTemp) ? desiredTemp : waterTempValue)+'" id="poolTempValue">';
    content += '<div class="slider-selected" style="width:'+(!isNaN(desiredTemp) ? ((desiredTemp - 60)/(104-60) * 100) : ((waterTempValue - 60)/(104-60) * 100))+'%;"></div><div class="slider-unselected" style="width:'+(!isNaN(desiredTemp) ? (100 - (desiredTemp - 60) / (104 - 60) * 100) : (100 - (waterTempValue - 60) / (104 - 60) * 100))+'%;"></div><div class="tick-container"><span class="large-tick"><span class="num-deg">60&deg;</span></span>';
    content += '<span class="small-tick"></span><span class="large-tick"></span><span class="small-tick"></span><span class="large-tick"></span><span class="small-tick"></span><span class="large-tick"></span><span class="small-tick"></span>';
    content += '<span class="large-tick"></span><span class="small-tick"></span><span class="large-tick"></span><span class="small-tick"></span><span class="large-tick"><span class="num-deg">104&deg;</span></span></div>';
    content += '<div class="tick-result"><span class="pool-temp-value">'+(!isNaN(desiredTemp) ? desiredTemp : waterTempValue)+'</span><span>&deg;</span></div></div></div>';
    content += '<div class="recommended-slider"><div class="h6">swim season</div><div class="swim-season slider-container"><label>swim season months</label><input type="range" class="slider left" min="1" max="12" step="1" value="'+(isNaN(leftSlider) ? 3 : leftSlider)+'">';
    content += '<input type="range" class="slider right" min="1" max="12" step="1" value="'+(isNaN(rightSlider) ? 9 : rightSlider)+'"><div class="inverse-left" style="width:'+(isNaN(leftSliderValue) ? 70 : leftSliderValue)+'%;"></div><div class="inverse-right" style="width:'+(isNaN(rightSliderValue) ? 70 : (100 - rightSliderValue))+'%;"></div>';
    content += '<div class="range-overlap" style="left:'+(isNaN(leftSliderValue) ? 18 : leftSliderValue)+'%;right:'+(isNaN(rightSliderValue) ? 28 : (100 - rightSliderValue))+'%;"></div><span class="thumb left" style="left:'+(isNaN(leftSliderValue) ? 22 : leftSliderValue)+'%;"></span><span class="thumb right" style="left:'+(isNaN(rightSliderValue) ? 72 : (100 - rightSliderValue))+'%;"></span><div class="bar-container">';
    content += '<div class="bar bar-53"><span class="degree">J</span><span class="month">Jan</span></div><div class="bar bar-61"><span class="degree">F</span><span class="month">Feb</span></div>';
    content += '<div class="bar bar-73 active show"><span class="degree">M</span><span class="month">Mar</span></div><div class="bar bar-75 active"><span class="degree">A</span><span class="month">Apr</span></div>';
    content += '<div class="bar bar-82 active"><span class="degree">M</span><span class="month">May</span></div><div class="bar bar-89 active"><span class="degree">J</span><span class="month">Jun</span></div>';
    content += '<div class="bar bar-84 active"><span class="degree">J</span><span class="month">Jul</span></div><div class="bar bar-80 active"><span class="degree">A</span><span class="month">Aug</span></div>';
    content += '<div class="bar bar-74 active show"><span class="degree">S</span><span class="month">Sep</span></div><div class="bar bar-69"><span class="degree">O</span><span class="month">Oct</span></div>';
    content += '<div class="bar bar-56"><span class="degree">N</span><span class="month">Nov</span></div><div class="bar bar-49"><span class="degree">D</span><span class="month">Dec</span></div></div></div>';
    content += '<div class="button-container"><button class="btn btn-recalc"><span>recalculate</span></button></div></div></div></dd>';
    return content;
}

// share functionality for Recommended Heat Pump Results page
var host = window.location.href;
var shareLink = "";

function createRecommendedPumpShareLink() {
    var hasQuery = window.location.href.indexOf('?') !== -1;
    var recommendedPump = $(".heat-pump.component .recommended-pump");
    var activeTab = recommendedPump.find("dt.active");
    var activeTabContent = activeTab.next("dd");
    var pump = activeTabContent.find(".recommended-pump-title").text();
    var title = pump.toLowerCase().split(" ").join("-");
    var savings = activeTabContent.find(".savings-amount").text().substring(1);
    var timeToHeat = activeTabContent.find(".water-temp-val").contents().not($(".water-temp-val").children()).text();
    shareLink = (hasQuery ? '&' : '?') + "recommended=" + title + "&savings=" + savings + "&timeToHeat=" + timeToHeat;
    var pvComponent = $(".heat-pump.component .pool-volume.component");
    var activePVTab = pvComponent.find("dt.active");
    var tempValue = $(".heat-pump.component .owl-item").eq(2).find("#tempSlider").val();
    if (activePVTab.hasClass("rectangle")) {
        shareLink += "&shape=rectangle&deepEnd=" + $("#deepEndRectangle").val() + "&shallowEnd=" + $("#shallowEndRectangle").val();
        shareLink += "&length=" + $("#lengthRectangle").val() + "&width=" + $("#widthRectangle").val() + "&temp=" + parseFloat(tempValue).toFixed(1);
    } else if (activePVTab.hasClass("oblong")) {
        shareLink += "&shape=oblong&deepEnd=" + $("#deepEndOblong").val() + "&shallowEnd=" + $("#shallowEndOblong").val();
        shareLink += "&largeDiameter=" + $("#largeDiameterOblong").val() + "&smallDiameter=" + $("#smallDiameterOblong").val() + "&length=" + $("#lengthOblong").val() + "&temp=" + parseFloat(tempValue).toFixed(1);
    } else if (activePVTab.hasClass("circular")) {
        shareLink += "&shape=circular&deepEnd=" + $("#deepEndCircular").val() + "&shallowEnd=" + $("#shallowEndCircular").val();
        shareLink += "&radius=" + $("#radiusCircular").val() + "&temp=" + parseFloat(tempValue).toFixed(1);
    } else if (activePVTab.hasClass("triangular")) {
        shareLink += "&shape=triangular&deepEnd=" + $("#deepEndTriangular").val() + "&shallowEnd=" + $("#shallowEndTriangular").val();
        shareLink += "&height=" + $("#heightTriangular").val() + "&base=" + $("#baseTriangular").val() + "&temp=" + parseFloat(tempValue).toFixed(1);
    }
}

function createRecommendedPumpMailToLink() {
    var mailToBase = 'mailto:?subject=';
    var bodyKey = '&body=';
    var mailToString = mailToBase + document.title + bodyKey + encodeURIComponent(host + shareLink);
    var recommendedPump = $(".heat-pump.component .recommended-pump");
    var activeTab = recommendedPump.find("dt.active");
    activeTab.next("dd").find(".calc-share.component .mailto-link").attr("href", mailToString);
}

function createRecommendedPumpTwitterLink() {
    var twitterBase = 'http://twitter.com/intent/tweet?text=';
    var twitterUrl = twitterBase + document.title + ' ' + encodeURIComponent(host + shareLink);
    var recommendedPump = $(".heat-pump.component .recommended-pump");
    var activeTab = recommendedPump.find("dt.active");
    activeTab.next("dd").find(".calc-share.component .twitter-link").attr("href", twitterUrl);
}

function createRecommendedPumpFacebookLink() {
    var fbLinkBase = 'http://www.facebook.com/sharer/sharer.php?u=';
    var fbUrl = fbLinkBase + encodeURIComponent(host) + "&title=" + document.title + encodeURIComponent(shareLink);
    var recommendedPump = $(".heat-pump.component .recommended-pump");
    var activeTab = recommendedPump.find("dt.active");
    activeTab.next("dd").find(".calc-share.component .facebook-link").attr("href", fbUrl);
}

function updateHeatPumpCalcShareLinks() {
    createRecommendedPumpShareLink();
    createRecommendedPumpMailToLink();
    createRecommendedPumpTwitterLink();
    createRecommendedPumpFacebookLink();
}

function poolUrlHelper (obj) {
    var poolUrlObj = {};
    if(obj.shape == "rectangle") {
        poolUrlObj.shape = "rectangle";
        poolUrlObj.length = obj.length;
        poolUrlObj.width = obj.width;
        poolUrlObj.shallow = obj.shallowEnd;
        poolUrlObj.deep = obj.deepEnd;
    } else if (obj.shape == "oblong") {
        poolUrlObj.shape = "oblong";
        poolUrlObj.length = obj.length;
        poolUrlObj.smallDiameter = obj.smallDiameter;
        poolUrlObj.largeDiameter = obj.largeDiameter;
        poolUrlObj.shallow = obj.shallowEnd;
        poolUrlObj.deep = obj.deepEnd;
    } else if (obj.shape == "circular") {
        poolUrlObj.shape = "circle";
        poolUrlObj.shallow = obj.shallowEnd;
        poolUrlObj.deep = obj.deepEnd;
        poolUrlObj.radius = obj.radius;
    } else if (obj.shape == "triangular") {
        poolUrlObj.shape = "triangle";
        poolUrlObj.shallow = obj.shallowEnd;
        poolUrlObj.deep = obj.deepEnd;
        poolUrlObj.length = obj.height;
        poolUrlObj.width = obj.base;
    }
    return poolUrlObj;
}

function handleUrlData(obj) {
    var inputs = [];
    var data = {};
    var poolObj = {};
    var items = $(".heat-pump.component").find(".owl-item");
    poolObj = poolUrlHelper(obj);
    var poolTempSliders = $(items).closest(".heat-pump.component").find(".recommended-pump dt.active").next("dd").find(".swim-season input");
    var poolTemps = tempSliderHelper(poolTempSliders);
    // Lat Long Values
    var defaultLongLong = setLatLong();
    var reverseGeoObj = resultObj;
    // construct object that holds our data values
    data.temp = obj.temp;
    data.state = (reverseGeoObj.state !== undefined ? reverseGeoObj.state : "Ohio");
    data.swimSeason = (poolTemps === "" ? '3:9' : poolTemps);
    data.lat = (reverseGeoObj.lat !== undefined ? reverseGeoObj.lat : defaultLongLong.lat);
    data.long = (reverseGeoObj.long !== undefined ? reverseGeoObj.long : defaultLongLong.long);
    data.efficiency = 0.82;
    data.gasCost = 1.13;
    data.electricityCost = 0.12;
    var finalData = $.extend({}, data, poolObj);
    // send data values to function to send ajax request to servlet
    heatPumpCalculationData(finalData);
    $(".heat-pump.component").addClass("show-recommended-pump");
}

function checkHeatPumpUrl() {
    var url = window.location.search.substring(1);
    if(url.indexOf("recommended=") !== -1 && url.indexOf("savings=") !== -1 && url.indexOf("timeToHeat=") !== -1 && url.indexOf("shape=") !== -1) {
        var params = {}, queries, temp, i, l;
        // Split into key/value pairs
        queries = url.split("&");
        // Convert the array of strings into an object
        for ( i = 0, l = queries.length; i < l; i++ ) {
            temp = queries[i].split('=');
            params[temp[0]] = temp[1];
        }
        handleUrlData(params);
    }
}

var init = function() {
    waterTempTicks();
    calcTempSliderWidths();
    checkHeatPumpUrl();
};

var PENTAIR = PENTAIR || {};
PENTAIR.SHARE = PENTAIR.SHARE || {};
PENTAIR.SHARE.URLPARAMS = PENTAIR.SHARE.URLPARAMS || {};

$(function() {

    /** Primary objective of the share component view model is to bind the dynamic query parameters, if they exist, to the various social media buttons. */
    var ShareViewModel = function ShareViewModel(parentElement) {
        var self = this;
        var currentPageTitle = PENTAIR.SHARE.currentPageTitle ? PENTAIR.SHARE.currentPageTitle : '';
        var host = PENTAIR.SHARE.host ? PENTAIR.SHARE.host : '';
        var titleKey = '&title=';
        var shape = 'shape=';
        var deepEnd = '&deepEnd=';
        var shallowEnd = '&shallowEnd=';
        var length = '&length=';
        var width = '&width=';
        var largeDiameter = '&largeDiameter=';
        var smallDiameter = '&smallDiameter=';
        var radius = '&radius=';
        var height = '&height=';
        var base = '&base=';
        var results = '&results=';
        var activeTab = $(".pool-volume.component > .pv-tab-container");
        var shareLink = "";

        var parentCalculatorType = $(".calc-share").parents('.salinity-calculator.component').length > 0 ? 'salinity' : '';
        parentCalculatorType = parentCalculatorType || ($(".calc-share").parents('.pool-volume.component').length > 0 ? 'pool-volume' : '');

        /** KO Observable Variables */
        self.queryParamString = ko.observable('');
        self.mailingLink = ko.observable('');
        self.modifiedTwitterLink = ko.observable('');
        self.modifiedFbLink = ko.observable('');
        self.modifiedLinkedInLink = ko.observable('');

        function setQueryString() {
            var query = window.location.href;
            var hasQueryString = query.indexOf('?');
            if(hasQueryString !== -1) {
                self.queryParamString('?' + window.location.href.split('?')[1]);
            }
        }

        function getEncodedUrl(url) {
            if(self.queryParamString() !== '') {
                return url + encodeURIComponent(self.queryParamString());
            } else {
                return url;
            }
        }

        function createVolumeCalcShareLinks() {
            var hasQuery = window.location.href.indexOf('?') !== -1;
            if(activeTab.hasClass("rectangular-active")) {
                shareLink = (hasQuery ? '&' : '?') + shape + "rectangle" + deepEnd + $("#deepEndRectangle").val() + shallowEnd + $("#shallowEndRectangle").val();
                shareLink += length + $("#lengthRectangle").val() + width + $("#widthRectangle").val() + results + $("#calcResultRectangle").text();
            } else if (activeTab.hasClass("oblong-active")) {
                shareLink = (hasQuery ? '&' : '?') + shape + "oblong" + deepEnd + $("#deepEndOblong").val() + shallowEnd + $("#shallowEndOblong").val();
                shareLink += length + $("#lengthOblong").val() + largeDiameter + $("#largeDiameterOblong").val() + smallDiameter + $("#smallDiameterOblong").val() + results + $("#calcResultOblong").text();
            } else if (activeTab.hasClass("circular-active")) {
                shareLink = (hasQuery ? '&' : '?') + shape + "circular" + deepEnd + $("#deepEndCircular").val() + shallowEnd + $("#shallowEndCircular").val();
                shareLink += radius + $("#radiusCircular").val() + results + $("#calcResultCircular").text();
            } else if (activeTab.hasClass("triangular-active")) {
                shareLink = (hasQuery ? '&' : '?') + shape + "triangular" + deepEnd + $("#deepEndTriangular").val() + shallowEnd + $("#shallowEndTriangular").val();
                shareLink += height + $("#heightTriangular").val() + base + $("#baseTriangular").val() + results + $("#calcResultTriangular").text();
            }
            //return shareLink;
        }

        function createSalinityCalcShareLinks() {
            var hasQuery = window.location.href.indexOf('?') !== -1;
            shareLink = '?gallons=' + $(".gallons-of-water input").val() +
                        '&salt=' + $(".current-salt-level input").val();
            console.log(shareLink)
        }

        function createCalcMailToLink() {
            var mailToBase = 'mailto:?subject=';
            var bodyKey = '&body=';
            var mailToString = mailToBase + currentPageTitle + bodyKey + encodeURIComponent(host + shareLink);
            self.mailingLink(mailToString);
        }

        function createCalcTwitterLink() {
            var twitterBase = 'http://twitter.com/intent/tweet?text=';
            var twitterUrl = twitterBase + currentPageTitle + ' ' + encodeURIComponent(host + shareLink);
            self.modifiedTwitterLink(twitterUrl);
        }

        function createCalcFacebookLink() {
            var fbLinkBase = 'http://www.facebook.com/sharer/sharer.php?u=';
            var fbUrl = fbLinkBase + getEncodedUrl(host) + titleKey + currentPageTitle + encodeURIComponent(shareLink);
            self.modifiedFbLink(fbUrl);
        }
        
        function updateCalcShareLinks() {
            setQueryString();
            if(parentCalculatorType === 'pool-volume'){
                createVolumeCalcShareLinks();
            } else if(parentCalculatorType === 'salinity'){
                createSalinityCalcShareLinks();
            }
            createCalcMailToLink();
            createCalcTwitterLink();
            createCalcFacebookLink();
        }

        /** Since the url is dynamic on Download center pages, we need to check the query parameters every time the mouse moves towards the share links. */
        $('.calc-share.component')
            .on('mouseenter', function() {
                updateCalcShareLinks();
        });

        /** Initialize the links on load */
        updateCalcShareLinks();

    };

    //
    // $(function() {
        /** Initialize the knockout viewmodel on the share component. (on load)*/

        // var $hareComponent = $('#shareComponent');
        // if($hareComponent.length) {
        //
        //     ko.applyBindings(new ShareViewModel($hareComponent));
        // }

    $('.calc-share.component').each(function() {
        try {
            ko.applyBindings(new ShareViewModel($(this)), this);
        } catch (koError) {
            console.log('Knockout JS error detected on the Share Component - Calculators ==> ', koError);
        }
    });

});

$(document).ready(function(){

    var initAccessoriesCarousel = function(accessoriesComponent){

        var accessoriesCarousel = accessoriesComponent.find('.owl-carousel');
        var pagination = accessoriesComponent.find('.pagination');
        var currentSlide = 0;
        var totalItems;
        var paginator;

        accessoriesCarousel.owlCarousel({
            nav:false,
            dots:true,
            mouseDrag: false,
            items: 1
        }).on('initialized.owl.carousel changed.owl.carousel resized.owl.carousel', function(event) {
        	paginator.paginationItems(paginationItems());
            update();
        });

        // How many pagination buttons to display depends on screen size.
        var paginationItems = function(){
        	if ( matchMedia('(max-width: 765px)').matches ) {
        		return 3;
        	}
        	return 5;
        };

        var update = function () {
            setTimeout(function(){
                var activeDot = accessoriesCarousel.find('.owl-dot.active');
                var currentSlide = accessoriesCarousel.find('.owl-dot').index(activeDot) + 1;
                paginator.currentPage(currentSlide);
                reInitEvents();
            }, 10);
        };

        var reInitEvents = function () {
        	pagination.find('a').on('click', function(e){
        		e.preventDefault();
        	});

        	pagination.find('li a').on('click', function(e){
        		var targetPage = $(e.target).text();
        		var targetIndex = targetPage - 1;
	            var dist = targetPage - paginator.currentPage();
	            var direction = (dist < 0) ? 'prev.owl.carousel' : 'next.owl.carousel';
	            dist = Math.abs(dist);
	            for(var i = 0; i < dist; i++){
	                accessoriesCarousel.trigger(direction);
	            }
        		paginator.currentPage(targetPage);
        	});
        };

        var init = function(){
        	totalItems = accessoriesComponent.find('.owl-item li').length;
        	var itemsPerPage = accessoriesComponent.find('.active.owl-item li').length;
        	paginator = new PaginationViewModel(totalItems, itemsPerPage, paginationItems());
        	ko.applyBindings(paginator);
        	paginator.init(totalItems);
        	
        	pagination.find('a.prev').on('click', function(){
        		if(paginator.previousPageExists()){
        			accessoriesCarousel.trigger('prev.owl.carousel');
        		}
        	});

        	pagination.find('a.next').on('click', function(){
        		if(paginator.nextPageExists()){
        			accessoriesCarousel.trigger('next.owl.carousel');	
        		}
        	});

        	update();
        };

        init();
    };

    var accessoriesCarousels = $('.accessories-grid.component:not(.edit)');

    if(accessoriesCarousels.length){
        $(function(){
            accessoriesCarousels.each(function(index, elem){
                initAccessoriesCarousel($(elem));
            });
        });
    }
    
    ////////////////////////////////////////////////////////
	//// building data analytics layer object start ///////
	//////////////////////////////////////////////////////

    $('.accessories-grid.component').on('click','ul li',function(e){	
    	try{
			if( digitalData){
				
				if(digitalData.product){
					digitalData.product.productName = $('h1').text(); 
					if( $(this).find('div p strong') ){
						digitalData.product.productID = $(this).find('div p strong').text();
					}
					digitalData.product.productAccessoryName =  $(this).find('h4').text();
				}
				if( digitalData.event ){
					var eventData = {};
					eventData.eventName = "product accessory"
					eventData.eventAction = "accessory click";
					eventData.type = "shopping";
					eventData.timeStamp = new Date();
					digitalData.event.push(eventData);					
				}
				
			}
			
		}catch(err) {
			console.log(err)
		}
    })	
	////////////////////////////////////////////////////////
	///// building data analytics layer object end  ///////
	//////////////////////////////////////////////////////

});
////////////////////////////////////////////////////////////////
///////////////building data layer oject////////////////////////
////////////////////////////////////////////////////////////////

$(document).ready(function(){
    try{
        if(digitalData.resource){
            var eventData = {};
            $('.item .downloads .downloads-resources .pdf').on('click',function(e) {
                var timeStamp = new Date();
                digitalData.resource.resourceName = $(this).text();
                eventData.eventName = "resource";
                eventData.eventAction = "click";
                eventData.type = "resource library";
                eventData.timeStamp = timeStamp;
                digitalData.event.push(eventData);
            });
        }
    }catch(err){
        console.log(err);
    }
});

////////////////////////////////////////////////////////////////
///////////////building data layer oject////////////////////////
////////////////////////////////////////////////////////////////
/*******************************************************************************
 * Copyright 2018 Adobe
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
(function() {
    "use strict";

    var dataLayerEnabled;
    var dataLayer;

    var NS = "cmp";
    var IS = "carousel";

    var keyCodes = {
        SPACE: 32,
        END: 35,
        HOME: 36,
        ARROW_LEFT: 37,
        ARROW_UP: 38,
        ARROW_RIGHT: 39,
        ARROW_DOWN: 40
    };

    var selectors = {
        self: "[data-" + NS + '-is="' + IS + '"]'
    };

    var properties = {
        /**
         * Determines whether the Carousel will automatically transition between slides
         *
         * @memberof Carousel
         * @type {Boolean}
         * @default false
         */
        "autoplay": {
            "default": false,
            "transform": function(value) {
                return !(value === null || typeof value === "undefined");
            }
        },
        /**
         * Duration (in milliseconds) before automatically transitioning to the next slide
         *
         * @memberof Carousel
         * @type {Number}
         * @default 5000
         */
        "delay": {
            "default": 5000,
            "transform": function(value) {
                value = parseFloat(value);
                return !isNaN(value) ? value : null;
            }
        },
        /**
         * Determines whether automatic pause on hovering the carousel is disabled
         *
         * @memberof Carousel
         * @type {Boolean}
         * @default false
         */
        "autopauseDisabled": {
            "default": false,
            "transform": function(value) {
                return !(value === null || typeof value === "undefined");
            }
        }
    };

    /**
     * Carousel Configuration
     *
     * @typedef {Object} CarouselConfig Represents a Carousel configuration
     * @property {HTMLElement} element The HTMLElement representing the Carousel
     * @property {Object} options The Carousel options
     */

    /**
     * Carousel
     *
     * @class Carousel
     * @classdesc An interactive Carousel component for navigating a list of generic items
     * @param {CarouselConfig} config The Carousel configuration
     */
    function Carousel(config) {
        var that = this;

        if (config && config.element) {
            init(config);
        }

        /**
         * Initializes the Carousel
         *
         * @private
         * @param {CarouselConfig} config The Carousel configuration
         */
        function init(config) {
            // prevents multiple initialization
            config.element.removeAttribute("data-" + NS + "-is");

            setupProperties(config.options);
            cacheElements(config.element);

            that._active = 0;
            that._paused = false;

            if (that._elements.item) {
                refreshActive();
                bindEvents();
                resetAutoplayInterval();
                refreshPlayPauseActions();
            }

            // TODO: This section is only relevant in edit mode and should move to the editor clientLib
            if (window.Granite && window.Granite.author && window.Granite.author.MessageChannel) {
                /*
                 * Editor message handling:
                 * - subscribe to "cmp.panelcontainer" message requests sent by the editor frame
                 * - check that the message data panel container type is correct and that the id (path) matches this specific Carousel component
                 * - if so, route the "navigate" operation to enact a navigation of the Carousel based on index data
                 */
                window.CQ = window.CQ || {};
                window.CQ.CoreComponents = window.CQ.CoreComponents || {};
                CQ.CoreComponents.MESSAGE_CHANNEL = CQ.CoreComponents.MESSAGE_CHANNEL || new window.Granite.author.MessageChannel("cqauthor", window);
                CQ.CoreComponents.MESSAGE_CHANNEL.subscribeRequestMessage("cmp.panelcontainer", function(message) {
                    if (message.data && message.data.type === "cmp-carousel" && message.data.id === that._elements.self.dataset["cmpPanelcontainerId"]) {
                        if (message.data.operation === "navigate") {
                            navigate(message.data.index);
                        }
                    }
                });
            }
        }

        /**
         * Caches the Carousel elements as defined via the {@code data-carousel-hook="ELEMENT_NAME"} markup API
         *
         * @private
         * @param {HTMLElement} wrapper The Carousel wrapper element
         */
        function cacheElements(wrapper) {
            that._elements = {};
            that._elements.self = wrapper;
            var hooks = that._elements.self.querySelectorAll("[data-" + NS + "-hook-" + IS + "]");

            for (var i = 0; i < hooks.length; i++) {
                var hook = hooks[i];
                var capitalized = IS;
                capitalized = capitalized.charAt(0).toUpperCase() + capitalized.slice(1);
                var key = hook.dataset[NS + "Hook" + capitalized];
                if (that._elements[key]) {
                    if (!Array.isArray(that._elements[key])) {
                        var tmp = that._elements[key];
                        that._elements[key] = [tmp];
                    }
                    that._elements[key].push(hook);
                } else {
                    that._elements[key] = hook;
                }
            }
        }

        /**
         * Sets up properties for the Carousel based on the passed options.
         *
         * @private
         * @param {Object} options The Carousel options
         */
        function setupProperties(options) {
            that._properties = {};

            for (var key in properties) {
                if (properties.hasOwnProperty(key)) {
                    var property = properties[key];
                    var value = null;

                    if (options && options[key] != null) {
                        value = options[key];

                        // transform the provided option
                        if (property && typeof property.transform === "function") {
                            value = property.transform(value);
                        }
                    }

                    if (value === null) {
                        // value still null, take the property default
                        value = properties[key]["default"];
                    }

                    that._properties[key] = value;
                }
            }
        }

        /**
         * Binds Carousel event handling
         *
         * @private
         */
        function bindEvents() {
            if (that._elements["previous"]) {
                that._elements["previous"].addEventListener("click", function() {
                    var index = getPreviousIndex();
                    navigate(index);
                    if (dataLayerEnabled) {
                        dataLayer.push({
                            event: "cmp:show",
                            eventInfo: {
                                path: "component." + getDataLayerId(that._elements.item[index].dataset.cmpDataLayer)
                            }
                        });
                    }
                });
            }

            if (that._elements["next"]) {
                that._elements["next"].addEventListener("click", function() {
                    var index = getNextIndex();
                    navigate(index);
                    if (dataLayerEnabled) {
                        dataLayer.push({
                            event: "cmp:show",
                            eventInfo: {
                                path: "component." + getDataLayerId(that._elements.item[index].dataset.cmpDataLayer)
                            }
                        });
                    }
                });
            }

            var indicators = that._elements["indicator"];
            if (indicators) {
                for (var i = 0; i < indicators.length; i++) {
                    (function(index) {
                        indicators[i].addEventListener("click", function(event) {
                            navigateAndFocusIndicator(index);
                        });
                    })(i);
                }
            }

            if (that._elements["pause"]) {
                if (that._properties.autoplay) {
                    that._elements["pause"].addEventListener("click", onPauseClick);
                }
            }

            if (that._elements["play"]) {
                if (that._properties.autoplay) {
                    that._elements["play"].addEventListener("click", onPlayClick);
                }
            }

            that._elements.self.addEventListener("keydown", onKeyDown);

            if (!that._properties.autopauseDisabled) {
                that._elements.self.addEventListener("mouseenter", onMouseEnter);
                that._elements.self.addEventListener("mouseleave", onMouseLeave);
            }
        }

        /**
         * Handles carousel keydown events
         *
         * @private
         * @param {Object} event The keydown event
         */
        function onKeyDown(event) {
            var index = that._active;
            var lastIndex = that._elements["indicator"].length - 1;

            switch (event.keyCode) {
                case keyCodes.ARROW_LEFT:
                case keyCodes.ARROW_UP:
                    event.preventDefault();
                    if (index > 0) {
                        navigateAndFocusIndicator(index - 1);
                    }
                    break;
                case keyCodes.ARROW_RIGHT:
                case keyCodes.ARROW_DOWN:
                    event.preventDefault();
                    if (index < lastIndex) {
                        navigateAndFocusIndicator(index + 1);
                    }
                    break;
                case keyCodes.HOME:
                    event.preventDefault();
                    navigateAndFocusIndicator(0);
                    break;
                case keyCodes.END:
                    event.preventDefault();
                    navigateAndFocusIndicator(lastIndex);
                    break;
                case keyCodes.SPACE:
                    if (that._properties.autoplay && (event.target !== that._elements["previous"] && event.target !== that._elements["next"])) {
                        event.preventDefault();
                        if (!that._paused) {
                            pause();
                        } else {
                            play();
                        }
                    }
                    if (event.target === that._elements["pause"]) {
                        that._elements["play"].focus();
                    }
                    if (event.target === that._elements["play"]) {
                        that._elements["pause"].focus();
                    }
                    break;
                default:
                    return;
            }
        }

        /**
         * Handles carousel mouseenter events
         *
         * @private
         * @param {Object} event The mouseenter event
         */
        function onMouseEnter(event) {
            clearAutoplayInterval();
        }

        /**
         * Handles carousel mouseleave events
         *
         * @private
         * @param {Object} event The mouseleave event
         */
        function onMouseLeave(event) {
            resetAutoplayInterval();
        }

        /**
         * Handles pause element click events
         *
         * @private
         * @param {Object} event The click event
         */
        function onPauseClick(event) {
            pause();
            that._elements["play"].focus();
        }

        /**
         * Handles play element click events
         *
         * @private
         * @param {Object} event The click event
         */
        function onPlayClick() {
            play();
            that._elements["pause"].focus();
        }

        /**
         * Pauses the playing of the Carousel. Sets {@code Carousel#_paused} marker.
         * Only relevant when autoplay is enabled
         *
         * @private
         */
        function pause() {
            that._paused = true;
            clearAutoplayInterval();
            refreshPlayPauseActions();
        }

        /**
         * Enables the playing of the Carousel. Sets {@code Carousel#_paused} marker.
         * Only relevant when autoplay is enabled
         *
         * @private
         */
        function play() {
            that._paused = false;

            // If the Carousel is hovered, don't begin auto transitioning until the next mouse leave event
            var hovered = false;
            if (that._elements.self.parentElement) {
                hovered = that._elements.self.parentElement.querySelector(":hover") === that._elements.self;
            }
            if (that._properties.autopauseDisabled || !hovered) {
                resetAutoplayInterval();
            }

            refreshPlayPauseActions();
        }

        /**
         * Refreshes the play/pause action markup based on the {@code Carousel#_paused} state
         *
         * @private
         */
        function refreshPlayPauseActions() {
            setActionDisabled(that._elements["pause"], that._paused);
            setActionDisabled(that._elements["play"], !that._paused);
        }

        /**
         * Refreshes the item markup based on the current {@code Carousel#_active} index
         *
         * @private
         */
        function refreshActive() {
            var items = that._elements["item"];
            var indicators = that._elements["indicator"];

            if (items) {
                if (Array.isArray(items)) {
                    for (var i = 0; i < items.length; i++) {
                        if (i === parseInt(that._active)) {
                            items[i].classList.add("cmp-carousel__item--active");
                            items[i].removeAttribute("aria-hidden");
                            indicators[i].classList.add("cmp-carousel__indicator--active");
                            indicators[i].setAttribute("aria-selected", true);
                            indicators[i].setAttribute("tabindex", "0");
                        } else {
                            items[i].classList.remove("cmp-carousel__item--active");
                            items[i].setAttribute("aria-hidden", true);
                            indicators[i].classList.remove("cmp-carousel__indicator--active");
                            indicators[i].setAttribute("aria-selected", false);
                            indicators[i].setAttribute("tabindex", "-1");
                        }
                    }
                } else {
                    // only one item
                    items.classList.add("cmp-carousel__item--active");
                    indicators.classList.add("cmp-carousel__indicator--active");
                }
            }
        }

        /**
         * Focuses the element and prevents scrolling the element into view
         *
         * @param {HTMLElement} element Element to focus
         */
        function focusWithoutScroll(element) {
            var x = window.scrollX || window.pageXOffset;
            var y = window.scrollY || window.pageYOffset;
            element.focus();
            window.scrollTo(x, y);
        }

        /**
         * Retrieves the next active index, with looping
         *
         * @private
         * @returns {Number} Index of the next carousel item
         */
        function getNextIndex() {
            return that._active === (that._elements["item"].length - 1) ? 0 : that._active + 1;
        }

        /**
         * Retrieves the previous active index, with looping
         *
         * @private
         * @returns {Number} Index of the previous carousel item
         */
        function getPreviousIndex() {
            return that._active === 0 ? (that._elements["item"].length - 1) : that._active - 1;
        }

        /**
         * Navigates to the item at the provided index
         *
         * @private
         * @param {Number} index The index of the item to navigate to
         */
        function navigate(index) {
            if (index < 0 || index > (that._elements["item"].length - 1)) {
                return;
            }

            that._active = index;
            refreshActive();

            if (dataLayerEnabled) {
                var carouselId = that._elements.self.id;
                var activeItem = getDataLayerId(that._elements.item[index].dataset.cmpDataLayer);
                var updatePayload = { component: {} };
                updatePayload.component[carouselId] = { shownItems: [activeItem] };

                var removePayload = { component: {} };
                removePayload.component[carouselId] = { shownItems: undefined };

                dataLayer.push(removePayload);
                dataLayer.push(updatePayload);
            }

            // reset the autoplay transition interval following navigation, if not already hovering the carousel
            if (that._elements.self.parentElement) {
                if (that._elements.self.parentElement.querySelector(":hover") !== that._elements.self) {
                    resetAutoplayInterval();
                }
            }
        }

        /**
         * Navigates to the item at the provided index and ensures the active indicator gains focus
         *
         * @private
         * @param {Number} index The index of the item to navigate to
         */
        function navigateAndFocusIndicator(index) {
            navigate(index);
            focusWithoutScroll(that._elements["indicator"][index]);

            if (dataLayerEnabled) {
                dataLayer.push({
                    event: "cmp:show",
                    eventInfo: {
                        path: "component." + getDataLayerId(that._elements.item[index].dataset.cmpDataLayer)
                    }
                });
            }
        }

        /**
         * Starts/resets automatic slide transition interval
         *
         * @private
         */
        function resetAutoplayInterval() {
            if (that._paused || !that._properties.autoplay) {
                return;
            }
            clearAutoplayInterval();
            that._autoplayIntervalId = window.setInterval(function() {
                if (document.visibilityState && document.hidden) {
                    return;
                }
                var indicators = that._elements["indicators"];
                if (indicators !== document.activeElement && indicators.contains(document.activeElement)) {
                    // if an indicator has focus, ensure we switch focus following navigation
                    navigateAndFocusIndicator(getNextIndex());
                } else {
                    navigate(getNextIndex());
                }
            }, that._properties.delay);
        }

        /**
         * Clears/pauses automatic slide transition interval
         *
         * @private
         */
        function clearAutoplayInterval() {
            window.clearInterval(that._autoplayIntervalId);
            that._autoplayIntervalId = null;
        }

        /**
         * Sets the disabled state for an action and toggles the appropriate CSS classes
         *
         * @private
         * @param {HTMLElement} action Action to disable
         * @param {Boolean} [disable] {@code true} to disable, {@code false} to enable
         */
        function setActionDisabled(action, disable) {
            if (!action) {
                return;
            }
            if (disable !== false) {
                action.disabled = true;
                action.classList.add("cmp-carousel__action--disabled");
            } else {
                action.disabled = false;
                action.classList.remove("cmp-carousel__action--disabled");
            }
        }
    }

    /**
     * Reads options data from the Carousel wrapper element, defined via {@code data-cmp-*} data attributes
     *
     * @private
     * @param {HTMLElement} element The Carousel element to read options data from
     * @returns {Object} The options read from the component data attributes
     */
    function readData(element) {
        var data = element.dataset;
        var options = [];
        var capitalized = IS;
        capitalized = capitalized.charAt(0).toUpperCase() + capitalized.slice(1);
        var reserved = ["is", "hook" + capitalized];

        for (var key in data) {
            if (data.hasOwnProperty(key)) {
                var value = data[key];

                if (key.indexOf(NS) === 0) {
                    key = key.slice(NS.length);
                    key = key.charAt(0).toLowerCase() + key.substring(1);

                    if (reserved.indexOf(key) === -1) {
                        options[key] = value;
                    }
                }
            }
        }

        return options;
    }

    /**
     * Parses the dataLayer string and returns the ID
     *
     * @private
     * @param {String} componentDataLayer the dataLayer string
     * @returns {String} dataLayerId or undefined
     */
    function getDataLayerId(componentDataLayer) {
        return Object.keys(JSON.parse(componentDataLayer))[0];
    }

    /**
     * Document ready handler and DOM mutation observers. Initializes Carousel components as necessary.
     *
     * @private
     */
    function onDocumentReady() {
      dataLayerEnabled = document.body.hasAttribute("data-cmp-data-layer-enabled");
      dataLayer = (dataLayerEnabled)? window.adobeDataLayer = window.adobeDataLayer || [] : undefined;

      var elements = document.querySelectorAll(selectors.self);
        for (var i = 0; i < elements.length; i++) {
            new Carousel({ element: elements[i], options: readData(elements[i]) });
        }

        var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
        var body = document.querySelector("body");
        var observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                // needed for IE
                var nodesArray = [].slice.call(mutation.addedNodes);
                if (nodesArray.length > 0) {
                    nodesArray.forEach(function(addedNode) {
                        if (addedNode.querySelectorAll) {
                            var elementsArray = [].slice.call(addedNode.querySelectorAll(selectors.self));
                            elementsArray.forEach(function(element) {
                                new Carousel({ element: element, options: readData(element) });
                            });
                        }
                    });
                }
            });
        });

        observer.observe(body, {
            subtree: true,
            childList: true,
            characterData: true
        });
    }

    if (document.readyState !== "loading") {
        onDocumentReady();
    } else {
        document.addEventListener("DOMContentLoaded", onDocumentReady);
    }

}());

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ Copyright 2018 Adobe
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~     http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* global jQuery, Coral */
(function($) {
    "use strict";

    var selectors = {
        dialogContent: ".cmp-carousel__editor",
        autoplay: "[data-cmp-carousel-v1-dialog-hook='autoplay']",
        autoplayGroup: "[data-cmp-carousel-v1-dialog-hook='autoplayGroup']"
    };

    var autoplay;
    var autoplayGroup;

    $(document).on("dialog-loaded", function(event) {
        var $dialog = event.dialog;

        if ($dialog.length) {
            var dialogContent = $dialog[0].querySelector(selectors.dialogContent);

            if (dialogContent) {
                autoplay = dialogContent.querySelector(selectors.autoplay);
                autoplayGroup = dialogContent.querySelector(selectors.autoplayGroup);

                if (autoplay) {
                    Coral.commons.ready(autoplay, function() {
                        autoplay.on("change", onAutoplayChange);
                        onAutoplayChange();
                    });
                }
            }
        }
    });

    /**
     * Handles a change in the autoplay checkbox state.
     * Conditionally toggles hidden state of the related autoplay group which contains
     * additional fields that are only relevant when autoplay is enabled.
     *
     * @private
     */
    function onAutoplayChange() {
        if (autoplay && autoplayGroup) {
            if (!autoplay.checked) {
                autoplayGroup.setAttribute("hidden", true);
            } else {
                autoplayGroup.removeAttribute("hidden");
            }
        }
    }

})(jQuery);

